[["index.html", "A Guide on Data Analysis Preface", " A Guide on Data Analysis Mike Nguyen 2023-08-12 Preface This guide is an attempt to streamline and demystify the data analysis process. By no means this is the ultimate guide, or I am a great source of knowledge, or I claim myself to be a statistician/ econometrician, but I am a strong proponent of learning by teaching, and doing. Hence, this is more like a learning experience for both you and me. This book is completely free. My target audiences are those who have little to no experience in statistics and data science to those that have some interests in these fields and want to dive deeper and have a more holistic method. Even though my substantive domain of interest is marketing, this book can be used for other disciplines that use scientific methods or data analysis. More books by the author can be found here: Advanced Data Analysis: the second book in the data analysis series, which covers machine learning models (with a focus on prediction) Marketing Research Communication Theory "],["introduction.html", "Chapter 1 Introduction", " Chapter 1 Introduction Since the beginning of the century, we have been bombarded with amazing advancements and inventions, especially in the field of statistics, information technology, computer science, or a new emerging filed - data science. However, I believe the downside of this introduction is that we use big and trendy words too often (i.e., big data, machine learning, deep learning). Each substantive field will have a metric subfield: Econometrics in economics Psychometrics in psychology Chemometrics in chemistry Sabermetrics in sports Biostatistics in public health and medicine But to laymen, these are known as: Data Science Applied Statistics Computational Social Science It’s all fun and exciting when I learned these new tools. But I have to admit that I hardly retain any of these new ideas. However, writing down from the beginning till the end of a data analysis process is the solution that I came up with. Accordingly, let’s dive right in. Some general recommendations: The more you practice/habituate/condition, more line of codes that you write, more function that you memorize, I think the more you will like this journey. Readers can follow this book several ways: If you are interested in particular methods/tools, you can jump to that section by clicking the section name. If you want to follow a traditional path of data analysis, read the Linear Regression section. If you want to create your experiment and test your hypothesis, read the Analysis of Variance (ANOVA) section. Alternatively, if you rather see the application of models, and disregard any theory or underlying mechanisms, you can skip to summary and application portion of each section. If you don’t understand a part, search the title of that part of that part on Google, and read more into that subject. This is just a general guide. If you want to customize your code beyond the ones provided in this book, run in the console help(code) or ?code. For example, I want more information on hist function, I’ll type in the console ?hist or help(hist). Another way is that you can search on Google. Different people will use different packages to achieve the same result in R. Accordingly, if you want to create a histogram, search on Google histogram in R, then you should be able to find multiple ways to create histogram in R. Tools of statistics Probability Theory Mathematical Analysis Computer Science Numerical Analysis Database Management Code Replication This book was built with R version 4.2.3 (2023-03-15 ucrt) and the following packages: package version source abind 1.4-5 CRAN (R 4.2.0) agridat NA NA ape 5.7-1 CRAN (R 4.2.3) assertthat 0.2.1 CRAN (R 4.2.3) backports 1.4.1 CRAN (R 4.2.0) bookdown 0.34 CRAN (R 4.2.3) boot 1.3-28.1 CRAN (R 4.2.3) broom 1.0.4 CRAN (R 4.2.3) bslib 0.4.2 CRAN (R 4.2.3) cachem 1.0.8 CRAN (R 4.2.3) callr 3.7.3 CRAN (R 4.2.3) car 3.1-2 CRAN (R 4.2.3) carData 3.0-5 CRAN (R 4.2.3) cellranger 1.1.0 CRAN (R 4.2.3) cli 3.6.1 CRAN (R 4.2.3) coda 0.19-4 CRAN (R 4.2.3) colorspace 2.1-0 CRAN (R 4.2.3) corpcor NA NA crayon 1.5.2 CRAN (R 4.2.3) cubature NA NA curl 5.0.0 CRAN (R 4.2.3) data.table 1.14.8 CRAN (R 4.2.3) DBI 1.1.3 CRAN (R 4.2.3) dbplyr 2.3.2 CRAN (R 4.2.3) desc 1.4.2 CRAN (R 4.2.3) devtools 2.4.5 CRAN (R 4.2.3) digest 0.6.31 CRAN (R 4.2.3) dplyr 1.1.1 CRAN (R 4.2.3) ellipsis 0.3.2 CRAN (R 4.2.3) evaluate 0.20 CRAN (R 4.2.3) extrafont NA NA extrafontdb NA NA fansi 1.0.4 CRAN (R 4.2.3) faraway NA NA fastmap 1.1.1 CRAN (R 4.2.3) forcats 1.0.0 CRAN (R 4.2.3) foreign 0.8-84 CRAN (R 4.2.3) fs 1.6.1 CRAN (R 4.2.3) generics 0.1.3 CRAN (R 4.2.3) ggplot2 3.4.2 CRAN (R 4.2.3) glue 1.6.2 CRAN (R 4.2.3) gtable 0.3.3 CRAN (R 4.2.3) haven 2.5.2 CRAN (R 4.2.3) Hmisc 5.0-1 CRAN (R 4.2.3) hms 1.1.3 CRAN (R 4.2.3) htmltools 0.5.5 CRAN (R 4.2.3) htmlwidgets 1.6.2 CRAN (R 4.2.3) httr 1.4.5 CRAN (R 4.2.3) investr NA NA jpeg 0.1-10 CRAN (R 4.2.2) jquerylib 0.1.4 CRAN (R 4.2.3) jsonlite 1.8.4 CRAN (R 4.2.3) kableExtra 1.3.4 CRAN (R 4.2.3) knitr 1.42 CRAN (R 4.2.3) lattice 0.20-45 CRAN (R 4.2.3) latticeExtra NA NA lifecycle 1.0.3 CRAN (R 4.2.3) lme4 1.1-32 CRAN (R 4.2.3) lmerTest NA NA lsr NA NA ltm NA NA lubridate 1.9.2 CRAN (R 4.2.3) magrittr 2.0.3 CRAN (R 4.2.3) MASS 7.3-58.2 CRAN (R 4.2.3) matlib NA NA Matrix 1.5-3 CRAN (R 4.2.3) MCMCglmm NA NA memoise 2.0.1 CRAN (R 4.2.3) mgcv 1.8-42 CRAN (R 4.2.3) minqa 1.2.5 CRAN (R 4.2.3) modelr 0.1.11 CRAN (R 4.2.3) munsell 0.5.0 CRAN (R 4.2.3) nlme 3.1-162 CRAN (R 4.2.3) nloptr 2.0.3 CRAN (R 4.2.3) nlstools NA NA nnet 7.3-18 CRAN (R 4.2.3) numDeriv 2016.8-1.1 CRAN (R 4.2.0) openxlsx 4.2.5.2 CRAN (R 4.2.3) pbkrtest 0.5.2 CRAN (R 4.2.3) pillar 1.9.0 CRAN (R 4.2.3) pkgbuild 1.4.0 CRAN (R 4.2.3) pkgconfig 2.0.3 CRAN (R 4.2.3) pkgload 1.3.2 CRAN (R 4.2.3) png 0.1-8 CRAN (R 4.2.2) ppsr NA NA prettyunits 1.1.1 CRAN (R 4.2.3) processx 3.8.0 CRAN (R 4.2.3) ps 1.7.3 CRAN (R 4.2.3) pscl NA NA purrr 1.0.1 CRAN (R 4.2.3) R6 2.5.1 CRAN (R 4.2.3) RColorBrewer 1.1-3 CRAN (R 4.2.0) Rcpp 1.0.10 CRAN (R 4.2.3) readr 2.1.4 CRAN (R 4.2.3) readxl 1.4.2 CRAN (R 4.2.3) remotes 2.4.2 CRAN (R 4.2.3) reprex 2.0.2 CRAN (R 4.2.3) rgl 1.1.3 CRAN (R 4.2.3) rio 0.5.29 CRAN (R 4.2.3) rlang 1.1.0 CRAN (R 4.2.3) RLRsim NA NA rmarkdown 2.21 CRAN (R 4.2.3) rprojroot 2.0.3 CRAN (R 4.2.3) rstudioapi 0.14 CRAN (R 4.2.3) Rttf2pt1 NA NA rvest 1.0.3 CRAN (R 4.2.3) sass 0.4.6 CRAN (R 4.2.3) scales 1.2.1 CRAN (R 4.2.3) sessioninfo 1.2.2 CRAN (R 4.2.3) stringi 1.7.12 CRAN (R 4.2.2) stringr 1.5.0 CRAN (R 4.2.3) svglite 2.1.1 CRAN (R 4.2.3) systemfonts 1.0.4 CRAN (R 4.2.3) tensorA NA NA testthat 3.1.7 CRAN (R 4.2.3) tibble 3.2.1 CRAN (R 4.2.3) tidyr 1.3.0 CRAN (R 4.2.3) tidyselect 1.2.0 CRAN (R 4.2.3) tidyverse 2.0.0 CRAN (R 4.2.3) tzdb 0.3.0 CRAN (R 4.2.3) usethis 2.1.6 CRAN (R 4.2.3) utf8 1.2.3 CRAN (R 4.2.3) vctrs 0.6.1 CRAN (R 4.2.3) viridisLite 0.4.1 CRAN (R 4.2.3) webshot 0.5.4 CRAN (R 4.2.3) withr 2.5.0 CRAN (R 4.2.3) xfun 0.39 CRAN (R 4.2.3) xml2 1.3.3 CRAN (R 4.2.3) xtable 1.8-4 CRAN (R 4.2.3) yaml 2.3.7 CRAN (R 4.2.3) zip 2.2.2 CRAN (R 4.2.3) #&gt; ─ Session info ─────────────────────────────────────────────────────────────── #&gt; setting value #&gt; version R version 4.2.3 (2023-03-15 ucrt) #&gt; os Windows 10 x64 (build 22621) #&gt; system x86_64, mingw32 #&gt; ui RTerm #&gt; language (EN) #&gt; collate English_United States.utf8 #&gt; ctype English_United States.utf8 #&gt; tz America/Los_Angeles #&gt; date 2023-06-17 #&gt; pandoc 2.19.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown) #&gt; #&gt; ─ Packages ─────────────────────────────────────────────────────────────────── #&gt; package * version date (UTC) lib source #&gt; bookdown 0.34 2023-05-09 [1] CRAN (R 4.2.3) #&gt; bslib 0.4.2 2022-12-16 [1] CRAN (R 4.2.3) #&gt; cachem 1.0.8 2023-05-01 [1] CRAN (R 4.2.3) #&gt; callr 3.7.3 2022-11-02 [1] CRAN (R 4.2.3) #&gt; cli 3.6.1 2023-03-23 [1] CRAN (R 4.2.3) #&gt; codetools 0.2-19 2023-02-01 [1] CRAN (R 4.2.3) #&gt; colorspace 2.1-0 2023-01-23 [1] CRAN (R 4.2.3) #&gt; crayon 1.5.2 2022-09-29 [1] CRAN (R 4.2.3) #&gt; desc 1.4.2 2022-09-08 [1] CRAN (R 4.2.3) #&gt; devtools 2.4.5 2022-10-11 [1] CRAN (R 4.2.3) #&gt; digest 0.6.31 2022-12-11 [1] CRAN (R 4.2.3) #&gt; dplyr * 1.1.1 2023-03-22 [1] CRAN (R 4.2.3) #&gt; ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.2.3) #&gt; evaluate 0.20 2023-01-17 [1] CRAN (R 4.2.3) #&gt; fansi 1.0.4 2023-01-22 [1] CRAN (R 4.2.3) #&gt; fastmap 1.1.1 2023-02-24 [1] CRAN (R 4.2.3) #&gt; forcats * 1.0.0 2023-01-29 [1] CRAN (R 4.2.3) #&gt; fs 1.6.1 2023-02-06 [1] CRAN (R 4.2.3) #&gt; generics 0.1.3 2022-07-05 [1] CRAN (R 4.2.3) #&gt; ggplot2 * 3.4.2 2023-04-03 [1] CRAN (R 4.2.3) #&gt; glue 1.6.2 2022-02-24 [1] CRAN (R 4.2.3) #&gt; gtable 0.3.3 2023-03-21 [1] CRAN (R 4.2.3) #&gt; highr 0.10 2022-12-22 [1] CRAN (R 4.2.3) #&gt; hms 1.1.3 2023-03-21 [1] CRAN (R 4.2.3) #&gt; htmltools 0.5.5 2023-03-23 [1] CRAN (R 4.2.3) #&gt; htmlwidgets 1.6.2 2023-03-17 [1] CRAN (R 4.2.3) #&gt; httpuv 1.6.9 2023-02-14 [1] CRAN (R 4.2.3) #&gt; jpeg * 0.1-10 2022-11-29 [1] CRAN (R 4.2.2) #&gt; jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.2.3) #&gt; jsonlite 1.8.4 2022-12-06 [1] CRAN (R 4.2.3) #&gt; knitr 1.42 2023-01-25 [1] CRAN (R 4.2.3) #&gt; later 1.3.0 2021-08-18 [1] CRAN (R 4.2.3) #&gt; lifecycle 1.0.3 2022-10-07 [1] CRAN (R 4.2.3) #&gt; lubridate * 1.9.2 2023-02-10 [1] CRAN (R 4.2.3) #&gt; magrittr 2.0.3 2022-03-30 [1] CRAN (R 4.2.3) #&gt; memoise 2.0.1 2021-11-26 [1] CRAN (R 4.2.3) #&gt; mime 0.12 2021-09-28 [1] CRAN (R 4.2.0) #&gt; miniUI 0.1.1.1 2018-05-18 [1] CRAN (R 4.2.3) #&gt; munsell 0.5.0 2018-06-12 [1] CRAN (R 4.2.3) #&gt; pillar 1.9.0 2023-03-22 [1] CRAN (R 4.2.3) #&gt; pkgbuild 1.4.0 2022-11-27 [1] CRAN (R 4.2.3) #&gt; pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.2.3) #&gt; pkgload 1.3.2 2022-11-16 [1] CRAN (R 4.2.3) #&gt; prettyunits 1.1.1 2020-01-24 [1] CRAN (R 4.2.3) #&gt; processx 3.8.0 2022-10-26 [1] CRAN (R 4.2.3) #&gt; profvis 0.3.7 2020-11-02 [1] CRAN (R 4.2.3) #&gt; promises 1.2.0.1 2021-02-11 [1] CRAN (R 4.2.3) #&gt; ps 1.7.3 2023-03-21 [1] CRAN (R 4.2.3) #&gt; purrr * 1.0.1 2023-01-10 [1] CRAN (R 4.2.3) #&gt; R6 2.5.1 2021-08-19 [1] CRAN (R 4.2.3) #&gt; Rcpp 1.0.10 2023-01-22 [1] CRAN (R 4.2.3) #&gt; readr * 2.1.4 2023-02-10 [1] CRAN (R 4.2.3) #&gt; remotes 2.4.2 2021-11-30 [1] CRAN (R 4.2.3) #&gt; rlang 1.1.0 2023-03-14 [1] CRAN (R 4.2.3) #&gt; rmarkdown 2.21 2023-03-26 [1] CRAN (R 4.2.3) #&gt; rprojroot 2.0.3 2022-04-02 [1] CRAN (R 4.2.3) #&gt; rstudioapi 0.14 2022-08-22 [1] CRAN (R 4.2.3) #&gt; sass 0.4.6 2023-05-03 [1] CRAN (R 4.2.3) #&gt; scales * 1.2.1 2022-08-20 [1] CRAN (R 4.2.3) #&gt; sessioninfo 1.2.2 2021-12-06 [1] CRAN (R 4.2.3) #&gt; shiny 1.7.4 2022-12-15 [1] CRAN (R 4.2.3) #&gt; stringi 1.7.12 2023-01-11 [1] CRAN (R 4.2.2) #&gt; stringr * 1.5.0 2022-12-02 [1] CRAN (R 4.2.3) #&gt; tibble * 3.2.1 2023-03-20 [1] CRAN (R 4.2.3) #&gt; tidyr * 1.3.0 2023-01-24 [1] CRAN (R 4.2.3) #&gt; tidyselect 1.2.0 2022-10-10 [1] CRAN (R 4.2.3) #&gt; tidyverse * 2.0.0 2023-02-22 [1] CRAN (R 4.2.3) #&gt; timechange 0.2.0 2023-01-11 [1] CRAN (R 4.2.3) #&gt; tzdb 0.3.0 2022-03-28 [1] CRAN (R 4.2.3) #&gt; urlchecker 1.0.1 2021-11-30 [1] CRAN (R 4.2.3) #&gt; usethis 2.1.6 2022-05-25 [1] CRAN (R 4.2.3) #&gt; utf8 1.2.3 2023-01-31 [1] CRAN (R 4.2.3) #&gt; vctrs 0.6.1 2023-03-22 [1] CRAN (R 4.2.3) #&gt; withr 2.5.0 2022-03-03 [1] CRAN (R 4.2.3) #&gt; xfun 0.39 2023-04-20 [1] CRAN (R 4.2.3) #&gt; xtable 1.8-4 2019-04-21 [1] CRAN (R 4.2.3) #&gt; yaml 2.3.7 2023-01-23 [1] CRAN (R 4.2.3) #&gt; #&gt; [1] C:/Program Files/R/R-4.2.3/library #&gt; #&gt; ────────────────────────────────────────────────────────────────────────────── "],["prerequisites.html", "Chapter 2 Prerequisites", " Chapter 2 Prerequisites This chapter is just a quick review of Matrix Theory and Probability Theory If you feel you do not need to brush up on these theories, you can jump right into Descriptive Statistics "],["matrix-theory.html", "2.1 Matrix Theory", " 2.1 Matrix Theory \\[\\begin{equation} \\begin{split} A= \\left[\\begin{array} {cc} a_{11} &amp; a_{12} \\\\ a_{21} &amp; a_{22} \\\\ \\end{array} \\right] \\end{split} \\end{equation}\\] \\[\\begin{equation} \\begin{split} A&#39; = \\left[\\begin{array} {cc} a_{11} &amp; a_{21} \\\\ a_{12} &amp; a_{22} \\\\ \\end{array} \\right] \\end{split} \\end{equation}\\] \\[\\begin{equation} \\mathbf{(ABC)&#39;=C&#39;B&#39;A&#39;} \\\\ \\mathbf{A(B+C)= AB + AC} \\\\ \\mathbf{AB \\neq BA} \\\\ \\mathbf{(A&#39;)&#39;=A} \\\\ \\mathbf{(A+B)&#39; = A&#39; + B&#39;} \\\\ \\mathbf{(AB)&#39; = B&#39;A&#39;} \\\\ \\mathbf{(AB)^{-1}= B^{-1}A^{-1}} \\\\ \\mathbf{A+B = B +A} \\\\ \\mathbf{AA^{-1} = I } \\end{equation}\\] If A has an inverse, it is called invertible. If A is not invertible it is called singular. \\[\\begin{equation} \\begin{split} \\mathbf{A} &amp;= \\left(\\begin{array} {ccc} a_{11} &amp; a_{12} &amp; a_{13} \\\\ a_{21} &amp; a_{22} &amp; a_{23} \\\\ \\end{array}\\right) \\left(\\begin{array} {ccc} b_{11} &amp; b_{12} &amp; b_{13} \\\\ b_{21} &amp; b_{22} &amp; b_{23} \\\\ b_{31} &amp; b_{32} &amp; b_{33} \\\\ \\end{array}\\right) \\\\ &amp;= \\left(\\begin{array} {ccc} a_{11}b_{11}+a_{12}b_{21}+a_{13}b_{31} &amp; \\sum_{i=1}^{3}a_{1i}b_{i2} &amp; \\sum_{i=1}^{3}a_{1i}b_{i3} \\\\ \\sum_{i=1}^{3}a_{2i}b_{i1} &amp; \\sum_{i=1}^{3}a_{2i}b_{i2} &amp; \\sum_{i=1}^{3}a_{2i}b_{i3} \\\\ \\end{array}\\right) \\end{split} \\end{equation}\\] Let \\(\\mathbf{a}\\) be a 3 x 1 vector, then the quadratic form is \\[ \\mathbf{a&#39;Ba} = \\sum_{i=1}^{3}\\sum_{i=1}^{3}a_i b_{ij} a_{j} \\] Length of a vector Let \\(\\mathbf{a}\\) be a vector, \\(||\\mathbf{a}||\\) (the 2-norm of the vector) is the length of vector \\(\\mathbf{a}\\), is the square root of the inner product of the vector with itself: \\[ ||\\mathbf{a}|| = \\sqrt{\\mathbf{a&#39;a}} \\] 2.1.1 Rank Dimension of space spanned by its columns (or its rows). Number of linearly independent columns/rows For a n x k matrix A and k x k matrix B \\(rank(A)\\leq min(n,k)\\) \\(rank(A) = rank(A&#39;) = rank(A&#39;A)=rank(AA&#39;)\\) \\(rank(AB)=min(rank(A),rank(B))\\) B is invertible if and only if rank(B) = k (non-singular) 2.1.2 Inverse In scalar, a = 0 then 1/a does not exist. In matrix, a matrix is invertible when it’s a non-zero matrix. A non-singular square matrix A is invertible if there exists a non-singular square matrix B such that, \\[AB=I\\] Then \\(A^{-1}=B\\). For a 2x2 matrix, \\[ A = \\left(\\begin{array}{cc} a &amp; b \\\\ c &amp; d \\\\ \\end{array} \\right) \\] \\[ A^{-1}= \\frac{1}{ad-bc} \\left(\\begin{array}{cc} d &amp; -b \\\\ -c &amp; a \\\\ \\end{array} \\right) \\] For the partition matrix, \\[\\begin{equation} \\begin{split} \\left[\\begin{array} {cc} A &amp; B \\\\ C &amp; D \\\\ \\end{array} \\right]^{-1} = \\left[\\begin{array} {cc} \\mathbf{(A-BD^{-1}C)^{-1}} &amp; \\mathbf{-(A-BD^{-1}C)^{-1}BD^-1}\\\\ \\mathbf{-DC(A-BD^{-1}C)^{-1}} &amp; \\mathbf{D^{-1}+D^{-1}C(A-BD^{-1}C)^{-1}BD^{-1}}\\ \\\\ \\end{array} \\right] \\end{split} \\end{equation}\\] Properties for a non-singular square matrix \\(\\mathbf{A^{-1}}=A\\) for a non-zero scalar b, \\(\\mathbf{(bA)^{-1}=b^{-1}A^{-1}}\\) for a matrix B, \\(\\mathbf(BA)^{-1}=B^{-1}A^{-1}\\) only if B is non-singular \\(\\mathbf{(A^{-1})&#39;=(A&#39;)^{-1}}\\) Never notate \\(\\mathbf{1/A}\\) 2.1.3 Definiteness A symmetric square k x k matrix, \\(\\mathbf{A}\\), is Positive Semi-Definite if for any non-zero k x 1 vector \\(\\mathbf{x}\\), \\[\\mathbf{x&#39;Ax \\geq 0 }\\] A symmetric square k x k matrix, \\(\\mathbf{A}\\), is Negative Semi-Definite if for any non-zero k x 1 vector \\(\\mathbf{x}\\) \\[\\mathbf{x&#39;Ax \\leq 0 }\\] \\(\\mathbf{A}\\) is indefinite if it is neither positive semi-definite or negative semi-definite. The identity matrix is positive definite Example Let \\(\\mathbf{x} =(x_1 x_2)&#39;\\), then for a 2 x 2 identity matrix, \\[\\begin{equation} \\begin{split} \\mathbf{x&#39;Ix} &amp;= (x_1 x_2) \\left(\\begin{array} {cc} 1 &amp; 0 \\\\ 0 &amp; 1 \\\\ \\end{array} \\right) \\left(\\begin{array}{c} x_1 \\\\ x_2 \\\\ \\end{array} \\right) \\\\ &amp;= (x_1 x_2) \\left(\\begin{array} {c} x_1 \\\\ x_2 \\\\ \\end{array} \\right) \\\\ &amp;= x_1^2 + x_2^2 &gt;0 \\end{split} \\end{equation}\\] Definiteness gives us the ability to compare matrices \\(\\mathbf{A-B}\\) is PSD This property also helps us show efficiency (which variance covariance matrix of one estimator is smaller than another) Properties any variance matrix is PSD a matrix \\(\\mathbf{A}\\) is PSD if and only if there exists a matrix \\(\\mathbf{B}\\) such that \\(\\mathbf{A=B&#39;B}\\) if \\(\\mathbf{A}\\) is PSD, then \\(\\mathbf{B&#39;AB}\\) is PSD if A and C are non-singular, then A-C is PSD if and only if \\(\\mathbf{C^{-1}-A^{-1}}\\) if A is PD (ND) then \\(A^{-1}\\) is PD (ND) Note Indefinite A is neither PSD nor NSD. There is no comparable concept in scalar. If a square matrix is PSD and invertible then it is PD Example: Invertible / Indefinite \\[ \\left[ \\begin{array} {cc} -1 &amp; 0 \\\\ 0 &amp; 10 \\\\ \\end{array} \\right] \\] Non-invertible/ Indefinite \\[ \\left[ \\begin{array} {cc} 0 &amp; 1 \\\\ 0 &amp; 0 \\\\ \\end{array} \\right] \\] Invertible / PSD \\[ \\left[ \\begin{array} {cc} 1 &amp; 0 \\\\ 0 &amp; 1 \\\\ \\end{array} \\right] \\] Non-Invertible / PSD \\[ \\left[ \\begin{array} {cc} 0 &amp; 0 \\\\ 0 &amp; 1 \\\\ \\end{array} \\right] \\] 2.1.4 Matrix Calculus \\(y=f(x_1,x_2,...,x_k)=f(x)\\) where x is a 1 x k row vector. The Gradient (first order derivative with respect to a vector) is, \\[ \\frac{\\partial{f(x)}}{\\partial{x}}= \\left(\\begin{array}{c} \\frac{\\partial{f(x)}}{\\partial{x_1}} \\\\ \\frac{\\partial{f(x)}}{\\partial{x_2}} \\\\ ... \\\\ \\frac{\\partial{f(x)}}{\\partial{x_k}} \\end{array} \\right) \\] The Hessian (second order derivative with respect to a vector) is, \\[ \\frac{\\partial^2{f(x)}}{\\partial{x}\\partial{x&#39;}}= \\left(\\begin{array} {cccc} \\frac{\\partial^2{f(x)}}{\\partial{x_1}\\partial{x_1}} &amp; \\frac{\\partial^2{f(x)}}{\\partial{x_1}\\partial{x_2}} &amp; ... &amp; \\frac{\\partial^2{f(x)}}{\\partial{x_1}\\partial{x_k}} \\\\ \\frac{\\partial^2{f(x)}}{\\partial{x_1}\\partial{x_2}} &amp; \\frac{\\partial^2{f(x)}}{\\partial{x_2}\\partial{x_2}} &amp; ... &amp; \\frac{\\partial^2{f(x)}}{\\partial{x_2}\\partial{x_k}} \\\\ ... &amp; ...&amp; &amp; ...\\\\ \\frac{\\partial^2{f(x)}}{\\partial{x_k}\\partial{x_1}} &amp; \\frac{\\partial^2{f(x)}}{\\partial{x_k}\\partial{x_2}} &amp; ... &amp; \\frac{\\partial^2{f(x)}}{\\partial{x_k}\\partial{x_k}} \\end{array} \\right) \\] Define the derivative of \\(f(\\mathbf{X})\\) with respect to \\(\\mathbf{X}_{(n \\times p)}\\) as the matrix \\[ \\frac{\\partial f(\\mathbf{X})}{\\partial \\mathbf{X}} = (\\frac{\\partial f(\\mathbf{X})}{\\partial x_{ij}}) \\] Define \\(\\mathbf{a}\\) to be a vector and \\(\\mathbf{A}\\) to be a matrix which does not depend upon \\(\\mathbf{y}\\). Then \\[ \\frac{\\partial \\mathbf{a&#39;y}}{\\partial \\mathbf{y}} = \\mathbf{a} \\] \\[ \\frac{\\partial \\mathbf{y&#39;y}}{\\partial \\mathbf{y}} = 2\\mathbf{y} \\] \\[ \\frac{\\partial \\mathbf{y&#39;Ay}}{\\partial \\mathbf{y}} = \\mathbf{(A + A&#39;)y} \\] If \\(\\mathbf{X}\\) is a symmetric matrix then \\[ \\frac{\\partial |\\mathbf{X}|}{\\partial x_{ij}} = \\begin{cases} X_{ii}, i = j \\\\ X_ij, i \\neq j \\end{cases} \\] where \\(X_{ij}\\) is the (i,j)th cofactor of \\(\\mathbf{X}\\) If \\(\\mathbf{X}\\) is symmetric and \\(\\mathbf{A}\\) is a matrix which does not depend upon \\(\\mathbf{X}\\) then \\[ \\frac{\\partial tr \\mathbf{XA}}{\\partial \\mathbf{X}} = \\mathbf{A} + \\mathbf{A}&#39; - diag(\\mathbf{A}) \\] If \\(\\mathbf{X}\\) is symmetric and we let \\(\\mathbf{J}_{ij}\\) be a matrix which has a 1 in the (i,j)th position and 0s elsewhere, then \\[ \\frac{\\partial \\mathbf{X}6{-1}}{\\partial x_{ij}} = \\begin{cases} - \\mathbf{X}^{-1}\\mathbf{J}_{ii} \\mathbf{X}^{-1} , i = j \\\\ - \\mathbf{X}^{-1}(\\mathbf{J}_{ij} + \\mathbf{J}_{ji}) \\mathbf{X}^{-1} , i \\neq j \\end{cases} \\] 2.1.5 Optimization Scalar Optimization Vector Optimization First Order Condition \\[\\frac{\\partial{f(x_0)}}{\\partial{x}}=0\\] \\[\\frac{\\partial{f(x_0)}}{\\partial{x}}=\\left(\\begin{array}{c}0 \\\\ .\\\\ .\\\\ .\\\\ 0\\end{array}\\right)\\] Second Order Condition Convex \\(\\rightarrow\\) Min \\[\\frac{\\partial^2{f(x_0)}}{\\partial{x^2}} &gt; 0\\] \\[\\frac{\\partial^2{f(x_0)}}{\\partial{xx&#39;}}&gt;0\\] Concave \\(\\rightarrow\\) Max \\[\\frac{\\partial^2{f(x_0)}}{\\partial{x^2}} &lt; 0\\] \\[\\frac{\\partial^2{f(x_0)}}{\\partial{xx&#39;}}&lt;0\\] "],["probability-theory.html", "2.2 Probability Theory", " 2.2 Probability Theory 2.2.1 Axiom and Theorems of Probability Let S denote a sample space of an experiment P[S]=1 \\(P[A] \\ge 0\\) for every event A Let \\(A_1,A_2,A_3,...\\) be a finite or an infinite collection of mutually exclusive events. Then \\(P[A_1\\cup A_2 \\cup A_3 ...]=P[A_1]+P[A_2]+P[A_3]+...\\) \\(P[\\emptyset]=0\\) \\(P[A&#39;]=1-P[A]\\) \\(P[A_1 \\cup A_2] = P[A_1] + P[A_2] - P[A_1 \\cap A_2]\\) Conditional Probability \\[ P[A|B]=\\frac{A \\cap B}{P[B]} \\] Independent Events Two events A and B are independent if and only if: \\(P[A\\cap B]=P[A]P[B]\\) \\(P[A|B]=P[A]\\) \\(P[B|A]=P[B]\\) A finite collection of events \\(A_1, A_2, ..., A_n\\) is independent if and only if any subcollection is independent. Multiplication Rule \\(P[A \\cap B] = P[A|B]P[B] = P[B|A]P[A]\\) Bayes’ Theorem Let \\(A_1, A_2, ..., A_n\\) be a collection of mutually exclusive events whose union is S. Let b be an event such that \\(P[B]\\neq0\\) Then for any of the events \\(A_j\\), j = 1,2,…,n \\[ P[A_|B]=\\frac{P[B|A_j]P[A_j]}{\\sum_{i=1}^{n}P[B|A_j]P[A_i]} \\] Jensen’s Inequality If g(x) is convex \\(E(g(X)) \\ge g(E(X))\\) If g(x) is concave \\(E(g(X)) \\le g(E(X))\\) 2.2.1.1 Law of Iterated Expectations \\(E(Y)=E(E(Y|X))\\) 2.2.1.2 Correlation and Independence Independence \\(f(x,y)=f_X(x)f_Y(y)\\) \\(f_{Y|X}(y|x)=f_Y(y)\\) and \\(f_{X|Y}(x|y)=f_X(x)\\) \\(E(g_1(X)g_2(Y))=E(g_1(X))E(g_2(Y))\\) Mean Independence (implied by independence) Y is mean independent of X if and only if \\(E(Y|X)=E(Y)\\) \\(E(Xg(Y))=E(X)E(g(Y))\\) Uncorrelated (implied by independence and mean independence) \\(Cov(X,Y)=0\\) \\(Var(X+Y)=Var(X) + Var(Y)\\) \\(E(XY)=E(X)E(Y)\\) \\[ Strongest \\\\ \\downarrow \\\\ Independence \\\\ \\downarrow \\\\ Mean Independence \\\\ \\downarrow \\\\ Uncorrelated \\\\ \\downarrow \\\\ Weakest\\\\ \\] 2.2.2 Central Limit Theorem Let \\(X_1, X_2,...,X_n\\) be a random sample of size n from a distribution (not necessarily normal) X with mean \\(\\mu\\) and variance \\(\\sigma^2\\). then for large n (\\(n \\ge 25\\)), \\(\\bar{X}\\) is approximately normal with with mean \\(\\mu_{\\bar{X}}=\\mu\\) and variance \\(\\sigma^2_{\\bar{X}} = Var(\\bar{X})= \\frac{\\sigma^2}{n}\\) \\(\\hat{p}\\)is approximately normal with \\(\\mu_{\\hat{p}} = p, \\sigma^2_{\\hat{p}} = \\frac{p(1-p)}{n}\\) \\(\\hat{p_1} - \\hat{p_2}\\) is approximately normal with \\(\\mu_{\\hat{p_1} - \\hat{p_2}} = p_1 - p_2, \\sigma^2_{\\hat{p_1} - \\hat{p_2}}=\\frac{p_1(1-p)}{n_1} + \\frac{p_2(1-p)}{n_2}\\) \\(\\bar{X_1} - \\bar{X_2}\\) is approximately normal with \\(\\mu_{\\bar{X_1} - \\bar{X_2}} = \\mu_1 - \\mu_2, \\sigma^2_{\\bar{X_1} - \\bar{X_2}} = \\frac{\\sigma^2_1}{n_1}+\\frac{\\sigma^2_2}{n_2}\\) The following random variables are approximately standard normal: \\(\\frac{\\bar{X}-\\mu}{\\sigma/\\sqrt{n}}\\) \\(\\frac{\\hat{p}-p}{\\sqrt{\\frac{p(1-p)}{n}}}\\) \\(\\frac{(\\hat{p_1}-\\hat{p_2})-(p_1-p_2)}{\\sqrt{\\frac{p_1(1-p_1)}{n_1}-\\frac{p_2(1-p_2)}{n_2}}}\\) \\(\\frac{(\\bar{X_1}-\\bar{X_2})-(\\mu_1-\\mu_2)}{\\sqrt{\\frac{\\sigma^2_1}{n_1}-\\frac{\\sigma^2_2}{n_2}}}\\) If \\(\\{x_i\\}_{i=1}^{n}\\) is an iid random sample from a probability distribution with finite mean \\(\\mu\\) and finite variance \\(\\sigma^2\\) then the sample mean \\(\\bar{x}=n^{-1}\\sum_{i=1}^{n}x_i\\) scaled by \\(\\sqrt{n}\\) has the following limiting distribution \\[ \\sqrt{n}(\\bar{x}-\\mu) \\to^d N(0,\\sigma^2) \\] or if we were to standardize the sample mean, \\[ \\frac{\\sqrt{n}(\\bar{x}-\\mu)}{\\sigma} \\to^d N(0,1) \\] holds for most random sample from any distribution (continuous, discrete, unknown). extends to multivariate case: random sample of a random vector converges to a multivariate normal. Variance from the limiting distribution is the asymptotic variance (Avar) \\[ Avar(\\sqrt{n}(\\bar{x}-\\mu)) = \\sigma^2 \\\\ \\lim_{n \\to \\infty} Var(\\sqrt{n}(\\bar{x}-\\mu)) = \\sigma^2 \\\\ Avar(.) \\neq lim_{n \\to \\infty} Var(.) \\] 2.2.3 Random variable Discrete Variable Continuous Variable Definition A random variable is discrete if it can assume at most a finite or countably infinite number of possible values A random variable is continuous if it can assume any value in some interval or intervals of real numbers and the probability that it assumes any specific value is 0 Density Function A function f is called a density for X if: (1) \\(f(x) \\ge 0\\) (2) \\(\\sum_{all~x}f(x)=1\\) (3) \\(f(x)=P(X=x)\\) for x real A function f is called a density for X if: (1) \\(f(x) \\ge 0\\) for x real (2) \\(\\int_{-\\infty}^{\\infty} f(x) \\; dx=1\\) (3) \\(P[a \\le X \\le] =\\int_{a}^{b} f(x) \\; dx\\) for a and b real Cumulative Distribution Function for x real \\(F(x)=P[X \\le x]\\) \\(F(x)=P[X \\le x]=\\int_{-\\infty}^{\\infty}f(t)dt\\) \\(E[H(X)]\\) \\(\\sum_{all ~x}H(x)f(x)\\) \\(\\int_{-\\infty}^{\\infty}H(x)f(x)\\) \\(\\mu=E[X]\\) \\(\\sum_{all ~ x}xf(x)\\) \\(\\int_{-\\infty}^{\\infty}xf(x)\\) Ordinary Moments the kth ordinary moment for variable X is defined as: \\(E[X^k]\\) \\(\\sum_{all ~ x \\in X}(x^kf(x))\\) \\(\\int_{-\\infty}^{\\infty}(x^kf(x))\\) Moment generating function (mgf) \\(m_X(t)=E[e^{tX}]\\) \\(\\sum_{all ~ x \\in X}(e^{tx}f(x))\\) \\(\\int_{-\\infty}^{\\infty}(e^{tx}f(x)dx)\\) Expected Value Properties: E[c] = c for any constant c E[cX] = cE[X] for any constant c E[X+Y] = E[X] = E[Y] E[XY] = E[X].E[Y] (if X and Y are independent) Expected Variance Properties: \\(Var(c) = 0\\) for any constant c \\(Var(cX) = c^2Var(X)\\) for any constant c \\(Var(X) \\ge 0\\) \\(Var(X) = E(X^2) - (E(X))^2\\) \\(Var(X+c)=Var(X)\\) \\(Var (X+Y) = Var(X) + Var(Y)\\) (if X and Y are independent) Standard deviation \\(\\sigma=\\sqrt(\\sigma^2)=\\sqrt(Var X)\\) Suppose \\(y_1,...,y_p\\) are possibly correlated random variables with means \\(\\mu_1,...,\\mu_p\\). then \\[ \\mathbf{y} = (y_1,...,y_p)&#39; \\\\ E(\\mathbf{y}) = (\\mu_1,...,\\mu_p)&#39; = \\mathbf{\\mu} \\] Let \\(\\sigma_{ij} = cov(y_i,y_j)\\) for \\(i,j = 1,..,p\\). Define \\[ \\mathbf{\\Sigma} = (\\sigma_{ij}) = \\left(\\begin{array} {rrrr} \\sigma_{11} &amp; \\sigma_{12} &amp; ... &amp; \\sigma_{1p} \\\\ \\sigma_{21} &amp; \\sigma_{22} &amp; ... &amp; \\sigma_{2p} \\\\ . &amp; . &amp; . &amp; . \\\\ \\sigma_{p1} &amp; \\sigma_{p2} &amp; ... &amp; \\sigma_{pp}\\\\ \\end{array}\\right) \\] Hence, \\(\\mathbf{\\Sigma}\\) is the variance-covariance or dispersion matrix. And \\(\\mathbf{\\Sigma}\\) is symmetric with \\((p+1)p/2\\) unique parameters. Alternatively, let \\(u_{p \\times 1}\\) and \\(v_{v \\times 1}\\) be random vectors with means \\(\\mathbf{\\mu_u}\\) and \\(\\mathbf{\\mu_v}\\). then \\[ \\mathbf{\\Sigma_{uv}} = cov(\\mathbf{u,v}) = E[\\mathbf{(u-\\mu_u)(v-\\mu_v)&#39;}] \\] \\(\\Sigma_{uv} \\neq \\Sigma_{vu}\\) (but \\(\\Sigma_{uv} = \\Sigma_{vu}&#39;\\)) Properties of Covariance Matrices Symmetric: \\(\\mathbf{\\Sigma&#39; = \\Sigma}\\) Eigendecomposition (spectral decomposition,symmetric decomposition): \\(\\mathbf{\\Sigma = \\Phi \\Lambda \\Phi}\\), where \\(\\mathbf{\\Phi}\\) is a matrix of eigenvectors such that \\(\\mathbf{\\Phi \\Phi&#39; = I}\\) (orthonormal), and \\(\\mathbf{\\Lambda}\\) is a diagonal matrix with eigenvalues \\((\\lambda_1,...,\\lambda_p)\\) on the diagonal. Non-negative definite, \\(\\mathbf{a \\Sigma a} \\ge 0\\) for any \\(\\mathbf{a} \\in R^p\\). Equivalently, the eigenvalues of \\(\\mathbf{\\Sigma}\\), \\(\\lambda_1 \\ge ... \\ge \\lambda_p \\ge 0\\) \\(|\\mathbf{\\Sigma}| = \\lambda_1,...\\lambda_p \\ge 0\\) (generalized variance) \\(trace(\\mathbf{\\Sigma})= tr(\\mathbf{\\Sigma}) = \\lambda_1 +... + \\lambda_p = \\sigma_{11}+...+ \\sigma_{pp}\\)= sum of variances (total variance) Note: \\(\\mathbf{\\Sigma}\\) is usually required to be positive definite. This implies that all eigenvalues are positive, and \\(\\mathbf{\\Sigma}\\) has an inverse \\(\\mathbf{\\Sigma}^{-1}\\), such that \\(\\mathbf{\\Sigma}^{-1}\\mathbf{\\Sigma}= \\mathbf{I}_{p \\times p} = \\mathbf{\\Sigma}\\mathbf{\\Sigma}^{-1}\\) Correlation Matrices Define the correlation \\(\\rho_{ij}\\) and the correlation matrix by \\[ \\rho_{ij} = \\frac{\\sigma_{ij}}{\\sqrt{\\sigma_{ii} \\sigma_{jj}}} \\] \\[ \\mathbf{R} = \\left( \\begin{array} {cccc} \\rho_{11} &amp; \\rho_{12} &amp; ... &amp; \\rho_{1p} \\\\ \\rho_{21} &amp; \\rho_{22} &amp; ... &amp; \\rho_{2p} \\\\ . &amp; . &amp; . &amp; . \\\\ \\rho_{p1} &amp; \\rho_{p2} &amp; ... &amp; \\rho_{pp}\\\\ \\end{array} \\right) \\] where \\(\\rho_{ii}=1\\) for all i. Let x and y be random vectors with means \\(\\mu_x\\) and \\(\\mu_y\\) and variance-covariance matrices \\(\\Sigma_x\\) and \\(\\Sigma_y\\). Let \\(\\mathbf{A}\\) and \\(\\mathbf{B}\\) be matrices of constants and c and d be vectors of constants. Then, \\(E(\\mathbf{Ay+c}) = \\mathbf{A \\mu_y} +c\\) \\(var(\\mathbf{Ay +c}) = \\mathbf{A}var(\\mathbf{y}) \\mathbf{A}&#39; = \\mathbf{A \\Sigma_y A&#39;}\\) \\(cov(\\mathbf{Ay + c,By+d} = \\mathbf{A \\Sigma_y B&#39;}\\) 2.2.4 Moment generating function Moment generating function properties: \\(\\frac{d^k(m_X(t))}{dt^k}|_{t=0}=E[X^k]\\) \\(\\mu=E[X]=m_X&#39;(0)\\) \\(E[X^2]=m_X&#39;&#39;(0)\\) mgf Theorems Let \\(X_1,X_2,...X_n,Y\\) be random variables with moment-generating functions \\(m_{X_1}(t),m_{X_2}(t),...,m_{X_n}(t),m_{Y}(t)\\) If \\(m_{X_1}(t)=m_{X_2}(t)\\) for all t in some open interval about 0, then \\(X_1\\) and \\(X_2\\) have the same distribution If \\(Y = \\alpha + \\beta X_1\\), then \\(m_{Y}(t)= e^{\\alpha t}m_{X_1}(\\beta t)\\) If \\(X_1,X_2,...X_n\\) are independent and \\(Y = \\alpha_0 + \\alpha_1 X_1 + \\alpha_2 X_2 + ... + \\alpha_n X_n\\) (where \\(\\alpha_0, ... ,\\alpha_n\\) are real numbers), then \\(m_{Y}(t)=e^{\\alpha_0 t}m_{X_1}(\\alpha_1t)m_{X_2}(\\alpha_2 t)...m_{X_n}(\\alpha_nt)\\) Suppose \\(X_1,X_2,...X_n\\) are independent normal random variables with means \\(\\mu_1,\\mu_2,...\\mu_n\\) and variances \\(\\sigma^2_1,\\sigma^2_2,...,\\sigma^2_n\\). If \\(Y = \\alpha_0 + \\alpha_1 X_1 + \\alpha_2 X_2 + ... + \\alpha_n X_n\\) (where \\(\\alpha_0, ... ,\\alpha_n\\) are real numbers), then Y is normally distributed with mean \\(\\mu_Y = \\alpha_0 + \\alpha_1 \\mu_1 +\\alpha_2 \\mu_2 + ... + \\alpha_n \\mu_n\\) and variance \\(\\sigma^2_Y = \\alpha_1^2 \\sigma_1^2 + \\alpha_2^2 \\sigma_2^2 + ... + \\alpha_n^2 \\sigma_n^2\\) 2.2.5 Moment Moment Uncentered Centered 1st \\(E(X)=\\mu=Mean(X)\\) 2nd \\(E(X^2)\\) \\(E((X-\\mu)^2)=Var(X)=\\sigma^2\\) 3rd \\(E(X^3)\\) \\(E((X-\\mu)^3)\\) 4th \\(E(X^4)\\) \\(E((X-\\mu)^4)\\) Skewness(X) = \\(E((X-\\mu)^3)/\\sigma^3\\) Kurtosis(X) = \\(E((X-\\mu)^4)/\\sigma^4\\) Conditional Moments \\[ E(Y|X=x)= \\begin{cases} \\sum_yyf_Y(y|x) &amp; \\text{for discrete RV}\\\\ \\int_yyf_Y(y|x)dy &amp; \\text{for continous RV}\\\\ \\end{cases} \\] \\[ Var(Y|X=x)= \\begin{cases} \\sum_y(y-E(Y|x))^2f_Y(y|x) &amp; \\text{for discrete RV}\\\\ \\int_y(y-E(Y|x))^2f_Y(y|x)dy &amp; \\text{for continous RV}\\\\ \\end{cases} \\] 2.2.5.1 Multivariate Moments \\[\\begin{equation} E= \\left( \\begin{array}{c} X \\\\ Y \\\\ \\end{array} \\right) = \\left( \\begin{array}{c} E(X) \\\\ E(Y) \\\\ \\end{array} \\right) = \\left( \\begin{array}{c} \\mu_X \\\\ \\mu_Y \\\\ \\end{array} \\right) \\end{equation}\\] \\[\\begin{equation} \\begin{split} Var \\left( \\begin{array}{c} X \\\\ Y \\\\ \\end{array} \\right) &amp;= \\left( \\begin{array} {cc} Var(X) &amp; Cov(X,Y) \\\\ Cov(X,Y) &amp; Var(Y) \\\\ \\end{array} \\right) \\\\ &amp;= \\left( \\begin{array} {cc} E((X-\\mu_X)^2) &amp; E((X-\\mu_X)(Y-\\mu_Y)) \\\\ E((X-\\mu_X)(Y-\\mu_Y)) &amp; E((Y-\\mu_Y)^2) \\\\ \\end{array} \\right) \\end{split} \\end{equation}\\] Properties \\(E(aX + bY + c)=aE(X) +bE(Y) + c\\) \\(Var(aX + bY + c) = a^2Var(X) + b^2Var(Y) + 2abCov(X,Y)\\) \\(Cov(aX + bY, cX + bY) =acVar(X)+bdVar(Y) + (ad+bc)Cov(X,Y)\\) Correlation: \\(\\rho_{XY} = \\frac{Cov(X,Y)}{\\sigma_X\\sigma_Y}\\) 2.2.6 Distributions Conditional Distributions \\[ f_{X|Y}(X|Y=y)=\\frac{f(X,Y)}{f_Y(y)} \\] \\(f_{X|Y}(X|Y=y)=f_X(X)\\) if X and Y are independent 2.2.6.1 Discrete CDF: Cumulative Density Function MGF: Moment Generating Function 2.2.6.1.1 Bernoulli \\(Bernoulli(p)\\) PDF hist(mc2d::rbern(100000, prob=.5)) 2.2.6.1.2 Binomial \\(B(n,p)\\) the experiment consists of a fixed number (n) of Bernoulli trials, each of which results in a success (s) or failure (f) The trials are identical and independent, and probability of success (p) and probability of failure (q = 1- p) remains the same for all trials. The random variable X denotes the number of successes obtained in the n trials. Density \\[ f(x)={{n}\\choose{x}}p^xq^{n-x} \\] CDF You have to use table PDF # Histogram of 100000 random values from a sample of 100 with probability of 0.5 hist(rbinom(100000, size = 100, prob = 0.5)) MGF \\[ m_X(t) =(q+pe^t)^n \\] Mean \\[ \\mu = E(x) = np \\] Variance \\[ \\sigma^2 =Var(X) = npq \\] 2.2.6.1.3 Poisson \\(Pois(\\lambda)\\) Arises with Poisson process, which involves observing discrete events in a continuous “interval” of time, length, or space. The random variable X is the number of occurrences of the event within an interval of s units The parameter \\(\\lambda\\) is the average number of occurrences of the event in question per measurement unit. For the distribution, we use the parameter \\(k=\\lambda s\\) Density \\[ f(x) = \\frac{e^{-k}k^x}{x!} \\] ,k&gt; 0, x =0,1,… CDF Use table PDF # Poisson dist with mean of 5 or Poisson(5) hist(rpois(10000, lambda = 5)) MGF \\[ m_X(t)=e^{k(e^t-1)} \\] Mean \\[ \\mu = E(X) = k \\] Variance \\[ \\sigma^2 = Var(X) = k \\] 2.2.6.1.4 Geometric The experiment consists of a series of trails. The outcome of each trial can be classed as being either a “success” (s) or “failure” (f). (This is called a Bernoulli trial). The trials are identical and independent in the sense that the outcome of one trial has no effect on the outcome of any other. The probability of success (p) and probability of failure (q=1-p) remains the same from trial to trial. lack of memory X: the number of trials needed to obtain the first success. Density \\[ f(x)=pq^{x-1} \\] CDF \\[ F(x) = 1- q^x \\] PDF # hist of Geometric distribution with probability of success = 0.5 hist(rgeom(n = 10000, prob = 0.5)) MGF \\[ m_X(t) = \\frac{pe^t}{1-qe^t} \\] for \\(t &lt; -ln(q)\\) Mean \\[ \\mu = \\frac{1}{p} \\] Variance \\[ \\sigma^2 = Var(X) = \\frac{q}{p^2} \\] 2.2.6.1.5 Hypergeometric The experiment consists of drawing a random sample of size n without replacement and without regard to order from a collection of N objects. Of the N objects, r have a trait of interest; N-r do not have the trait X is the number of objects in the sample with the trait. Density \\[ f(x)=\\frac{{{r}\\choose{x}}{{N-r}\\choose{n-x}}}{{{N}\\choose{n}}} \\] where \\(max[0,n-(N-r)] \\le x \\le min(n,r)\\) PDF # hist of hypergeometric distribution with the number of white balls = 50, and the number of black balls = 20, and number of balls drawn = 30. hist(rhyper(nn = 10000 , m=50, n=20, k=30)) Mean \\[ \\mu = E(x)= \\frac{nr}{N} \\] Variance \\[ \\sigma^2 = var(X) = n (\\frac{r}{N})(\\frac{N-r}{N})(\\frac{N-n}{N-1}) \\] Note For large N (if \\(\\frac{n}{N} \\le 0.05\\)), this distribution can be approximated using a Binomial distribution with \\(p = \\frac{r}{N}\\) 2.2.6.1.6 2.2.6.2 Continuous 2.2.6.2.1 Uniform Defined over an interval (a,b) in which the probabilities are “equally likely” for subintervals of equal length. Density \\[ f(x)=\\frac{1}{b-a} \\] for a &lt; x &lt; b CDF \\[ \\begin{cases} 0 &amp; \\text{if x &lt;a } \\\\ \\frac{x-a}{b-a} &amp; \\text{if $a \\le x \\le b$ }\\\\ 1 &amp; \\text{if x &gt;b}\\\\ \\end{cases} \\] PDF hist(runif(100000, min = 0, max = 1)) MGF \\[ \\begin{cases} \\frac{e^{tb} - e^{ta}}{t(b-a)}&amp;\\text{ if $t \\neq 0$}\\\\ 1&amp;\\text{if $ t \\neq 0$}\\\\ \\end{cases} \\] Mean \\[ \\mu = E(X) = \\frac{a +b}{2} \\] Variance \\[ \\sigma^2 = Var(X) = \\frac{(b-a)^2}{12} \\] 2.2.6.2.2 Gamma is used to define the exponential and chi-squared distributions The gamma function is defined as: \\[ \\Gamma(\\alpha) = \\int_0^{\\infty} z^{\\alpha-1}e^{-z}dz \\] where \\(\\alpha &gt; 0\\) Properties of The Gamma function: \\(\\Gamma(1) = 1\\) + For \\(\\alpha &gt;1\\), \\(\\Gamma(\\alpha)=(\\alpha-1)\\Gamma(\\alpha-1)\\) + If n is an integer and \\(n&gt;1\\), then \\(\\Gamma(n) = (n-1)!\\) Density \\[ f(x) = \\frac{1}{\\Gamma(\\alpha)\\beta^{\\alpha}}x^{\\alpha-1}e^{-x/\\beta} \\] CDF \\[ F(x,n,\\beta) = 1 -\\sum_{k=0}^{n-1} \\frac{(\\frac{x}{\\beta})^k e^{-x/\\beta}}{k!} \\] for x&gt;0, and \\(\\alpha = n\\) (a positive integer) PDF hist(rgamma(n = 10000, shape = 5, rate = 1)) MGF \\[ m_X(t) = (1-\\beta t)^{-\\alpha} \\] where \\(t &lt; \\frac{1}{\\beta}\\) Mean \\[ \\mu = E(X) = \\alpha \\beta \\] Variance \\[ \\sigma^2 = Var(X) = \\alpha \\beta^2 \\] 2.2.6.2.3 Normal \\(N(\\mu,\\sigma^2)\\) is symmetric, bell-shaped curve with parameters \\(\\mu\\) and \\(\\sigma^2\\) also known as Gaussian. Density \\[ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi }}e^{-\\frac{1}{2}(\\frac{x-\\mu}{\\sigma})^2} \\] for \\(-\\infty &lt; x, \\mu&lt; \\infty, \\sigma &gt; 0\\) CDF Use table PDF hist(rnorm(1000000, mean = 0, sd = 1)) MGF \\[ m_X(t) = e^{\\mu t + \\frac{\\sigma^2 t^2}{2}} \\] Mean \\[ \\mu = E(X) \\] Variance \\[ \\sigma^2 = Var(X) \\] Standard Normal Random Variable The normal random variable Z with mean \\(\\mu = 0\\) and standard deviation \\(\\sigma =1\\) is called standard normal Any normal random variable X with mean \\(\\mu\\) and standard deviation \\(\\sigma\\) can be converted to the standard normal random variable \\(Z = \\frac{X-\\mu}{\\sigma}\\) Normal Approximation to the Binomial Distribution Let X be binomial with parameters n and p. For large n (so that \\((A)p \\le .5\\) and \\(np &gt; 5\\) or (B) \\(p&gt;.5\\) and \\(nq&gt;5\\)), X is approximately normally distributed with mean \\(\\mu = np\\) and standard deviation \\(\\sigma = \\sqrt{npq}\\) When using the normal approximation, add or subtract 0.5 as needed for the continuity correction Discrete Approximate Normal (corrected) P(X = c) P(c -0.5 &lt; Y &lt; c + 0.5) P(X &lt; c) P(Y &lt; c - 0.5) P(X c) P(Y &lt; c + 0.5) P(X &gt; c) P(Y &gt; c + 0.5) P(X c) P(Y &gt; c - 0.5) Normal Probability Rule If X is normally distributed with parameters \\(\\mu\\) and \\(\\sigma\\), then \\(P(-\\sigma &lt; X - \\mu &lt; \\sigma) \\approx .68\\) * \\(P(-2\\sigma &lt; X - \\mu &lt; 2\\sigma) \\approx .95\\) * \\(P(-3\\sigma &lt; X - \\mu &lt; 3\\sigma) \\approx .997\\) 2.2.6.2.4 Logistic \\(Logistic(\\mu,s)\\) PDF hist(rlogis(n = 100000, location = 0, scale = 1)) 2.2.6.2.5 Laplace \\[ f(x) = \\frac{1}{2} e^{-|x-\\theta|} \\] where \\(-\\infty &lt; x &lt; \\infty\\) and \\(-\\infty &lt; \\theta &lt; \\infty\\) \\[ \\mu = \\theta, \\sigma^2 = 2 \\] and \\[ m(t) = e^{t \\theta} \\frac{1}{1 - t^2} \\] where \\(-1 &lt; t &lt; 1\\) 2.2.6.2.6 Lognomral \\(lognormal(\\mu,\\sigma^2)\\) PDF hist(rlnorm(n = 10000, meanlog = 0, sdlog = 1)) 2.2.6.2.7 Exponential \\(Exp(\\lambda)\\) A special case of the gamma distribution with \\(\\alpha = 1\\) Lack of memory \\(\\lambda\\) = rate Within a Poisson process with parameter \\(\\lambda\\), if W is the waiting tine until the occurrence of the first event, then W has an exponential distribution with \\(\\beta = 1/\\alpha\\) Density \\[ f(x) = \\frac{1}{\\beta} e^{-x/\\beta} \\] for \\(x,\\beta &gt; 0\\) CDF \\[\\begin{equation} F(x) = \\begin{cases} 0 &amp; \\text{ if $x \\le 0$}\\\\ 1 - e^{-x/\\beta} &amp; \\text{if $x &gt; 0$}\\\\ \\end{cases} \\end{equation}\\] PDF hist(rexp(n = 100000, rate = 1)) MGF \\[ m_X(t) = (1-\\beta t)^{-1} \\] for \\(t &lt; 1/\\beta\\) Mean \\[ \\mu = E(X) = \\beta \\] Variance \\[ \\sigma^2 = Var(X) =\\beta^2 \\] 2.2.6.2.8 Chi-squared \\(\\chi^2=\\chi^2(k)\\) A special case of the gamma distribution with \\(\\beta =2\\), and \\(\\alpha = \\gamma /2\\) for a positive integer \\(\\gamma\\) The random variable X is denoted \\(\\chi_{\\gamma}^2\\) and is said to have a chi-squared distribution with \\(\\gamma\\) degrees of freedom. Density Use density for Gamma Distribution with \\(\\beta = 2\\) and \\(\\alpha = \\gamma/2\\) CDF Use table PDF hist(rchisq(n = 10000, df=2, ncp = 0)) MGF \\[ m_X(t) = (1-2t)^{-\\gamma/2} \\] Mean \\[ \\mu = E(X) = \\gamma \\] Variance \\[ \\sigma^2 = Var(X) = 2\\gamma \\] 2.2.6.2.9 Student T \\(T(v)\\) \\(T=\\frac{Z}{\\sqrt{\\chi_{\\gamma}^2/\\gamma}}\\), where Z is standard normal follows a student-t distribution with \\(\\gamma\\) dof The distribution is symmetric, bell-shaped , with a mean of \\(\\mu=0\\) hist(rt(n = 100000, df=2, ncp =1)) 2.2.6.2.10 F-Distribution \\(F(d_1,d_2)\\) F distribution is strictly positive \\(F=\\frac{\\chi_{\\gamma_1}^2/\\gamma_1}{\\chi_{\\gamma_2^2}/\\gamma_2}\\) follows an F distribution with dof \\(\\gamma_1\\) and \\(\\gamma_2\\), where \\(\\chi_{\\gamma_1}^2\\) and \\(\\chi_{\\gamma_2}^2\\) are independent chi-squared random variables. The distribution is asymmetric and never negative. PDF hist(rf(n = 100000, df1=2, df2=3, ncp=1)) 2.2.6.2.11 Cauchy Central Limit Theorem and Weak Law do not apply to Cauchy because it does not have finite mean and finite variance PDF hist(rcauchy(n = 100000, location = 0, scale = 1)) 2.2.6.2.12 Multivariate Normal Distribution Let y be a p-dimensional multivariate normal (MVN) rv with mean \\(\\mu\\) and variance \\(\\Sigma\\). Then, the density of y is \\[ f(\\mathbf{y}) = \\frac{1}{(2\\pi)^{p/2}|\\mathbf{\\Sigma}|^{1/2}}exp(-\\frac{1}{2}\\mathbf{(y-\\mu)&#39;\\Sigma^{-1}(y-\\mu)}) \\] We have \\(\\mathbf{y} \\sim N_p(\\mathbf{\\mu,\\Sigma})\\) Properties: Let \\(\\mathbf{A}_{r \\times p}\\) be a fixed matrix. then \\(\\mathbf{Ay} \\sim N_r(\\mathbf{A \\mu, A \\Sigma A&#39;)}\\). Note that \\(r \\le p\\) and all rows of A must be linearly independent to guarantee that \\(\\mathbf{A\\Sigma A&#39;}\\) is non-singular. Let \\(\\mathbf{G}\\) be a matrix such that \\(\\mathbf{\\Sigma^{-1}= GG&#39;}\\). then, \\(\\mathbf{G&#39;y} \\sim N_p (\\mathbf{G&#39;\\mu,I})\\) and \\(\\mathbf{G&#39;(y-\\mu)} \\sim N_p (\\mathbf{0,I})\\). Any fixed linear combination of \\(y_1,...,y_p\\) say \\(\\mathbf{c&#39;y}\\), follows \\(\\mathbf{c&#39;y} \\sim N_1(\\mathbf{c&#39;\\mu,c&#39;\\Sigma c})\\) Large Sample Properties Suppose that \\(y_1,...,y_n\\) are a random sample from some population with mean \\(\\mu\\) and variance-variance matrix \\(\\Sigma\\) \\[ \\mathbf{Y} \\sim MVN(\\mathbf{\\mu,\\Sigma}) \\] Then \\(\\bar{\\mathbf{y}} = \\frac{1}{n}\\sum_{i=1}^n \\mathbf{y}_i\\) is a consistent estimator for \\(\\mathbf{\\mu}\\) \\(\\mathbf{S} = \\frac{1}{n-1}\\sum_{i=1}^n \\mathbf{(y_i - \\bar{y})(y_i - \\bar{y})&#39;}\\) is a consistent estimator for \\(\\mathbf{\\Sigma}\\) Multivariate Central Limit Theorem: Similar to the univariate case, \\(\\sqrt{n}(\\mathbf{\\bar{y}- \\mu}) \\sim N_p(\\mathbf{0, \\Sigma})\\) when n is large relative to p (e.g., \\(n \\ge 25p\\)), which is equivalent to \\(\\bar{y} \\sim N_p(\\mathbf{\\mu,\\Sigma/n})\\) Wald’s Theorem: \\(n(\\mathbf{\\bar{y}- \\mu)&#39;S^{-1}(\\bar{y}- \\mu)} \\sim \\chi^2_{(p)}\\) when n is large relative to p. "],["general-math.html", "2.3 General Math", " 2.3 General Math 2.3.1 Number Sets Notation Denotes Examples \\(\\emptyset\\) Empty set No members \\(\\mathbb{N}\\) Natural numbers \\(\\{1, 2, ...\\}\\) \\(\\mathbb{Z}\\) Integers \\(\\{ ..., -1, 0, 1, ...\\}\\) \\(\\mathbb{Q}\\) Rational numbers including fractions \\(\\mathbb{R}\\) Real numbers \\(\\mathbb{C}\\) Complex numbers 2.3.2 Summation Notation and Series Chebyshev’s Inequality Let X be a random variable with mean \\(\\mu\\) and standard deviation \\(\\sigma\\). Then for any positive number k: \\[ P(|X-\\mu| &lt; k\\sigma) \\ge 1 - \\frac{1}{k^2} \\] Chebyshev’s Inequality does not require that X be normally distributed Geometric sum \\[ \\sum_{k=0}^{n-1} ar^k = a\\frac{1-r^n}{1-r} \\] where \\(r \\neq 1\\) Geometric series \\[ \\sum_{k=0}^\\infty ar^k = \\frac{a}{1-r} \\] where \\(|r| &lt;1\\) Binomial theorem \\[ (x + y)^n = \\sum_{k=0}^n \\binom{n}{k} x^{n-k} y^k \\] where \\(n \\ge 0\\) Binomial series \\[ \\sum_k \\binom{\\alpha}{k} x^k = (1 +x)^\\alpha \\] \\(|x| &lt; 1\\) if \\(\\alpha \\neq n \\ge 0\\) Telescoping sum When terms of a sum cancel each other out, leaving one term (i.e., it collapses like a telescope), we call it a telescoping sum \\[ \\sum_{a \\le k &lt; b} \\Delta F(k) = F(b) - F(a) \\] where \\(a \\le b\\) and \\(a, b \\in \\mathbb{Z}\\) Vandermonde convolution \\[ \\sum_k \\binom{r}{k} \\binom{s}{n-k} = \\binom{r+s}{n} \\] \\(n \\in \\mathbb{Z}\\) Exponential series \\[ \\sum_{k=0}^\\infty \\frac{x^k}{k!} = e^x \\] where \\(x \\in \\mathbb{C}\\) Taylor series \\[ \\sum_{k=0}^{\\infty} \\frac{f^{(k)}(a)}{k!} (x-a)^k = f(x) \\] where \\(|x-a| &lt; R =\\) radius of convergence when \\(a = 0\\), we have Maclaurin series expansion for \\[ e^z = 1 + z + \\frac{z^2}{2!} + \\frac{z^3}{3!} + ... \\] Euler’s summation formula \\[\\sum_{a \\le k &lt; b} f(k) = \\int_a^b f(x) dx + \\sum_{k=1}^m\\frac{B_k}{k!} f^{(k-1)}(x) |_a^b \\\\+ (-1)^{m+1} \\int^b_a \\frac{B_m (x-|x|)}{m!} f^{(m)}(x)dx\\] where \\(a,b, c \\in \\mathbb{Z}\\) and \\(a \\le b, m \\ge 1\\) when \\(m = 1\\), we have trapezoidal rule \\[ \\sum_{a \\le k &lt; b} f(k) \\approx \\int_a^b f(x) dx - \\frac{1}{2} (f(b) - f(a)) \\] 2.3.3 Taylor Expansion A differentiable function, \\(G(x)\\) can be written as an infinite sum of its derivatives. More specifically, an infinitely differentiable \\(G(x)\\) evaluated at \\(a\\) is \\[ G(x) = G(a) + \\frac{G&#39;(a)}{1!} (x-a) + \\frac{G&#39;&#39;(a)}{2!}(x-a) + \\frac{G&#39;&#39;&#39;(a)}{3!}(x-a)^3 + \\dots \\] 2.3.4 Law of large numbers Let \\(X_1,X_2,...\\) be an infinite sequence of independent and identically distributed (i.i.d) Then, the sample average is \\[ \\bar{X}_n =\\frac{1}{n} (X_1 + ... + X_n) \\] converges to the expected value (\\(\\bar{X}_n \\rightarrow \\mu\\)) as \\(n \\rightarrow \\infty\\) \\[ Var(X_i) = Var(\\frac{1}{n}(X_1 + ... + X_n)) = \\frac{1}{n^2}Var(X_1 + ... + X_n)= \\frac{n\\sigma^2}{n^2}=\\frac{\\sigma^2}{n} \\] The difference between Weak Law and Strong Law regards the mode of convergence 2.3.4.1 Weak Law The sample average converges in probability towards the expected value \\[ \\bar{X}_n \\rightarrow^{p} \\mu \\] when \\(n \\rightarrow \\infty\\) \\[ \\lim_{n\\to \\infty}P(|\\bar{X}_n - \\mu| &gt; \\epsilon) = 0 \\] The sample mean from a iid random sample (\\(\\{ x_i \\}_{i=1}^n\\)) from any population with a finite mean and finite variance \\(\\sigma^2\\) is ca consistent estimation for the population mean \\(\\mu\\) \\[ plim(\\bar{x})=plim(n^{-1}\\sum_{i=1}^{n}x_i) =\\mu \\] 2.3.4.2 Strong Law The sample average converges almost surely to the expected value \\[ \\bar{X}_n \\rightarrow^{a.s} \\mu \\] when \\(n \\rightarrow \\infty\\) Equivalently, \\[ P(\\lim_{n\\to \\infty}\\bar{X}_n =\\mu) =1 \\] 2.3.5 Law of Iterated Expectation Let X, Y be random variables. Then, \\[ E(X) = E(E(X|Y)) \\] means that the expected value of X can be calculated from the probability distribution of X|Y and Y 2.3.6 Convergence 2.3.6.1 Convergence in Probability \\(n \\rightarrow \\infty\\), an estimator (random variable) that is close to the true value. The random variable \\(\\theta_n\\) converges in probability to a constant c if \\[ \\lim_{n\\to \\infty}P(|\\theta_n - c| \\ge \\epsilon) = 0 \\] for any positive \\(\\epsilon\\) Notation \\[ plim(\\theta_n)=c \\] Equivalently, \\[ \\theta_n \\rightarrow^p c \\] Properties of Convergence in Probability Slutsky’s Theorem: for a continuous function g(.), if \\(plim(\\theta_n)= \\theta\\) then \\(plim(g(\\theta_n)) = g(\\theta)\\) if \\(\\gamma_n \\rightarrow^p \\gamma\\) then \\(plim(\\theta_n + \\gamma_n)=\\theta + \\gamma\\) + \\(plim(\\theta_n \\gamma_n) = \\theta \\gamma\\) + \\(plim(\\theta_n/\\gamma_n) = \\theta/\\gamma\\) if \\(\\gamma \\neq 0\\) Also hold for random vectors/ matrices 2.3.6.2 Convergence in Distribution As \\(n \\rightarrow \\infty\\), the distribution of a random variable may converge towards another (“fixed”) distribution. The random variable \\(X_n\\) with CDF \\(F_n(x)\\) converges in distribution to a random variable X with CDF \\(F(X)\\) if \\[ \\lim_{n\\to \\infty}|F_n(x) - F(x)| = 0 \\] at all points of continuity of \\(F(X)\\) Notation F(x) is the limiting distribution of \\(X_n\\) or \\(X_n \\rightarrow^d X\\) E(X) is the limiting mean (asymptotic mean) Var(X) is the limiting variance (asymptotic variance) Note \\[ E(X) \\neq \\lim_{n\\to \\infty}E(X_n) \\\\ Avar(X_n) \\neq \\lim_{n\\to \\infty}Var(X_n) \\] Properties of Convergence in Distribution Continuous Mapping Theorem: for a continuous function g(.), if \\(X_n \\to^{d} g(X)\\) then \\(g(X_n) \\to^{d} g(X)\\) if \\(Y_n\\to^{d} c\\), then \\(X_n + Y_n \\to^{d} X + c\\) \\(Y_nX_n \\to^{d} cX\\) \\(X_nY_n \\to^{d} X/c\\) if \\(c \\neq 0\\) also hold for random vectors/matrices 2.3.6.3 Summary Properties of Convergence Probability Distribution Slutsky’s Theorem: for a continuous function g(.), if \\(plim(\\theta_n)= \\theta\\) then \\(plim(g(\\theta_n)) = g(\\theta)\\) Continuous Mapping Theorem: for a continuous function g(.), if \\(X_n \\to^{d} g(X)\\) then \\(g(X_n) \\to^{d} g(X)\\) if \\(\\gamma_n \\rightarrow^p \\gamma\\) then if \\(Y_n\\to^{d} c\\), then \\(plim(\\theta_n + \\gamma_n)=\\theta + \\gamma\\) \\(X_n + Y_n \\to^{d} X + c\\) \\(plim(\\theta_n \\gamma_n) = \\theta \\gamma\\) \\(Y_nX_n \\to^{d} cX\\) \\(plim(\\theta_n/\\gamma_n) = \\theta/\\gamma\\) if \\(\\gamma \\neq 0\\) \\(X_nY_n \\to^{d} X/c\\) if \\(c \\neq 0\\) Convergence in Probability is stronger than Convergence in Distribution. However, Convergence in Distribution does not guarantee Convergence in Probability 2.3.7 Sufficient Statistics Likelihood describes the extent to which the sample provides support for any particular parameter value. Higher support corresponds to a higher value for the likelihood The exact value of any likelihood is meaningless, The relative value, (i.e., comparing two values of \\(\\theta\\)), is informative. \\[ L(\\theta_0; y) = P(Y = y | \\theta = \\theta_0) = f_Y(y;\\theta_0) \\] Likelihood Ratio \\[ \\frac{L(\\theta_0;y)}{L(\\theta_1;y)} \\] Likelihood Function For a given sample, you can create likelihoods for all possible values of \\(\\theta\\), which is called likelihood function \\[ L(\\theta) = L(\\theta; y) = f_Y(y;\\theta) \\] In a sample of size n, the likelihood function takes the form of a product \\[ L(\\theta) = \\prod_{i=1}^{n}f_i (y_i;\\theta) \\] Equivalently, the log likelihood function \\[ l(\\theta) = \\sum_{i=1}^{n} logf_i(y_i;\\theta) \\] Sufficient statistics A statistic, T(y), is any quantity that can be calculated purely from a sample (independent of \\(\\theta\\)) A statistic is sufficient if it conveys all the available information about the parameter. \\[ L(\\theta; y) = c(y)L^*(\\theta;T(y)) \\] Nuisance parameters If we are interested in a parameter (e.g., mean). Other parameters requiring estimation (e.g., standard deviation) are nuisance parameters. We can replace nuisance parameters in likelihood function with their estimates to create a profile likelihood. 2.3.8 Parameter transformations log-odds transformation \\[ Log odds = g(\\theta)= ln[\\frac{\\theta}{1-\\theta}] \\] log transformation "],["data-importexport.html", "2.4 Data Import/Export", " 2.4 Data Import/Export Extended Manual by R Table by Rio Vignette Format Typical Extension Import Package Export Package Installed by Default Comma-separated data .csv data.table data.table Yes Pipe-separated data .psv data.table data.table Yes Tab-separated data .tsv data.table data.table Yes CSVY (CSV + YAML metadata header) .csvy data.table data.table Yes SAS .sas7bdat haven haven Yes SPSS .sav haven haven Yes SPSS (compressed) .zsav haven haven Yes Stata .dta haven haven Yes SAS XPORT .xpt haven haven Yes SPSS Portable .por haven Yes Excel .xls readxl Yes Excel .xlsx readxl openxlsx Yes R syntax .R base base Yes Saved R objects .RData, .rda base base Yes Serialized R objects .rds base base Yes Epiinfo .rec foreign Yes Minitab .mtp foreign Yes Systat .syd foreign Yes “XBASE” database files .dbf foreign foreign Yes Weka Attribute-Relation File Format .arff foreign foreign Yes Data Interchange Format .dif utils Yes Fortran data no recognized extension utils Yes Fixed-width format data .fwf utils utils Yes gzip comma-separated data .csv.gz utils utils Yes Apache Arrow (Parquet) .parquet arrow arrow No EViews .wf1 hexView No Feather R/Python interchange format .feather feather feather No Fast Storage .fst fst fst No JSON .json jsonlite jsonlite No Matlab .mat rmatio rmatio No OpenDocument Spreadsheet .ods readODS readODS No HTML Tables .html xml2 xml2 No Shallow XML documents .xml xml2 xml2 No YAML .yml yaml yaml No Clipboard default is tsv clipr clipr No Google Sheets as Comma-separated data R limitations: By default, R use 1 core in CPU R puts data into memory (limit around 2-4 GB), while SAS uses data from files on demand Categorization Medium-size file: within RAM limit, around 1-2 GB Large file: 2-10 GB, there might be some workaround solution Very large file &gt; 10 GB, you have to use distributed or parallel computing Solutions: buy more RAM HPC packages Explicit Parallelism Implicit Parallelism Large Memory Map/Reduce specify number of rows and columns, typically including command nrow = Use packages that store data differently bigmemory, biganalytics, bigtabulate , synchronicity, bigalgebra, bigvideo use C++ to store matrices, but also support one class type For multiple class types, use ff package Very Large datasets use RHaddop package HadoopStreaming Rhipe 2.4.1 Medium size library(&quot;rio&quot;) To import multiple files in a directory str(import_list(dir()), which = 1) To export a single data file export(data, &quot;data.csv&quot;) export(data,&quot;data.dta&quot;) export(data,&quot;data.txt&quot;) export(data,&quot;data_cyl.rds&quot;) export(data,&quot;data.rdata&quot;) export(data,&quot;data.R&quot;) export(data,&quot;data.csv.zip&quot;) export(data,&quot;list.json&quot;) To export multiple data files export(list(mtcars = mtcars, iris = iris), &quot;data_file_type&quot;) # where data_file_type should substituted with the extension listed above To convert between data file types # convert Stata to SPSS convert(&quot;data.dta&quot;, &quot;data.sav&quot;) 2.4.2 Large size Use R on a cluster Amazon Web Service (AWS): $1/hr Import files as chunks file_in &lt;- file(&quot;in.csv&quot;,&quot;r&quot;) chunk_size &lt;- 100000 # choose the best size for you x &lt;- readLines(file_in, n=chunk_size) data.table method require(data.table) mydata = fread(&quot;in.csv&quot;, header = T) ff package: this method does not allow you to pass connections library(&quot;ff&quot;) x &lt;- read.csv.ffdf( file = &quot;file.csv&quot;, nrow = 10, header = TRUE, VERBOSE = TRUE, first.rows = 10000, next.rows = 50000, colClasses = NA ) bigmemory package my_data &lt;- read.big.matrix(&#39;in.csv&#39;, header = T) sqldf package library(sqldf) my_data &lt;- read.csv.sql(&#39;in.csv&#39;) iris2 &lt;- read.csv.sql(&quot;iris.csv&quot;, sql = &quot;select * from file where Species = &#39;setosa&#39; &quot;) library(RMySQL) RQLite package Download SQLite, pick “A bundle of command-line tools for managing SQLite database files” for Window 10 Unzip file, and open sqlite3.exe. Type in the prompt sqlite&gt; .cd 'C:\\Users\\data' specify path to your desired directory sqlite&gt; .open database_name.db to open a database To import the CSV file into the database sqlite&gt; .mode csv specify to SQLite that the next file is .csv file sqlite&gt; .import file_name.csv datbase_name to import the csv file to the database sqlite&gt; .exit After you’re done, exit the sqlite program library(DBI) library(dplyr) library(&quot;RSQLite&quot;) setwd(&quot;&quot;) con &lt;- dbConnect(RSQLite::SQLite(), &quot;data_base.db&quot;) tbl &lt;- tbl(con, &quot;data_table&quot;) tbl %&gt;% filter() %&gt;% select() %&gt;% collect() # to actually pull the data into the workspace dbDisconnect(con) arrow package library(&quot;arrow&quot;) read_csv_arrow() vroom package library(vroom) spec(vroom(file_path)) compressed &lt;- vroom_example(&quot;mtcars.csv.zip&quot;) vroom(compressed) data.table package s = fread(&quot;sample.csv&quot;) Comparisons regarding storage space test = ff::read.csv.ffdf(file = &quot;&quot;) object.size(test) # worst test1 = data.table::fread(file = &quot;&quot;) object.size(test1) # best test2 = readr::read_csv(&quot;&quot;)) object.size(test2) # 2nd test3 = vroom(file = &quot;&quot;) object.size(test3) # equal to read_csv To work with big data, you can convert it to csv.gz , but since typically, R would require you to load the whole data then export it. With data greater than 10 GB, we have to do it sequentially. Even though read.csv is much slower than readr::read_csv , we still have to use it because it can pass connection, and it allows you to loop sequentially. On the other, because currently readr::read_csv does not have the skip function, and even if we can use the skip, we still have to read and skip lines in previous loop. For example, say you read_csv(, n_max = 100, skip =0) and then read_csv(, n_max = 200, skip = 100) you actually have to read again the first 100 rows. However, read.csv without specifying anything, will continue at the 100 mark. Notice, sometimes you might have error looking like this “Error in (function (con, what, n = 1L, size = NA_integer_, signed = TRUE, : can only read from a binary connection” then you can change it instead of r in the connection into rb . Even though an author of the package suggested that file should be able to recognize the appropriate form, so far I did not prevail. "],["data-manipulation.html", "2.5 Data Manipulation", " 2.5 Data Manipulation # load packages library(tidyverse) library(lubridate) x &lt;- c(1, 4, 23, 4, 45) n &lt;- c(1, 3, 5) g &lt;- c(&quot;M&quot;, &quot;M&quot;, &quot;F&quot;) df &lt;- data.frame(n, g) df #&gt; n g #&gt; 1 1 M #&gt; 2 3 M #&gt; 3 5 F str(df) #&gt; &#39;data.frame&#39;: 3 obs. of 2 variables: #&gt; $ n: num 1 3 5 #&gt; $ g: chr &quot;M&quot; &quot;M&quot; &quot;F&quot; #Similarly df &lt;- tibble(n, g) df #&gt; # A tibble: 3 × 2 #&gt; n g #&gt; &lt;dbl&gt; &lt;chr&gt; #&gt; 1 1 M #&gt; 2 3 M #&gt; 3 5 F str(df) #&gt; tibble [3 × 2] (S3: tbl_df/tbl/data.frame) #&gt; $ n: num [1:3] 1 3 5 #&gt; $ g: chr [1:3] &quot;M&quot; &quot;M&quot; &quot;F&quot; # list form lst &lt;- list(x, n, g, df) lst #&gt; [[1]] #&gt; [1] 1 4 23 4 45 #&gt; #&gt; [[2]] #&gt; [1] 1 3 5 #&gt; #&gt; [[3]] #&gt; [1] &quot;M&quot; &quot;M&quot; &quot;F&quot; #&gt; #&gt; [[4]] #&gt; # A tibble: 3 × 2 #&gt; n g #&gt; &lt;dbl&gt; &lt;chr&gt; #&gt; 1 1 M #&gt; 2 3 M #&gt; 3 5 F # Or lst2 &lt;- list(num = x, size = n, sex = g, data = df) lst2 #&gt; $num #&gt; [1] 1 4 23 4 45 #&gt; #&gt; $size #&gt; [1] 1 3 5 #&gt; #&gt; $sex #&gt; [1] &quot;M&quot; &quot;M&quot; &quot;F&quot; #&gt; #&gt; $data #&gt; # A tibble: 3 × 2 #&gt; n g #&gt; &lt;dbl&gt; &lt;chr&gt; #&gt; 1 1 M #&gt; 2 3 M #&gt; 3 5 F # Or lst3 &lt;- list(x = c(1, 3, 5, 7), y = c(2, 2, 2, 4, 5, 5, 5, 6), z = c(22, 3, 3, 3, 5, 10)) lst3 #&gt; $x #&gt; [1] 1 3 5 7 #&gt; #&gt; $y #&gt; [1] 2 2 2 4 5 5 5 6 #&gt; #&gt; $z #&gt; [1] 22 3 3 3 5 10 # find the means of x, y, z. # can do one at a time mean(lst3$x) #&gt; [1] 4 mean(lst3$y) #&gt; [1] 3.875 mean(lst3$z) #&gt; [1] 7.666667 # list apply lapply(lst3, mean) #&gt; $x #&gt; [1] 4 #&gt; #&gt; $y #&gt; [1] 3.875 #&gt; #&gt; $z #&gt; [1] 7.666667 # OR sapply(lst3, mean) #&gt; x y z #&gt; 4.000000 3.875000 7.666667 # Or, tidyverse function map() map(lst3, mean) #&gt; $x #&gt; [1] 4 #&gt; #&gt; $y #&gt; [1] 3.875 #&gt; #&gt; $z #&gt; [1] 7.666667 # The tidyverse requires a modified map function called map_dbl() map_dbl(lst3, mean) #&gt; x y z #&gt; 4.000000 3.875000 7.666667 # Binding dat01 &lt;- tibble(x = 1:5, y = 5:1) dat01 #&gt; # A tibble: 5 × 2 #&gt; x y #&gt; &lt;int&gt; &lt;int&gt; #&gt; 1 1 5 #&gt; 2 2 4 #&gt; 3 3 3 #&gt; 4 4 2 #&gt; 5 5 1 dat02 &lt;- tibble(x = 10:16, y = x/2) dat02 #&gt; # A tibble: 7 × 2 #&gt; x y #&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 10 5 #&gt; 2 11 5.5 #&gt; 3 12 6 #&gt; 4 13 6.5 #&gt; 5 14 7 #&gt; 6 15 7.5 #&gt; 7 16 8 dat03 &lt;- tibble(z = runif(5)) # 5 random numbers from interval (0,1) dat03 #&gt; # A tibble: 5 × 1 #&gt; z #&gt; &lt;dbl&gt; #&gt; 1 0.803 #&gt; 2 0.972 #&gt; 3 0.882 #&gt; 4 0.0940 #&gt; 5 0.148 # row binding bind_rows(dat01, dat02, dat01) #&gt; # A tibble: 17 × 2 #&gt; x y #&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 1 5 #&gt; 2 2 4 #&gt; 3 3 3 #&gt; 4 4 2 #&gt; 5 5 1 #&gt; 6 10 5 #&gt; 7 11 5.5 #&gt; 8 12 6 #&gt; 9 13 6.5 #&gt; 10 14 7 #&gt; 11 15 7.5 #&gt; 12 16 8 #&gt; 13 1 5 #&gt; 14 2 4 #&gt; 15 3 3 #&gt; 16 4 2 #&gt; 17 5 1 # use &quot;.id&quot; argument to create a new column that contains an identifier for the original data. bind_rows(dat01, dat02, .id = &quot;id&quot;) #&gt; # A tibble: 12 × 3 #&gt; id x y #&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 1 1 5 #&gt; 2 1 2 4 #&gt; 3 1 3 3 #&gt; 4 1 4 2 #&gt; 5 1 5 1 #&gt; 6 2 10 5 #&gt; 7 2 11 5.5 #&gt; 8 2 12 6 #&gt; 9 2 13 6.5 #&gt; 10 2 14 7 #&gt; 11 2 15 7.5 #&gt; 12 2 16 8 # with name bind_rows(&quot;dat01&quot; = dat01, &quot;dat02&quot; = dat02, .id = &quot;id&quot;) #&gt; # A tibble: 12 × 3 #&gt; id x y #&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 dat01 1 5 #&gt; 2 dat01 2 4 #&gt; 3 dat01 3 3 #&gt; 4 dat01 4 2 #&gt; 5 dat01 5 1 #&gt; 6 dat02 10 5 #&gt; 7 dat02 11 5.5 #&gt; 8 dat02 12 6 #&gt; 9 dat02 13 6.5 #&gt; 10 dat02 14 7 #&gt; 11 dat02 15 7.5 #&gt; 12 dat02 16 8 # bind_rows() also works on lists of data frames list01 &lt;- list(&quot;dat01&quot; = dat01, &quot;dat02&quot; = dat02) list01 #&gt; $dat01 #&gt; # A tibble: 5 × 2 #&gt; x y #&gt; &lt;int&gt; &lt;int&gt; #&gt; 1 1 5 #&gt; 2 2 4 #&gt; 3 3 3 #&gt; 4 4 2 #&gt; 5 5 1 #&gt; #&gt; $dat02 #&gt; # A tibble: 7 × 2 #&gt; x y #&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 10 5 #&gt; 2 11 5.5 #&gt; 3 12 6 #&gt; 4 13 6.5 #&gt; 5 14 7 #&gt; 6 15 7.5 #&gt; 7 16 8 bind_rows(list01) #&gt; # A tibble: 12 × 2 #&gt; x y #&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 1 5 #&gt; 2 2 4 #&gt; 3 3 3 #&gt; 4 4 2 #&gt; 5 5 1 #&gt; 6 10 5 #&gt; 7 11 5.5 #&gt; 8 12 6 #&gt; 9 13 6.5 #&gt; 10 14 7 #&gt; 11 15 7.5 #&gt; 12 16 8 bind_rows(list01, .id = &quot;source&quot;) #&gt; # A tibble: 12 × 3 #&gt; source x y #&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 dat01 1 5 #&gt; 2 dat01 2 4 #&gt; 3 dat01 3 3 #&gt; 4 dat01 4 2 #&gt; 5 dat01 5 1 #&gt; 6 dat02 10 5 #&gt; 7 dat02 11 5.5 #&gt; 8 dat02 12 6 #&gt; 9 dat02 13 6.5 #&gt; 10 dat02 14 7 #&gt; 11 dat02 15 7.5 #&gt; 12 dat02 16 8 # The extended example below demonstrates how this can be very handy. # column binding bind_cols(dat01, dat03) #&gt; # A tibble: 5 × 3 #&gt; x y z #&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 1 5 0.803 #&gt; 2 2 4 0.972 #&gt; 3 3 3 0.882 #&gt; 4 4 2 0.0940 #&gt; 5 5 1 0.148 # Regular expressions ----------------------------------------------------- names &lt;- c(&quot;Ford, MS&quot;, &quot;Jones, PhD&quot;, &quot;Martin, Phd&quot;, &quot;Huck, MA, MLS&quot;) # pattern: first comma and everything after it str_remove(names, pattern = &quot;, [[:print:]]+&quot;) #&gt; [1] &quot;Ford&quot; &quot;Jones&quot; &quot;Martin&quot; &quot;Huck&quot; # [[:print:]]+ = one or more printable characters # Reshaping --------------------------------------------------------------- # Example of a wide data frame. Notice each person has multiple test scores # that span columns. wide &lt;- data.frame(name=c(&quot;Clay&quot;,&quot;Garrett&quot;,&quot;Addison&quot;), test1=c(78, 93, 90), test2=c(87, 91, 97), test3=c(88, 99, 91)) wide #&gt; name test1 test2 test3 #&gt; 1 Clay 78 87 88 #&gt; 2 Garrett 93 91 99 #&gt; 3 Addison 90 97 91 # Example of a long data frame. This is the same data as above, but in long # format. We have one row per person per test. long &lt;- data.frame(name=rep(c(&quot;Clay&quot;,&quot;Garrett&quot;,&quot;Addison&quot;),each=3), test=rep(1:3, 3), score=c(78, 87, 88, 93, 91, 99, 90, 97, 91)) long #&gt; name test score #&gt; 1 Clay 1 78 #&gt; 2 Clay 2 87 #&gt; 3 Clay 3 88 #&gt; 4 Garrett 1 93 #&gt; 5 Garrett 2 91 #&gt; 6 Garrett 3 99 #&gt; 7 Addison 1 90 #&gt; 8 Addison 2 97 #&gt; 9 Addison 3 91 # mean score per student aggregate(score ~ name, data = long, mean) #&gt; name score #&gt; 1 Addison 92.66667 #&gt; 2 Clay 84.33333 #&gt; 3 Garrett 94.33333 aggregate(score ~ test, data = long, mean) #&gt; test score #&gt; 1 1 87.00000 #&gt; 2 2 91.66667 #&gt; 3 3 92.66667 # line plot of scores over test, grouped by name ggplot(long, aes(x = factor(test), y = score, color = name, group = name)) + geom_point() + geom_line() + xlab(&quot;Test&quot;) #### reshape wide to long pivot_longer(wide, test1:test3, names_to = &quot;test&quot;, values_to = &quot;score&quot;) #&gt; # A tibble: 9 × 3 #&gt; name test score #&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; #&gt; 1 Clay test1 78 #&gt; 2 Clay test2 87 #&gt; 3 Clay test3 88 #&gt; 4 Garrett test1 93 #&gt; 5 Garrett test2 91 #&gt; 6 Garrett test3 99 #&gt; 7 Addison test1 90 #&gt; 8 Addison test2 97 #&gt; 9 Addison test3 91 # Or pivot_longer(wide, -name, names_to = &quot;test&quot;, values_to = &quot;score&quot;) #&gt; # A tibble: 9 × 3 #&gt; name test score #&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; #&gt; 1 Clay test1 78 #&gt; 2 Clay test2 87 #&gt; 3 Clay test3 88 #&gt; 4 Garrett test1 93 #&gt; 5 Garrett test2 91 #&gt; 6 Garrett test3 99 #&gt; 7 Addison test1 90 #&gt; 8 Addison test2 97 #&gt; 9 Addison test3 91 # drop &quot;test&quot; from the test column with names_prefix argument pivot_longer(wide, -name, names_to = &quot;test&quot;, values_to = &quot;score&quot;, names_prefix = &quot;test&quot;) #&gt; # A tibble: 9 × 3 #&gt; name test score #&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; #&gt; 1 Clay 1 78 #&gt; 2 Clay 2 87 #&gt; 3 Clay 3 88 #&gt; 4 Garrett 1 93 #&gt; 5 Garrett 2 91 #&gt; 6 Garrett 3 99 #&gt; 7 Addison 1 90 #&gt; 8 Addison 2 97 #&gt; 9 Addison 3 91 #### reshape long to wide pivot_wider(long, name, names_from = test, values_from = score) #&gt; # A tibble: 3 × 4 #&gt; name `1` `2` `3` #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 Clay 78 87 88 #&gt; 2 Garrett 93 91 99 #&gt; 3 Addison 90 97 91 # using the names_prefix argument lets us prepend text to the column names. pivot_wider(long, name, names_from = test, values_from = score, names_prefix = &quot;test&quot;) #&gt; # A tibble: 3 × 4 #&gt; name test1 test2 test3 #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 Clay 78 87 88 #&gt; 2 Garrett 93 91 99 #&gt; 3 Addison 90 97 91 The verbs of data manipulation select: selecting (or not selecting) columns based on their names (eg: select columns Q1 through Q25) slice: selecting (or not selecting) rows based on their position (eg: select rows 1:10) mutate: add or derive new columns (or variables) based on existing columns (eg: create a new column that expresses measurement in cm based on existing measure in inches) rename: rename variables or change column names (eg: change “GraduationRate100” to “grad100”) filter: selecting rows based on a condition (eg: all rows where gender = Male) arrange: ordering rows based on variable(s) numeric or alphabetical order (eg: sort in descending order of Income) sample: take random samples of data (eg: sample 80% of data to create a “training” set) summarize: condense or aggregate multiple values into single summary values (eg: calculate median income by age group) group_by: convert a tbl into a grouped tbl so that operations are performed “by group”; allows us to summarize data or apply verbs to data by groups (eg, by gender or treatment) the pipe: %&gt;% Use Ctrl + Shift + M (Win) or Cmd + Shift + M (Mac) to enter in RStudio The pipe takes the output of a function and “pipes” into the first argument of the next function. new pipe is |&gt; It should be identical to the old one, except for certain special cases. := (Walrus operator): similar to = , but for cases where you want to use the glue package (i.e., dynamic changes in the variable name in the left-hand side) Writing function in R Tunneling {{ (called curly-curly) allows you to tunnel data-variables through arg-variables (i.e., function arguments) library(tidyverse) get_mean &lt;- function(data, group_var, var_to_mean){ data %&gt;% group_by({{group_var}}) %&gt;% summarize(mean = mean({{var_to_mean}})) } data(&quot;mtcars&quot;) head(mtcars) #&gt; mpg cyl disp hp drat wt qsec vs am gear carb #&gt; Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 #&gt; Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 #&gt; Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 #&gt; Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 #&gt; Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 #&gt; Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 mtcars %&gt;% get_mean(group_var = cyl, var_to_mean = mpg) #&gt; # A tibble: 3 × 2 #&gt; cyl mean #&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 4 26.7 #&gt; 2 6 19.7 #&gt; 3 8 15.1 # to change the resulting variable name dynamically, you can use the glue interpolation (i.e., `{{`) and Walrus operator (`:=`) get_mean &lt;- function(data, group_var, var_to_mean, prefix = &quot;mean_of&quot;){ data %&gt;% group_by({{group_var}}) %&gt;% summarize(&quot;{prefix}_{{var_to_mean}}&quot; := mean({{var_to_mean}})) } mtcars %&gt;% get_mean(group_var = cyl, var_to_mean = mpg) #&gt; # A tibble: 3 × 2 #&gt; cyl mean_of_mpg #&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 4 26.7 #&gt; 2 6 19.7 #&gt; 3 8 15.1 "],["descriptive-stat.html", "Chapter 3 Descriptive Statistics", " Chapter 3 Descriptive Statistics When you have an area of interest that you want to research, a problem that you want to solve, a relationship that you want to investigate, theoretical and empirical processes will help you. Estimand is defined as “a quantity of scientific interest that can be calculated in the population and does not change its value depending on the data collection design used to measure it (i.e., it does not vary with sample size and survey design, or the number of nonrespondents, or follow-up efforts).” (Rubin 1996) Estimands include: population means Population variances correlations factor loading regression coefficients References "],["numerical-measures.html", "3.1 Numerical Measures", " 3.1 Numerical Measures There are differences between a population and a sample Measures of Category Population Sample - What is it? Reality A small fraction of reality (inference) - Characteristics described by Parameters Statistics Central Tendency Mean \\(\\mu = E(Y)\\) \\(\\hat{\\mu} = \\overline{y}\\) Central Tendency Median 50-th percentile \\(y_{(\\frac{n+1}{2})}\\) Dispersion Variance \\(\\sigma^2=var(Y)\\)  \\(=E(Y-\\mu)^2\\) \\(s^2=\\frac{1}{n-1} \\sum_{i = 1}^{n} (y_i-\\overline{y})^2\\)  \\(=\\frac{1}{n-1} \\sum_{i = 1}^{n} (y_i^2-n\\overline{y}^2)\\) Dispersion Coefficient of Variation \\(\\frac{\\sigma}{\\mu}\\) \\(\\frac{s}{\\overline{y}}\\) Dispersion Interquartile Range difference between 25th and 75th percentiles. Robust to outliers Shape Skewness  Standardized 3rd central moment (unitless) \\(g_1=\\frac{\\mu_3}{\\mu_2^{3/2}}\\) \\(\\hat{g_1}=\\frac{m_3}{m_2sqrt(m_2)}\\) Shape Central moments \\(\\mu=E(Y)\\)  \\(\\mu_2 = \\sigma^2=E(Y-\\mu)^2\\)  \\(\\mu_3 = E(Y-\\mu)^3\\)  \\(\\mu_4 = E(Y-\\mu)^4\\) \\(m_2=\\sum_{i=1}^{n}(y_1-\\overline{y})^2/n\\)   \\(m_3=\\sum_{i=1}^{n}(y_1-\\overline{y})^3/n\\) Shape Kurtosis (peakedness and tail thickness)  Standardized 4th central moment \\(g_2^*=\\frac{E(Y-\\mu)^4}{\\sigma^4}\\) \\(\\hat{g_2}=\\frac{m_4}{m_2^2}-3\\) Note: Order Statistics: \\(y_{(1)},y_{(2)},...,y_{(n)}\\) where \\(y_{(1)}&lt;y_{(2)}&lt;...&lt;y_{(n)}\\) Coefficient of variation: standard deviation over mean. This metric is stable, dimensionless statistic for comparison. Symmetric: mean = median, skewness = 0 Skewed right: mean &gt; median, skewness &gt; 0 Skewed left: mean &lt; median, skewness &lt; 0 Central moments: \\(\\mu=E(Y)\\) , \\(\\mu_2 = \\sigma^2=E(Y-\\mu)^2\\) , \\(\\mu_3 = E(Y-\\mu)^3\\), \\(\\mu_4 = E(Y-\\mu)^4\\) For normal distributions, \\(\\mu_3=0\\), so \\(g_1=0\\) \\(\\hat{g_1}\\) is distributed approximately as N(0,6/n) if sample is from a normal population. (valid when n &gt; 150) For large samples, inference on skewness can be based on normal tables with 95% confidence interval for \\(g_1\\) as \\(\\hat{g_1}\\pm1.96\\sqrt{6/n}\\) For small samples, special tables from Snedecor and Cochran 1989, Table A 19(i) or Monte Carlo test Kurtosis &gt; 0 (leptokurtic) heavier tail compared to a normal distribution with the same \\(\\sigma\\) (e.g., t-distribution) Kurtosis &lt; 0 (platykurtic) lighter tail compared to a normal distribution with the same \\(\\sigma\\) For a normal distribution, \\(g_2^*=3\\). Kurtosis is often redefined as: \\(g_2=\\frac{E(Y-\\mu)^4}{\\sigma^4}-3\\) where the 4th central moment is estimated by \\(m_4=\\sum_{i=1}^{n}(y_i-\\overline{y})^4/n\\) the asymptotic sampling distribution for \\(\\hat{g_2}\\) is approximately N(0,24/n) (with n &gt; 1000) large sample on kurtosis uses standard normal tables small sample uses tables by Snedecor and Cochran, 1989, Table A 19(ii) or Geary 1936 data = rnorm(100) library(e1071) skewness(data) #&gt; [1] -0.5355748 kurtosis(data) #&gt; [1] 1.011239 "],["graphical-measures.html", "3.2 Graphical Measures", " 3.2 Graphical Measures 3.2.1 Shape It’s a good habit to label your graph, so others can easily follow. data = rnorm(100) # Histogram hist(data,labels = T,col=&quot;grey&quot;,breaks = 12) # Interactive histogram pacman::p_load(&quot;highcharter&quot;) hchart(data) # Box-and-Whisker plot boxplot(count ~ spray, data = InsectSprays,col = &quot;lightgray&quot;,main=&quot;boxplot&quot;) # Notched Boxplot boxplot(len~supp*dose, data=ToothGrowth, notch=TRUE, col=(c(&quot;gold&quot;,&quot;darkgreen&quot;)), main=&quot;Tooth Growth&quot;, xlab=&quot;Suppliment and Dose&quot;) # If notches differ -&gt; medians differ # Stem-and-Leaf Plots stem(data) # Bagplot - A 2D Boxplot Extension pacman::p_load(aplpack) attach(mtcars) bagplot(wt,mpg, xlab=&quot;Car Weight&quot;, ylab=&quot;Miles Per Gallon&quot;, main=&quot;Bagplot Example&quot;) Others more advanced plots # boxplot.matrix() #library(&quot;sfsmisc&quot;) # boxplot.n() #library(&quot;gplots&quot;) # vioplot() #library(&quot;vioplot&quot;) 3.2.2 Scatterplot # pairs(mtcars) "],["normality-assessment.html", "3.3 Normality Assessment", " 3.3 Normality Assessment Since Normal (Gaussian) distribution has many applications, we typically want/ wish our data or our variable is normal. Hence, we have to assess the normality based on not only Numerical Measures but also Graphical Measures 3.3.1 Graphical Assessment pacman::p_load(&quot;car&quot;) qqnorm(precip, ylab = &quot;Precipitation [in/yr] for 70 US cities&quot;) qqline(precip) The straight line represents the theoretical line for normally distributed data. The dots represent real empirical data that we are checking. If all the dots fall on the straight line, we can be confident that our data follow a normal distribution. If our data wiggle and deviate from the line, we should be concerned with the normality assumption. 3.3.2 Summary Statistics Sometimes it’s hard to tell whether your data follow the normal distribution by just looking at the graph. Hence, we often have to conduct statistical test to aid our decision. Common tests are Methods based on normal probability plot Correlation Coefficient with Normal Probability Plots Shapiro-Wilk Test Methods based on empirical cumulative distribution function Anderson-Darling Test Kolmogorov-Smirnov Test Cramer-von Mises Test Jarque–Bera Test 3.3.2.1 Methods based on normal probability plot 3.3.2.1.1 Correlation Coefficient with Normal Probability Plots (Looney and Gulledge Jr 1985) (Samuel S. Shapiro and Francia 1972) The correlation coefficient between \\(y_{(i)}\\) and \\(m_i^*\\) as given on the normal probability plot: \\[W^*=\\frac{\\sum_{i=1}^{n}(y_{(i)}-\\bar{y})(m_i^*-0)}{(\\sum_{i=1}^{n}(y_{(i)}-\\bar{y})^2\\sum_{i=1}^{n}(m_i^*-0)^2)^.5}\\] where \\(\\bar{m^*}=0\\) Pearson product moment formula for correlation: \\[\\hat{p}=\\frac{\\sum_{i-1}^{n}(y_i-\\bar{y})(x_i-\\bar{x})}{(\\sum_{i=1}^{n}(y_{i}-\\bar{y})^2\\sum_{i=1}^{n}(x_i-\\bar{x})^2)^.5}\\] When the correlation is 1, the plot is exactly linear and normality is assumed. The closer the correlation is to zero, the more confident we are to reject normality Inference on W* needs to be based on special tables (Looney and Gulledge Jr 1985) library(&quot;EnvStats&quot;) gofTest(data,test=&quot;ppcc&quot;)$p.value #Probability Plot Correlation Coefficient #&gt; [1] 0.2241222 3.3.2.1.2 Shapiro-Wilk Test (Samuel Sanford Shapiro and Wilk 1965) \\[W=(\\frac{\\sum_{i=1}^{n}a_i(y_{(i)}-\\bar{y})(m_i^*-0)}{(\\sum_{i=1}^{n}a_i^2(y_{(i)}-\\bar{y})^2\\sum_{i=1}^{n}(m_i^*-0)^2)^.5})^2\\] where \\(a_1,..,a_n\\) are weights computed from the covariance matrix for the order statistics. Researchers typically use this test to assess normality. (n &lt; 2000) Under normality, W is close to 1, just like \\(W^*\\). Notice that the only difference between W and W* is the “weights”. gofTest(data,test=&quot;sw&quot;)$p.value #Shapiro-Wilk is the default. #&gt; [1] 0.1965936 3.3.2.2 Methods based on empirical cumulative distribution function The formula for the empirical cumulative distribution function (CDF) is: \\(F_n(t)\\) = estimate of probability that an observation \\(\\le\\) t = (number of observation \\(\\le\\) t)/n This method requires large sample sizes. However, it can apply to distributions other than the normal (Gaussian) one. # Empirical CDF hand-code plot.ecdf(data,verticals = T, do.points=F) 3.3.2.2.1 Anderson-Darling Test (T. W. Anderson and Darling 1952) The Anderson-Darling statistic: \\[A^2=\\int_{-\\infty}^{\\infty}(F_n(t)=F(t))^2\\frac{dF(t)}{F(t)(1-F(t))}\\] a weight average of squared deviations (it weights small and large values of t more) For the normal distribution, \\(A^2 = - (\\sum_{i=1}^{n}(2i-1)(ln(p_i) +ln(1-p_{n+1-i}))/n-n\\) where \\(p_i=\\Phi(\\frac{y_{(i)}-\\bar{y}}{s})\\), the probability that a standard normal variable is less than \\(\\frac{y_{(i)}-\\bar{y}}{s}\\) Reject normal assumption when \\(A^2\\) is too large Evaluate the null hypothesis that the observations are randomly selected from a normal population based on the critical value provided by (Marsaglia and Marsaglia 2004) and (Stephens 1974) This test can be applied to other distributions: Exponential Logistic Gumbel Extreme-value Weibull: log(Weibull) = Gumbel Gamma Logistic Cauchy von Mises Log-normal (two-parameter) Consult (Stephens 1974) for more detailed transformation and critical values. gofTest(data,test=&quot;ad&quot;)$p.value #Anderson-Darling #&gt; [1] 0.4199391 3.3.2.2.2 Kolmogorov-Smirnov Test Based on the largest absolute difference between empirical and expected cumulative distribution Another deviation of K-S test is Kuiper’s test gofTest(data,test=&quot;ks&quot;)$p.value #Komogorov-Smirnov #&gt; [1] 0.9433557 3.3.2.2.3 Cramer-von Mises Test Based on the average squared discrepancy between the empirical distribution and a given theoretical distribution. Each discrepancy is weighted equally (unlike Anderson-Darling test weights end points more heavily) gofTest(data,test=&quot;cvm&quot;)$p.value #Cramer-von Mises #&gt; [1] 0.5611566 3.3.2.2.4 Jarque–Bera Test (Bera and Jarque 1981) Based on the skewness and kurtosis to test normality. \\(JB = \\frac{n}{6}(S^2+(K-3)^2/4)\\) where S is the sample skewness and K is the sample kurtosis \\(S=\\frac{\\hat{\\mu_3}}{\\hat{\\sigma}^3}=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})^3/n}{(\\sum_{i=1}^{n}(x_i-\\bar{x})^2/n)^\\frac{3}{2}}\\) \\(K=\\frac{\\hat{\\mu_4}}{\\hat{\\sigma}^4}=\\frac{\\sum_{i=1}^{n}(x_i-\\bar{x})^4/n}{(\\sum_{i=1}^{n}(x_i-\\bar{x})^2/n)^2}\\) recall \\(\\hat{\\sigma^2}\\) is the estimate of the second central moment (variance) \\(\\hat{\\mu_3}\\) and \\(\\hat{\\mu_4}\\) are the estimates of third and fourth central moments. If the data comes from a normal distribution, the JB statistic asymptotically has a chi-squared distribution with two degrees of freedom. The null hypothesis is a joint hypothesis of the skewness being zero and the excess kurtosis being zero. References "],["bivariate-statistics.html", "3.4 Bivariate Statistics", " 3.4 Bivariate Statistics Correlation between Two Continuous variables Two Discrete variables Categorical and Continuous Categorical Continuous Categorical Phi coefficient Cramer’s V Tschuprow’s T Freeman’s Theta Epsilon-squared \\[Goodman Kruskal&#39;s Lambda\\] Somers’ D Kendall’s Tau-b Yule’s Q and Y Tetrachoric Correlation Polychoric Correlation Continuous Point-Biserial Correlation Logistic Regression Pearson Correlation Spearman Correlation Questions to keep in mind: Is the relationship linear or non-linear? If the variable is continuous, is it normal and homoskadastic? How big is your dataset? "],["two-continuous.html", "3.5 Two Continuous", " 3.5 Two Continuous n = 100 # (sample size) data = data.frame(A = sample(1:20, replace = TRUE, size = n), B = sample(1:30, replace = TRUE, size = n)) 3.5.1 Pearson Correlation Good with linear relationship library(Hmisc) rcorr(data$A, data$B, type=&quot;pearson&quot;) #&gt; x y #&gt; x 1.00 -0.04 #&gt; y -0.04 1.00 #&gt; #&gt; n= 100 #&gt; #&gt; #&gt; P #&gt; x y #&gt; x 0.6661 #&gt; y 0.6661 3.5.2 Spearman Correlation library(Hmisc) rcorr(data$A, data$B, type=&quot;spearman&quot;) #&gt; x y #&gt; x 1.00 -0.05 #&gt; y -0.05 1.00 #&gt; #&gt; n= 100 #&gt; #&gt; #&gt; P #&gt; x y #&gt; x 0.6067 #&gt; y 0.6067 "],["categorical-and-continuous.html", "3.6 Categorical and Continuous", " 3.6 Categorical and Continuous 3.6.1 Point-Biserial Correlation Similar to the Pearson correlation coefficient, the point-biserial correlation coefficient is between -1 and 1 where: -1 means a perfectly negative correlation between two variables 0 means no correlation between two variables 1 means a perfectly positive correlation between two variables x &lt;- c(0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0) y &lt;- c(12, 14, 17, 17, 11, 22, 23, 11, 19, 8, 12) #calculate point-biserial correlation cor.test(x, y) #&gt; #&gt; Pearson&#39;s product-moment correlation #&gt; #&gt; data: x and y #&gt; t = 0.67064, df = 9, p-value = 0.5193 #&gt; alternative hypothesis: true correlation is not equal to 0 #&gt; 95 percent confidence interval: #&gt; -0.4391885 0.7233704 #&gt; sample estimates: #&gt; cor #&gt; 0.2181635 Alternatively ltm::biserial.cor(y,x, use = c(&quot;all.obs&quot;), level = 2) #&gt; [1] 0.2181635 3.6.2 Logistic Regression See 3.6.2 "],["two-discrete.html", "3.7 Two Discrete", " 3.7 Two Discrete 3.7.1 Distance Metrics Some consider distance is not a correlation metric because it isn’t unit independent (i.e., if you scale the distance, the metrics will change), but it’s still a useful proxy. Distance metrics are more likely to be used for similarity measure. Euclidean Distance Manhattan Distance Chessboard Distance Minkowski Distance Canberra Distance Hamming Distance Cosine Distance Sum of Absolute Distance Sum of Squared Distance Mean-Absolute Error 3.7.2 Statistical Metrics 3.7.2.1 Chi-squared test 3.7.2.1.1 Phi coefficient 2 binary dt = matrix(c(1,4,3,5), nrow = 2) dt #&gt; [,1] [,2] #&gt; [1,] 1 3 #&gt; [2,] 4 5 psych::phi(dt) #&gt; [1] -0.18 3.7.2.1.2 Cramer’s V between nominal categorical variables (no natural order) \\[ \\text{Cramer&#39;s V} = \\sqrt{\\frac{\\chi^2/n}{\\min(c-1,r-1)}} \\] where \\(\\chi^2\\) = Chi-square statistic \\(n\\) = sample size \\(r\\) = # of rows \\(c\\) = # of columns library(&#39;lsr&#39;) n = 100 # (sample size) set.seed(1) data = data.frame(A = sample(1:5, replace = TRUE, size = n), B = sample(1:6, replace = TRUE, size = n)) cramersV(data$A, data$B) #&gt; [1] 0.1944616 Alternatively, ncchisq noncentral Chi-square nchisqadj Adjusted noncentral Chi-square fisher Fisher Z transformation fisheradj bias correction Fisher z transformation DescTools::CramerV(data, conf.level = 0.95,method = &quot;ncchisqadj&quot;) #&gt; Cramer V lwr.ci upr.ci #&gt; 0.3472325 0.3929964 0.4033053 3.7.2.1.3 Tschuprow’s T 2 nominal variables DescTools::TschuprowT(data) #&gt; [1] 0.1100808 3.7.3 Ordinal Association (Rank correlation) Good with non-linear relationship 3.7.3.1 Ordinal and Nominal n = 100 # (sample size) set.seed(1) dt = table(data.frame( A = sample(1:4, replace = TRUE, size = n), # ordinal B = sample(1:3, replace = TRUE, size = n) # nominal )) dt #&gt; B #&gt; A 1 2 3 #&gt; 1 7 11 9 #&gt; 2 11 6 14 #&gt; 3 7 11 4 #&gt; 4 6 4 10 3.7.3.1.1 Freeman’s Theta Ordinal and nominal # this package is not available for R &gt;= 4.0.0 rcompanion::freemanTheta(dt,group = &quot;column&quot; ) # because column is the grouping variable (i.e., nominal) 3.7.3.1.2 Epsilon-squared Ordinal and nominal # this package is not available for R &gt;= 4.0.0 rcompanion::epsilonSquared(dt,group = &quot;column&quot; ) # because column is the grouping variable (i.e., nominal) 3.7.3.2 Two Ordinal n = 100 # (sample size) set.seed(1) dt = table(data.frame( A = sample(1:4, replace = TRUE, size = n), # ordinal B = sample(1:3, replace = TRUE, size = n) # ordinal )) dt #&gt; B #&gt; A 1 2 3 #&gt; 1 7 11 9 #&gt; 2 11 6 14 #&gt; 3 7 11 4 #&gt; 4 6 4 10 3.7.3.2.1 Goodman Kruskal’s Gamma 2 ordinal variables DescTools::GoodmanKruskalGamma(dt, conf.level = 0.95) #&gt; gamma lwr.ci upr.ci #&gt; 0.006781013 -0.229032069 0.242594095 3.7.3.2.2 Somers’ D or Somers’ Delta 2 ordinal variables DescTools::SomersDelta(dt, conf.level = 0.95) #&gt; somers lwr.ci upr.ci #&gt; 0.005115859 -0.172800185 0.183031903 3.7.3.2.3 Kendall’s Tau-b 2 ordinal variables DescTools::KendallTauB(dt, conf.level = 0.95) #&gt; tau_b lwr.ci upr.ci #&gt; 0.004839732 -0.163472443 0.173151906 3.7.3.2.4 Yule’s Q and Y 2 ordinal variables Special version (2 x 2) of the Goodman Kruskal’s Gamma coefficient. Variable 1 Variable 2 a b c d \\[ \\text{Yule&#39;s Q} = \\frac{ad - bc}{ad + bc} \\] We typically use Yule’s Q in practice while Yule’s Y has the following relationship with Q. \\[ \\text{Yule&#39;s Y} = \\frac{\\sqrt{ad} - \\sqrt{bc}}{\\sqrt{ad} + \\sqrt{bc}} \\] \\[ Q = \\frac{2Y}{1 + Y^2} \\] \\[ Y = \\frac{1 = \\sqrt{1-Q^2}}{Q} \\] n = 100 # (sample size) set.seed(1) dt = table(data.frame(A = sample(c(0, 1), replace = TRUE, size = n), B = sample(c(0, 1), replace = TRUE, size = n))) dt #&gt; B #&gt; A 0 1 #&gt; 0 25 24 #&gt; 1 28 23 DescTools::YuleQ(dt) #&gt; [1] -0.07778669 3.7.3.2.5 Tetrachoric Correlation is a special case of Polychoric Correlation when both variables are binary library(psych) n = 100 # (sample size) data = data.frame(A = sample(c(0, 1), replace = TRUE, size = n), B = sample(c(0, 1), replace = TRUE, size = n)) #view table head(data) #&gt; A B #&gt; 1 1 0 #&gt; 2 1 0 #&gt; 3 0 0 #&gt; 4 1 0 #&gt; 5 1 0 #&gt; 6 1 0 table(data) #&gt; B #&gt; A 0 1 #&gt; 0 21 23 #&gt; 1 34 22 #calculate tetrachoric correlation tetrachoric(data) #&gt; Call: tetrachoric(x = data) #&gt; tetrachoric correlation #&gt; A B #&gt; A 1.0 #&gt; B -0.2 1.0 #&gt; #&gt; with tau of #&gt; A B #&gt; -0.15 0.13 3.7.3.2.6 Polychoric Correlation between ordinal categorical variables (natural order). Assumption: Ordinal variable is a discrete representation of a latent normally distributed continuous variable. (Income = low, normal, high). library(polycor) n = 100 # (sample size) data = data.frame(A = sample(1:4, replace = TRUE, size = n), B = sample(1:6, replace = TRUE, size = n)) head(data) #&gt; A B #&gt; 1 1 3 #&gt; 2 1 1 #&gt; 3 3 5 #&gt; 4 2 3 #&gt; 5 3 5 #&gt; 6 4 4 #calculate polychoric correlation between ratings polychor(data$A, data$B) #&gt; [1] 0.01607982 3.7.4 Summary library(tidyverse) data(&quot;mtcars&quot;) df = mtcars df_factor = df %&gt;% mutate(cyl = factor(cyl), vs = factor(vs), am = factor(am), gear = factor(gear), carb = factor(carb)) # summary(df) str(df) #&gt; &#39;data.frame&#39;: 32 obs. of 11 variables: #&gt; $ mpg : num 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #&gt; $ cyl : num 6 6 4 6 8 6 8 4 4 6 ... #&gt; $ disp: num 160 160 108 258 360 ... #&gt; $ hp : num 110 110 93 110 175 105 245 62 95 123 ... #&gt; $ drat: num 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #&gt; $ wt : num 2.62 2.88 2.32 3.21 3.44 ... #&gt; $ qsec: num 16.5 17 18.6 19.4 17 ... #&gt; $ vs : num 0 0 1 1 0 1 0 1 1 1 ... #&gt; $ am : num 1 1 1 0 0 0 0 0 0 0 ... #&gt; $ gear: num 4 4 4 3 3 3 3 4 4 4 ... #&gt; $ carb: num 4 4 1 1 2 1 4 2 2 4 ... str(df_factor) #&gt; &#39;data.frame&#39;: 32 obs. of 11 variables: #&gt; $ mpg : num 21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #&gt; $ cyl : Factor w/ 3 levels &quot;4&quot;,&quot;6&quot;,&quot;8&quot;: 2 2 1 2 3 2 3 1 1 2 ... #&gt; $ disp: num 160 160 108 258 360 ... #&gt; $ hp : num 110 110 93 110 175 105 245 62 95 123 ... #&gt; $ drat: num 3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #&gt; $ wt : num 2.62 2.88 2.32 3.21 3.44 ... #&gt; $ qsec: num 16.5 17 18.6 19.4 17 ... #&gt; $ vs : Factor w/ 2 levels &quot;0&quot;,&quot;1&quot;: 1 1 2 2 1 2 1 2 2 2 ... #&gt; $ am : Factor w/ 2 levels &quot;0&quot;,&quot;1&quot;: 2 2 2 1 1 1 1 1 1 1 ... #&gt; $ gear: Factor w/ 3 levels &quot;3&quot;,&quot;4&quot;,&quot;5&quot;: 2 2 2 1 1 1 1 2 2 2 ... #&gt; $ carb: Factor w/ 6 levels &quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,..: 4 4 1 1 2 1 4 2 2 4 ... Get the correlation table for continuous variables only cor(df) #&gt; mpg cyl disp hp drat wt #&gt; mpg 1.0000000 -0.8521620 -0.8475514 -0.7761684 0.68117191 -0.8676594 #&gt; cyl -0.8521620 1.0000000 0.9020329 0.8324475 -0.69993811 0.7824958 #&gt; disp -0.8475514 0.9020329 1.0000000 0.7909486 -0.71021393 0.8879799 #&gt; hp -0.7761684 0.8324475 0.7909486 1.0000000 -0.44875912 0.6587479 #&gt; drat 0.6811719 -0.6999381 -0.7102139 -0.4487591 1.00000000 -0.7124406 #&gt; wt -0.8676594 0.7824958 0.8879799 0.6587479 -0.71244065 1.0000000 #&gt; qsec 0.4186840 -0.5912421 -0.4336979 -0.7082234 0.09120476 -0.1747159 #&gt; vs 0.6640389 -0.8108118 -0.7104159 -0.7230967 0.44027846 -0.5549157 #&gt; am 0.5998324 -0.5226070 -0.5912270 -0.2432043 0.71271113 -0.6924953 #&gt; gear 0.4802848 -0.4926866 -0.5555692 -0.1257043 0.69961013 -0.5832870 #&gt; carb -0.5509251 0.5269883 0.3949769 0.7498125 -0.09078980 0.4276059 #&gt; qsec vs am gear carb #&gt; mpg 0.41868403 0.6640389 0.59983243 0.4802848 -0.55092507 #&gt; cyl -0.59124207 -0.8108118 -0.52260705 -0.4926866 0.52698829 #&gt; disp -0.43369788 -0.7104159 -0.59122704 -0.5555692 0.39497686 #&gt; hp -0.70822339 -0.7230967 -0.24320426 -0.1257043 0.74981247 #&gt; drat 0.09120476 0.4402785 0.71271113 0.6996101 -0.09078980 #&gt; wt -0.17471588 -0.5549157 -0.69249526 -0.5832870 0.42760594 #&gt; qsec 1.00000000 0.7445354 -0.22986086 -0.2126822 -0.65624923 #&gt; vs 0.74453544 1.0000000 0.16834512 0.2060233 -0.56960714 #&gt; am -0.22986086 0.1683451 1.00000000 0.7940588 0.05753435 #&gt; gear -0.21268223 0.2060233 0.79405876 1.0000000 0.27407284 #&gt; carb -0.65624923 -0.5696071 0.05753435 0.2740728 1.00000000 # only complete obs # cor(df, use = &quot;complete.obs&quot;) Alternatively, you can also have the Hmisc::rcorr(as.matrix(df), type = &quot;pearson&quot;) #&gt; mpg cyl disp hp drat wt qsec vs am gear carb #&gt; mpg 1.00 -0.85 -0.85 -0.78 0.68 -0.87 0.42 0.66 0.60 0.48 -0.55 #&gt; cyl -0.85 1.00 0.90 0.83 -0.70 0.78 -0.59 -0.81 -0.52 -0.49 0.53 #&gt; disp -0.85 0.90 1.00 0.79 -0.71 0.89 -0.43 -0.71 -0.59 -0.56 0.39 #&gt; hp -0.78 0.83 0.79 1.00 -0.45 0.66 -0.71 -0.72 -0.24 -0.13 0.75 #&gt; drat 0.68 -0.70 -0.71 -0.45 1.00 -0.71 0.09 0.44 0.71 0.70 -0.09 #&gt; wt -0.87 0.78 0.89 0.66 -0.71 1.00 -0.17 -0.55 -0.69 -0.58 0.43 #&gt; qsec 0.42 -0.59 -0.43 -0.71 0.09 -0.17 1.00 0.74 -0.23 -0.21 -0.66 #&gt; vs 0.66 -0.81 -0.71 -0.72 0.44 -0.55 0.74 1.00 0.17 0.21 -0.57 #&gt; am 0.60 -0.52 -0.59 -0.24 0.71 -0.69 -0.23 0.17 1.00 0.79 0.06 #&gt; gear 0.48 -0.49 -0.56 -0.13 0.70 -0.58 -0.21 0.21 0.79 1.00 0.27 #&gt; carb -0.55 0.53 0.39 0.75 -0.09 0.43 -0.66 -0.57 0.06 0.27 1.00 #&gt; #&gt; n= 32 #&gt; #&gt; #&gt; P #&gt; mpg cyl disp hp drat wt qsec vs am gear #&gt; mpg 0.0000 0.0000 0.0000 0.0000 0.0000 0.0171 0.0000 0.0003 0.0054 #&gt; cyl 0.0000 0.0000 0.0000 0.0000 0.0000 0.0004 0.0000 0.0022 0.0042 #&gt; disp 0.0000 0.0000 0.0000 0.0000 0.0000 0.0131 0.0000 0.0004 0.0010 #&gt; hp 0.0000 0.0000 0.0000 0.0100 0.0000 0.0000 0.0000 0.1798 0.4930 #&gt; drat 0.0000 0.0000 0.0000 0.0100 0.0000 0.6196 0.0117 0.0000 0.0000 #&gt; wt 0.0000 0.0000 0.0000 0.0000 0.0000 0.3389 0.0010 0.0000 0.0005 #&gt; qsec 0.0171 0.0004 0.0131 0.0000 0.6196 0.3389 0.0000 0.2057 0.2425 #&gt; vs 0.0000 0.0000 0.0000 0.0000 0.0117 0.0010 0.0000 0.3570 0.2579 #&gt; am 0.0003 0.0022 0.0004 0.1798 0.0000 0.0000 0.2057 0.3570 0.0000 #&gt; gear 0.0054 0.0042 0.0010 0.4930 0.0000 0.0005 0.2425 0.2579 0.0000 #&gt; carb 0.0011 0.0019 0.0253 0.0000 0.6212 0.0146 0.0000 0.0007 0.7545 0.1290 #&gt; carb #&gt; mpg 0.0011 #&gt; cyl 0.0019 #&gt; disp 0.0253 #&gt; hp 0.0000 #&gt; drat 0.6212 #&gt; wt 0.0146 #&gt; qsec 0.0000 #&gt; vs 0.0007 #&gt; am 0.7545 #&gt; gear 0.1290 #&gt; carb modelsummary::datasummary_correlation(df) mpg cyl disp hp drat wt qsec vs am gear carb mpg 1 . . . . . . . . . . cyl −.85 1 . . . . . . . . . disp −.85 .90 1 . . . . . . . . hp −.78 .83 .79 1 . . . . . . . drat .68 −.70 −.71 −.45 1 . . . . . . wt −.87 .78 .89 .66 −.71 1 . . . . . qsec .42 −.59 −.43 −.71 .09 −.17 1 . . . . vs .66 −.81 −.71 −.72 .44 −.55 .74 1 . . . am .60 −.52 −.59 −.24 .71 −.69 −.23 .17 1 . . gear .48 −.49 −.56 −.13 .70 −.58 −.21 .21 .79 1 . carb −.55 .53 .39 .75 −.09 .43 −.66 −.57 .06 .27 1 ggcorrplot::ggcorrplot(cor(df)) Different comparison between different correlation between different types of variables (i.e., continuous vs. categorical) can be problematic. Moreover, the problem of detecting non-linear vs. linear relationship/correlatiton is another one. Hence, a solution is that using mutual information from information theory (i.e., knowing one variable can reduce uncertainty about the other). To implement mutual information, we have the following approximations \\[ \\downarrow \\text{prediction error} \\approx \\downarrow \\text{uncertainty} \\approx \\downarrow \\text{association strength} \\] More specificlly, following the X2Y metric, we have the following steps: Predict \\(y\\) without \\(x\\) (i.e., baseline model) Averge of \\(y\\) when \\(y\\) is continuous Most frequent value when \\(y\\) is categorical Predict \\(y\\) with \\(x\\) (e.g., linear, random forest, etc.) Calculate the prediction error difference between 1 and 2 To have a comprehensive table that could handle continuous vs. continuous categorical vs. continuous continuous vs. categorical categorical vs. categorical the suggested model would be Classification and Regression Trees (CART). But we can certainly use other models as well. The downfall of this method is that you might suffer Symmetry: \\((x,y) \\neq (y,x)\\) Comparability : Different pair of comparison might use different metrics (e.g., misclassification error vs. MAE) library(ppsr) # ppsr::score_df(iris) # if you want a dataframe ppsr::score_matrix(iris, do_parallel = TRUE, n_cores = parallel::detectCores()/2 ) # if you want a similar correlation matrix #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species #&gt; Sepal.Length 1.00000000 0.04632352 0.5491398 0.4127668 0.4075487 #&gt; Sepal.Width 0.06790301 1.00000000 0.2376991 0.2174659 0.2012876 #&gt; Petal.Length 0.61608360 0.24263851 1.0000000 0.7917512 0.7904907 #&gt; Petal.Width 0.48735314 0.20124105 0.7437845 1.0000000 0.7561113 #&gt; Species 0.55918638 0.31344008 0.9167580 0.9398532 1.0000000 ppsr::score_matrix(df, do_parallel = TRUE, n_cores = parallel::detectCores()/2 ) #&gt; mpg cyl disp hp drat wt #&gt; mpg 1.0000000 0.32362397 0.25436628 0.210509478 0.20883649 0.24609235 #&gt; cyl 0.3861810 1.00000000 0.57917897 0.537257954 0.33458867 0.38789293 #&gt; disp 0.3141056 0.54883158 1.00000000 0.485122916 0.35317905 0.23669306 #&gt; hp 0.2311418 0.37853515 0.35542647 1.000000000 0.24544714 0.12721154 #&gt; drat 0.1646116 0.19540490 0.38730966 0.165537791 1.00000000 0.35076928 #&gt; wt 0.2075760 0.11113261 0.20447239 0.155585827 0.12978458 1.00000000 #&gt; qsec 0.1521642 0.10498746 0.07192679 0.134441221 0.08171630 0.05880165 #&gt; vs 0.2000000 0.02514286 0.02514286 0.025142857 0.06862112 0.02514286 #&gt; am 0.0615873 0.12825397 0.24409373 0.004444444 0.30608113 0.17742706 #&gt; gear 0.1785968 0.43293014 0.43554416 0.154438566 0.54542788 0.31526071 #&gt; carb 0.3472565 0.30798148 0.21228704 0.151523221 0.01103355 0.15957673 #&gt; qsec vs am gear carb #&gt; mpg 0.11030342 0.17957228 0.13297202 0.1752449 0.25426760 #&gt; cyl 0.32753721 0.39827893 0.13263224 0.2877488 0.20925329 #&gt; disp 0.31714642 0.35324790 0.23897094 0.4231630 0.15461337 #&gt; hp 0.33941571 0.37794795 0.03821570 0.2159412 0.24105326 #&gt; drat 0.16134068 0.17783324 0.30379298 0.4475122 0.03137800 #&gt; wt 0.09367580 0.12214824 0.24118900 0.1590473 0.14181111 #&gt; qsec 1.00000000 0.24973489 0.02334953 0.0000000 0.07539415 #&gt; vs 0.40000000 1.00000000 0.10000000 0.1251429 0.20000000 #&gt; am 0.15936508 0.11250000 1.00000000 0.3972789 0.00000000 #&gt; gear 0.04791667 0.08012053 0.30341155 1.0000000 0.01486068 #&gt; carb 0.21944241 0.25373093 0.00000000 0.0000000 1.00000000 3.7.5 Visualization corrplot::corrplot(cor(df)) Alternatively, PerformanceAnalytics::chart.Correlation(df, histogram = T, pch =19) heatmap(as.matrix(df)) More general form, ppsr::visualize_pps(df = iris, do_parallel = TRUE, n_cores = parallel::detectCores()/2 ) ppsr::visualize_correlations( df = iris ) Both heatmap and correlation at the same time ppsr::visualize_both( df = iris, do_parallel = TRUE, n_cores = parallel::detectCores() / 2 ) More elaboration with ggplot2 ppsr::visualize_pps(df = iris, color_value_high = &#39;red&#39;, color_value_low = &#39;yellow&#39;, color_text = &#39;black&#39;) + ggplot2::theme_classic() + ggplot2::theme(plot.background = ggplot2::element_rect(fill = &quot;lightgrey&quot;)) + ggplot2::theme(title = ggplot2::element_text(size = 15)) + ggplot2::labs(title = &#39;Correlation aand Heatmap&#39;, subtitle = &#39;Subtitle&#39;, caption = &#39;Caption&#39;, x = &#39;More info&#39;) "],["basic-statistical-inference.html", "Chapter 4 Basic Statistical Inference", " Chapter 4 Basic Statistical Inference One Sample Inference Two Sample Inference Categorical Data Analysis Divergence Metrics and Test for Comparing Distributions Make inferences (an interpretation) about the true parameter value \\(\\beta\\) based on our estimator/estimate Test whether our underlying assumptions (about the true population parameters, random variables, or model specification) hold true. Testing does not Confirm with 100% a hypothesis is true Confirm with 100% a hypothesis is false Tell you how to interpret the estimate value (Economic vs. Practical vs. Statistical Significance) Hypothesis: Translate an objective in better understanding the results in terms of specifying a value (or sets of values) in which our population parameters should/should not lie. Null hypothesis (\\(H_0\\)): A statement about the population parameter that we take to be true in which we would need the data to provide substantial evidence that against it. Can be either a single value (ex: \\(H_0: \\beta=0\\)) or a set of values (ex: \\(H_0: \\beta_1 \\ge 0\\)) Will generally be the value you would not like the population parameter to be (subjective) \\(H_0: \\beta_1=0\\) means you would like to see a non-zero coefficient \\(H_0: \\beta_1 \\ge 0\\) means you would like to see a negative effect “Test of Significance” refers to the two-sided test: \\(H_0: \\beta_j=0\\) Alternative hypothesis (\\(H_a\\) or \\(H_1\\)) (Research Hypothesis): All other possible values that the population parameter may be if the null hypothesis does not hold. Type I Error Error made when \\(H_0\\) is rejected when, in fact, \\(H_0\\) is true. The probability of committing a Type I error is \\(\\alpha\\) (known as level of significance of the test) Type I error (\\(\\alpha\\)): probability of rejecting \\(H_0\\) when it is true. Legal analogy: In U.S. law, a defendant is presumed to be “innocent until proven guilty”. If the null hypothesis is that a person is innocent, the Type I error is the probability that you conclude the person is guilty when he is innocent. Type II Error Type II error level (\\(\\beta\\)): probability that you fail to reject the null hypothesis when it is false. In the legal analogy, this is the probability that you fail to find the person guilty when he or she is guilty. Error made when \\(H_0\\) is not rejected when, in fact, \\(H_1\\) is true The probability of committing a Type II error is \\(\\beta\\) (known as the power of the test) Random sample of size n: A collection of n independent random variables taken from the distribution X, each with the same distribution as X. Sample mean \\[ \\bar{X}= (\\sum_{i=1}^{n}X_i)/n \\] Sample Median \\(\\tilde{x}\\) = the middle observation in a sample of observation order from smallest to largest (or vice versa). If n is odd, \\(\\tilde{x}\\) is the middle observation, If n is even, \\(\\tilde{x}\\) is the average of the two middle observations. Sample variance \\[ S^2 = \\frac{\\sum_{i=1}^{n}(X_i = \\bar{X})^2}{n-1}= \\frac{n\\sum_{i=1}^{n}X_i^2 -(\\sum_{i=1}^{n}X_i)^2}{n(n-1)} \\] Sample standard deviation \\[ S = \\sqrt{S^2} \\] Sample proportions \\[ \\hat{p} = \\frac{X}{n} = \\frac{\\text{number in the sample with trait}}{\\text{sample size}} \\] \\[ \\widehat{p_1-p_2} = \\hat{p_1}-\\hat{p_2} = \\frac{X_1}{n_1} - \\frac{X_2}{n_2} = \\frac{n_2X_1 = n_1X_2}{n_1n_2} \\] Estimators Point Estimator \\(\\hat{\\theta}\\) is a statistic used to approximate a population parameter \\(\\theta\\) Point estimate The numerical value assumed by \\(\\hat{\\theta}\\) when evaluated for a given sample Unbiased estimator If \\(E(\\hat{\\theta}) = \\theta\\), then \\(\\hat{\\theta}\\) is an unbiased estimator for \\(\\theta\\) \\(\\bar{X}\\) is an unbiased estimator for \\(\\mu\\) \\(S^2\\) is an unbiased estimator for \\(\\sigma^2\\) \\(\\hat{p}\\) is an unbiased estimator for p \\(\\widehat{p_1-P_2}\\) is an unbiased estimator for \\(p_1- p_2\\) \\(\\bar{X_1} - \\bar{X_2}\\) is an unbiased estimator for \\(\\mu_1 - \\mu_2\\) Note: \\(S\\) is a biased estimator for \\(\\sigma\\) Distribution of the sample mean If \\(\\bar{X}\\) is the sample mean based on a random sample of size n drawn from a normal distribution X with mean \\(\\mu\\) and standard deviation \\(\\sigma\\), the \\(\\bar{X}\\) is normally distributed, with mean \\(\\mu_{\\bar{X}} = \\mu\\) and variance \\(\\sigma_{\\bar{X}}^2 = Var(\\bar{X}) = \\frac{\\sigma^2}{n}\\). Then the standard error of the mean is: \\(\\sigma_{\\bar{X}}= \\frac{\\sigma}{\\sqrt{n}}\\) "],["one-sample-inference.html", "4.1 One Sample Inference", " 4.1 One Sample Inference \\(Y_i \\sim i.i.d. N(\\mu, \\sigma^2)\\) i.i.d. standards for “independent and identically distributed” Hence, we have the following model: \\(Y_i=\\mu +\\epsilon_i\\) where \\(\\epsilon_i \\sim^{iid} N(0,\\sigma^2)\\) \\(E(Y_i)=\\mu\\) \\(Var(Y_i)=\\sigma^2\\) \\(\\bar{y} \\sim N(\\mu,\\sigma^2/n)\\) 4.1.1 The Mean When \\(\\sigma^2\\) is estimated by \\(s^2\\), then \\[ \\frac{\\bar{y}-\\mu}{s/\\sqrt{n}} \\sim t_{n-1} \\] Then, a \\(100(1-\\alpha) \\%\\) confidence interval for \\(\\mu\\) is obtained from: \\[ 1 - \\alpha = P(-t_{\\alpha/2;n-1} \\le \\frac{\\bar{y}-\\mu}{s/\\sqrt{n}} \\le t_{\\alpha/2;n-1}) \\\\ = P(\\bar{y} - (t_{\\alpha/2;n-1})s/\\sqrt{n} \\le \\mu \\le \\bar{y} + (t_{\\alpha/2;n-1})s/\\sqrt{n}) \\] And the interval is \\[ \\bar{y} \\pm (t_{\\alpha/2;n-1})s/\\sqrt{n} \\] and \\(s/\\sqrt{n}\\) is the standard error of \\(\\bar{y}\\) If the experiment were repeated many times, \\(100(1-\\alpha) \\%\\) of these intervals would contain \\(\\mu\\) Confidence Interval \\(100(1-\\alpha)%\\) Sample Sizes Confidence \\(\\alpha\\), Error d Hypothesis Testing Test Statistic When \\(\\sigma^2\\) is known, X is normal (or \\(n \\ge 25\\)) \\(\\bar{X} \\pm z_{\\alpha/2}\\frac{\\sigma}{\\sqrt{n}}\\) \\(n \\approx \\frac{z_{\\alpha/2}^2 \\sigma^2}{d^2}\\) \\(z = \\frac{\\bar{X}-\\mu_0}{\\sigma/\\sqrt{n}}\\) When \\(\\sigma^2\\) is unknown, X is normal (or \\(n \\ge 25\\)) \\(\\bar{X} \\pm t_{\\alpha/2}\\frac{s}{\\sqrt{n}}\\) \\(n \\approx \\frac{z_{\\alpha/2}^2 s^2}{d^2}\\) \\(t = \\frac{\\bar{X}-\\mu_0}{s/\\sqrt{n}}\\) 4.1.1.1 For Difference of Means (\\(\\mu_1-\\mu_2\\)), Independent Samples \\(100(1-\\alpha)%\\) Confidence Interval Hypothesis Testing Test Statistic When \\(\\sigma^2\\) is known \\(\\bar{X}_1 - \\bar{X}_2 \\pm z_{\\alpha/2}\\sqrt{\\frac{\\sigma^2_1}{n_1}+\\frac{\\sigma^2_2}{n_2}}\\) \\(z= \\frac{(\\bar{X}_1-\\bar{X}_2)-(\\mu_1-\\mu_2)_0}{\\sqrt{\\frac{\\sigma^2_1}{n_1}+\\frac{\\sigma^2_2}{n_2}}}\\) When \\(\\sigma^2\\) is unknown, Variances Assumed EQUAL \\(\\bar{X}_1 - \\bar{X}_2 \\pm t_{\\alpha/2}\\sqrt{s^2_p(\\frac{1}{n_1}+\\frac{1}{n_2})}\\) \\(t = \\frac{(\\bar{X}_1-\\bar{X}_2)-(\\mu_1-\\mu_2)_0}{\\sqrt{s^2_p(\\frac{1}{n_1}+\\frac{1}{n_2})}}\\) Pooled Variance: \\(s_p^2 = \\frac{(n_1 -1)s^2_1 - (n_2-1)s^2_2}{n_1 + n_2 -2}\\) Degrees of Freedom: \\(\\gamma = n_1 + n_2 -2\\) When \\(\\sigma^2\\) is unknown, Variances Assumed UNEQUAL \\(\\bar{X}_1 - \\bar{X}_2 \\pm t_{\\alpha/2}\\sqrt{(\\frac{s^2_1}{n_1}+\\frac{s^2_2}{n_2})}\\) \\(t = \\frac{(\\bar{X}_1-\\bar{X}_2)-(\\mu_1-\\mu_2)_0}{\\sqrt{(\\frac{s^2_1}{n_1}+\\frac{s^2_2}{n_2})}}\\) Degrees of Freedom: \\(\\gamma = \\frac{(\\frac{s_1^2}{n_1}+\\frac{s^2_2}{n_2})^2}{\\frac{(\\frac{s_1^2}{n_1})^2}{n_1-1}+\\frac{(\\frac{s_2^2}{n_2})^2}{n_2-1}}\\) 4.1.1.2 For Difference of Means (\\(\\mu_1 - \\mu_2\\)), Paired Samples (D = X-Y) \\(100(1-\\alpha)%\\) Confidence Interval \\[ \\bar{D} \\pm t_{\\alpha/2}\\frac{s_d}{\\sqrt{n}} \\] Hypothesis Testing Test Statistic \\[ t = \\frac{\\bar{D}-D_0}{s_d / \\sqrt{n}} \\] 4.1.1.3 Difference of Two Proprotions Mean \\[ \\hat{p_1}-\\hat{p_2} \\] Variance \\[ \\frac{p_1(1-p_1)}{n_1} + \\frac{p_2(1-p_2)}{n_2} \\] \\(100(1-\\alpha)%\\) Confidence Interval \\[ \\hat{p_1}-\\hat{p_2} + z_{\\alpha/2}\\sqrt{\\frac{p_1(1-p_1)}{n_1} + \\frac{p_2(1-p_2)}{n_2}} \\] Sample Sizes, Confidence \\(\\alpha\\), Error d (Prior Estimate fo \\(\\hat{p_1},\\hat{p_2}\\)) \\[ n \\approx \\frac{z_{\\alpha/2}^2[p_1(1-p_1)+p_2(1-p_2)]}{d^2} \\] (No Prior Estimates for \\(\\hat{p}\\)) \\[ n \\approx \\frac{z_{\\alpha/2}^2}{2d^2} \\] Hypothesis Testing - Test Statistics Null Value \\((p_1 - p_2) \\neq 0\\) \\[ z = \\frac{(\\hat{p_1} - \\hat{p_2})-(p_1 - p_2)_0}{\\sqrt{\\frac{p_1(1-p_1)}{n_1} + \\frac{p_2(1-p_2)}{n_2}}} \\] Null Value \\((p_1 - p_2)_0 = 0\\) \\[ z = \\frac{\\hat{p_1} - \\hat{p_2}}{\\sqrt{\\hat{p}(1-\\hat{p})(\\frac{1}{n_1}+\\frac{1}{n_2})}} \\] where \\[ \\hat{p}= \\frac{x_1 + x_2}{n_1 + n_2} = \\frac{n_1 \\hat{p_1} + n_2 \\hat{p_2}}{n_1 + n_2} \\] 4.1.2 Single Variance \\[ 1 - \\alpha = P( \\chi_{1-\\alpha/2;n-1}^2) \\le (n-1)s^2/\\sigma^2 \\le \\chi_{\\alpha/2;n-1}^2) \\\\ = P(\\frac{(n-1)s^2}{\\chi_{\\alpha/2}^2} \\le \\sigma^2 \\le \\frac{(n-1)s^2}{\\chi_{1-\\alpha/2}^2}) \\] and a \\(100(1-\\alpha) \\%\\) confidence interval for \\(\\sigma^2\\) is: \\[ (\\frac{(n-1)s^2}{\\chi_{\\alpha/2;n-1}^2},\\frac{(n-1)s^2}{\\chi_{1-\\alpha/2;n-1}^2}) \\] Confidence limits for \\(\\sigma^2\\) are obtained by computing the positive square roots of these limits Equivalently, \\(100(1-\\alpha)%\\) Confidence Interval \\[ L_1 = \\frac{(n-1)s^2}{\\chi^2_{\\alpha/2}} \\\\ L_1 = \\frac{(n-1)s^2}{\\chi^2_{1-\\alpha/2}} \\] Hypothesis Testing Test Statistic \\[ \\chi^2 = \\frac{(n-1)s^2}{\\sigma^2_0} \\] 4.1.3 Single Proportion (p) Confidence Interval \\(100(1-\\alpha)%\\) Sample Sizes Confidence \\(\\alpha\\), Error d (prior estimate for \\(\\hat{p}\\)) (No prior estimate for \\(\\hat{p}\\)) Hypothesis Testing Test Statistic \\(\\hat{p} \\pm z_{\\alpha/2}\\sqrt{\\frac{\\hat{p}(1-\\hat{p})}{n}}\\) \\(n \\approx \\frac{z_{\\alpha/2}^2 \\hat{p}(1-\\hat{p})}{d^2}\\) \\(n \\approx \\frac{z_{\\alpha/2}^2}{4d^2}\\) \\(z = \\frac{\\hat{p}-p_0}{\\sqrt{\\frac{p_0(1-p_0)}{n}}}\\) 4.1.4 Power Formally, power (for the test of the mean) is given by: \\[ \\pi(\\mu) = 1 - \\beta = P(\\text{test rejects } H_0|\\mu) \\] To evaluate the power, one needs to know the distribution of the test statistic if the null hypothesis is false. For 1-sided z-test where \\(H_0: \\mu \\le \\mu_0 \\\\ H_A: \\mu &gt;0\\) The power is: \\[ \\begin{aligned} \\pi(\\mu) &amp;= P(\\bar{y} &gt; \\mu_0 + z_{\\alpha} \\sigma/\\sqrt{n}|\\mu) \\\\ &amp;= P(Z = \\frac{\\bar{y} - \\mu}{\\sigma / \\sqrt{n}} &gt; z_{\\alpha} + \\frac{\\mu_0 - \\mu}{\\sigma/ \\sqrt{n}}|\\mu) \\\\ &amp;= 1 - \\Phi(z_{\\alpha} + \\frac{(\\mu_0 - \\mu)\\sqrt{n}}{\\sigma}) \\\\ &amp;= \\Phi(-z_{\\alpha}+\\frac{(\\mu -\\mu_0)\\sqrt{n}}{\\sigma}) \\end{aligned} \\] where \\(1-\\Phi(x) = \\Phi(-x)\\) since the normal pdf is symmetric Power is correlated to the difference in \\(\\mu - \\mu_0\\), sample size n, variance \\(\\sigma^2\\), and the \\(\\alpha\\)-level of the test (through \\(z_{\\alpha}\\)) Equivalently, power can be increased by making \\(\\alpha\\) large, \\(\\sigma^2\\) smaller, or n larger. For 2-sided z-test is: \\[ \\pi(\\mu) = \\Phi(-z_{\\alpha/2} + \\frac{(\\mu_0 - \\mu)\\sqrt{n}}{\\sigma}) + \\Phi(-z_{\\alpha/2}+\\frac{(\\mu - \\mu_0)\\sqrt{n}}{\\sigma}) \\] 4.1.5 Sample Size 4.1.5.1 1-sided Z-test Example: to show that the mean response \\(\\mu\\) under the treatment is higher than the mean response \\(\\mu_0\\) without treatment (show that the treatment effect \\(\\delta = \\mu -\\mu_0\\) is large) Because power is an increasing function of \\(\\mu - \\mu_0\\), it is only necessary to find n that makes the power equal to \\(1- \\beta\\) at \\(\\mu = \\mu_0 + \\delta\\) Hence, we have \\[ \\pi(\\mu_0 + \\delta) = \\Phi(-z_{\\alpha} + \\frac{\\delta \\sqrt{n}}{\\sigma}) = 1 - \\beta \\] Since \\(\\Phi (z_{\\beta})= 1-\\beta\\), we have \\[ -z_{\\alpha} + \\frac{\\delta \\sqrt{n}}{\\sigma} = z_{\\beta} \\] Then n is \\[ n = (\\frac{(z_{\\alpha}+z_{\\beta})\\sigma}{\\delta})^2 \\] Then, we need larger samples, when the sample variability is large (\\(\\sigma\\) is large) \\(\\alpha\\) is small (\\(z_{\\alpha}\\) is large) power \\(1-\\beta\\) is large (\\(z_{\\beta}\\) is large) The magnitude of the effect is smaller (\\(\\delta\\) is small) Since we don’t know \\(\\delta\\) and \\(\\sigma\\). We can base \\(\\sigma\\) on previous studies, pilot studies. Or, obtain an estimate of \\(\\sigma\\) by anticipating the range of the observation (without outliers). divide this range by 4 and use the resulting number as an approximate estimate of \\(\\sigma\\). For normal (distribution) data, this is reasonable. 4.1.5.2 2-sided Z-test We want to know the min n, required to guarantee \\(1-\\beta\\) power when the treatment effect \\(\\delta = |\\mu - \\mu_0|\\) is at least greater than 0. Since the power function for the 2-sided is increasing and symmetric in \\(|\\mu - \\mu_0|\\), we only need to find n that makes the power equal to \\(1-\\beta\\) when \\(\\mu = \\mu_0 + \\delta\\) \\[ n = (\\frac{(z_{\\alpha/2} + z_{\\beta}) \\sigma}{\\delta})^2 \\] We could also use the confidence interval apporach. If we reuqire that an \\(\\alpha\\)-level two-cided CI for \\(\\mu\\) be \\[ \\bar{y} \\pm D \\] where \\(D = z_{\\alpha/2}\\sigma/\\sqrt{n}\\) gives \\[ n = (\\frac{z_{\\alpha/2}\\sigma}{D})^2 \\] (round up to the nearest integer) data = rnorm(100) t.test(data, conf.level=0.95) #&gt; #&gt; One Sample t-test #&gt; #&gt; data: data #&gt; t = 0.34812, df = 99, p-value = 0.7285 #&gt; alternative hypothesis: true mean is not equal to 0 #&gt; 95 percent confidence interval: #&gt; -0.1523274 0.2171509 #&gt; sample estimates: #&gt; mean of x #&gt; 0.03241178 \\[ H_0: \\mu \\ge 30 \\\\ H_a: \\mu &lt; 30 \\] t.test(data, mu=30,alternative=&quot;less&quot;) #&gt; #&gt; One Sample t-test #&gt; #&gt; data: data #&gt; t = -321.87, df = 99, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: true mean is less than 30 #&gt; 95 percent confidence interval: #&gt; -Inf 0.1870013 #&gt; sample estimates: #&gt; mean of x #&gt; 0.03241178 4.1.6 Note For t-tests, the sample and power are not as easy as z-test. \\[ \\pi(\\mu) = P(\\frac{\\bar{y}-\\mu_0}{s/\\sqrt{n}}&gt; t_{n-1;\\alpha}|\\mu) \\] when \\(\\mu &gt; \\mu_0\\) (i.e., \\(\\mu - \\mu_0 = \\delta\\)), the random variable \\((\\bar{y} - \\mu_0)/(s/\\sqrt{n})\\) does not have a Student’s t distribution, but rather is distributed as a non-central t-distribution with non-centrality parameter \\(\\delta \\sqrt{n}/\\sigma\\) and d.f. of \\(n-1\\) The power is an increasing function of this non-centrality parameter (note, when \\(\\delta = 0\\) the distribution is usual Student’s t-distribution). To evaluate power, one must consider numerical procedure or use special charts Approximate Sample Size Adjustment for t-test. We use an adjustment to the z-test determination for sample size. Let \\(v = n-1\\), where n is sample size derived based on the z-test power. Then the 2-sided t-test sample size (apporximate) is given: \\[ n^* = \\frac{(t_{v;\\alpha/2}+t_{v;\\beta})^2 \\sigma^2}{\\delta^2} \\] 4.1.7 One-sample Non-parametric Methods lecture.data=c(0.76, 0.82, 0.80, 0.79, 1.06, 0.83, -0.43, -0.34, 3.34, 2.33) 4.1.7.1 Sign Test If we want to test \\(H_0: \\mu_{(0.5)} = 0; H_a: \\mu_{(0.5)} &gt;0\\) where \\(\\mu_{(0.5)}\\) is the population median. We can Count the number of observation (\\(y_i\\)’s) that exceed 0. Denote this number by \\(s_+\\), called the number of plus signs. Let \\(s_- = n - s_+\\), which is the number of minus signs. Reject \\(H_0\\) if \\(s_+\\) is large or equivalently, if \\(s_-\\) is small. To determine how large \\(s_+\\) must be to reject \\(H_0\\) at a given significance level, we need to know the distribution of the corresponding random variable \\(S_+\\) under the null hypothesis, which is a binomial with p = 1/2,w hen the null is true. To work out the null distribution using the binomial formula, we have \\(\\alpha\\)-level test rejects \\(H_0\\) if \\(s_+ \\ge b_{n,\\alpha}\\), where \\(b_{n,\\alpha}\\) is the upper \\(\\alpha\\) critical point of the \\(Bin(n,1/2)\\) distribution. Both \\(S_+\\) and \\(S_-\\) have this same distribution (\\(S = S_+ = S_-\\)). \\[ \\text{p-value} = P(S \\ge s_+) = \\sum_{i = s_+}^{n} {{n}\\choose{i}} (\\frac{1}{2})^n \\] equivalently, \\[ P(S \\le s_-) = \\sum_{i=0}^{s_-}{{n}\\choose{i}} (\\frac{1}{2})^2 \\] For large sample sizes, we could use the normal approximation for the binomial, in which case reject \\(H_0\\) if \\[ s_+ \\ge n/2 + 1/2 + z_{\\alpha}\\sqrt{n/4} \\] For the 2-sided test, we use the tests statistic \\(s_{max} = max(s_+,s_-)\\) or \\(s_{min} = min(s_+, s_-)\\). An \\(\\alpha\\)-level test rejects \\(H_0\\) if the p-value is \\(\\le \\alpha\\), where the p-value is computed from: \\[ p-value = 2 \\sum_{i=s_{max}}^{n} {{n}\\choose{i}} (\\frac{1}{2})^n = s \\sum_{i=0}^{s_{min}} {{n}\\choose{i}} (\\frac{1}{2})^n \\] Equivalently, rejecting \\(H_0\\) if \\(s_{max} \\ge b_{n,\\alpha/2}\\) A large sample normal approximation can be used, where \\[ z = \\frac{s_{max}- n/2 -1/2}{\\sqrt{n/4}} \\] and reject \\(H_0\\) at \\(\\alpha\\) if \\(z \\ge z_{\\alpha/2}\\) However, treatment of 0 is problematic for this test. Solution 1: randomly assign 0 to the positive or negative (2 researchers might get different results). Solution 2: count each 0 as a contribution 1/2 toward \\(s_+\\) and \\(s_-\\) (but then could not apply the binomial distribution) Solution 3: ignore 0 (reduces the power of test due to decreased sample size). binom.test(sum(lecture.data &gt; 0), length(lecture.data)) # alternative = &quot;greater&quot; or alternative = &quot;less&quot; #&gt; #&gt; Exact binomial test #&gt; #&gt; data: sum(lecture.data &gt; 0) and length(lecture.data) #&gt; number of successes = 8, number of trials = 10, p-value = 0.1094 #&gt; alternative hypothesis: true probability of success is not equal to 0.5 #&gt; 95 percent confidence interval: #&gt; 0.4439045 0.9747893 #&gt; sample estimates: #&gt; probability of success #&gt; 0.8 4.1.7.2 Wilcoxon Signed Rank Test Since the Sign Test could not consider the magnitude of each observation from 0, the Wilcoxon Signed Rank Test improves by taking account the ordered magnitudes of the observation, but it will impose the requirement of symmetric to this test (while Sign Test does not) \\[ H_0: \\mu_{0.5} = 0 \\\\ H_a: \\mu_{0.5} &gt; 0 \\] (assume no ties or same observations) The signed rank test procedure: rank order the observation \\(y_i\\) in terms of their absolute values. Let \\(r_i\\) be the rank of \\(y_i\\) in this ordering. Since we assume no ties, the ranks \\(r_i\\) are uniquely determined and are a permutation of the integers 1,2,…,n. Calculate \\(w_+\\), which is the sum of the ranks of the positive values, and \\(w_-\\), which is the sum of the ranks of the negative values. Note that \\(w_+ + w_- = r_1 + r_2 + ... = 1 + 2 + ... + n = n(n+1)/2\\) Reject \\(H_0\\) if \\(w_+\\) is large (or if \\(w_-\\) is small) To know what is large or small with regard to \\(w_+\\) and \\(w_-\\), we need the distribution of \\(W_+\\) and \\(W_-\\) when the null is true. Since these null distributions are identical and symmetric, the p-value is \\(P(W \\ge w_+) = P(W \\le w_-)\\) An \\(\\alpha\\)-level test rejects the null if the p-value is \\(\\le \\alpha\\), or if \\(w_+ \\ge w_{n,\\alpha}\\), where \\(w_{n,\\alpha}\\) is the upper \\(\\alpha\\) critical point of the null distribution of W. This distribution of W has a special table. For large n, the distribution of W is approximately normal. \\[ z = \\frac{w_+ - n(n+1) /4 -1/2}{\\sqrt{n(n+1)(2n+1)/24}} \\] The test rejcets \\(H_0\\) at level \\(\\alpha\\) if \\[ w_+ \\ge n(n+1)/4 +1/2 + z_{\\alpha}\\sqrt{n(n+1)(2n+1)/24} \\approx w_{n,\\alpha} \\] For the 2-sided test, we use \\(w_{max}=max(w_+,w_-)\\) or \\(w_{min}=min(w_+,w_-)\\), with p-value given by: \\[ p-value = 2P(W \\ge w_{max}) = 2P(W \\le w_{min}) \\] Same as Sign Test,we ignore 0. In some cases where some of the \\(|y_i|\\)’s may be tied for the same rank, we simply assign each of the tied ranks the average rank (or “midrank”). Example, if \\(y_1 = -1\\), \\(y_3 = 3\\) and \\(y_3 = -3\\), and \\(y_4 =5\\), then \\(r_1 = 1\\), \\(r_2 = r_3=(2+3)/2 = 2.5\\), \\(r_4 = 4\\) wilcox.test(lecture.data) #does not use normal approximation (using the underlying W distribution) #&gt; #&gt; Wilcoxon signed rank exact test #&gt; #&gt; data: lecture.data #&gt; V = 52, p-value = 0.009766 #&gt; alternative hypothesis: true location is not equal to 0 wilcox.test(lecture.data,exact=F) #uses normal approximation #&gt; #&gt; Wilcoxon signed rank test with continuity correction #&gt; #&gt; data: lecture.data #&gt; V = 52, p-value = 0.01443 #&gt; alternative hypothesis: true location is not equal to 0 "],["two-sample-inference.html", "4.2 Two Sample Inference", " 4.2 Two Sample Inference 4.2.1 Means Suppose we have 2 sets of observations, \\(y_1,..., y_{n_y}\\) \\(x_1,...,x_{n_x}\\) that are random samples from two independent populations with means \\(\\mu_y\\) and \\(\\mu_x\\) and variances \\(\\sigma^2_y\\),\\(\\sigma^2_x\\). Our goal is to compare \\(\\mu_x\\) and \\(\\mu_y\\) or \\(\\sigma^2_y = \\sigma^2_x\\) 4.2.1.1 Large Sample Tests Assume that \\(n_y\\) and \\(n_x\\) are large (\\(\\ge 30\\)). Then, \\[ E(\\bar{y} - \\bar{x}) = \\mu_y - \\mu_x \\\\ Var(\\bar{y} - \\bar{x}) = \\sigma^2_y /n_y + \\sigma^2_x/n_x \\] Then, \\[ Z = \\frac{\\bar{y}-\\bar{x} - (\\mu_y - \\mu_x)}{\\sqrt{\\sigma^2_y /n_y + \\sigma^2_x/n_x}} \\sim N(0,1) \\] (according to Central Limit Theorem). For large samples, we can replace variances by their unbiased estimators (\\(s^2_y,s^2_x\\)), and get the same large sample distribution. An approximate \\(100(1-\\alpha) \\%\\) CI for \\(\\mu_y - \\mu_x\\) is given by: \\[ \\bar{y} - \\bar{x} \\pm z_{\\alpha/2}\\sqrt{s^2_y/n_y + s^2_x/n_x} \\] \\[ H_0: \\mu_y - \\mu_x = \\delta_0 \\\\ H_A: \\mu_y - \\mu_x \\neq \\delta_0 \\] at the \\(\\alpha\\)-level with the statistic: \\[ z = \\frac{\\bar{y}-\\bar{x} - \\delta_0}{\\sqrt{s^2_y /n_y + s^2_x/n_x}} \\] and reject \\(H_0\\) if \\(|z| &gt; z_{\\alpha/2}\\) If \\(\\delta = )\\), it means that we are testing whether two means are equal. 4.2.1.2 Small Sample Tests If the two samples are from normal distribution, iid \\(N(\\mu_y,\\sigma^2_y)\\) and iid \\(N(\\mu_x,\\sigma^2_x)\\) and the two samples are independent, we can do inference based on the t-distribution Then we have 2 cases Equal Variance Unequal Variance 4.2.1.2.1 Equal variance Assumptions iid: so that \\(var(\\bar{y}) = \\sigma^2_y / n_y ; var(\\bar{x}) = \\sigma^2_x / n_x\\) Independence between samples: No observation from one sample can influence any observation from the other sample, to have \\[ \\begin{aligned} var(\\bar{y} - \\bar{x}) &amp;= var(\\bar{y}) + var{\\bar{x}} - 2cov(\\bar{y},\\bar{x}) \\\\ &amp;= var(\\bar{y}) + var{\\bar{x}} \\\\ &amp;= \\sigma^2_y / n_y + \\sigma^2_x / n_x \\end{aligned} \\] Normality: Justifies the use of the t-distribution Let \\(\\sigma^2 = \\sigma^2_y = \\sigma^2_x\\). Then, \\(s^2_y\\) and \\(s^2_x\\) are both unbiased estimators of \\(\\sigma^2\\). We then can pool them. Then the pooled variance estimate is \\[ s^2 = \\frac{(n_y - 1)s^2_y + (n_x - 1)s^2_x}{(n_y-1)+(n_x-1)} \\] has \\(n_y + n_x -2\\) df. Then the test statistic \\[ T = \\frac{\\bar{y}- \\bar{x} -(\\mu_y - \\mu_x)}{s\\sqrt{1/n_y + 1/n_x}} \\sim t_{n_y + n_x -2} \\] \\(100(1 - \\alpha) \\%\\) CI for \\(\\mu_y - \\mu_x\\) is \\[ \\bar{y} - \\bar{x} \\pm (t_{n_y + n_x -2})s\\sqrt{1/n_y + 1/n_x} \\] Hypothesis testing: \\[ H_0: \\mu_y - \\mu_x = \\delta_0 \\\\ H_1: \\mu_y - \\mu_x \\neq \\delta_0 \\] we reject \\(H_0\\) if \\(|t| &gt; t_{n_y + n_x -2;\\alpha/2}\\) 4.2.1.2.2 Unequal Variance Assumptions Two samples are independent 1. Scatter plots 2. Correlation coefficient (if normal) Independence of observation in each sample 1. Test for serial correlation For each sample, homogeneity of variance 1. Scatter plots 2. Formal tests Normality Equality of variances (homogeneity of variance between samples) 1. F-test 2. Barlett test 3. [Modified Levene Test] To compare 2 normal \\(\\sigma^2_y \\neq \\sigma^2_x\\), we use the test statistic: \\[ T = \\frac{\\bar{y}- \\bar{x} -(\\mu_y - \\mu_x)}{\\sqrt{s^2_y/n_y + s^2_x/n_x}} \\] In this case, T does not follow the t-distribution (its distribution depends on the ratio of the unknown variances \\(\\sigma^2_y,\\sigma^2_x\\)). In the case of small sizes, we can can approximate tests by using the Welch-Satterthwaite method (Satterthwaite 1946). We assume T can be approximated by a t-distribution, and adjust the degrees of freedom. Let \\(w_y = s^2_y /n_y\\) and \\(w_x = s^2_x /n_x\\) (the w’s are the square of the respective standard errors) Then, the degrees of freedom are \\[ v = \\frac{(w_y + w_x)^2}{w^2_y / (n_y-1) + w^2_x / (n_x-1)} \\] Since v is usually fractional, we truncate down to the nearest integer. \\(100 (1-\\alpha) \\%\\) CI for \\(\\mu_y - \\mu_x\\) is \\[ \\bar{y} - \\bar{x} \\pm t_{v,\\alpha/2} \\sqrt{s^2_y/n_y + s^2_x /n_x} \\] Reject \\(H_0\\) if \\(|t| &gt; t_{v,\\alpha/2}\\), where \\[ t = \\frac{\\bar{y} - \\bar{x}-\\delta_0}{\\sqrt{s^2_y/n_y + s^2_x /n_x}} \\] 4.2.2 Variances \\[ F_{ndf,ddf}= \\frac{s^2_1}{s^2_2} \\] where \\(s^2_1&gt;s^2_2, ndf = n_1-1,ddf = n_2-1\\) 4.2.2.1 F-test Test \\[ H_0: \\sigma^2_y = \\sigma^2_x \\\\ H_a: \\sigma^2_y \\neq \\sigma^2_x \\] Consider the test statistic, \\[ F= \\frac{s^2_y}{s^2_x} \\] Reject \\(H_0\\) if \\(F&gt;f_{n_y -1,n_x -1,\\alpha/2}\\) or \\(F&lt;f_{n_y -1,n_x -1,1-\\alpha/2}\\) Where \\(F&gt;f_{n_y -1,n_x -1,\\alpha/2}\\) and \\(F&lt;f_{n_y -1,n_x -1,1-\\alpha/2}\\) are the upper and lower \\(\\alpha/2\\) critical points of an F-distribution, with a \\(n_y-1\\) and \\(n_x-1\\) degrees of freedom. Note This test depends heavily on the assumption Normality. In particular, it could give to many significant results when observations come from long-tailed distributions (i.e., positive kurtosis). If we cannot find support for normality, then we can use nonparametric tests such as the [Modified Levene Test] data(iris) irisVe=iris$Petal.Width[iris$Species==&quot;versicolor&quot;] irisVi=iris$Petal.Width[iris$Species==&quot;virginica&quot;] var.test(irisVe,irisVi) #&gt; #&gt; F test to compare two variances #&gt; #&gt; data: irisVe and irisVi #&gt; F = 0.51842, num df = 49, denom df = 49, p-value = 0.02335 #&gt; alternative hypothesis: true ratio of variances is not equal to 1 #&gt; 95 percent confidence interval: #&gt; 0.2941935 0.9135614 #&gt; sample estimates: #&gt; ratio of variances #&gt; 0.5184243 4.2.2.2 Modified Levene Test (Brown-Forsythe Test) considers averages of absolute deviations rather than squared deviations. Hence, less sensitive to long-tailed distributions. This test is still good for normal data For each sample, we consider the absolute deviation of each observation form the median: \\[ d_{y,i} = |y_i - y_{.5}| \\\\ d_{x,i} = |x_i - x_{.5}| \\] Then, \\[ t_L^* = \\frac{\\bar{d}_y-\\bar{d}_x}{s \\sqrt{1/n_y + 1/n_x}} \\] The pooled variance \\(s^2\\) is given by: \\[ s^2 = \\frac{\\sum_i^{n_y}(d_{y,i}-\\bar{d}_y)^2 + \\sum_j^{n_x}(d_{x,i}-\\bar{d}_x)^2}{n_y + n_x -2} \\] If the error terms have constant variance and \\(n_y\\) and \\(n_x\\) are not extremely small, then \\(t_L^* \\sim t_{n_x + n_y -2}\\) We reject the null hypothesis when \\(|t_L^*| &gt; t_{n_y + n_x -2;\\alpha/2}\\) This is just the two-sample t-test applied to the absolute deviations. dVe=abs(irisVe-median(irisVe)) dVi=abs(irisVi-median(irisVi)) t.test(dVe,dVi,var.equal=T) #&gt; #&gt; Two Sample t-test #&gt; #&gt; data: dVe and dVi #&gt; t = -2.5584, df = 98, p-value = 0.01205 #&gt; alternative hypothesis: true difference in means is not equal to 0 #&gt; 95 percent confidence interval: #&gt; -0.12784786 -0.01615214 #&gt; sample estimates: #&gt; mean of x mean of y #&gt; 0.154 0.226 # small samples t-test t.test(irisVe,irisVi,var.equal=F) #&gt; #&gt; Welch Two Sample t-test #&gt; #&gt; data: irisVe and irisVi #&gt; t = -14.625, df = 89.043, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: true difference in means is not equal to 0 #&gt; 95 percent confidence interval: #&gt; -0.7951002 -0.6048998 #&gt; sample estimates: #&gt; mean of x mean of y #&gt; 1.326 2.026 4.2.3 Power Consider \\(\\sigma^2_y = \\sigma^2_x = \\sigma^2\\) Under the assumption of equal variances, we take size samples from both groups (\\(n_y = n_x = n\\)) For 1-sided testing, \\[ H_0: \\mu_y - \\mu_x \\le 0 \\\\ H_a: \\mu_y - \\mu_x &gt; 0 \\] \\(\\alpha\\)-level z-test rejects \\(H_0\\) if \\[ z = \\frac{\\bar{y} - \\bar{x}}{\\sigma \\sqrt{2/n}} &gt; z_{\\alpha} \\] \\[ \\pi(\\mu_y - \\mu_x) = \\Phi(-z_{\\alpha} + \\frac{\\mu_y -\\mu_x}{\\sigma}\\sqrt{n/2}) \\] We need sample size n that gie at least \\(1-\\beta\\) power when \\(\\mu_y - \\mu_x = \\delta\\), where \\(\\delta\\) is the smallest difference that we want to see. Power is given by: \\[ \\Phi(-z_{\\alpha} + \\frac{\\delta}{\\sigma}\\sqrt{n/2}) = 1 - \\beta \\] 4.2.4 Sample Size Then, the sample size is \\[ n = 2(\\frac{\\sigma (z_{\\alpha} + z_{\\beta}}{\\delta})^2 \\] For 2-sided test, replace \\(z_{\\alpha}\\) with \\(z_{\\alpha/2}\\). As with the one-sample case, to perform an exact 2-sample t-test sample size calculation, we must use a non-central t-distribution. A correction that gives the approximate t-test sample size can be obtained by using the z-test n value in the formula: \\[ n^* = 2(\\frac{\\sigma (t_{2n-2;\\alpha} + t_{2n-2;\\beta})}{\\delta})^2 \\] where we use \\(alpha/2\\) for the two-sided test 4.2.5 Matched Pair Designs We have two treatments Subject Treatment A Treatment B Difference 1 \\(y_1\\) \\(x_1\\) \\(d_1 = y_1 - x_1\\) 2 \\(y_2\\) \\(x_2\\) \\(d_2 = y_2 - x_2\\) . . . . n \\(y_n\\) \\(x_n\\) \\(d_n = y_n - x_n\\) we assume \\(y_i \\sim^{iid} N(\\mu_y, \\sigma^2_y)\\) and \\(x_i \\sim^{iid} N(\\mu_x,\\sigma^2_x)\\), but since \\(y_i\\) and \\(x_i\\) are measured on the same subject, they are correlated. Let \\[ \\mu_D = E(y_i - x_i) = \\mu_y -\\mu_x \\\\ \\sigma^2_D = var(y_i - x_i) = Var(y_i) + Var(x_i) -2cov(y_i,x_i) \\] If the matching induces positive correlation, then the variance of the difference of the measurements is reduced as compared to the independent case. This is the point of Matched Pair Designs. Although covariance can be negative, giving a larger variance of the difference than the independent sample case, usually the covariance is positive. This means both \\(y_i\\) and \\(x_i\\) are large for many of the same subjects, and for others, both measurement are small. (we still assume that various subjects respond independently of each other, which is necessary for the iid assumption within groups). Let \\(d_i = y_i - x_i\\), then \\(\\bar{d} = \\bar{y}-\\bar{x}\\) is the sample mean of the \\(d_i\\) \\(s_d^2=\\frac{1}{n-1}\\sum_{i=1}^n (d_i - \\bar{d})^2\\) is the sample variance of the difference Once the data are converted to differences, we are back to One Sample Inference and can use its tests and CIs. 4.2.6 Nonparametric Tests for Two Samples For Matched Pair Designs, we can use the One-sample Non-parametric Methods. Assume that Y and X are random variables with CDF \\(F_y\\) and \\(F_x\\). then, Y is stochastically larger than X for all real number u, \\(P(Y &gt; u) \\ge P(X &gt; u)\\). Equivalently, \\(P(Y \\le u) \\le P(X \\le u)\\), which is \\(F_Y(u) \\le F_X(u)\\), same thing as \\(F_Y &lt; F_X\\) If two distributions are identical, except that one is shifted relative to the other, then each of distribution can be indexed by a location parameter, say \\(\\theta_y\\) and \\(\\theta_x\\). In this case, \\(Y&gt;X\\) if \\(\\theta_y &gt; \\theta_x\\) Consider the hypotheses, \\[ H_0: F_Y = F_X \\\\ H_a: F_Y &lt; F_X \\] where the alternative is an upper one-sided alternative. We can also consider the lower one-sided alternative \\[ H_a: F_Y &gt; F_X \\text{ or} \\\\ H_a: F_Y &lt; F_X \\text{ or } F_Y &gt; F_X \\] In this case, we don’t use \\(H_a: F_Y \\neq F_X\\) as that allows arbitrary differences between the distributions, without requiring one be stochastically larger than the other. If the distributions only differ in terms of their location parameters, we can focus hypothesis tests on the parameters (e.g., \\(H_0: \\theta_y = \\theta_x\\) vs. \\(\\theta_y &gt; \\theta_x\\)) We have 2 equivalent nonparametric tests that consider the hypothesis mentioned above Wilcoxon rank test Mann-Whitney U test 4.2.6.1 Wilcoxon rank test Combine all \\(n= n_y + n_x\\) observations and rank them in ascending order. Sum the ranks of the y’s and x’s separately. Let \\(w_y\\) and \\(w_x\\) be these sums. (\\(w_y + w_x = 1 + 2 + ... + n = n(n+1)/2\\)) Reject \\(H_0\\) if \\(w_y\\) is large (equivalently, \\(w_x\\) is small) Under \\(H_0\\), any arrangement of the y’s and x’s is equally likely to occur, and there are \\((n_y + n_x)!/(n_y! n_x!)\\) possible arrangements. Technically, for each arrangement we can compute the values of \\(w_y\\) and \\(w_x\\), and thus generate the distribution of the statistic under the null hypothesis. This could lead to computationally intensive. wilcox.test(irisVe,irisVi,alternative=&quot;two.sided&quot;,conf.level=0.95, exact=F,correct=T) #&gt; #&gt; Wilcoxon rank sum test with continuity correction #&gt; #&gt; data: irisVe and irisVi #&gt; W = 49, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: true location shift is not equal to 0 4.2.6.2 Mann-Whitney U test The Mann-Whitney test is computed as follows: Compare each \\(y_i\\) wiht each \\(x_i\\). Let \\(u_y\\) be the number of pairs in which \\(y_i &gt; x_i\\) Let \\(u_x\\) be the number of pairs in which \\(y_i &lt; x_i\\). (assume there are no ties). There are \\(n_y n_x\\) such comparisons and \\(u_y + u_x = n_y n_x\\). Reject \\(H_0\\) if \\(u_y\\) is large (or \\(u_x\\) is small) Mann-Whitney U test and Wilcoxon rank test are related: \\[ u_y = w_y - n_y(n_y+1) /2 \\\\ u_x = w_x - n_x(n_x +1)/2 \\] An \\(\\alpha\\)-level test rejects \\(H_0\\) if \\(u_y \\ge u_{n_y,n_x,\\alpha}\\), where \\(u_{n_y,n_x,\\alpha}\\) is the upper \\(\\alpha\\) critical point of the null distribution of the random variable, U. The p-value is defined to be \\(P(Y \\ge u_y) = P(U \\le u_x)\\). One advantage of Mann-Whitney U test is that we can use either \\(u_y\\) or \\(u_x\\) to carry out the test. For large \\(n_y\\) and \\(n_x\\), the null distribution of U can be well approximated by a normal distribution with mean \\(E(U) = n_y n_x /2\\) and variance \\(var(U) = n_y n_x (n+1)/12\\). A large sample z-test can be based on the statistic: \\[ z = \\frac{u_y - n_y n_x /2 -1/2}{\\sqrt{n_y n_x (n+1)/12}} \\] The test rejects \\(H_0\\) at level \\(\\alpha\\) if \\(z \\ge z_{\\alpha}\\) or if \\(u_y \\ge u_{n_y,n_x,\\alpha}\\) where \\[ u_{n_y, n_x, \\alpha} \\approx n_y n_x /2 + 1/2 + z_{\\alpha}\\sqrt{n_y n_x (n+1)/12} \\] For the 2-sided test, we use the test statistic \\(u_{max} = max(u_y,u_x)\\) and \\(u_{min} = min(u_y, u_x)\\) and p-value is given by \\[ p-value = 2P(U \\ge u_{max}) = 2P(U \\le u_{min}) \\] Since we assume there are no ties (when \\(y_i = x_j\\)), we count 1/2 towards both \\(u_y\\) and \\(u_x\\). Even though the sampling distribution is not the same, but large sample approximation is still reasonable, References "],["categorical-data-analysis.html", "4.3 Categorical Data Analysis", " 4.3 Categorical Data Analysis Categorical Data Analysis when we have categorical outcomes Nominal variables: no logical ordering (e.g., sex) Ordinal variables: logical order, but relative distances between values are not clear (e.g., small, medium, large) The distribution of one variable changes when the level (or values) of the other variable change. The row percentages are different in each column. 4.3.1 Inferences for Small Samples The approximate tests based on the asymptotic normality of \\(\\hat{p}_1 - \\hat{p}_2\\) do not apply for small samples. Using Fisher’s Exact Test to evaluate \\(H_0: p_1 = p_2\\) Assume \\(X_1\\) and \\(X_2\\) are independent Binomial Let \\(x_1\\) and \\(x_2\\) be the corresponding observed values. Let \\(n= n_1 + n_2\\) be the total sample size \\(m = x_1 + x_2\\) be the observed number of successes. By assuming that m (total successes) is fixed, and conditioning on this value, one can show that the conditional distribution of the number of successes from sample 1 is Hypergeometric If we want to test \\(H_0: p_1 = p_2\\) and \\(H_a: p_1 \\neq p_2\\), we have \\[ Z^2 = (\\frac{\\hat{p}_1 - \\hat{p}_2}{\\sqrt{\\hat{p}(1-\\hat{p})(1/n_1 + 1/n_2)}})^2 \\sim \\chi_{1,\\alpha}^2 \\] where \\(\\chi_{1,\\alpha}^2\\) is the upper \\(\\alpha\\) percentage point for the central Chi-squared with one d.f. This extends to the contingency table setting: whether the observed frequencies are equal to those expected under a null hypothesis of no association. 4.3.2 Test of Association Pearson Chi-square test statistic is \\[ \\chi^2 = \\sum_{\\text{all categories}} \\frac{(observed - epxected)^2}{expected} \\] Comparison of proportions for several independent surveys or experiments Experiment 1 Experiment 2 … Experiment k Number of successes \\(x_1\\) \\(x_2\\) … \\(x_k\\) Number of failures \\(n_1 - x_1\\) \\(n_2 - x_2\\) … \\(n_k - x_k\\) \\(n_1\\) \\(n_2\\) … \\(n_k\\) \\(H_0: p_1 = p_2 = ... = p_k\\) vs. the alternative that the null is not true (at least one pair are not equal). We estimate the common value of the probability of success on a single trial assuming \\(H_0\\) is true: \\[ \\hat{p} = \\frac{x_1 + x_2 + ... + x_k}{n_1 + n_2 + ...+ n_k} \\] we use table of expected counts when \\(H_0\\) is true: success \\(n_1 \\hat{p}\\) \\(n_2 \\hat{p}\\) … \\(n_k \\hat{p}\\) failure \\(n_1(1-\\hat{p})\\) \\(n_2(1-\\hat{p})\\) … \\(n_k (1-\\hat{p})\\) \\(n_1\\) \\(n_2\\) … \\(n_k\\) \\[ \\chi^2 = \\sum_{\\text{all cells in table}} \\frac{(observed - expected)^2}{expected} \\] with k-1 degrees of freedom 4.3.2.1 Two-way Count Data 1 2 … j … c Row Total 1 \\(n_{11}\\) \\(n_{12}\\) … \\(n_{1j}\\) … \\(n_{1c}\\) \\(n_{1.}\\) 2 \\(n_{21}\\) \\(n_{22}\\) … \\(n_{2j}\\) … \\(n_{2c}\\) \\(n_{2.}\\) . . . . . . . . r \\(n_{r1}\\) \\(n_{r2}\\) … \\(n_{rj}\\) … \\(n_{rc}\\) \\(n_{r.}\\) Column Total \\(n_{.1}\\) \\(n_{.2}\\) … \\(n_{.j}\\) … \\(n_{.c}\\) \\(n_{}\\) Design 1 total sample size fixed n = constant (e.g., survey on job satisfaction and income); both row and column totals are random variables Design 2 Fix the sample size in each group (in each row) (e.g., Drug treatments success or failure); fixed number of participants for each treatment; independent random samples from the two row populations. These different sampling designs imply two different probability models. 4.3.2.2 Total Sample Size Fixed Design 1 random sample of size n drawn from a single population, and sample units are cross-classified into r row categories and c column This results in an r x c table of observed counts \\(n_{ij} = 1,...,r;j=1,...,c\\) Let \\(p_{ij}\\) be the probability of classification into cell (i,j) and \\(\\sum_{i=1}^r \\sum_{j=1}^c p_{ij} = 1\\). Let \\(N_{ij}\\) be the random variable corresponding to \\(n_{ij}\\) The joint distribution of the \\(N_{ij}\\) is multinomial with unknown parameters \\(p_{ij}\\) Denote the row variable by X and column variable by Y, then \\(p_{ij} = P(X=i,Y = j)\\) and \\(p_{i.} = P(X = i)\\) and \\(p_{.j} = P(Y = j)\\) are the marginal probabilities. The null hypothesis that X and Y are statistically independent (i.e., no association) is just: \\[ H_0: p_{ij} = P(X =i,Y=j) = P(X =i) P(Y =j) = p_{i.}p_{.j} \\\\ H_a: p_{ij} \\neq p_{i.}p_{.j} \\] for all i,j. 4.3.2.3 Row Total Fixed Design 2 Random samples of sizes \\(n_1,...,n_r\\) are drawn independently from \\(r \\ge 2\\) row populations. In this case, the 2-way table row totals are \\(n_{i.} = n_i\\) for \\(i = 1,...,r\\). The counts from each row are modeled by independent multinomial distributions. X is fixed, Y is observed. Then, \\(p_{ij}\\) represent conditional probabilities \\(p_{ij} = P(Y=j|X=i)\\) The null hypothesis is the probability of response j is the same, regardless of the row population (i.e., no association): \\[ H_0: p_{ij} = P(Y = j | X = i) = p_j \\text{for all i,j =1,2,...,c} \\\\ \\text{or } H_0: (p_{i1},p_{i2},...,p_{ic}) = (p_1,p_2,...,p_c) \\text{ for all i} \\\\ H_a: (p_{i1},p_{i2},...,p_{ic}) \\text{ are not the same for all i} \\] Although the hypotheses to be tested are different for two sampling designs, The chi-square test is identical We have estimated expected frequencies: \\[ \\hat{e}_{ij} = \\frac{n_{i.}n_{.j}}{n} \\] The Chi-square statistic is \\[ \\chi^2 = \\sum_{i=1}^{r} \\sum_{j=1}^{c} \\frac{(n_{ij}-\\hat{e}_{ij})^2}{\\hat{e}_{ij}} \\sim \\chi_{(r-1)(c-1)} \\] \\(\\alpha\\)-level test rejects \\(H_0\\) if \\(\\chi^2 &gt; \\chi^2_{(r-1)(c-1),\\alpha}\\) 4.3.2.4 Pearson Chi-square Test Determine whether an association exists Sometimes, \\(H_0\\) represents the model whose validity is to be tested. Contrast this with the conventional formulation of \\(H_0\\) as the hypothesis that is to be disproved. The goal in this case is not to disprove the model, but to see whether data are consistent with the model and if deviation can be attributed to chance. These tests do not measure the strength of an association. These tests depend on and reflect the sample size - double the sample size by copying each observation, double the \\(\\chi^2\\) statistic even thought the strength of the association does not change. The Pearson Chi-square Test is not appropriate when more than about 20% of the cells have an expected cell frequency of less than 5 (large-sample p-values not appropriate). When the sample size is small the exact p-values can be calculated (this is prohibitive for large samples); calculation of the exact p-values assumes that the column totals and row totals are fixed. july.x=480 july.n=1000 sept.x=704 sept.n=1600 \\[ H_0: p_J = 0.5 \\\\ H_a: p_J &lt; 0.5 \\] prop.test(x=july.x,n=july.n,p=0.5,alternative=&quot;less&quot;,correct=F) #&gt; #&gt; 1-sample proportions test without continuity correction #&gt; #&gt; data: july.x out of july.n, null probability 0.5 #&gt; X-squared = 1.6, df = 1, p-value = 0.103 #&gt; alternative hypothesis: true p is less than 0.5 #&gt; 95 percent confidence interval: #&gt; 0.0000000 0.5060055 #&gt; sample estimates: #&gt; p #&gt; 0.48 \\[ H_0: p_J = p_S \\\\ H_a: p_j \\neq p_S \\] prop.test(x=c(july.x,sept.x),n=c(july.n,sept.n),correct=F) #&gt; #&gt; 2-sample test for equality of proportions without continuity correction #&gt; #&gt; data: c(july.x, sept.x) out of c(july.n, sept.n) #&gt; X-squared = 3.9701, df = 1, p-value = 0.04632 #&gt; alternative hypothesis: two.sided #&gt; 95 percent confidence interval: #&gt; 0.0006247187 0.0793752813 #&gt; sample estimates: #&gt; prop 1 prop 2 #&gt; 0.48 0.44 4.3.3 Ordinal Association An ordinal association implies that as one variable increases, the other tends to increase or decrease (depending on the nature of the association). For tests for variables with two or more levels, the levels must be in a logical ordering. 4.3.3.1 Mantel-Haenszel Chi-square Test The Mantel-Haenszel Chi-square Test is more powerful for testing ordinal associations, but does not test for the strength of the association. This test is presented in the case where one has a series of 2 x 2 tables that examine the same effects under different conditions (If there are K such tables, we have 2 x 2 x K table) In stratum k, given the marginal totals \\((n_{.1k},n_{.2k},n_{1.k},n_{2.k})\\), the sampling model for cell counts is the Hypergeometric (knowing \\(n_{11k}\\) determines \\((n_{12k},n_{21k},n_{22k})\\), given the marginal totals) Assuming conditional independence, the Hypergeometric mean and variance of \\(n_{11k}\\) are \\[ m_{11k} = E(n_{11k}) = \\frac{n_{1.k} n_{.1k}}{n_{..k}} \\\\ var(n_{11k}) = \\frac{n_{1.k} n_{2.k} n_{.1k} n_{.2k}}{n_{..k}^2(n_{..k}-1)} \\] To test conditional independence, Mantel and Haenszel proposed \\[ M^2 = \\frac{(|\\sum_{k} n_{11k} - \\sum_k m_{11k}| -.5)^2}{\\sum_{k}var(n_{11k})} \\sim \\chi^2_{1} \\] This method can be extended to general I x J x K tables. (2 x 2 x 3) table Bron=array(c(20, 9, 382, 214, 10, 7, 172, 120, 12, 6, 327, 183), dim = c(2, 2, 3), dimnames = list( Particulate = c(&quot;High&quot;, &quot;Low&quot;), Bronchitis = c(&quot;Yes&quot;, &quot;No&quot;), Age = c(&quot;15-24&quot;, &quot;25-39&quot;, &quot;40+&quot;))) margin.table(Bron,c(1,2)) #&gt; Bronchitis #&gt; Particulate Yes No #&gt; High 42 881 #&gt; Low 22 517 # assess whether the relationship between Bronchitis by Particulate Level varies by Age library(samplesizeCMH) marginal_table=margin.table(Bron,c(1,2)) odds.ratio(marginal_table) #&gt; [1] 1.120318 # whether these odds vary by age. The conditional odds can be calculated using the original table. apply(Bron,3,odds.ratio) #&gt; 15-24 25-39 40+ #&gt; 1.2449098 0.9966777 1.1192661 # Mantel-Haenszel Test mantelhaen.test(Bron,correct=T) #&gt; #&gt; Mantel-Haenszel chi-squared test with continuity correction #&gt; #&gt; data: Bron #&gt; Mantel-Haenszel X-squared = 0.11442, df = 1, p-value = 0.7352 #&gt; alternative hypothesis: true common odds ratio is not equal to 1 #&gt; 95 percent confidence interval: #&gt; 0.6693022 1.9265813 #&gt; sample estimates: #&gt; common odds ratio #&gt; 1.135546 4.3.3.1.1 McNemar’s Test special case of Mantel-Haenszel Chi-square Test vote=cbind(c(682,22),c(86,810)) mcnemar.test(vote,correct=T) #&gt; #&gt; McNemar&#39;s Chi-squared test with continuity correction #&gt; #&gt; data: vote #&gt; McNemar&#39;s chi-squared = 36.75, df = 1, p-value = 1.343e-09 4.3.3.2 Spearman Rank Correlation To test for the strength of association between two ordinally scaled variables, we can use Spearman Rank Correlation statistic Let X and Y be two random variables measured on an ordinal scale. Consider n pairs of observations (\\(x_i,y_i\\)), i = 1,…,n The Spearman Rank Correlation coefficient (denoted by \\(r_S\\) is calculated using the Pearson correlation formula, but based on the ranks of \\(x_i\\) and \\(y_i\\)). Spearman Rank Correlation be calculated Assign ranks to \\(x_i\\)’s and \\(y_i\\)’s separately. Let \\(u_i = rank(x_i)\\) and \\(v_i = rank(y_i)\\) Calculate \\(r_S\\) using the formula for the Pearson correlation coefficient, but applied to the ranks: \\[ r_S = \\frac{\\sum_{i=1}^{n}(u_i - \\bar{u})(v_i - \\bar{v})}{\\sqrt{(\\sum_{i = 1}^{n}(u_i - \\bar{u})^2)(\\sum_{i=1}^{n}(v_i - \\bar{v})^2)}} \\] \\(r_S\\) ranges between -1 and +1 , with \\(r_S = -1\\) if there is a perfect negative monotone association \\(r_S = +1\\) if there is a perfect positive monotone association between X and Y. To test \\(H_0:\\) X and Y independent \\(H_a\\): X and Y positively associated For large n (e.g., \\(n \\ge 10\\)), \\[ r_S \\sim N(0,1/(n-1)) \\] Then, \\[ Z = r_s \\sqrt{n-1} \\sim N(0,1) \\] "],["divergence-metrics-and-test-for-comparing-distributions.html", "4.4 Divergence Metrics and Test for Comparing Distributions", " 4.4 Divergence Metrics and Test for Comparing Distributions Similarity among distributions using divergence statistics, which is different from Deviation statistics: difference between the realization of a variable and some value (e.g., mean). Statistics of the deviation distributions consist of standard deviation, average absolute deviation, median absolute deviation , maximum absolute deviation. Deviance statistics: goodness-of-fit statistic for statistical models (comparable to the sum of squares of residuals in OLS to cases that use ML estimation). Usually used in generalized linear models. Divergence statistics is a statistical distance (different from metrics) Divergences do not require symmetry Divergences generalize squared distance (instead of linear distance). Hence, fail the triangle inequity Can be used for Detecting data drift in machine learning Feature selections Variational Auto Encoder Detect similarity between policies (i.e., distributions) in reinforcement learning To see consistency in two measured variables of two constructs. Techniques Kullback-Leibler Divergence Jensen-Shannon Divergence Kolmogorov-Smirnov Test Packages entropy philentropy 4.4.1 Kullback-Leibler Divergence Also known as relative entropy Not a metric (does not satisfy the triangle inequality) Can be generalized to the multivariate case Measure the similarity between two discrete probability distributions \\(P\\) = true data distribution \\(Q\\) = predicted data distribution It quantifies info loss when moving from \\(P\\) to \\(Q\\) (i.e., information loss when \\(P\\) is approximated by \\(Q\\)) Discrete \\[ D_{KL}(P ||Q) = \\sum_i P_i \\log(\\frac{P_i}{Q_i}) \\] Continuous \\[ D_{KL}(P||Q) = \\int P(x) \\log(\\frac{P(x)}{Q(x)}) dx \\] where \\(K \\in [0, \\infty)\\) from similar to diverge Non-symmetric between two distributions: \\(D_{KL}(P|Q) \\neq D_{KL}(Q|P)\\) library(philentropy) # philentropy::dist.diversity(rbind(X = 1:10 / sum(1:10), Y = 1:20 / sum(1:20)), # p = 2, # unit = &quot;log2&quot;) # continuous KL(rbind(X = 1:10/sum(1:10), Y = 1:10/sum(1:10)), unit = &quot;log2&quot;) #&gt; kullback-leibler #&gt; 0 # discrete KL(rbind(X = 1:10, Y = 1:10), est.prob = &quot;empirical&quot;) #&gt; kullback-leibler #&gt; 0 4.4.2 Jensen-Shannon Divergence Also known as info radius or total divergence to the average \\[ D_{JS} (P ||Q) = \\frac{1}{2}( D_{KL}(P||M)+ D_{KL}(Q||M)) \\] where \\(M = \\frac{1}{2} (P + Q)\\) is a mixed distribution \\(D_{JS} \\in [0,1]\\) for \\(\\log_2\\) and \\(D_{JS} \\in [0,\\ln(2)]\\) for \\(\\log_e\\) library(philentropy) # continous JSD(rbind(X = 1:10, Y = 1:20), unit = &quot;log2&quot;) #&gt; jensen-shannon #&gt; 20.03201 # discrete JSD(rbind(X = 1:10, Y = 1:20), est.prob = &quot;empirical&quot;) #&gt; jensen-shannon #&gt; 0.06004756 4.4.3 Wasserstein Distance measure the distance between two empirical cdfs \\[ W = \\int_{x \\in R}|E(x) - F(X)|^p \\] This is also a test statistics set.seed(1) transport::wasserstein1d(rnorm(100), rnorm(100, mean = 1)) #&gt; [1] 0.8533046 set.seed(1) # Wasserstein metric twosamples::wass_stat(rnorm(100), rnorm(100, mean = 1)) #&gt; [1] 0.8533046 set.seed(1) # permutation-based tw sample test using Wasserstein metric twosamples::wass_test(rnorm(100), rnorm(100, mean = 1)) #&gt; Test Stat P-Value #&gt; 0.8533046 0.0002500 4.4.4 Kolmogorov-Smirnov Test Can be used for continuous distribution \\(H_0\\): Empirical distribution follows a specified distribution \\(H_1\\): Empirical distribution does not follow a specified distribution Using non-parametric \\[ D= \\max|P(X) - Q(X)| \\] \\(D \\in [0,1]\\) from the densities are evenly distributed to not evenly distributed library(entropy) library(tidyverse) lst = list(sample_1 = c(1:20), sample_2 = c(2:30), sample_3 = c(3:30)) expand.grid(1:length(lst), 1:length(lst)) %&gt;% rowwise() %&gt;% mutate(KL = KL.empirical(lst[[Var1]], lst[[Var2]])) #&gt; # A tibble: 9 × 3 #&gt; # Rowwise: #&gt; Var1 Var2 KL #&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 1 1 0 #&gt; 2 2 1 0.150 #&gt; 3 3 1 0.183 #&gt; 4 1 2 0.704 #&gt; 5 2 2 0 #&gt; 6 3 2 0.0679 #&gt; 7 1 3 0.622 #&gt; 8 2 3 0.0870 #&gt; 9 3 3 0 To use the test for discrete date, use bootstrap version of the KS test (bypass the continuity requirement) Matching::ks.boot(Tr = c(0:10), Co = c(0:10)) #&gt; $ks.boot.pvalue #&gt; [1] 1 #&gt; #&gt; $ks #&gt; #&gt; Exact two-sample Kolmogorov-Smirnov test #&gt; #&gt; data: Tr and Co #&gt; D = 0, p-value = 1 #&gt; alternative hypothesis: two-sided #&gt; #&gt; #&gt; $nboots #&gt; [1] 1000 #&gt; #&gt; attr(,&quot;class&quot;) #&gt; [1] &quot;ks.boot&quot; "],["linear-regression.html", "Chapter 5 Linear Regression", " Chapter 5 Linear Regression Estimating parameters -&gt; parametric (finite parameters) Estimating functions -&gt; non-parametric Estimator Desirable Properties Unbiased Consistency \\(plim\\hat{\\beta_n}=\\beta\\) based on the law of large numbers, we can derive consistency More observations means more precise, closer to the true value. Efficiency Minimum variance in comparison to another estimator. OLS is BlUE (best linear unbiased estimator) means that OLS is the most efficient among the class of linear unbiased estimator Gauss-Markov Theorem If we have correct distributional assumptions, then the Maximum Likelihood is asymptotically efficient among consistent estimators. "],["ordinary-least-squares.html", "5.1 Ordinary Least Squares", " 5.1 Ordinary Least Squares The most fundamental model in statistics or econometric is a OLS linear regression. OLS = Maximum likelihood when the error term is assumed to be normally distributed. Regression is still great if the underlying CEF (conditional expectation function) is not linear. Because regression has the following properties: For \\(E[Y_i | X_{1i}, \\dots, X_{Ki}] = a + \\sum_{k=1}^K b_k X_{ki}\\) (i.e., the CEF of \\(Y_i\\) on \\(X_{1i}, \\dots, X_{Ki}\\) is linear, then the regression of \\(Y_i\\) on \\(X_{1i}, \\dots, X_{Ki}\\) is the CEF For \\(E[Y_i | X_{1i} , \\dots, X_{Ki}]\\) is a nonlinear function of the conditioning variables, the regression of \\(Y_i\\) on \\(X_{1i}, \\dots, X_{Ki}\\) will give you the best linear approximation to the nonlinear CEF (i.e., minimize the expected squared deviation between the fitted values from the linear model and the CEF). 5.1.1 Simple Regression (Basic Model) \\[ Y_i = \\beta_0 + \\beta_1 X_i + \\epsilon_i \\] \\(Y_i\\): response (dependent) variable at i-th observation \\(\\beta_0,\\beta_1\\): regression parameters for intercept and slope. \\(X_i\\): known constant (independent or predictor variable) for i-th observation \\(\\epsilon_i\\): random error term \\[ E(\\epsilon_i) = 0 \\\\ var(\\epsilon_i) = \\sigma^2 \\\\ cov(\\epsilon_i,\\epsilon_j) = 0 \\text{ for all } i \\neq j \\] \\(Y_i\\) is random since \\(\\epsilon_i\\) is: \\[ \\begin{aligned} E(Y_i) &amp;= E(\\beta_0 + \\beta_1 X_i + \\epsilon_i) \\\\ &amp;= E(\\beta_0) + E(\\beta_1 X_i) + E(\\epsilon) \\\\ &amp;= \\beta_0 + \\beta_1 X_i \\end{aligned} \\] \\[ \\begin{aligned} var(Y_i) &amp;= var(\\beta_0 + \\beta_1 X_i + \\epsilon_i) \\\\ &amp;= var(\\epsilon_i) \\\\ &amp;= \\sigma^2 \\end{aligned} \\] Since \\(cov(\\epsilon_i, \\epsilon_j) = 0\\) (uncorrelated), the outcome in any one trail has no effect on the outcome of any other. Hence, \\(Y_i, Y_j\\) are uncorrelated as well (conditioned on the X’s) Note Least Squares does not require a distributional assumption Relationship between bivariate regression and covariance Covariance between 2 variables: \\[ C(X_i, Y_i) = E[(X_i - E[X_i])(Y_i - E[Y_i])] \\] Which has the following properties \\(C(X_i, X_i) = \\sigma^2_X\\) If either \\(E(X_i) = 0 | E(Y_i) = 0\\), then \\(Cov(X_i, Y_i) = E[X_i Y_i]\\) Given \\(W_i = a + b X_i\\) and \\(Z_i = c + d Y_i\\), then \\(Cov(W_i, Z_i) = bdC(X_i, Y_i)\\) For the bivariate regression, the slope is \\[ \\beta = \\frac{Cov(Y_i, X_i)}{Var(X_i)} \\] To extend this to a multivariate case \\[ \\beta_k = \\frac{C(Y_i, \\tilde{X}_{ki})}{Var(\\tilde{X}_{ki})} \\] Where \\(\\tilde{X}_{ki}\\) is the residual from a regression of \\(X_{ki}\\) on the \\(K-1\\) other covariates included in the model And intercept \\[ \\alpha = E[Y_i] - \\beta E(X_i) \\] 5.1.1.1 Estimation Deviation of \\(Y_i\\) from its expected value: \\[ Y_i - E(Y_i) = Y_i - (\\beta_0 + \\beta_1 X_i) \\] Consider the sum of the square of such deviations: \\[ Q = \\sum_{i=1}^{n} (Y_i - \\beta_0 -\\beta_1 X_i)^2 \\] \\[ b_1 = \\frac{\\sum_{i=1}^{n} (X_i - \\bar{X})(Y_i - \\bar{Y})}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2} \\\\ b_0 = \\frac{1}{n}(\\sum_{i=1}^{n}Y_i - b_1\\sum_{i=1}^{n}X_i) = \\bar{Y} - b_1 \\bar{X} \\] 5.1.1.2 Properties of Least Least Estimators \\[ E(b_1) = \\beta_1 \\\\ E(b_0) = E(\\bar{Y}) - \\bar{X}\\beta_1 \\\\ E(\\bar{Y}) = \\beta_0 + \\beta_1 \\bar{X} \\\\ E(b_0) = \\beta_0 \\\\ var(b_1) = \\frac{\\sigma^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2} \\\\ var(b_0) = \\sigma^2 (\\frac{1}{n} + \\frac{\\bar{X}^2}{\\sum (X_i - \\bar{X})^2}) \\] \\(var(b_1)\\) approaches 0 as more measurements are taken at more \\(X_i\\) values (unless \\(X_i\\) is at its mean value) \\(var(b_0)\\) approaches 0 as n increases when the \\(X_i\\) values are judiciously selected. Mean Square Error \\[ MSE = \\frac{SSE}{n-2} = \\frac{\\sum_{i=1}^{n}e_i^2}{n-2} = \\frac{\\sum(Y_i - \\hat{Y_i})^2}{n-2} \\] Unbiased estimator of MSE: \\[ E(MSE) = \\sigma^2 \\] \\[ s^2(b_1) = \\widehat{var(b_1)} = \\frac{MSE}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2} \\\\ s^2(b_0) = \\widehat{var(b_0)} = MSE(\\frac{1}{n} + \\frac{\\bar{X}^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2}) \\] \\[ E(s^2(b_1)) = var(b_1) \\\\ E(s^2(b_0))=var(b_0) \\] 5.1.1.3 Residuals \\[ e_i = Y_i - \\hat{Y} = Y_i - (b_0 + b_1 X_i) \\] \\(e_i\\) is an estimate of \\(\\epsilon_i = Y_i - E(Y_i)\\) \\(\\epsilon_i\\) is always unknown since we don’t know the true \\(\\beta_0, \\beta_1\\) \\[ \\sum_{i=1}^{n} e_i = 0 \\\\ \\sum_{i=1}^{n} X_i e_i = 0 \\] Residual properties \\(E[e_i] =0\\) \\(E[X_i e_i] = 0\\) and \\(E[\\hat{Y}_i e_i ] = 0\\) 5.1.1.4 Inference Normality Assumption Least Squares estimation does not require assumptions of normality. However, to do inference on the parameters, we need distributional assumptions. Inference on \\(\\beta_0,\\beta_1\\) and \\(Y_h\\) are not extremely sensitive to moderate departures from normality, especially if the sample size is large Inference on \\(Y_{pred}\\) is very sensitive to the normality assumptions. Normal Error Regression Model \\[ Y_i \\sim N(\\beta_0+\\beta_1X_i, \\sigma^2) \\\\ \\] 5.1.1.4.1 \\(\\beta_1\\) Under the normal error model, \\[ b_1 \\sim N(\\beta_1,\\frac{\\sigma^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2}) \\] A linear combination of independent normal random variable is normally distributed Hence, \\[ \\frac{b_1 - \\beta_1}{s(b_1)} \\sim t_{n-2} \\] A \\((1-\\alpha) 100 \\%\\) confidence interval for \\(\\beta_1\\) is \\[ b_1 \\pm t_{t-\\alpha/2 ; n-2}s(b_1) \\] 5.1.1.4.2 \\(\\beta_0\\) Under the normal error model, the sampling distribution for \\(b_0\\) is \\[ b_0 \\sim N(\\beta_0,\\sigma^2(\\frac{1}{n} + \\frac{\\bar{X}^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2})) \\] Hence, \\[ \\frac{b_0 - \\beta_0}{s(b_0)} \\sim t_{n-2} \\] A \\((1-\\alpha)100 \\%\\) confidence interval for \\(\\beta_0\\) is \\[ b_0 \\pm t_{1-\\alpha/2;n-2}s(b_0) \\] 5.1.1.4.3 Mean Response Let \\(X_h\\) denote the level of X for which we wish to estimate the mean response We denote the mean response when \\(X = X_h\\) by \\(E(Y_h)\\) A point estimator of \\(E(Y_h)\\) is \\(\\hat{Y}_h\\): \\[ \\hat{Y}_h = b_0 + b_1 X_h \\] Note \\[ E(\\bar{Y}_h)= E(b_0 + b_1X_h) \\\\ = \\beta_0 + \\beta_1 X_h \\\\ = E(Y_h) \\] (unbiased estimator) \\[ \\begin{aligned} var(\\hat{Y}_h) &amp;= var(b_0 + b_1 X_h) \\\\ &amp;= var(\\hat{Y} + b_1 (X_h - \\bar{X})) \\\\ &amp;= var(\\bar{Y}) + (X_h - \\bar{X})^2var(b_1) + 2(X_h - \\bar{X})cov(\\bar{Y},b_1) \\\\ &amp;= \\frac{\\sigma^2}{n} + (X_h - \\bar{X})^2 \\frac{\\sigma^2}{\\sum(X_i - \\bar{X})^2} \\\\ &amp;= \\sigma^2(\\frac{1}{n} + \\frac{(X_h - \\bar{X})^2}{\\sum_{i=1}^{n} (X_i - \\bar{X})^2}) \\end{aligned} \\] Since \\(cov(\\bar{Y},b_1) = 0\\) due to the iid assumption on \\(\\epsilon_i\\) An estimate of this variance is \\[ s^2(\\hat{Y}_h) = MSE (\\frac{1}{n} + \\frac{(X_h - \\bar{X})^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2}) \\] the sampling distribution for the mean response is \\[ \\hat{Y}_h \\sim N(E(Y_h),var(\\hat{Y_h})) \\\\ \\frac{\\hat{Y}_h - E(Y_h)}{s(\\hat{Y}_h)} \\sim t_{n-2} \\] A \\(100(1-\\alpha) \\%\\) CI for \\(E(Y_h)\\) is \\[ \\hat{Y}_h \\pm t_{1-\\alpha/2;n-2}s(\\hat{Y}_h) \\] 5.1.1.4.4 Prediction of a new observation Regarding the Mean Response, we are interested in estimating mean of the distribution of Y given a certain X. Now, we want to predict an individual outcome for the distribution of Y at a given X. We call \\(Y_{pred}\\) Estimation of mean response versus prediction of a new observation: the point estimates are the same in both cases: \\(\\hat{Y}_{pred} = \\hat{Y}_h\\) It is the variance of the prediction that is different; hence, prediction intervals are different than confidence intervals. The prediction variance must consider: Variation in the mean of the distribution of Y Variation within the distribution of Y We want to predict: mean response + error \\[ \\beta_0 + \\beta_1 X_h + \\epsilon \\] Since \\(E(\\epsilon) = 0\\), use the least squares predictor: \\[ \\hat{Y}_h = b_0 + b_1 X_h \\] The variance of the predictor is \\[ \\begin{aligned} var(b_0 + b_1 X_h + \\epsilon) &amp;= var(b_0 + b_1 X_h) + var(\\epsilon) \\\\ &amp;= \\sigma^2(\\frac{1}{n} + \\frac{(X_h - \\bar{X})^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2}) + \\sigma^2 \\\\ &amp;= \\sigma^2(1+\\frac{1}{n} + \\frac{(X_h - \\bar{X})^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2}) \\end{aligned} \\] An estimate of the variance is given by \\[ s^2(pred)= MSE (1+ \\frac{1}{n} + \\frac{(X_h - \\bar{X})^2}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2}) \\\\ \\frac{Y_{pred}-\\hat{Y}_h}{s(pred)} \\sim t_{n-2} \\] \\(100(1-\\alpha) \\%\\) prediction interval is \\[ \\bar{Y}_h \\pm t_{1-\\alpha/2; n-2}s(pred) \\] The prediction interval is very sensitive to the distributional assumption on the errors, \\(\\epsilon\\) 5.1.1.4.5 Confidence Band We want to know the confidence interval for the entire regression line, so we can draw conclusions about any and all mean response fo the entire regression line \\(E(Y) = \\beta_0 + \\beta_1 X\\) rather than for a given response Y Working-Hotelling Confidence Band For a given \\(X_h\\), this band is \\[ \\hat{Y}_h \\pm W s(\\hat{Y}_h) \\] where \\(W^2 = 2F_{1-\\alpha;2,n-2}\\), which is just 2 times the F-stat with 2 and n-2 degrees of freedom the interval width will change with each \\(X_h\\) (since \\(s(\\hat{Y}_h)\\) changes) the boundary values for this confidence band will always define a hyperbole containing the regression line will be smallest at \\(X = \\bar{X}\\) 5.1.1.5 ANOVA Partitioning the Total Sum of Squares: Consider the corrected Total sum of squares: \\[ SSTO = \\sum_{i=1}^{n} (Y_i -\\bar{Y})^2 \\] Measures the overall dispersion in the response variable We use the term corrected because we correct for mean, the uncorrected total sum of squares is given by \\(\\sum Y_i^2\\) use \\(\\hat{Y}_i = b_0 + b_1 X_i\\) to estimate the conditional mean for Y at \\(X_i\\) \\[ \\begin{aligned} \\sum_{i=1}^n (Y_i - \\bar{Y})^2 &amp;= \\sum_{i=1}^n (Y_i - \\hat{Y}_i + \\hat{Y}_i - \\bar{Y})^2 \\\\ &amp;= \\sum_{i=1}^n(Y_i - \\hat{Y}_i)^2 + \\sum_{i=1}^n(\\hat{Y}_i - \\bar{Y})^2 + 2\\sum_{i=1}^n(Y_i - \\hat{Y}_i)(\\hat{Y}_i-\\bar{Y}) \\\\ &amp;= \\sum_{i=1}^n(Y_i - \\hat{Y}_i)^2 + \\sum_{i=1}^n(\\bar{Y}_i -\\bar{Y})^2 \\\\ STTO &amp;= SSE + SSR \\\\ \\end{aligned} \\] where SSR is the regression sum of squares, which measures how the conditional mean varies about a central value. The cross-product term in the decomposition is 0: \\[ \\begin{aligned} \\sum_{i=1}^n (Y_i - \\hat{Y}_i)(\\hat{Y}_i - \\bar{Y}) &amp;= \\sum_{i=1}^{n}(Y_i - \\bar{Y} -b_1 (X_i - \\bar{X}))(\\bar{Y} + b_1 (X_i - \\bar{X})-\\bar{Y}) \\\\ &amp;= b_1 \\sum_{i=1}^{n} (Y_i - \\bar{Y})(X_i - \\bar{X}) - b_1^2\\sum_{i=1}^{n}(X_i - \\bar{X})^2 \\\\ &amp;= b_1 \\frac{\\sum_{i=1}^{n}(Y_i -\\bar{Y})(X_i - \\bar{X})}{\\sum_{i=1}^{n}(X_i - \\bar{X})^2} \\sum_{i=1}^{n}(X_i - \\bar{X})^2 - b_1^2\\sum_{i=1}^{n}(X_i - \\bar{X})^2 \\\\ &amp;= b_1^2 \\sum_{i=1}^{n}(X_i - \\bar{X})^2 - b_1^2 \\sum_{i=1}^{n}(X_i - \\bar{X})^2 \\\\ &amp;= 0 \\end{aligned} \\] \\[ \\begin{aligned} SSTO &amp;= SSR + SSE \\\\ (n-1 d.f) &amp;= (1 d.f.) + (n-2 d.f.) \\end{aligned} \\] Source of Variation Sum of Squares df Mean Square F Regression (model) SSR 1 MSR = SSR/df MSR/MSE Error SSE n-2 MSE = SSE/df Total (Corrected) SSTO n-1 \\[ E(MSE) = \\sigma^2 \\\\ E(MSR) = \\sigma^2 + \\beta_1^2 \\sum_{i=1}^{n} (X_i - \\bar{X})^2 \\] If \\(\\beta_1 = 0\\), then these two expected values are the same if \\(\\beta_1 \\neq 0\\) then E(MSR) will be larger than E(MSE) which means the ratio of these two quantities, we can infer something about \\(\\beta_1\\) Distribution theory tells us that if \\(\\epsilon_i \\sim iid N(0,\\sigma^2)\\) and assuming \\(H_0: \\beta_1 = 0\\) is true, \\[ \\frac{MSE}{\\sigma^2} \\sim \\chi_{n-2}^2 \\\\ \\frac{MSR}{\\sigma^2} \\sim \\chi_{1}^2 \\text{ if $\\beta_1=0$} \\] where these two chi-square random variables are independent. Since the ratio of 2 independent chi-square random variable follows an F distribution, we consider: \\[ F = \\frac{MSR}{MSE} \\sim F_{1,n-2} \\] when \\(\\beta_1 =0\\). Thus, we reject \\(H_0: \\beta_1 = 0\\) (or \\(E(Y_i)\\) = constant) at \\(\\alpha\\) if \\[ F &gt; F_{1 - \\alpha;1,n-2} \\] this is the only null hypothesis that can be tested with this approach. Coefficient of Determination \\[ R^2 = \\frac{SSR}{SSTO} = 1- \\frac{SSE}{SSTO} \\] where \\(0 \\le R^2 \\le 1\\) Interpretation: The proportionate reduction of the total variation in Y after fitting a linear model in X. It is not really correct to say that \\(R^2\\) is the “variation in Y explained by X”. \\(R^2\\) is related to the correlation coefficient between Y and X: \\[ R^2 = (r)^2 \\] where \\(r= corr(x,y)\\) is an estimate of the Pearson correlation coefficient. Also, note \\[ b_1 = (\\frac{\\sum_{i=1}^{n}(Y_i - \\bar{Y})^2}{\\sum_{i=1}^{n} (X_i - \\bar{X})^2})^{1/2} \\\\ r = \\frac{s_y}{s_x} r \\] Lack of Fit \\(Y_{11},Y_{21},...,Y_{n_1,1}\\): \\(n_1\\) repeat obs at \\(X_1\\) \\(Y_{1c},Y_{2c},...,Y_{n_c,c}\\): \\(n_c\\) repeat obs at \\(X_c\\) So, there are c distinct X values. Let \\(\\bar{Y}_j\\) be the mean over replicates for \\(X_j\\) Partition the Error Sum of Squares: \\[ \\begin{aligned} \\sum_{i} \\sum_{j} (Y_{ij} - \\hat{Y}_{ij})^2 &amp;= \\sum_{i} \\sum_{j} (Y_{ij} - \\bar{Y}_j + \\bar{Y}_j + \\hat{Y}_{ij})^2 \\\\ &amp;= \\sum_{i} \\sum_{j} (Y_{ij} - \\bar{Y}_j)^2 + \\sum_{i} \\sum_{j} (\\bar{Y}_j - \\hat{Y}_{ij})^2 + \\text{cross product term} \\\\ &amp;= \\sum_{i} \\sum_{j}(Y_{ij} - \\bar{Y}_j)^2 + \\sum_j n_j (\\bar{Y}_j- \\hat{Y}_{ij})^2 \\\\ SSE &amp;= SSPE + SSLF \\\\ \\end{aligned} \\] SSPE: “pure error sum of squares” has n-c degrees of freedom since we need to estimate c means SSLF: “lack of fit sum of squares” has c - 2 degrees of freedom (the number of unique X values - number of parameters used to specify the conditional mean regression model) \\[ MSPE = \\frac{SSPE}{df_{pe}} = \\frac{SSPE}{n-c} \\\\ MSLF = \\frac{SSLF}{df_{lf}} = \\frac{SSLF}{c-2} \\] The F-test for Lack-of-Fit tests \\[ H_0: Y_{ij} = \\beta_0 + \\beta_1 X_i + \\epsilon_{ij}, \\epsilon_{ij} \\sim iid N(0,\\sigma^2) \\\\ H_a: Y_{ij} = \\alpha_0 + \\alpha_1 X_i + f(X_i, Z_1,...) + \\epsilon_{ij}^*,\\epsilon_{ij}^* \\sim iid N(0, \\sigma^2) \\] \\(E(MSPE) = \\sigma^2\\) under either \\(H_0\\), \\(H_a\\) \\(E(MSLF) = \\sigma^2 + \\frac{\\sum n_j(f(X_i,...))^2}{n-2}\\) in general and \\(E(MSLF) = \\sigma^2\\) when \\(H_0\\) is true We reject \\(H_0\\) (i.e., the model \\(Y_i = \\beta_0 + \\beta_1 X_i + \\epsilon_i\\) is not adequate) if \\[ F = \\frac{MSLF}{MSPE} &gt; F_{1-\\alpha;c-2,n-c} \\] Failing to reject \\(H_0\\) does not imply that \\(H_0: Y_{ij} = \\beta_0 + \\beta_1 X_i + \\epsilon_{ij}\\) is exactly true, but it suggests that this model may provide a reasonable approximation to the true model. Source of Variation Sum of Squares df Mean Square F Regression SSR 1 MSR MSR / MSE Error SSE n-2 MSE Lack of fit SSLF c-2 MSLF MSLF / MSPE Pure Error SSPE n-c MSPE Total(Corrected) SSTO n-1 Repeat observations have an effect on \\(R^2\\): It is impossible for \\(R^2\\) to attain 1 when repeat obs. exist (SSE can’t be 0) The maximum \\(R^2\\) attainable in this situation: \\[ R^2_{max} = \\frac{SSTo - SSPE}{SSTO} \\] Not all levels of X need have repeat observations. Typically, when \\(H_0\\) is appropriate, one still uses MSE as the estimate for \\(\\sigma^2\\) rather than MSPE, Since MSE has more degrees of freedom, sometimes people will pool these estimates. Joint Inference The confidence coefficient for both \\(\\beta_0\\) and \\(\\beta_1\\) considered simultaneously is \\(\\le \\alpha\\) Let \\(\\bar{A}_1\\) be the event that the first interval covers \\(\\beta_0\\) \\(\\bar{A}_2\\) be the event that the second interval covers \\(\\beta_1\\) \\[ P(\\bar{A}_1) = 1 - \\alpha \\\\ P(\\bar{A}_2) = 1 - \\alpha \\] The probability that both \\(\\bar{A}_1\\) and \\(\\bar{A}_2\\) \\[ \\begin{aligned} P(\\bar{A}_1 \\cap \\bar{A}_2) &amp;= 1 - P(\\bar{A}_1 \\cup \\bar{A}_2) \\\\ &amp;= 1 - P(A_1) - P(A_2) + P(A_1 \\cap A_2) \\\\ &amp;\\ge 1 - P(A_1) - P(A_2) \\\\ &amp;= 1 - 2\\alpha \\end{aligned} \\] If \\(\\beta_0\\) and \\(\\beta_1\\) have separate 95% confidence intervals, the joint (family) confidence coefficient is at least \\(1 - 2(0.05) = 0.9\\). This is called a Bonferroni Inequality We could use a procedure in which we obtained \\(1-\\alpha/2\\) confidence intervals for the two regression parameters separately, then the joint (Bonferroni) family confidence coefficient would be at least \\(1- \\alpha\\) The \\(1-\\alpha\\) joint Bonferroni confidence interval for \\(\\beta_0\\) and \\(\\beta_1\\) is given by calculating: \\[ b_0 \\pm B s(b_0) \\\\ b_1 \\pm B s(b_1) \\] where \\(B= t_{1-\\alpha/4;n-2}\\) Interpretation: If repeated samples were taken and the joint \\((1-\\alpha)\\) intervals for \\(\\beta_0\\) and \\(\\beta_1\\) were obtained, \\((1-\\alpha)100\\)% of the joint intervals would contain the true pair \\((\\beta_0, \\beta_1)\\). That is, in \\(\\alpha \\times 100\\)% of the samples, one or both intervals would not contain the true value. The Bonferroni interval is conservative. It is a lower bound and the joint intervals will tend to be correct more than \\((1-\\alpha)100\\)% of the time (lower power). People usually consider a larger \\(\\alpha\\) for the Bonferroni joint tests (e.g, \\(\\alpha=0.1\\)) The Bonferroni procedure extends to testing more than 2 parameters. Say we are interested in testing \\(\\beta_0,\\beta_1,..., \\beta_{g-1}\\) (g parameters to test). Then, the joint Bonferroni interval is obtained by calculating the \\((1-\\alpha/g)\\) 100% level interval for each separately. For example, if \\(\\alpha = 0.05\\) and \\(g=10\\), each individual test is done at the \\(1- \\frac{.05}{10}\\) level. For 2-sided intervals, this corresponds to using \\(t_{1-\\frac{0.05}{2(10)};n-p}\\) in the CI formula. This procedure works best if g is relatively small, otherwise the intervals for each individual parameter are very wide and the test is way too conservative. \\(b_0,b_1\\) are usually correlated (negatively if \\(\\bar{X} &gt;0\\) and positively if \\(\\bar{X}&lt;0\\)) Other multiple comparison procedures are available. 5.1.1.6 Assumptions Linearity of the regression function Error terms have constant variance Error terms are independent No outliers Error terms are normally distributed No Omitted variables 5.1.1.7 Diagnostics Constant Variance Plot residuals vs. X Outliers plot residuals vs. X box plots stem-leaf plots scatter plots we could use standardize the residuals to have unit variance. These standardized residuals are called studentized residuals: \\[ r_i = \\frac{e_i -\\bar{e}}{s(e_i)} = \\frac{e_i}{s(e_i)} \\] A simplified standardization procedure gives semi-studentized residuals: \\[ e_i^* = \\frac{e_i - \\bar{e}}{\\sqrt{MSE}} = \\frac{e_i}{\\sqrt{MSE}} \\] Non-independent of Error Terms plot residuals vs. time Residuals \\(e_i\\) are not independent random variables because they involve the fitted values \\(\\hat{Y}_i\\), which are based on the same fitted regression function. If the sample size is large, the dependency among \\(e_i\\) is relatively unimportant. To detect non-independence, it helps to plot the residual for the i-th response vs. the (i-1)-th Non-normality of Error Terms to detect non-normality (distribution plots of residuals, box plots of residuals, stem-leaf plots of residuals, normal probability plots of residuals) Need relatively large sample sizes. Other types of departure affect the distribution of the residuals (wrong regression function, non-constant error variance,…) 5.1.1.7.1 Objective Tests of Model Assumptions Normality Use Methods based on empirical cumulative distribution function to test on residuals. Constancy of error variance Brown-Forsythe Test (Modified Levene Test) Breusch-Pagan Test (Cook-Weisberg Test) 5.1.1.8 Remeidal Measures If the simple linear regression is not appropriate, one can: more complicated models transformations on X and/or Y (may not be “optimal” results) Remedial measures based on deviations: Non-linearity: Transformations more complicated models Non-constant error variance: Weighted Least Squares Transformations Correlated errors: serially correlated error models (times series) Non-normality Additional variables: multiple regression. Outliers: Robust estimation. 5.1.1.8.1 Transformations use transformations of one or both variables before performing the regression analysis. The properties of least-squares estimates apply to the transformed regression, not the original variable. If we transform the Y variable and perform regression to get: \\[ g(Y_i) = b_0 + b_1 X_i \\] Transform back: \\[ \\hat{Y}_i = g^{-1}(b_0 + b_1 X_i) \\] \\(\\hat{Y}_i\\) will be biased. we can correct this bias. Box-Cox Family Transformations \\[ Y&#39;= Y^{\\lambda} \\] where \\(\\lambda\\) is a parameter to be determined from the data. \\(\\lambda\\) \\(Y&#39;\\) 2 \\(Y^2\\) 0.5 \\(\\sqrt{Y}\\) 0 \\(ln(Y)\\) -0.5 \\(1/\\sqrt{Y}\\) -1 \\(1/Y\\) To pick \\(\\lambda\\), we can do estimation by: trial and error maximum likelihood numerical search Variance Stabilizing Transformations A general method for finding a variance stabilizing transformation, when the standard deviation is a function of the mean, is the delta method - an application of a Taylor series expansion. \\[ \\sigma = \\sqrt{var(Y)} = f(\\mu) \\] where \\(\\mu = E(Y)\\) and \\(f(\\mu)\\) is some smooth function of the mean. Consider the transformation h(Y). Expand this function in a Taylor series about \\(\\mu\\). Then, \\[ h(Y) = h(\\mu) + h&#39;(\\mu)(Y-\\mu) + \\text{small terms} \\] we want to select the function h(.) so that the variance of h(Y) is nearly constant for all values of \\(\\mu= E(Y)\\): \\[ \\begin{aligned} const &amp;= var(h(Y)) \\\\ &amp;= var(h(\\mu) + h&#39;(\\mu)(Y-\\mu)) \\\\ &amp;= (h&#39;(\\mu))^2 var(Y-\\mu) \\\\ &amp;= (h&#39;(\\mu))^2 var(Y) \\\\ &amp;= (h&#39;(\\mu))^2(f(\\mu))^2 \\\\ \\end{aligned} \\] we must have, \\[ h&#39;(\\mu) \\propto \\frac{1}{f(\\mu)} \\] then, \\[ h(\\mu) = \\int\\frac{1}{f(\\mu)}d\\mu \\] Example: For the Poisson distribution: \\(\\sigma^2 = var(Y) = E(Y) = \\mu\\) Then, \\[ \\sigma = f(\\mu) = \\sqrt{mu} \\\\ h&#39;(\\mu) \\propto \\frac{1}{\\mu} = \\mu^{-.5} \\] Then, the variance stabilizing transformation is: \\[ h(\\mu) = \\int \\mu^{-.5} d\\mu = \\frac{1}{2} \\sqrt{\\mu} \\] hence, \\(\\sqrt{Y}\\) is used as the variance stabilizing transformation. If we don’t know \\(f(\\mu)\\) Trial and error. Look at residuals plots Ask researchers about previous studies or find published results on similar experiments and determine what transformation was used. If you have multiple observations \\(Y_{ij}\\) at the same X values, compute \\(\\bar{Y}_i\\) and \\(s_i\\) and plot them If \\(s_i \\propto \\bar{Y}_i^{\\lambda}\\) then consider \\(s_i = a \\bar{Y}_i^{\\lambda}\\) or \\(ln(s_i) = ln(a) + \\lambda ln(\\bar{Y}_i)\\). So regression the natural log of \\(s_i\\) on the natural log of \\(\\bar{Y}_i\\) gives \\(\\hat{a}\\) and \\(\\hat{\\lambda}\\) and suggests the form of \\(f(\\mu)\\) If we don’t have multiple obs, might still be able to “group” the observations to get \\(\\bar{Y}_i\\) and \\(s_i\\). Transformation Situation Comments \\(\\sqrt{Y}\\) \\(var(\\epsilon_i) = k E(Y_i)\\) counts from Poisson dist \\(\\ sqrt{Y} + \\sqrt{Y+1}\\) \\(var(\\epsilon_i) = k E(Y_i)\\) small counts or zeroes \\(log(Y)\\) \\(var(\\epsilon_i) = k (E(Y_i))^2\\) positive integers with wide range \\(log(Y+1)\\) \\(var(\\epsilon_i) = k(E(Y_i))^2\\) some counts zero 1/Y \\(var(\\epsilon_i) = k(E(Y_i))^4\\) most responses near zero, others large \\(arcsin(\\sqrt{Y})\\) \\(var(\\epsilon_i) = k E(Y_i)(1-E(Y_i))\\) data are binomial proportions or % 5.1.2 Multiple Linear Regression Geometry of Least Squares \\[ \\begin{aligned} \\mathbf{\\hat{y}} &amp;= \\mathbf{Xb} \\\\ &amp;= \\mathbf{X(X&#39;X)^{-1}X&#39;y} \\\\ &amp;= \\mathbf{Hy} \\end{aligned} \\] sometimes H is denoted as P. H is the projection operator. \\[ \\mathbf{\\hat{y}= Hy} \\] is the projection of y onto the linear space spanned by the columns of X (model space). The dimension of the model space is the rank of X. Facts: H is symmetric (i.e., H = H’) HH = H \\[ \\begin{aligned} \\mathbf{HH} &amp;= \\mathbf{X(X&#39;X)^{-1}X&#39;X(X&#39;X)^{-1}X&#39;} \\\\ &amp;= \\mathbf{X(X&#39;X)^{-1}IX&#39;} \\\\ &amp;= \\mathbf{X(X&#39;X)^{-1}X&#39;} \\end{aligned} \\] H is an n x n matrix with rank(H) = rank(X) \\(\\mathbf{(I-H) = I - X(X&#39;X)^{-1}X&#39;}\\) is also a projection operator. It projects onto the n - k dimensional space that is orthogonal to the k dimensional space spanned by the columns of X \\(\\mathbf{H(I-H)=(I-H)H = 0}\\) Partition of uncorrected total sum of squares: \\[ \\begin{aligned} \\mathbf{y&#39;y} &amp;= \\mathbf{\\hat{y}&#39;\\hat{y} + e&#39;e} \\\\ &amp;= \\mathbf{(Hy)&#39;(Hy) + ((I-H)y)&#39;((I-H)y)} \\\\ &amp;= \\mathbf{y&#39;H&#39;Hy + y&#39;(I-H)&#39;(I-H)y} \\\\ &amp;= \\mathbf{y&#39;Hy + y&#39;(I-H)y} \\\\ \\end{aligned} \\] or partition for the corrected total sum of squares: \\[ \\mathbf{y&#39;(I-H_1)y = y&#39;(H-H_1)y + y&#39;(I-H)y} \\] where \\(H_1 = \\frac{1}{n} J = 1&#39;(1&#39;1)1\\) Source SS df MS F Regression \\(SSR = \\mathbf{y&#39; (H-\\frac{1}{n}J)y}\\) p - 1 SSR/(p-1) MSR /MSE Error \\(SSE = \\mathbf{y&#39;(I - H)y}\\) n - p SSE /(n-p) Total \\(\\mathbf{y&#39;y - y&#39;Jy/n}\\) n -1 Equivalently, we can express \\[ \\mathbf{Y = X\\hat{\\beta} + (Y - X\\hat{\\beta})} \\] where \\(\\mathbf{\\hat{Y} = X \\hat{\\beta}}\\) = sum of a vector of fitted values \\(\\mathbf{e = ( Y - X \\hat{\\beta})}\\) = residual \\(\\mathbf{Y}\\) is the n x 1 vector in a n-dimensional space \\(R^n\\) \\(\\mathbf{X}\\) is an n x p full rank matrix. and its columns generate a p-dimensional subspace of \\(R^n\\). Hence, any estimator \\(\\mathbf{X \\hat{\\beta}}\\) is also in this subspace. We choose least squares estimator that minimize the distance between \\(\\mathbf{Y}\\) and \\(\\mathbf{X \\hat{\\beta}}\\), which is the orthogonal projection of \\(\\mathbf{Y}\\) onto \\(\\mathbf{X\\beta}\\). \\[ \\begin{aligned} ||\\mathbf{Y} - \\mathbf{X}\\hat{\\beta}||^2 &amp;= \\mathbf{||Y - X\\hat{\\beta}||}^2 + \\mathbf{||X \\hat{\\beta}||}^2 \\\\ &amp;= \\mathbf{(Y - X\\hat{\\beta})&#39;(Y - X\\hat{\\beta}) +(X \\hat{\\beta})&#39;(X \\hat{\\beta})} \\\\ &amp;= \\mathbf{(Y - X\\hat{\\beta})&#39;Y - (Y - X\\hat{\\beta})&#39;X\\hat{\\beta} + \\hat{\\beta}&#39; X&#39;X\\hat{\\beta}} \\\\ &amp;= \\mathbf{(Y-X\\hat{\\beta})&#39;Y + \\hat{\\beta}&#39;X&#39;X(XX&#39;)^{-1}X&#39;Y} \\\\ &amp;= \\mathbf{Y&#39;Y - \\hat{\\beta}&#39;X&#39;Y + \\hat{\\beta}&#39;X&#39;Y} \\end{aligned} \\] where the norm of a (p x 1) vector \\(\\mathbf{a}\\) is defined by: \\[ \\mathbf{||a|| = \\sqrt{a&#39;a}} = \\sqrt{\\sum_{i=1}^p a^2_i} \\] Coefficient of Multiple Determination \\[ R^2 = \\frac{SSR}{SSTO}= 1- \\frac{SSE}{SSTO} \\] Adjusted Coefficient of Multiple Determination \\[ R^2_a = 1 - \\frac{SSE/(n-p)}{SSTO/(n-1)} = 1 - \\frac{(n-1)SSE}{(n-p)SSTO} \\] Sequential and Partial Sums of Squares: In a regression model with coefficients \\(\\beta = (\\beta_0, \\beta_1,...,\\beta_{p-1})&#39;\\), we denote the uncorrected and corrected SS by \\[ SSM = SS(\\beta_0, \\beta_1,...,\\beta_{p-1}) \\\\ SSM_m = SS(\\beta_0, \\beta_1,...,\\beta_{p-1}|\\beta_0) \\] There are 2 decompositions of \\(SSM_m\\): Sequential SS: (not unique -depends on order, also referred to as Type I SS, and is the default of anova() in R) \\[ SSM_m = SS(\\beta_1 | \\beta_0) + SS(\\beta_2 | \\beta_0, \\beta_1) + ...+ SS(\\beta_{p-1}| \\beta_0,...,\\beta_{p-2}) \\] Partial SS: (use more in practice - contribution of each given all of the others) \\[ SSM_m = SS(\\beta_1 | \\beta_0,\\beta_2,...,\\beta_{p-1}) + ... + SS(\\beta_{p-1}| \\beta_0, \\beta_1,...,\\beta_{p-2}) \\] 5.1.3 OLS Assumptions A1 Linearity A2 Full rank A3 Exogeneity of Independent Variables A4 Homoskedasticity A5 Data Generation (random Sampling) A6 Normal Distribution 5.1.3.1 A1 Linearity \\[\\begin{equation} A1: y=\\mathbf{x}\\beta + \\epsilon \\tag{5.1} \\end{equation}\\] Not restrictive x can be nonlinear transformation including interactions, natural log, quadratic With A3 (Exogeneity of Independent), linearity can be restrictive 5.1.3.1.1 Log Model Model Form Interpretation of \\(\\beta\\) In words Level-Level \\(y =\\beta_0+\\beta_1x+\\epsilon\\) \\(\\Delta y = \\beta_1 \\Delta x\\) A unit change in x will result in \\(\\beta_1\\) unit change in y Log-Level \\(ln(y) = \\beta_0 + \\beta_1x + \\epsilon\\) \\(\\% \\Delta y=100 \\beta_1 \\Delta x\\) A unit change in x result in 100 \\(\\beta_1\\) % change in y Level-Log \\(y = \\beta _0 + \\beta_1 ln (x) + \\epsilon\\) \\(\\Delta y = (\\beta_1/ 100)\\%\\Delta x\\) One percent change in x result in \\(\\beta_1/100\\) units change in y Log-Log \\(ln(y) = \\beta_0 + \\beta_1 l n(x) +\\epsilon\\) \\(\\% \\Delta y= \\beta _1 \\% \\Delta x\\) One percent change in x result in \\(\\beta_1\\) percent change in y 5.1.3.1.2 Higher Orders \\(y=\\beta_0 + x_1\\beta_1 + x_1^2\\beta_2 + \\epsilon\\) \\[ \\frac{\\partial y}{\\partial x_1}=\\beta_1 + 2x_1\\beta_2 \\] The effect of \\(x_1\\) on y depends on the level of \\(x_1\\) The partial effect at the average = \\(\\beta_1+2E(x_1)\\beta_2\\) Average Partial Effect = \\(E(\\beta_1 + 2x_1\\beta_2)\\) 5.1.3.1.3 Interactions \\(y=\\beta_0 + x_1\\beta_1 + x_2\\beta_2 + x_1x_2\\beta_3 + \\epsilon\\) \\(\\beta_1\\) is the average effect on y for a unit change in \\(x_1\\) when \\(x_2=0\\) \\(\\beta_1 + x_2\\beta_3\\) is the partial effect of \\(x_1\\) on y which depends on the level of \\(x_2\\) 5.1.3.2 A2 Full rank \\[\\begin{equation} A2: rank(E(x&#39;x))=k \\tag{5.2} \\end{equation}\\] also known as identification condition columns of \\(\\mathbf{x}\\) cannot be written as a linear function of the other columns which ensures that each parameter is unique and exists in the population regression equation 5.1.3.3 A3 Exogeneity of Independent Variables \\[\\begin{equation} A3: E[\\epsilon|x_1,x_2,...,x_k]=E[\\epsilon|\\mathbf{x}]=0 \\tag{5.3} \\end{equation}\\] strict exogeneity also known as mean independence check back on Correlation and Independence by the Law of Iterated Expectations \\(E(\\epsilon)=0\\), which can be satisfied by always including an intercept. independent variables do not carry information for prediction of \\(\\epsilon\\) A3 implies \\(E(y|x)=x\\beta\\), which means the conditional mean function must be a linear function of x A1 Linearity 5.1.3.3.1 A3a Weaker Exogeneity Assumption Exogeneity of Independent variables A3a: \\(E(\\mathbf{x_i&#39;}\\epsilon_i)=0\\) \\(x_i\\) is uncorrelated with \\(\\epsilon_i\\) Correlation and Independence Weaker than mean independence A3 A3 implies A3a, not the reverse No causality interpretations Cannot test the difference 5.1.3.4 A4 Homoskedasticity \\[\\begin{equation} A4: Var(\\epsilon|x)=Var(\\epsilon)=\\sigma^2 \\tag{5.4} \\end{equation}\\] Variation in the disturbance to be the same over the independent variables 5.1.3.5 A5 Data Generation (random Sampling) \\[\\begin{equation} A5: {y_i,x_{i1},...,x_{ik-1}: i = 1,..., n} \\tag{5.5} \\end{equation}\\] is a random sample random sample mean samples are independent and identically distributed (iid) from a joint distribution of \\((y,\\mathbf{x})\\) with A3 and A4, we have Strict Exogeneity: \\(E(\\epsilon_i|x_1,...,x_n)=0\\). independent variables do not carry information for prediction of \\(\\epsilon\\) Non-autocorrelation: \\(E(\\epsilon_i\\epsilon_j|x_1,...,x_n)=0\\) The error term is uncorrelated across the draws conditional on the independent variables \\(\\rightarrow\\) \\(A4: Var(\\epsilon|\\mathbf{X})=Var(\\epsilon)=\\sigma^2I_n\\) In times series and spatial settings, A5 is less likely to hold. 5.1.3.5.1 A5a A stochastic process \\(\\{x_t\\}_{t=1}^T\\) is stationary if for every collection fo time indices \\(\\{t_1,t_2,...,t_m\\}\\), the joint distribution of \\[ x_{t_1},x_{t_2},...,x_{t_m} \\] is the same as the joint distribution of \\[ x_{t_1+h},x_{t_2+h},...,x_{t_m+h} \\] for any \\(h \\ge 1\\) The joint distribution for the first ten observation is the same for the next ten, etc. Independent draws automatically satisfies this A stochastic process \\(\\{x_t\\}_{t=1}^T\\) is weakly stationary if \\(x_t\\) and \\(x_{t+h}\\) are “almost independent” as h increases without bounds. two observation that are very far apart should be “almost independent” Common Weakly Dependent Processes Moving Average process of order 1 (MA(1)) MA(1) means that there is only one period lag. \\[ y_t = u_t + \\alpha_1 u_{t-1} \\\\ E(y_t) = E(u_t) + \\alpha_1E(u_{t-1}) = 0 \\\\ Var(y_t) = var(u_t) + \\alpha_1 var(u_{t-1}) = \\sigma^2 + \\alpha_1^2 \\sigma^2 = \\sigma^2(1+\\alpha_1^2) \\] where \\(u_t\\) is drawn iid over t with variance \\(\\sigma^2\\) An increase in the absolute value of \\(\\alpha_1\\) increases the variance When the MA(1) process can be inverted (\\(|\\alpha|&lt;1\\) then \\[ u_t = y_t - \\alpha_1u_{t-1} \\] called the autoregressive representation (express current observation in term of past observation). We can expand it to more than 1 lag, then we have MA(q) process \\[ y_t = u_t + \\alpha_1 u_{t-1} + ... + \\alpha_q u_{t-q} \\] where \\(u_t \\sim WN(0,\\sigma^2)\\) Covariance stationary: irrespective of the value of the parameters. Invertibility when \\(\\alpha &lt; 1\\) The conditional mean of MA(q) depends on the q lags (long-term memory). In MA(q), all autorcorrealtions beyond q are 0. \\[ \\begin{aligned} Cov(y_t,y_{t-1}) &amp;= Cov(u_t + \\alpha_1 u_{t-1},u_{t-1}+\\alpha_1u_{t-2}) \\\\ &amp;= \\alpha_1var(u_{t-1}) \\\\ &amp;= \\alpha_1\\sigma^2 \\end{aligned} \\] \\[ \\begin{aligned} Cov(y_t,y_{t-2}) &amp;= Cov(u_t + \\alpha_1 u_{t-1},u_{t-2}+\\alpha_{1}u_{t-3}) \\\\ &amp;= 0 \\end{aligned} \\] An MA models a linear relationship between the dependent variable and the current and past values of a stochastic term. Auto regressive process of order 1 (AR(1)) \\[ y_t = \\rho y_{t-1}+ u_t, |\\rho|&lt;1 \\] where \\(u_t\\) is drawn iid over t with variance \\(\\sigma^2\\) \\[ \\begin{aligned} Cov(y_t,y_{t-1}) &amp;= Cov(\\rho y_{t-1} + u-t,y_{t-1}) \\\\ &amp;= \\rho Var(y_{t-1}) \\\\ &amp;= \\rho \\frac{\\sigma^2}{1-\\rho^2} \\end{aligned} \\] \\[ \\begin{aligned} Cov(y_t,y_{t-h}) &amp;= \\rho^h \\frac{\\sigma^2}{1-\\rho^2} \\end{aligned} \\] Stationarity: in the continuum of t, the distribution of each t is the same \\[ E(y_t) = E(y_{t-1}) = ...= E(y_0) \\\\ y_1 = \\rho y_0 + u_1 \\] where the initial observation \\(y_0=0\\) Assume \\(E(y_t)=0\\) \\[ y_t = \\rho^t y_{t-t} + \\rho^{t-1}u_1 + \\rho^{t-2}u_2 +...+ \\rho u_{t-1} + u_t \\\\ = \\rho^t y_0 + \\rho^{t-1}u_1 + \\rho^{t-2}u_2 +...+ \\rho u_{t-1} + u_t \\] Hence, \\(y_t\\) is the weighted of all of the \\(u_t\\) time observations before. y will be correlated with all the previous observations as well as future observations. \\[ Var(y_t) = Var(\\rho y_{t-1} + u_t) \\\\ = \\rho^2 Var(y_{t-1}) + Var(u_t) + 2\\rho Cov(y_{t-1}u_t) \\\\ = \\rho^2 Var(y_{t-1}) + \\sigma^2 \\] Hence, \\[ Var(y_t) = \\frac{\\sigma^2}{1-\\rho^2} \\] to have Variance constantly over time, then \\(\\rho \\neq 1\\) or \\(-1\\). Then stationarity requires \\(\\rho \\neq 1\\) or -1. weakly dependent process \\(|\\rho|&lt;1\\) To estimate the AR(1) process, we use Yule-Walker Equation \\[ y_t = \\epsilon_t + \\phi y_{t-1} \\\\ y_t y_{t-\\tau} = \\epsilon_t y_{t-\\tau} + \\phi y_{t-1}y_{t-\\tau} \\\\ \\] For \\(\\tau \\ge 1\\), we have \\[ \\gamma \\tau = \\phi \\gamma (\\tau -1) \\\\ \\rho_t = \\phi^t \\] when you generalize to pth order autoregressive process, AR(p): \\[ y_t = \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + ... + \\phi_p y_{t-p} + \\epsilon_t \\] AR(p) process is covariance stationary, and decay in autocorrelations. When we combine MA(q) and AR(p), we have ARMA(p,q) process, where you can see seasonality. For example, ARMA(1,1) \\[ y_t = \\phi y_{t-1} + \\epsilon_t + \\alpha \\epsilon_{t-1} \\] Random Walk process \\[ y_t = y_0 + \\sum_{s=1}^{t}u_t \\] not stationary : when \\(y_0 = 0\\) then \\(E(y_t)= 0\\), but \\(Var(y_t)=t\\sigma^2\\). Further along in the spectrum, the variance will be larger not weakly dependent: \\(Cov(\\sum_{s=1}^{t}u_s,\\sum_{s=1}^{t-h}u_s) = (t-h)\\sigma^2\\). So the covariance (fixed) is not diminishing as h increases Assumption A5a: \\(\\{y_t,x_{t1},..,x_{tk-1} \\}\\) where \\(t=1,...,T\\) are stationary and weakly dependent processes. Alternative Weak Law, Central Limit Theorem If \\(z_t\\) is a weakly dependent stationary process with a finite first absolute moment and \\(E(z_t) = \\mu\\), then \\[ T^{-1}\\sum_{t=1}^{T}z_t \\to^p \\mu \\] If additional regulatory conditions hold (Greene 1990), then \\[ \\sqrt{T}(\\bar{z}-\\mu) \\to^d N(0,B) \\] where \\(B= Var(z_t) + 2\\sum_{h=1}^{\\infty}Cov(z_t,z_{t-h})\\) 5.1.3.6 A6 Normal Distribution \\[\\begin{equation} A6: \\epsilon|\\mathbf{x}\\sim N(0,\\sigma^2I_n) \\tag{5.6} \\end{equation}\\] The error term is normally distributed From A1-A3, we have identification (also known as Orthogonality Condition) of the population parameter \\(\\beta\\) \\[ \\begin{aligned} y &amp;= {x}\\beta + \\epsilon &amp;&amp; \\text{A1} \\\\ x&#39;y &amp;= x&#39;x\\beta + x&#39;\\epsilon &amp;&amp; \\text{} \\\\ E(x&#39;y) &amp;= E(x&#39;x)\\beta + E(x&#39;\\epsilon) &amp;&amp; \\text{} \\\\ E(x&#39;y) &amp;= E(x&#39;x)\\beta &amp;&amp; \\text{A3} \\\\ [E(x&#39;x)]^{-1}E(x&#39;y) &amp;= [E(x&#39;x)]^{-1}E(x&#39;x)\\beta &amp;&amp; \\text{A2} \\\\ [E(x&#39;x)]^{-1}E(x&#39;y) &amp;= \\beta \\end{aligned} \\] \\(\\beta\\) is the row vector of parameters that produces the best predictor of y we choose the min of \\(\\gamma\\) : \\[ \\underset{\\gamma}{\\operatorname{argmin}}E((y-x\\gamma)^2) \\] First Order Condition \\[ \\begin{split} \\frac{\\partial((y-x\\gamma)^2)}{\\partial\\gamma}&amp;=0 \\\\ -2E(x&#39;(y-x\\gamma))&amp;=0 \\\\ E(x&#39;y)-E(x&#39;x\\gamma) &amp;=0 \\\\ E(x&#39;y) &amp;= E(x&#39;x)\\gamma \\\\ (E(x&#39;x))^{-1}E(x&#39;y) &amp;= \\gamma \\end{split} \\] Second Order Condition \\[ \\begin{split} \\frac{\\partial^2E((y-x\\gamma)^2)}{}&amp;=0 \\\\ E(\\frac{\\partial(y-x\\partial)^2)}{\\partial\\gamma\\partial\\gamma&#39;}) &amp;= 2E(x&#39;x) \\end{split} \\] If A3 holds, then \\(2E(x&#39;x)\\) is PSD \\(\\rightarrow\\) minimum 5.1.4 Theorems 5.1.4.1 Frisch-Waugh-Lovell Theorem \\[ \\mathbf{y=X\\beta + \\epsilon=X_1\\beta_1+X_2\\beta_2 +\\epsilon} \\] Equivalently, \\[ \\left( \\begin{array} {cc} X_1&#39;X_1 &amp; X_1&#39;X_2 \\\\ X_2&#39;X_1 &amp; X_2&#39;X_2 \\end{array} \\right) \\left( \\begin{array} {c} \\hat{\\beta_1} \\\\ \\hat{\\beta_2} \\end{array} \\right) = \\left( \\begin{array}{c} X_1&#39;y \\\\ X_2&#39;y \\end{array} \\right) \\] Hence, \\[ \\mathbf{\\hat{\\beta_1}=(X_1&#39;X_1)^{-1}X_1&#39;y - (X_1&#39;X_1)^{-1}X_1&#39;X_2\\hat{\\beta_2}} \\] Betas from the multiple regression are not the same as the betas from each of the individual simple regression Different set of X will affect all the coefficient estimates. If \\(X_1&#39;X_2 = 0\\) or \\(\\hat{\\beta_2}=0\\), then 1 and 2 do not hold. 5.1.4.2 Gauss-Markov Theorem For a linear regression model \\[ \\mathbf{y=X\\beta + \\epsilon} \\] Under A1, A2, A3, A4, OLS estimator defined as \\[ \\hat{\\beta} = \\mathbf{(X&#39;X)^{-1}X&#39;y} \\] is the minimum variance linear (in y) unbiased estimator of \\(\\beta\\) Let \\(\\tilde{\\beta}=\\mathbf{Cy}\\), be another linear estimator where \\(\\mathbf{C}\\) is k x n and only function of X), then for it be unbiased, \\[ \\begin{split} E(\\tilde{\\beta}|\\mathbf{X}) &amp;= E(\\mathbf{Cy|X}) \\\\ &amp;= E(\\mathbf{CX\\beta + C\\epsilon|X}) \\\\ &amp;= \\mathbf{CX\\beta} \\end{split} \\] which equals the true parameter \\(\\beta\\) only if \\(\\mathbf{CX=I}\\) Equivalently, \\(\\tilde{\\beta} = \\beta + \\mathbf{C}\\epsilon\\) and the variance of the estimator is \\(Var(\\tilde{\\beta}|\\mathbf{X}) = \\sigma^2\\mathbf{CC&#39;}\\) To show minimum variance, \\[ \\begin{split} &amp;=\\sigma^2\\mathbf{(C-(X&#39;X)^{-1}X&#39;)(C-(X&#39;X)^{-1}X&#39;)&#39;} \\\\ &amp;= \\sigma^2\\mathbf{(CC&#39; - CX(X&#39;X)^{-1})-(X&#39;X)^{-1}X&#39;C + (X&#39;X)^{-1}X&#39;X(X&#39;X)^{-1})} \\\\ &amp;= \\sigma^2 (\\mathbf{CC&#39; - (X&#39;X)^{-1}-(X&#39;X)^{-1} + (X&#39;X)^{-1}}) \\\\ &amp;= \\sigma^2\\mathbf{CC&#39;} - \\sigma^2(\\mathbf{X&#39;X})^{-1} \\\\ &amp;= Var(\\tilde{\\beta}|\\mathbf{X}) - Var(\\hat{\\beta}|\\mathbf{X}) \\end{split} \\] Hierarchy of OLS Assumptions Identification Data Description Unbiasedness Consistency Gauss- Markov (BLUE) Asymptotic Inference (z and Chi-squared) Classical LM (BUE) Small-sample Inference (t and F) Variation in X Variation in X Variation in X Variation in X Random Sampling Random Sampling Random Sampling Linearity in Parameters Linearity in Parameters Linearity in Parameters Zero Conditional Mean Zero Conditional Mean Zero Conditional Mean H omoskedasticity H omoskedasticity Normality of Errors 5.1.5 Variable Selection depends on Objectives or goals Previously acquired expertise availability of data availability of computer software Let P - 1 be the number of possible X variables 5.1.5.1 Mallows’s \\(C_p\\) Statistic (Mallows, 1973, Technometrics, 15, 661-675) A measure of the predictive ability of a fitted model Let \\(\\hat{Y}_{ip}\\) be the predicted value of \\(Y_i\\) using the model with p parameters. The total standardized mean square error of prediction is: \\[ \\Gamma_p = \\frac{\\sum_{i=1}^n E(\\hat{Y}_{ip}-E(Y_i))^2}{\\sigma^2} \\\\ = \\frac{\\sum_{i=1}^n [E(\\hat{Y}_{ip})-E(Y_i)]^2+\\sum_{i=1}^n var(\\hat{Y}_{ip})}{\\sigma^2} \\] the first term in the numerator is the (bias)^2 term and the 2nd term is the prediction variance term. bias term decreases as more variables are added to the model. if we assume the full model (p=P) is the true model, then \\(E(\\hat{Y}_{ip}) - E(Y_i) = 0\\) and the bias is 0. Prediction variance increase as more variables are added to the model \\(\\sum var(\\hat{Y}_{ip}) = p \\sigma^2\\) thus, a tradeoff between bias and variance terns is achieved by minimizing \\(\\Gamma_p\\). Since \\(\\Gamma_p\\) is unknown (due to \\(\\beta\\)). we use an estimate: \\(C_p = \\frac{SSE_p}{\\hat{\\sigma^2}}- (n-2p)\\) which is an unbiased estimate of \\(\\Gamma_p\\) As more variables are added to the model, the \\(SSE_p\\) decreases but 2p increases. where \\(\\hat{\\sigma^2}=MSE(X_1,..,X_{P-1})\\) the MSE with all possible X variables in the model. when there is no bias then \\(E(C_p) \\approx p\\). Thus, good models have \\(C_p\\) close to p. Prediction: consider models with \\(C_p \\le p\\) Parameter estimation: consider models with \\(C_p \\le 2p -(P-1)\\). Fewer variables should be eliminated from the model to avoid excess bias in the estimates. 5.1.5.2 Akaike Information Criterion (AIC) \\[ AUC = n ln(\\frac{SSE_p}{n}) + 2p \\] increasing p (number of parameters) leads first-term decreases, and second-term increases. We want model with small values of AIC. If the AIC increases when a parameter is added to the model, that parameter is not needed. AIC represents a tradeoff between precision of fit against the number of parameters used. 5.1.5.3 Bayes (or Schwarz) Information Criterion \\[ BIC = n \\ln(\\frac{SSE_p}{n})+ (\\ln n)p \\] The coefficient in front of p tends to penalize more heavily models with a larger number of parameters (as compared to AIC). 5.1.5.4 Prrediciton Error Sum of Squares (PRESS) \\[ PRESS_p = \\sum_{i=1}^{n} (Y_i - \\hat{Y}_{i(i)})^2 \\] where \\(\\hat{Y}_{i(i)}\\) is the prediction of the i-th response when the i-th observation is not used, obtained for the model with p parameters. evaluates the predictive ability of a postulated model by omitting one observation at a time. we want small \\(PRESS_p\\) values It can be computationally intensive when you have large p. 5.1.5.5 Best Subsets Algorithm “leap and bounds” algorithm of (Furnival and Wilson 2000) combines comparison of SSE for different subset models with control over the sequence in which the subset regression are computed. Guarantees finding the best m subset regressions within each subset size with less computational burden than all possible subsets. library(&quot;leaps&quot;) regsubsets() 5.1.5.6 Stepwise Selection Procedures The forward stepwise procedure: finds a plausible subset sequentially. at each step, a variable is added or deleted. criterion for adding or deleting is based on SSE, \\(R^2\\), T, or F-statistic. Note: Instead of using exact F-values, computer packages usually specify the equivalent “significance” level. For example, SLE is the “significance” level to enter, and SLS is the “significance” level to stay. The SLE and SLS are guides rather than true tests of significance. The choice of SLE and SLS represents a balancing of opposing tendencies. Use of large SLE values tends to result in too many predictor variables; models with small SLE tend to be under-specified resulting in \\(\\sigma^2\\) being badly overestimated. As for choice of SLE, can choose between 0.05 and 0.5. If SLE &gt; SLS then a cycling pattern may occur. Although most computer packages can detect can stop when it happens. A quick fix: SLS = SLE /2 (Bendel and Afifi 1977). If SLE &lt; SLS then the procedure is conservative and may lead variables with low contribution to be retained. Order of variable entry does not matter. Automated Selection Procedures: Forward selection: Same idea as forward stepwise except it doesn’t test if variables should be dropped once enter. (not as good as forward stepwise). Backward Elimination: begin with all variables and identifies the one with the smallest F-value to be dropped. 5.1.6 Diagnostics 5.1.6.1 Normality of errors could use Methods based on normal probability plot or Methods based on empirical cumulative distribution function or plots such as y = 1:100 x = rnorm(100) qqplot(x,y) 5.1.6.2 Influential observations/outliers 5.1.6.2.1 Hat matrix \\[ \\mathbf{H = X(X&#39;X)^{-1}} \\] where \\(\\mathbf{\\hat{Y}= HY, e = (I-H)Y}\\) and \\(var(\\mathbf{e}) = \\sigma^2 (\\mathbf{I-H})\\) \\(\\sigma^2(e_i) = \\sigma^2 (1-h_{ii})\\), where \\(h_{ii}\\) is the i-th element of the main diagonal of \\(\\mathbf{H}\\) (must be between 0 and 1). \\(\\sum_{i=1}^{n} h_{ii} = p\\) \\(cov(e_i,e_j) = -h_{ii}\\sigma^2\\) where \\(i \\neq j\\) Estimate: \\(s^2(e_i) = MSE (1-h_{ii})\\) Estimate: \\(\\hat{cov}(e_i,e_j) = -h_{ij}(MSE)\\); if model assumption are correct, this covariance is very small for large data sets. If \\(\\mathbf{x}_i = [1 X_{i,1} ... X_{i,p-1}]&#39;\\) (the vector of X-values for a given response), then \\(h_{ii} = \\mathbf{x_i&#39;(X&#39;X)^{-1}x_i}\\) (depends on relative positions of the design points \\(X_{i,1},...,X_{i,p-1}\\)) 5.1.6.2.2 Studentized Residuals \\[ r_i = \\frac{e_i}{s(e_i)} \\\\ r_i \\sim N(0,1) \\] where \\(s(e_i) = \\sqrt{MSE(1-h_{ii})}\\). \\(r_i\\) is called the studentized residual or standardized residual. you can use the semi-studentized residual before, \\(e_i^*= e_i \\sqrt{MSE}\\). This doesn’t take into account the different variances for each \\(e_i\\). We would want to see the model without a particular value. You delete the i-th case, fit the regression to the remaining n-1 cases, get estimated responses for the i-th case, \\(\\hat{Y}_{i(i)}\\), and find the difference, called the deleted residual: \\[ d_i = Y_i - \\hat{Y}_{i(i)} \\\\ = \\frac{e_i}{1-h_{ii}} \\] we don’t need to recompute the regression model for each case As \\(h_{ii}\\) increases, \\(d_i\\) increases. \\[ s^2(d_i)= \\frac{MSE_{(i)}}{1-h_{ii}} \\] where \\(MSE_{(i)}\\) is the mean square error when the i-th case is omitted. Let \\[ t_i = \\frac{d_i}{s(d_i)} = \\frac{e_i}{\\sqrt{MSE_{(i)}(1-h_{ii})}} \\] be the studentized deleted residual, which follows a t-distribution with n-p-1 df. \\[ (n-p)MSE = (n-p-1)MSE_{(i)}+ \\frac{e^2_{i}}{1-h_{ii}} \\] hence, we do not need to fit regressions for each case and \\[ t_i = e_i (\\frac{n-p-1}{SSE(1-h_{ii})-e^2_i})^{1/2} \\] The outlying Y-observations are those cases whose studentized deleted residuals are large in absolute value. If there are many residuals to consider, a Bonferroni critical value can be can (\\(t_{1-\\alpha/2n;n-p-1}\\)) Outlying X Observations Recall, \\(0 \\le h_{ii} \\le 1\\) and \\(\\sum_{i=1}^{n}h_{ii}=p\\) (the total number of parameters) A large \\(h_{ii}\\) indicates that the i-th case is distant from the center of all X observations (the leverage of the i-th case). That is, a large value suggests that the observation exercises substantial leverage in determining the fitted value \\(\\hat{Y}_i\\) We have \\(\\mathbf{\\hat{Y}=HY}\\), a linear combination of Y-values; \\(h_{ii}\\) is the weight of the observation \\(Y_i\\); so \\(h_{ii}\\) measures the role of the X values in determining how important \\(Y_i\\) is in affecting the \\(\\hat{Y}_i\\). Large \\(h_{ii}\\) implies \\(var(e_i)\\) is small, so larger \\(h_{ii}\\) implies that \\(\\hat{Y}_i\\) is close to \\(Y_i\\) small data sets: \\(h_{ii} &gt; .5\\) suggests “large”. large data sets: \\(h_{ii} &gt; \\frac{2p}{n}\\) is “large. Using the hat matrix to identify extrapolation: Let \\(\\mathbf{x_{new}}\\) be a vector containing the X values for which an inference about a mean response or a new observation is to be made. Let \\(\\mathbf{X}\\) be the data design matrix used to fit the data. Then, if \\(h_{new,new} = \\mathbf{x_{new}(X&#39;X)^{-1}x_{new}}\\) is within the range of leverage values (\\(h_{ii}\\)) for cases in the data set, no extrapolation is involved; otherwise; extrapolation is indicated. Identifying Influential Cases: by influential we mean that exclusion of an observation causes major changes int he fitted regression. (not all outliers are influential) Influence on Single Fitted Values: DFFITS Influence on All Fitted Values: Cook’s D Influence on the Regression Coefficients: DFBETAS 5.1.6.2.3 DFFITS Influence on Single Fitted Values: DFFITS \\[ (DFFITS)_i = \\frac{\\hat{Y}_i - \\hat{Y}_{i(i)}}{\\sqrt{MSE_{(i)}h_{ii}}} \\\\ = t_i (\\frac{h_{ii}}{1-h_{ii}})^{1/2} \\] the standardized difference between the i-th fitted value with all observations and with the i-th case removed. studentized deleted residual multiplied by a factor that is a function fo the i-th leverage value. influence if: small to medium data sets: \\(|DFFITS|&gt;1\\) large data sets: \\(|DFFITS|&gt; 2 \\sqrt{p/n}\\) 5.1.6.2.4 Cook’s D Influence on All Fitted Values: Cook’s D \\[ D_i = \\frac{\\sum_{j=1}^{n}(\\hat{Y}_j - \\hat{Y}_{j(i)})^2}{p(MSE)} \\\\ = \\frac{e^2_i}{p(MSE)}(\\frac{h_{ii}}{(1-h_{ii})^2}) \\] gives the influence of i-th case on all fitted values. If \\(e_i\\) increases or \\(h_{ii}\\) increases, then \\(D_i\\) increases. \\(D_i\\) is a percentile of an \\(F_{(p,n-p)}\\) distribution. If the percentile is greater than \\(.5(50\\%)\\) then the i-th case has major influence. In practice, if \\(D_i &gt;4/n\\), then the i-th case has major influence. 5.1.6.2.5 DFBETAS Influence on the Regression Coefficients: DFBETAS \\[ (DFBETAS)_{k(i)} = \\frac{b_k - b_{k(i)}}{\\sqrt{MSE_{(i)}c_{kk}}} \\] for \\(k = 0,...,p-1\\) and \\(c_{kk}\\) si the k-th diagonal element of \\(\\mathbf{X&#39;X}^{-1}\\) Influence of the i-th case on each regression coefficient \\(b_k\\) (k=0,..,p-1) is the difference between the estimated regression coefficients based on all n cases and the regression coefficients obtained when the i-th case is omitted (\\(b_{k(i)}\\)) small data sets: \\(|DFBETA|&gt;1\\) large data sets: \\(|DFBETA| &gt; 2\\sqrt{n}\\) Sign of DFBETA inculcates whether inclusion of a case leads to an increase or a decrease in estimates of the regression coefficient. 5.1.6.3 Collinearity Multicollinearity refers to correlation among explanatory variables. large changes in the estimated regression coefficient when a predictor variable is added or deleted, or when an observation is altered or deleted. noninsignificant results in individual tests on regression coefficients for important predictor variables. estimated regression coefficients with an algebraic sign that is the opposite of that expected from theoretical consideration or prior experience. large coefficients of simple correlation between pairs of predictor variables in the correlation matrix. wide confidence intervals for the regression coefficients representing important predictor variables. When some of X variables are so highly correlated that the inverse \\((X&#39;X)^{-1}\\) does not exist or is very computationally unstable. Correlated Predictor Variables: if some X variables are “perfectly” correlated, the system is undetermined and there are an infinite number of models that fit the data. That is, if \\(X&#39;X\\) is singular, then \\((X&#39;X)^{-1}\\) doesn’t exist. Then, parameters cannot be interpreted (\\(\\mathbf{b = (X&#39;X)^{-1}X&#39;y}\\)) sampling variability is infinite (\\(\\mathbf{s^2(b) = MSE (X&#39;X)^{-1}}\\)) 5.1.6.3.1 VIFs Let \\(R^2_k\\) be the coefficient of multiple determination when \\(X_k\\) is regressed on the p - 2 other X variables in the model. Then, \\[ VIF_k = \\frac{1}{1-R^2_k} \\] large values indicate that a near collinearity is causing the variance of \\(b_k\\) to be inflated, \\(var(b_k) \\propto \\sigma^2 (VIF_k)\\) Typically, the rule of thumb is that \\(VIF &gt; 4\\) mean you should see why this is the case, and \\(VIF_k &gt; 10\\) indicates a serious problem collinearity problem that could result in poor parameters estimates. the mean of all VIF’s provide an estimate of the ratio of the true multicollinearity to a model where the X variables are uncorrelated serious multicollinearity if \\(avg(VIF) &gt;&gt;1\\) 5.1.6.3.2 Condition Number Condition Number spectral decomposition \\[ \\mathbf{X&#39;X}= \\sum_{i=1}^{p} \\lambda_i \\mathbf{u_i u_i&#39;} \\] where \\(\\lambda_i\\) is the eigenvalue and \\(\\mathbf{u}_i\\) is the eigenvector. \\(\\lambda_1 &gt; ...&gt;\\lambda_p\\) and the eigenvecotrs are orthogonal: \\[ \\begin{cases} \\mathbf{u_i&#39;u_j} = 0&amp;\\text{for $i \\neq j$}\\\\ 1&amp;\\text{for $i =j$}\\\\ \\end{cases} \\] The condition number is then \\[ k = \\sqrt{\\frac{\\lambda_{max}}{\\lambda_{min}}} \\] values \\(k&gt;30\\) are cause for concern values \\(30&lt;k&lt;100\\) imply moderate dependencies. values \\(k&gt;100\\) imply strong collinearity Condition index \\[ \\delta_i = \\sqrt{\\frac{\\lambda_{max}}{\\lambda_i}} \\] where \\(i = 1,...,p\\) we can find the proportion of the total variance associated with the k-th regression coefficient and the i-th eigen mode: \\[ \\frac{u_{ik}^2/\\lambda_i}{\\sum_j (u^2_{jk}/\\lambda_j)} \\] These variance proportions can be helpful for identifying serious collinearity the condition index must be large the variance proportions must be large (&gt;,5) for at least two regression coefficients. 5.1.6.4 Constancy of Error Variance 5.1.6.4.1 Brown-Forsythe Test (Modified Levene Test) Does not depend on normality Applicable when error variance increases or decreases with X relatively large sample size needed (so we can ignore dependency between residuals) Split residuals into 2 groups (\\(e_{i1}, i = 1, ..., n_1; e_{i2}, j=1,...,n_2\\)) Let \\(d_{i1}= |e_{i1}-\\tilde{e}_{1}|\\) where \\(\\tilde{e}_{1}\\) is the median of group 1. Let \\(d_{j2}=|e_{j2}-\\tilde{e}_{2}|\\). Then, a 2-sample t-test: \\[ t_L = \\frac{\\bar{d}_1 - \\bar{d}_2}{s\\sqrt{1/n_1+1/n_2}} \\] where \\[ s^2 = \\frac{\\sum_i(d_{i1}-\\bar{d}_1)^2+\\sum_j(d_{j2}-\\bar{d}_2)^2}{n-2} \\] If \\(|t_L|&gt;t_{1-\\alpha/2;n-2}\\) conclude the error variance is not constant. 5.1.6.4.2 Breusch-Pagan Test (Cook-Weisberg Test) Assume the error terms are independent and normally distributed, and \\[ \\sigma^2_i = \\gamma_0 + \\gamma_1 X_i \\] Constant error variance corresponds to \\(\\gamma_1 = 0\\), i.e., test \\(H_0: \\gamma_1 =0\\) \\(H_1: \\gamma_1 \\neq 0\\) by regressing the squared residuals on X in the usual manner. Obtain the regression sum of squares from this: SSR* (the SSR from the regression of \\(e^2_i\\) on \\(X_i\\)). Then, define \\[ X^2_{BP} = \\frac{SSR*/2}{(SSE/n)^2} \\] where SSE is the error sum of squares from the regression of Y on X. If \\(H_0: \\gamma_1 = 0\\) holds and n is reasonably large, \\(X^2_{BP}\\) follows approximately the \\(\\chi^2\\) distribution with 1 d.f. We reject \\(H_0\\) (Homogeneous variance) if \\(X^2_{BP} &gt; \\chi^2_{1-\\alpha;1}\\) 5.1.6.5 Independence 5.1.6.5.1 Plots 5.1.6.5.2 Durbin-Watson 5.1.6.5.3 Time-series 5.1.6.5.4 Spatial Statistics 5.1.7 Model Validation split data into 2 groups: training (model building) sample and validation (prediction) sample. the model MSE will tend to underestimate the inherent variability in making future predictions. to consider actual predictive ability, consider mean squared prediction error (MSPE): \\[ MSPE = \\frac{\\sum_{i=1}^{n} (Y_i- \\hat{Y}_i)^2}{n^*} \\] where \\(Y_i\\) is the known value of the response variable in the i-th validation case. \\(\\hat{Y}_i\\) is the predicted value based on a model fit with the training data set. \\(n^*\\) is the number of cases in the validation set. we want MSPE to be close to MSE (in which MSE is not biased); so look at the the ratio MSPE / MSE (closer to 1, the better). 5.1.8 Finite Sample Properties n is fixed Bias On average, how close is our estimate to the true value \\(Bias = E(\\hat{\\beta}) -\\beta\\) where \\(\\beta\\) is the true parameter value and \\(\\hat{\\beta}\\) is the estimator for \\(\\beta\\) An estimator is unbiased when \\(Bias = E(\\hat{\\beta}) -\\beta = 0\\) or \\(E(\\hat{\\beta})=\\beta\\) means that the estimator will produce estimates that are, on average, equal to the value it it trying to estimate Distribution of an estimator: An estimator is a function of random variables (data) Standard Deviation: the spread of the estimator. OLS Under A1 A2 A3, OLS is unbiased \\[ \\begin{aligned} E(\\hat{\\beta}) &amp;= E(\\mathbf{(X&#39;X)^{-1}X&#39;y}) &amp;&amp; \\text{A2}\\\\ &amp;= E(\\mathbf{(X&#39;X)^{-1}X&#39;(X\\beta + \\epsilon)}) &amp;&amp; \\text{A1}\\\\ &amp;= E(\\mathbf{(X&#39;X)^{-1}X&#39;X\\beta + (X&#39;X)^{-1}X&#39;\\epsilon}) &amp;&amp; \\text{} \\\\ &amp;= E(\\beta + \\mathbf{(X&#39;X)^{-1}X&#39;\\epsilon}) \\\\ &amp;= \\beta + E(\\mathbf{(X&#39;X^{-1}\\epsilon)}) \\\\ &amp;= \\beta + E(E((\\mathbf{X&#39;X)^{-1}X&#39;\\epsilon|X})) &amp;&amp;\\text{LIE} \\\\ &amp;= \\beta + E((\\mathbf{X&#39;X)^{-1}X&#39;}E\\mathbf{(\\epsilon|X})) \\\\ &amp;= \\beta + E((\\mathbf{X&#39;X)^{-1}X&#39;}0)) &amp;&amp; \\text{A3} \\\\ &amp;= \\beta \\end{aligned} \\] where LIE stands for Law of Iterated Expectation If A3 does not hold, then OLS will be biased From Frisch-Waugh-Lovell Theorem, if we have the omitted variable \\(\\hat{\\beta}_2 \\neq 0\\) and \\(\\mathbf{X_1&#39;X_2} \\neq 0\\), then the omitted variable will cause OLS estimator to be biased. Under A1 A2 A3 A4, we have the conditional variance of the OLS estimator as follows] \\[ \\begin{aligned} Var(\\hat{\\beta}|\\mathbf{X}) &amp;= Var(\\beta + \\mathbf{(X&#39;X)^{-1}X&#39;\\epsilon|X}) &amp;&amp; \\text{A1-A2}\\\\ &amp;= Var((\\mathbf{X&#39;X)^{-1}X&#39;\\epsilon|X)} \\\\ &amp;= \\mathbf{X&#39;X^{-1}X&#39;} Var(\\epsilon|\\mathbf{X})\\mathbf{X(X&#39;X)^{-1}} \\\\ &amp;= \\mathbf{X&#39;X^{-1}X&#39;} \\sigma^2I \\mathbf{X(X&#39;X)^{-1}} &amp;&amp; \\text{A4} \\\\ &amp;= \\sigma^2\\mathbf{X&#39;X^{-1}X&#39;} I \\mathbf{X(X&#39;X)^{-1}} \\\\ &amp;= \\sigma^2\\mathbf{(X&#39;X)^{-1}} \\end{aligned} \\] Sources of variation \\(\\sigma^2=Var(\\epsilon_i|\\mathbf{X})\\) The amount of unexplained variation \\(\\epsilon_i\\) is large relative to the explained \\(\\mathbf{x_i \\beta}\\) variation “Small” \\(Var(x_{i1}), Var(x_{i1}),..\\) Not a lot of variation in \\(\\mathbf{X}\\) (no information) small sample size “Strong” correlation between the explanatory variables \\(x_{i1}\\) is highly correlated with a linear combination of 1, \\(x_{i2}\\), \\(x_{i3}\\), … include many irrelevant variables will contribute to this. If \\(x_1\\) is perfectly determined in the regression \\(\\rightarrow\\) Perfect Collinearity \\(\\rightarrow\\) A2 is violated. If \\(x_1\\) is highly correlated with a linear combination of other variables, then we have Multicollinearity 5.1.8.1 Check for Multicollinearity Variance Inflation Factor (VIF) Rule of thumb \\(VIF \\ge 10\\) is large \\[ VIF = \\frac{1}{1-R_1^2} \\] 5.1.8.2 Standard Errors \\(Var(\\hat{\\beta}|\\mathbf{X})=\\sigma^2\\mathbf{(X&#39;X)^{-1}}\\) is the variance of the estimate \\(\\hat{\\beta}\\) Standard Errors are estimators/estimates of the standard deviation (square root of the variance) of the estimator \\(\\hat{\\beta}\\) Under A1-A5, then we can estimate \\(\\sigma^2=Var(\\epsilon^2|\\mathbf{X})\\) the standard errors as \\[ s^2 = \\frac{1}{n-k}\\sum_{i=1}^{n}e_i^2 \\\\ = \\frac{1}{n-k}SSR \\] degrees of freedom adjustment: because \\(e_i \\neq \\epsilon_i\\) and are estimated using k estimates for \\(\\beta\\), we lose degrees of freedom in our variance estimate. \\(s=\\sqrt{s^2}\\) is a biased estimator for the standard deviation ([Jensen’s Inequality]) Standard Errors for \\(\\hat{\\beta}\\) \\[ SE(\\hat{\\beta}_{j-1})=s\\sqrt{[(\\mathbf{X&#39;X})^{-1}]_{jj}} \\\\ = \\frac{s}{\\sqrt{SST_{j-1}(1-R_{j-1}^2)}} \\] where \\(SST_{j-1}\\) and \\(R_{j-1}^2\\) from the following regression \\(x_{j-1}\\) on 1, \\(x_1\\),… \\(x_{j-2}\\),\\(x_j\\),\\(x_{j+1}\\), …, \\(x_{k-1}\\) Summary of Finite Sample Properties Under A1-A3: OLS is unbiased Under A1-A4: The variance of the OLS estimator is \\(Var(\\hat{\\beta}|\\mathbf{X})=\\sigma^2\\mathbf{(X&#39;X)^{-1}}\\) Under A1-A4, A6: OLS estimator \\(\\hat{\\beta} \\sim N(\\beta,\\sigma^2\\mathbf{(X&#39;X)^{-1}})\\) Under A1-A4, Gauss-Markov Theorem holds \\(\\rightarrow\\) OLS is BLUE Under A1-A5, the above standard errors are unbiased estimator of standard deviation for \\(\\hat{\\beta}\\) 5.1.9 Large Sample Properties let \\(n \\rightarrow \\infty\\) A perspective that allows us to evaluate the “quality” of estimators when finite sample properties are not informative, or impossible to compute consistency, asymptotic distribution, asymptotic variance Motivation Finite Sample Properties need strong assumption A1 A3 A4 A6 Other estimation such as GLS, MLE need to be analyzed using Large Sample Properties Let \\(\\mu(\\mathbf{X})=E(y|\\mathbf{X})\\) be the Conditional Expectation Function \\(\\mu(\\mathbf{X})\\) is the minimum mean squared predictor (over all possible functions) \\[ minE((y-f(\\mathbf{X}))^2) \\] under A1 and A3, \\[ \\mu(\\mathbf{X})=\\mathbf{X}\\beta \\] Then the linear projection \\[ L(y|1,\\mathbf{X})=\\gamma_0 + \\mathbf{X}Var(X)^{-1}Cov(X,Y) \\] where \\(\\mathbf{X}Var(X)^{-1}Cov(X,Y)=\\gamma\\) is the minimum mean squared linear approximation to be conditional mean function \\[ (\\gamma_0,\\gamma) = arg min E((E(y|\\mathbf{X})-(a+\\mathbf{Xb})^2) \\] OLS is always consistent for the linear projection, but not necessarily unbiased. Linear projection has no causal interpretation Linear projection does not depend on assumption A1 and A3 Evaluating an estimator using large sample properties: Consistency: measure of centrality Limiting Distribution: the shape of the scaled estimator as the sample size increases Asymptotic variance: spread of the estimator with regards to its limiting distribution. An estimator \\(\\hat{\\theta}\\) is consistent for \\(\\theta\\) if \\(\\hat{\\theta}_n \\to^p \\theta\\) As n increases, the estimator converges to the population parameter value. Unbiased does not imply consistency and consistency does not imply unbiased. Based on Weak Law of Large Numbers \\[ \\begin{split} \\hat{\\beta} &amp;= \\mathbf{(X&#39;X)^{-1}X&#39;y} \\\\ &amp;= \\mathbf{(\\sum_{i=1}^{n}x_i&#39;x_i)^{-1} \\sum_{i=1}^{n}x_i&#39;y_i} \\\\ &amp;= (n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;x_i)^{-1}} n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;y_i} \\end{split} \\] \\[ \\begin{split} plim(\\hat{\\beta}) &amp;= plim((n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;x_i)^{-1}} n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;y_i}) \\\\ &amp;= plim((n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;x_i)^{-1}})plim(n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;y_i}) \\\\ &amp;= (plim(n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;x_i)^{-1}})plim(n^{-1}\\mathbf{\\sum_{i=1}^{n}x_i&#39;y_i}) \\text{ due to A2, A5} \\\\ &amp;= E(\\mathbf{x_i&#39;x_i})^{-1}E(\\mathbf{x_i&#39;y_i}) \\end{split} \\] \\[ E(\\mathbf{x_i&#39;x_i})^{-1}E(\\mathbf{x_i&#39;y_i}) = \\beta + E(\\mathbf{x_i&#39;x_i})^{-1}E(\\mathbf{x_i&#39;\\epsilon_i}) \\] Under A1, A2, A3a, A5 OLS is consistent, but not guarantee unbiased. Under A1, A2, A3a, A5, and \\(\\mathbf{x_i&#39;x_i}\\) has finite first and second moments (CLT), \\(Var(\\mathbf{x_i&#39;}\\epsilon_i)=\\mathbf{B}\\) \\((n^{-1}\\sum_{i=1}^{n}\\mathbf{x_i&#39;x_i})^{-1} \\to^p (E(\\mathbf{x&#39;_ix_i}))^{-1}\\) \\(\\sqrt{n}(n^{-1}\\sum_{i=1}^{n}\\mathbf{x_i&#39;}\\epsilon_i) \\to^d N(0,\\mathbf{B})\\) \\[ \\sqrt{n}(\\hat{\\beta}-\\beta) = (n^{-1}\\sum_{i=1}^{n}\\mathbf{x_i&#39;x_i})^{-1}\\sqrt{n}(n^{-1}\\sum_{i=1}^{n}\\mathbf{x_i&#39;x_i}) \\to^{d} N(0,\\Sigma) \\] where \\(\\Sigma=(E(\\mathbf{x_i&#39;x_i}))^{-1}\\mathbf{B}(E(\\mathbf{x_i&#39;x_i}))^{-1}\\) holds under A3a Do not need A4 and A6 to apply CLT If A4 does not hold, then \\(\\mathbf{B}=Var(\\mathbf{x_i&#39;}\\epsilon_i)=\\sigma^2E(x_i&#39;x_i)\\) which means \\(\\Sigma=\\sigma^2(E(\\mathbf{x_i&#39;x_i}))^{-1}\\), use standard errors Heteroskedasticity can be from Limited dependent variable Dependent variables with large/skewed ranges Solving Asymptotic Variance \\[ \\begin{aligned} \\Sigma &amp;= (E(\\mathbf{x_i&#39;x_i}))^{-1}\\mathbf{B}(E(\\mathbf{x_i&#39;x_i}))^{-1} \\\\ &amp;= (E(\\mathbf{x_i&#39;x_i}))^{-1}Var(\\mathbf{x_i&#39;}\\epsilon_i)(E(\\mathbf{x_i&#39;x_i}))^{-1} \\\\ &amp;= (E(\\mathbf{x_i&#39;x_i}))^{-1}E[(\\mathbf{x_i&#39;}\\epsilon_i-0)(\\mathbf{x_i&#39;}\\epsilon_i-0)](E(\\mathbf{x_i&#39;x_i}))^{-1} &amp; \\text{A3a} \\\\ &amp;= (E(\\mathbf{x_i&#39;x_i}))^{-1}E[E(\\mathbf{\\epsilon_i^2|x_i)x_i&#39;x_i]}(E(\\mathbf{x_i&#39;x_i}))^{-1} &amp; \\text{LIE} \\\\ &amp;= (E(\\mathbf{x_i&#39;x_i}))^{-1}\\sigma^2E(\\mathbf{x_i&#39;x_i})(E(\\mathbf{x_i&#39;x_i}))^{-1} &amp; \\text{A4} \\\\ &amp;= \\sigma^2(E(\\mathbf{x_i&#39;x_i})) \\end{aligned} \\] Under A1, A2, A3a, A4, A5: \\[ \\sqrt{n}(\\hat{\\beta}-\\beta) \\to^d N(0,\\sigma^2(E(\\mathbf{x_i&#39;x_i}))^{-1}) \\] The Asymptotic variance is approximation for the variance in the scaled random variable for \\(\\sqrt{n}(\\hat{\\beta}-\\beta)\\) when n is large. use \\(Avar(\\sqrt{n}(\\hat{\\beta}-\\beta))/n\\) as an approximation for finite sample variance for large n: \\[ Avar(\\sqrt{n}(\\hat{\\beta}-\\beta)) \\approx Var(\\sqrt{n}(\\hat{\\beta}-\\beta)) \\\\ Avar(\\sqrt{n}(\\hat{\\beta}-\\beta))/n \\approx Var(\\sqrt{n}(\\hat{\\beta}-\\beta))/n = Var(\\hat{\\beta}) \\] Avar(.) does not behave the same way as Var(.) \\[ Avar(\\sqrt{n}(\\hat{\\beta}-\\beta))/n \\neq Avar(\\sqrt{n}(\\hat{\\beta}-\\beta)/\\sqrt{n}) \\\\ \\neq Avar(\\hat{\\beta}) \\] In Finite Sample Properties, we calculate standard errors as an estimate for the conditional standard deviation: \\[ SE_{fs}(\\hat{\\beta}_{j-1})=\\sqrt{\\hat{Var}}(\\hat{\\beta}_{j-1}|\\mathbf{X}) = \\sqrt{s^2[\\mathbf{(X&#39;X)}^{-1}]_{jj}} \\] In Large Sample Properties, we calculate standard errors as an estimate for the square root of asymptotic variance \\[ SE_{ls}(\\hat{\\beta}_{j-1})=\\sqrt{\\hat{Avar}(\\sqrt{n}\\hat{\\beta}_{j-1})/n} = \\sqrt{s^2[\\mathbf{(X&#39;X)}^{-1}]_{jj}} \\] Hence, the standard error estimator is the same for finite sample and large sample. Same estimator, but conceptually estimating two different things. Valid under weaker assumptions: the assumptions needed to produce a consistent estimator for the finite sample conditional variance (A1-A5) are stronger than those needed to produce a consistent estimator for the asymptotic variance (A1,A2,A3a,A4,A5) Suppose that \\(y_1,...,y_n\\) are a random sample from some population with mean \\(\\mu\\) and variance-covariance matrix \\(\\Sigma\\) \\(\\bar{y} = \\frac{1}{n}\\sum_{i=1}^{n} y_i\\) is a consistent estimator for \\(\\mu\\) \\(S = \\frac{1}{n-1}\\sum_{i=1}^{n} (y_i -\\bar{y})(y_i-\\bar{y})&#39;\\) is a consistent estimator for \\(\\Sigma\\). Multivariate Central limit Theorem: Similar to the univariate case, \\(\\sqrt{n}(\\bar{y}-\\mu) \\sim N_p(0,\\Sigma)\\), when n is large relative to p (e.g., \\(n \\ge 25p\\)). Equivalently, \\(\\bar{y} \\sim N_p(\\mu,\\Sigma/n)\\). Wald’s Theorem: \\(n(\\bar{y} - \\mu)&#39;S^{-1}(\\bar{y}-\\mu) \\sim \\chi^2_{(p)}\\) when n is large relative to p. References "],["feasible-generalized-least-squares.html", "5.2 Feasible Generalized Least Squares", " 5.2 Feasible Generalized Least Squares Motivation for a more efficient estimator Gauss-Markov Theorem holds under A1-A4 A4: \\(Var(\\epsilon| \\mathbf{X} )=\\sigma^2I_n\\) Heteroskedasticity: \\(Var(\\epsilon_i|\\mathbf{X}) \\neq \\sigma^2I_n\\) Serial Correlation: \\(Cov(\\epsilon_i,\\epsilon_j|\\mathbf{X}) \\neq 0\\) Without A4, how can we know which unbiased estimator is the most efficient? Original (unweighted) model: \\[ \\mathbf{y=X\\beta+ \\epsilon} \\] Suppose A1-A3 hold, but A4 does not hold, \\[ \\mathbf{Var(\\epsilon|X)=\\Omega \\neq \\sigma^2 I_n} \\] We will try to use OLS to estimate the transformed (weighted) model \\[ \\mathbf{wy=wX\\beta + w\\epsilon} \\] We need to choose \\(\\mathbf{w}\\) so that \\[ \\mathbf{w&#39;w = \\Omega^{-1}} \\] then \\(\\mathbf{w}\\) (full-rank matrix) is the Cholesky decomposition of \\(\\mathbf{\\Omega^{-1}}\\) (full-rank matrix) In other words, \\(\\mathbf{w}\\) is the squared root of \\(\\Omega\\) (squared root version in matrix) \\[ \\Omega = var(\\epsilon | X) \\\\ \\Omega^{-1} = var(\\epsilon | X)^{-1} \\] Then, the transformed equation (IGLS) will have the following properties. \\[ \\begin{split} \\mathbf{\\hat{\\beta}_{IGLS}} &amp;= \\mathbf{(X&#39;w&#39;wX)^{-1}X&#39;w&#39;wy} \\\\ &amp; = \\mathbf{(X&#39;\\Omega^{-1}X)^{-1}X&#39;\\Omega^{-1}y} \\\\ &amp; = \\mathbf{\\beta + X&#39;\\Omega^{-1}X&#39;\\Omega^{-1}\\epsilon} \\end{split} \\] Since A1-A3 hold for the unweighted model \\[ \\begin{aligned} \\mathbf{E(\\hat{\\beta}_{IGLS}|X)} &amp; = E(\\mathbf{\\beta + (X&#39;\\Omega^{-1}X&#39;\\Omega^{-1}\\epsilon)}|X)\\\\ &amp; = \\mathbf{\\beta + E(X&#39;\\Omega^{-1}X&#39;\\Omega^{-1}\\epsilon)|X)} \\\\ &amp; = \\mathbf{\\beta + X&#39;\\Omega^{-1}X&#39;\\Omega^{-1}E(\\epsilon|X)} &amp;&amp; \\text{since A3}: E(\\epsilon|X)=0 \\\\ &amp; = \\mathbf{\\beta} \\end{aligned} \\] \\(\\rightarrow\\) IGLS estimator is unbiased \\[ \\begin{aligned} \\mathbf{Var(w\\epsilon|X)} &amp;= \\mathbf{wVar(\\epsilon|X)w&#39;} \\\\ &amp; = \\mathbf{w\\Omega w&#39;} \\\\ &amp; = \\mathbf{w(w&#39;w)^{-1}w&#39;} &amp;&amp; \\text{since w is a full-rank matrix}\\\\ &amp; = \\mathbf{ww^{-1}(w&#39;)^{-1}w&#39;} \\\\ &amp; = \\mathbf{I_n} \\end{aligned} \\] \\(\\rightarrow\\) A4 holds for the transformed (weighted) equation Then, the variance for the estimator is \\[ \\begin{aligned} Var(\\hat{\\beta}_{IGLS}|\\mathbf{X}) &amp; = \\mathbf{Var(\\beta + (X&#39;\\Omega ^{-1}X)^{-1}X&#39;\\Omega^{-1}\\epsilon|X)} \\\\ &amp;= \\mathbf{Var((X&#39;\\Omega ^{-1}X)^{-1}X&#39;\\Omega^{-1}\\epsilon|X)} \\\\ &amp;= \\mathbf{(X&#39;\\Omega ^{-1}X)^{-1}X&#39;\\Omega^{-1} Var(\\epsilon|X) \\Omega^{-1}X(X&#39;\\Omega ^{-1}X)^{-1}} &amp;&amp; \\text{because A4 holds}\\\\ &amp;= \\mathbf{(X&#39;\\Omega ^{-1}X)^{-1}X&#39;\\Omega^{-1} \\Omega \\Omega^{-1} \\Omega^{-1}X(X&#39;\\Omega ^{-1}X)^{-1}} \\\\ &amp;= \\mathbf{(X&#39;\\Omega ^{-1}X)^{-1}} \\end{aligned} \\] Let \\(A = \\mathbf{(X&#39;X)^{-1}X&#39;-(X&#39;\\Omega ^{-1} X)X&#39; \\Omega^{-1}}\\) then \\[ Var(\\hat{\\beta}_{OLS}|X)- Var(\\hat{\\beta}_{IGLS}|X) = A\\Omega A&#39; \\] And \\(\\Omega\\) is Positive Semi Definite, then \\(A\\Omega A&#39;\\) also PSD, then IGLS is more efficient The name Infeasible comes from the fact that it is impossible to compute this estimator. \\[ \\mathbf{w} = \\left( \\begin{array}{ccccc} w_{11} &amp; 0 &amp; 0 &amp; ... &amp; 0 \\\\ w_{21} &amp; w_{22} &amp; 0 &amp; ... &amp; 0 \\\\ w_{31} &amp; w_{32} &amp; w_{33} &amp; ... &amp; ... \\\\ w_{n1} &amp; w_{n2} &amp; w_{n3} &amp; ... &amp; w_{nn} \\\\ \\end{array} \\right) \\] With \\(n(n+1)/2\\) number of elements and n observations \\(\\rightarrow\\) infeasible to estimate. (number of equation &gt; data) Hence, we need to make assumption on \\(\\Omega\\) to make it feasible to estimate \\(\\mathbf{w}\\): Heteroskedasticity : multiplicative exponential model AR(1) Cluster 5.2.1 Heteroskedasticity \\[\\begin{equation} \\begin{split} Var(\\epsilon_i |x_i) &amp; = E(\\epsilon^2|x_i) \\neq \\sigma^2 \\\\ &amp; = h(x_i) = \\sigma_i^2 \\text{(variance of the error term is a function of x)} \\end{split} \\tag{5.7} \\end{equation}\\] For our model, \\[ y_i = x_i\\beta + \\epsilon_i \\\\ (1/\\sigma_i)y_i = (1/\\sigma_i)x_i\\beta + (1/\\sigma_i)\\epsilon_i \\] then, from (5.7) \\[ \\begin{split} Var((1/\\sigma_i)\\epsilon_i|X) &amp;= (1/\\sigma_i^2) Var(\\epsilon_i|X) \\\\ &amp;= (1/\\sigma_i^2)\\sigma_i^2 \\\\ &amp;= 1 \\end{split} \\] then the weight matrix \\(\\mathbf{w}\\) in the matrix equation \\[ \\mathbf{wy=wX\\beta + w\\epsilon} \\] \\[ \\mathbf{w}= \\left( \\begin{array}{ccccc} 1/\\sigma_1 &amp; 0 &amp; 0 &amp; ... &amp; 0 \\\\ 0 &amp; 1/\\sigma_2 &amp; 0 &amp; ... &amp; 0 \\\\ 0 &amp; 0 &amp; 1/\\sigma_3 &amp; ... &amp; . \\\\ . &amp; . &amp; . &amp; . &amp; 0 \\\\ 0 &amp; 0 &amp; . &amp; . &amp; 1/\\sigma_n \\end{array} \\right) \\] Infeasible Weighted Least Squares Assume we know \\(\\sigma_i^2\\) (Infeasible) The IWLS estimator is obtained as the least squared estimated for the following weighted equation \\[ (1/\\sigma_i)y_i = (1/\\sigma_i)\\mathbf{x}_i\\beta + (1/\\sigma_i)\\epsilon_i \\] Usual standard errors for the weighted equation are valid if \\(Var(\\epsilon | \\mathbf{X}) = \\sigma_i^2\\) If \\(Var(\\epsilon | \\mathbf{X}) \\neq \\sigma_i^2\\) then heteroskedastic robust standard errors are valid. Problem: We do not know \\(\\sigma_i^2=Var(\\epsilon_i|\\mathbf{x_i})=E(\\epsilon_i^2|\\mathbf{x}_i)\\) One observation \\(\\epsilon_i\\) cannot estimate a sample variance estimate \\(\\sigma_i^2\\) Model \\(\\epsilon_i^2\\) as reasonable (strictly positive) function of \\(x_i\\) and independent error \\(v_i\\) (strictly positive) \\[ \\epsilon_i^2=v_i exp(\\mathbf{x_i\\gamma}) \\] Then we can apply a log transformation to recover a linear in parameters model, \\[ ln(\\epsilon_i^2) = \\mathbf{x_i\\gamma} + ln(v_i) \\] where \\(ln(v_i)\\) is independent \\(\\mathbf{x}_i\\) We do not observe \\(\\epsilon_i\\) * OLS residual (\\(e_i\\)) as an approximate 5.2.2 Serial Correlation \\[ Cov(\\epsilon_i, \\epsilon_j | \\mathbf{X}) \\neq 0 \\] Under covariance stationary, \\[ Cov(\\epsilon_i,\\epsilon_j|\\mathbf{X}) = Cov(\\epsilon_i, \\epsilon_{i+h}|\\mathbf{x_i,x_{i+h}})=\\gamma_h \\] And the variance covariance matrix is \\[ Var(\\epsilon|\\mathbf{X}) = \\Omega = \\left( \\begin{array}{ccccc} \\sigma^2 &amp; \\gamma_1 &amp; \\gamma_2 &amp; ... &amp; \\gamma_{n-1} \\\\ \\gamma_1 &amp; \\sigma^2 &amp; \\gamma_1 &amp; ... &amp; \\gamma_{n-2} \\\\ \\gamma_2 &amp; \\gamma_1 &amp; \\sigma^2 &amp; ... &amp; ... \\\\ . &amp; . &amp; . &amp; . &amp; \\gamma_1 \\\\ \\gamma_{n-1} &amp; \\gamma_{n-2} &amp; . &amp; \\gamma_1 &amp; \\sigma^2 \\end{array} \\right) \\] There n parameters to estimate - need some sort fo structure to reduce number of parameters to estimate. Time Series Effect of inflation and deficit on Treasury BIll interest rates Cross-sectional Clustering 5.2.2.1 AR(1) \\[ y_t= \\beta_0 + x_t\\beta_1 + \\epsilon_t \\\\ \\epsilon_t = \\rho \\epsilon_{t-1} + u_t \\] and the variance covariance matrix is \\[ Var(\\epsilon | \\mathbf{X})= \\frac{\\sigma^2_u}{1-\\rho} \\left( \\begin{array}{ccccc} 1 &amp; \\rho &amp; \\rho^2 &amp; ... &amp; \\rho^{n-1} \\\\ \\rho &amp; 1 &amp; \\rho &amp; ... &amp; \\rho^{n-2} \\\\ \\rho^2 &amp; \\rho &amp; 1 &amp; . &amp; . \\\\ . &amp; . &amp; . &amp; . &amp; \\rho \\\\ \\rho^{n-1} &amp; \\rho^{n-2} &amp; . &amp; \\rho &amp; 1 \\\\ \\end{array} \\right) \\] Hence, there is only 1 parameter to estimate: \\(\\rho\\) Under A1, A2, A3a, A5a, OLS is consistent and asymptotically normal Use Newey West Standard Errors for valid inference. Apply Infeasible Cochrane Orcutt (as if we knew \\(\\rho\\)) Because \\[ u_t = \\epsilon_t - \\rho \\epsilon_{t-1} \\] satisfies A3, A4, A5 we’d like to to transform the above equation to one that has \\(u_t\\) as the error. \\[ \\begin{aligned} y_t - \\rho y_{t-1} &amp;= (\\beta_0 + x\\beta_1 + \\epsilon_t) - \\rho (\\beta_0 + x_{t-1}\\beta_1 + \\epsilon_{t-1}) \\\\ &amp; = (1-\\rho)\\beta_0 + (x_t - \\rho x_{t-1})\\beta_1 + u_t \\end{aligned} \\] 5.2.2.1.1 Infeasible Cochrane Orcutt Assume that we know \\(\\rho\\) (Infeasible) The ICO estimator is obtained as the least squared estimated for the following weighted first difference equation \\[ y_t -\\rho y_{t-1} = (1-\\rho)\\beta_0 + (x_t - \\rho x_{t-1})\\beta_1 + u_t \\] Usual standard errors for the weighted first difference equation are valid if the errors truly follow an AR(1) process If the serial correlation is generated from a more complex dynamic process then Newey-West HAC standard errors are valid Problem We do not know \\(\\rho\\) \\(\\rho\\) is the correlation between \\(\\epsilon_t\\) and \\(\\epsilon_{t-1}\\): estimate using OLS residuals (\\(e_i\\)) as proxy \\[ \\hat{\\rho} = \\frac{\\sum_{t=1}^{T}e_te_{t-1}}{\\sum_{t=1}^{T}e_t^2} \\] which can be obtained from the OLS regression of \\[ e_t = \\rho e_{t-1} + u_t \\] where we suppress the intercept. We are losing an observation By taking the first difference we are dropping the first observation \\[ y_1 = \\beta_0 + x_1 \\beta_1 + \\epsilon_1 \\] Feasiable Prais Winsten Transformation applies the Infeasible Cochrane Orcutt but includes a weighted version of the first observation \\[ (\\sqrt{1-\\rho^2})y_1 = \\beta_0 + (\\sqrt{1-\\rho^2})x_1 \\beta_1 + (\\sqrt{1-\\rho^2}) \\epsilon_1 \\] 5.2.2.2 Cluster \\[ y_{gi} = \\mathbf{x}_{gi}\\beta + \\epsilon_{gi} \\] \\[ Cov(\\epsilon_{gi}, \\epsilon_{hj}) \\begin{cases} = 0 &amp; \\text{for $g \\neq h$ and any pair (i,j)} \\\\ \\neq 0 &amp; \\text{for any (i,j) pair}\\\\ \\end{cases} \\] Intra-group Correlation Each individual in a single group may be correlated but independent across groups. A4 is violated. usual standard errors for OLS are valid. Use cluster robust standard errors for OLS. Suppose there are 3 groups with different n \\[ Var(\\epsilon| \\mathbf{X})= \\Omega = \\left( \\begin{array}{cccccc} \\sigma^2 &amp; \\delta_{12}^1 &amp; \\delta_{13}^1 &amp; 0 &amp; 0 &amp; 0 \\\\ \\delta_{12}^1 &amp; \\sigma^2 &amp; \\delta_{23}^1 &amp; 0 &amp; 0 &amp; 0 \\\\ \\delta_{13}^1 &amp; \\delta_{23}^1 &amp; \\sigma^2 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; \\sigma^2 &amp; \\delta_{12}^2 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; \\delta_{12}^2 &amp; \\sigma^2 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\sigma^2 \\end{array} \\right) \\] where \\(Cov(\\epsilon_{gi}, \\epsilon_{gj}) = \\delta_{ij}^g\\) and \\(Cov(\\epsilon_{gi}, \\epsilon_{hj}) = 0\\) for any i and j Infeasible Generalized Least Squares (Cluster) Assume that \\(\\sigma^2\\) and \\(\\delta_{ij}^g\\) are known, plug into \\(\\Omega\\) and solve for the inverse \\(\\Omega^{-1}\\) (infeasible) The Infeasible Generalized Least Squares Estimator is \\[ \\hat{\\beta}_{IGLS} = \\mathbf{(X&#39;\\Omega^{-1}X)^{-1}X&#39;\\Omega^{-1}y} \\] Problem * We do not know \\(\\sigma^2\\) and \\(\\delta_{ij}^g\\) + Can make assumptions about data generating process that is causing the clustering behavior. - Will give structure to \\(Cov(\\epsilon_{gi},\\epsilon_{gj})= \\delta_{ij}^g\\) which makes it feasible to estimate - if the assumptions are wrong then we should use cluster robust standard errors. Solution Assume group level random effects specification in the error \\[ y_{gi} = \\mathbf{g}_i \\beta + c_g + u_{gi} \\\\ Var(c_g|\\mathbf{x}_i) = \\sigma^2_c \\\\ Var(u_{gi}|\\mathbf{x}_i) = \\sigma^2_u \\] where \\(c_g\\) and \\(u_{gi}\\) are independent of each other, and mean independent of \\(\\mathbf{x}_i\\) \\(c_g\\) captures the common group shocks (independent across groups) \\(u_{gi}\\) captures the individual shocks (independent across individuals and groups) Then the error variance is \\[ Var(\\epsilon| \\mathbf{X})= \\Omega = \\left( \\begin{array}{cccccc} \\sigma^2_c + \\sigma^2_u &amp; \\sigma^2_c &amp; \\sigma^2_c &amp; 0 &amp; 0 &amp; 0 \\\\ \\sigma^2_c &amp; \\sigma^2 + \\sigma^2_u &amp; \\sigma^2_c &amp; 0 &amp; 0 &amp; 0 \\\\ \\sigma^2_c &amp; \\sigma^2_c &amp; \\sigma^2+ \\sigma^2_u &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; \\sigma^2+ \\sigma^2_u &amp; \\sigma^2_c &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; \\sigma^2_c &amp; \\sigma^2+ \\sigma^2_u &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\sigma^2+ \\sigma^2_u \\end{array} \\right) \\] Use Feasible group level Random Effects "],["weighted-least-squares.html", "5.3 Weighted Least Squares", " 5.3 Weighted Least Squares Estimate the following equation using OLS \\[ y_i = \\mathbf{x}_i \\beta + \\epsilon_i \\] and obtain the residuals \\(e_i=y_i -\\mathbf{x}_i \\hat{\\beta}\\) Transform the residual and estimate the following by OLS, \\[ ln(e_i^2)= \\mathbf{x}_i\\gamma + ln(v_i) \\] and obtain the predicted values \\(g_i=\\mathbf{x}_i \\hat{\\gamma}\\) The weights will be the untransformed predicted outcome, \\[ \\hat{\\sigma}_i =\\sqrt{exp(g_i)} \\] The FWLS (Feasible WLS) estimator is obtained as the least squared estimated for the following weighted equation \\[ (1/\\hat{\\sigma}_i)y_i = (1/\\hat{\\sigma}_i) \\mathbf{x}_i\\beta + (1/\\hat{\\sigma}_i)\\epsilon_i \\] Properties of the FWLS The infeasible WLS estimator is unbiased under A1-A3 for the unweighted equation. The FWLS estimator is NOT an unbiased estimator. The FWLS estimator is consistent under A1, A2, (for the unweighted equation), A5, and \\(E(\\mathbf{x}_i&#39;\\epsilon_i/\\sigma^2_i)=0\\) A3a is not sufficient for the above equation A3 is sufficient for the above equation. The FWLS estimator is asymptotically more efficient than OLS if the errors have multiplicative exponential heteroskedasticity. If the errors are truly multiplicative exponential heteroskedasticity, then usual standard errors are valid If we believe that there may be some mis-specification with the multiplicative exponential model, then we should report heteroskedastic robust standard errors. "],["generalized-least-squares.html", "5.4 Generalized Least Squares", " 5.4 Generalized Least Squares Consider \\[ \\mathbf{y = X\\beta + \\epsilon} \\] where, \\[ var(\\epsilon) = \\mathbf{G} = \\left( \\begin{array} {cccc} g_{11} &amp; g_{12} &amp; ... &amp; g_{1n} \\\\ g_{21} &amp; g_{22} &amp; ... &amp; g_{2n} \\\\ . &amp; . &amp; . &amp; . \\\\ g_{n1} &amp; . &amp; . &amp; g_{nn}\\\\ \\end{array} \\right) \\] The variances are heterogeneous, and the errors are correlated. \\[ \\mathbf{\\hat{b}_G = (X&#39;G^{-1}X)^{-1}X&#39;G^{-1}Y} \\] if we know G, we can estimate \\(\\mathbf{b}\\) just like OLS. However, we do not know G. Hence, we model the structure of G. "],["feasiable-prais-winsten.html", "5.5 Feasiable Prais Winsten", " 5.5 Feasiable Prais Winsten Weighting Matrix \\[ \\mathbf{w} = \\left( \\begin{array}{ccccc} \\sqrt{1- \\hat{\\rho}^2} &amp; 0 &amp; 0 &amp;... &amp; 0 \\\\ -\\hat{\\rho} &amp; 1 &amp; 0 &amp; ... &amp; 0 \\\\ 0 &amp; -\\hat{\\rho} &amp; 1 &amp; &amp; . \\\\ . &amp; . &amp; . &amp; . &amp; 0 \\\\ 0 &amp; . &amp; 0 &amp; -\\hat{\\rho} &amp; 1 \\end{array} \\right) \\] Estimate the following equation using OLS \\[ y_t = \\mathbf{x}_t \\beta + \\epsilon_t \\] and obtain the residuals \\(e_t = y_t - \\mathbf{x}_t \\hat{\\beta}\\) Estimate the correlation coefficient for the AR(1) process by estimating the following by OLS (without no intercept) \\[ e_t = \\rho e_{t-1} + u_t \\] Transform the outcome and independent variables \\(\\mathbf{wy}\\) and \\(\\mathbf{wX}\\) respectively (weight matrix as stated). The FPW estimator is obtained as the least squared estimated for the following weighted equation \\[ \\mathbf{wy = wX\\beta + w\\epsilon} \\] Properties of Feasiable Prais Winsten Estimator The Infeasible PW estimator is under A1-A3 for the unweighted equation The FPW estimator is biased The FPW is consistent under A1 A2 A5 and \\[ E((\\mathbf{x_t - \\rho x_{t-1}})&#39;)(\\epsilon_t - \\rho \\epsilon_{t-1})=0 \\] A3a is not sufficient for the above equation A3 is sufficient for the above equation The FPW estimator is asymptotically more efficient than OLS if the errors are truly generated as AR(1) process If the errors are truly generated as AR(1) process then usual standard errors are valid If we are concerned that there may be a more complex dependence structure of heteroskedasticity, then we use Newey West Standard Errors "],["feasible-group-level-random-effects.html", "5.6 Feasible group level Random Effects", " 5.6 Feasible group level Random Effects Estimate the following equation using OLS \\[ y_{gi} = \\mathbf{x}_{gi}\\beta + \\epsilon_{gi} \\] and obtain the residuals \\(e_{gi} = y_{gi} - \\mathbf{x}_{gi}\\hat{\\beta}\\) 2. Estimate the variance using the usual $s^2 estimator \\[ s^2 = \\frac{1}{n-k}\\sum_{i=1}^{n}e_i^2 \\] as an estimator for \\(\\sigma^2_c + \\sigma^2_u\\) and estimate the within group correlation, \\[ \\hat{\\sigma}^2_c = \\frac{1}{G} \\sum_{g=1}^{G} (\\frac{1}{\\sum_{i=1}^{n_g-1}i}\\sum_{i\\neq j}\\sum_{j}^{n_g}e_{gi}e_{gj}) \\] and plug in the estimates to obtain \\(\\hat{\\Omega}\\) The feasible group level RE estimator is obtained as \\[ \\hat{\\beta}= \\mathbf{(X&#39;\\hat{\\Omega}^{-1}X)^{-1}X&#39;\\hat{\\Omega}^{-1}y} \\] Properties of the Feasible group level Random Effects Estimator The infeasible group RE estimator is a linear estimator and is unbiased under A1-A3 for the unweighted equation A3 requires \\(E(\\epsilon_{gi}|\\mathbf{x}_i) = E(c_{g}|\\mathbf{x}_i)+ (u_{gi}|\\mathbf{x}_i)=0\\) so we generally assume \\(E(c_{g}|\\mathbf{x}_i)+ (u_{gi}|\\mathbf{x}_i)=0\\). The assumption \\(E(c_{g}|\\mathbf{x}_i)=0\\) is generally called random effects assumption The Feasible group level Random Effects is biased The Feasible group level Random Effects is consistent under A1-A3a, and A5a for the unweighted equation. A3a requires \\(E(\\mathbf{x}_i&#39;\\epsilon_{gi}) = E(\\mathbf{x}_i&#39;c_{g})+ (\\mathbf{x}_i&#39;u_{gi})=0\\) The Feasible group level Random Effects estimator is asymptotically more efficient than OLS if the errors follow the random effects specification If the errors do follow the random effects specification than the usual standard errors are consistent If there might be a more complex dependence structure or heteroskedasticity, then we need cluster robust standard errors. "],["ridge-regression.html", "5.7 Ridge Regression", " 5.7 Ridge Regression When we have the Collinearity problem, we could use the Ridge regression. The main problem with multicollinearity is that \\(\\mathbf{X&#39;X}\\) is “ill-conditioned”. The idea for ridge regression: adding a constant to the diagonal of \\(\\mathbf{X&#39;X}\\) improves the conditioning \\[ \\mathbf{X&#39;X} + c\\mathbf{I} (c&gt;0) \\] The choice of c is hard. The estimator \\[ \\mathbf{b}^R = (\\mathbf{X&#39;X}+c\\mathbf{I})^{-1}\\mathbf{X&#39;y} \\] is biased. it has smaller variance than the OLS estimator; as c increases, the bias increases but the variance decreases. always exists some value of c for which the ridge regression estimator has a smaller total MSE than the OLS the optimal c varies with application and data set. to find the “optimal” c we could use “ridge trace”. we plot the values of the p - 1 parameter estimates for different values of c, simultaneously. typically, as c increases toward 1 the coefficients decreases to 0. the values of the VIF tend to decrease rapidly as c gets bigger than 0. The VIF values begin to change slowly as c approaches 1. then we can examine the ridge trace and VIF values and chooses the smallest value of c where the regression coefficients first become stable in the ridge trace and the VIF values have become sufficiently small (which is very subjective). typically, this procedure is applied to the standardized regression model. "],["principal-component-regression.html", "5.8 Principal Component Regression", " 5.8 Principal Component Regression This also addresses the problem of multicollinearity "],["robust-regression.html", "5.9 Robust Regression", " 5.9 Robust Regression To address the problem of influential cases. can be used when a known functional form is to be fitted, and when the errors are not normal due to a few outlying cases. 5.9.1 Least Absolute Residuals (LAR) Regression also known as minimum \\(L_1\\)-norm regression. \\[ L_1 = \\sum_{i=1}^{n}|Y_i - (\\beta_0 + \\beta_1 X_{i1} + .. + \\beta_{p-1}X_{i,p-1}) \\] which is not sensitive to outliers and inadequacies of the model specification. 5.9.2 Least Median of Squares (LMS) Regression \\[ median\\{[Y_i - (\\beta_0 - \\beta_1X_{i1} + ... + \\beta_{p-1}X_{i,p-1})]^2 \\} \\] 5.9.3 Iteratively Reweighted Least Squares (IRLS) Robust Regression uses Weighted Least Squares to lessen the influence of outliers. the weights \\(w_i\\) are inversely proportional to how far an outlying case is (e.g., based on the residual) the weights are revised iteratively until a robust fit Process: Step 1: Choose a weight function for weighting the cases. Step 2: obtain starting weights for all cases. Step 3: Use the starting weights in WLS and obtain the residuals from the fitted regression function. Step 4: use the residuals in Step 3 to obtain revised weights. Step 5: continue until convergence. Note: If you don’t know the form of the regression function, consider using nonparametric regression (e.g., locally weighted regression, regression trees, projection pursuit, neural networks, smoothing splines, loess, wavelets). could use to detect outliers or confirm OLS. "],["maximum-likelihood-regression.html", "5.10 Maximum Likelihood", " 5.10 Maximum Likelihood Premise: find values of the parameters that maximize the probability of observing the data In other words, we try to maximize the value of theta in the likelihood function \\[ L(\\theta)=\\prod_{i=1}^{n}f(y_i|\\theta) \\] \\(f(y|\\theta)\\) is the probability density of observing a single value of Y given some value of \\(\\theta\\) \\(f(y|\\theta)\\) can be specify as various type of distributions. You can review back section Distributions. For example If y is a dichotomous variable, then \\[ L(\\theta)=\\prod_{i=1}^{n}\\theta^{y_i}(1-\\theta)^{1-y_i} \\] \\(\\hat{\\theta}\\) is the Maximum Likelihood estimate if \\(L(\\hat{\\theta}) &gt; L(\\theta_0)\\) for all values of \\(\\theta_0\\) in the parameter space. 5.10.1 Motivation for MLE Suppose we know the conditional distribution of y given x: \\[ f_{Y|X}(y,x;\\theta) \\] where \\(\\theta\\) is the unknown parameter of distribution. Sometimes we are only concerned with the unconditional distribution \\(f_{Y}(y;\\theta)\\) Then given a sample of iid data, we can calculate the joint distribution of the entire sample, \\[ f_{Y_1,...,Y_n|X_1,...,X_n(y_1,...y_n,x_1,...,x_n;\\theta)}= \\prod_{i=1}^{n}f_{Y|X}(y_i,x_i;\\theta) \\] The joint distribution evaluated at the sample is the likelihood (probability) that we observed this particular sample (depends on \\(\\theta\\)) Idea for MLE: Given a sample, we choose our estimates of the parameters that gives the highest likelihood (probability) of observing our particular sample \\[ max_{\\theta} \\prod_{i=1}^{n}f_{Y|X}(y_i,x_i; \\theta) \\] Equivalently, \\[ max_{\\theta} \\prod_{i=1}^{n} ln(f_{Y|X}(y_i,x_i; \\theta)) \\] Solving for the Maximum Likelihood Estimator Solve First Order Condition \\[ \\frac{\\partial}{\\partial \\theta}\\sum_{i=1}^{n} ln(f_{Y|X}(y_i,x_i;\\hat{\\theta}_{MLE})) = 0 \\] where \\(\\hat{\\theta}_{MLE}\\) is defined. Evaluate Second Order Condition \\[ \\frac{\\partial^2}{\\partial \\theta^2} \\sum_{i=1}^{n} ln(f_{Y|X}(y_i,x_i;\\hat{\\theta}_{MLE})) &lt; 0 \\] where the above condition ensures we can solve for a maximum Examples: Unconditional Poisson Distribution: Number of products ordered on Amazon within an hour, number of website visits a day for a political campaign. Exponential Distribution: Length of time until an earthquake occurs, length of time a car battery lasts. \\[ f_{Y|X}(y,x;\\theta) = exp(-y/x\\theta)/x\\theta \\\\ f_{Y_1,..Y_n|X_1,...,X_n(y_1,...,y_n,x_1,...,x_n;\\theta)} = \\prod_{i=1}^{n}exp(-y_i/x_i \\theta)/x_i \\theta \\] 5.10.2 Assumption High Level Regulatory Assumptions is the sufficient condition used to show large sample properties Hence, for each MLE, we will need to either assume or verify if the regulatory assumptiosn holds. observations are independent and have the same density function. Under multivariate normal assumption, maximum likelihood yields consistent estimates of the means and the covariance matrix for multivariate distribution with finite fourth moments (Little 1988) To find the MLE, we usually differentiate the log-likelihood function and set it equal to 0. \\[ \\frac{d}{d\\theta}l(\\theta) = 0 \\] This is the score equation Our confidence in the MLE is quantified by the “pointedness” of the log-likelihood \\[ I_O(\\theta)= \\frac{d^2}{d\\theta^2}l(\\theta) = 0 \\] called the observed information while \\[ I(\\theta)=E[I_O(\\theta;Y)] \\] is the expected information. (also known as Fisher Information). which we base our variance of the estimator. \\[ V(\\hat{\\Theta}) \\approx I(\\theta)^{-1} \\] Consistency of MLE Suppose that \\(y_i\\) and \\(x_i\\) are iid drawn from the true conditional pdf \\(f_{Y|X}(y_i,x_i;\\theta_0)\\). If the following regulatory assumptions hold, R1: If \\(\\theta \\neq \\theta_0\\) then \\(f_{Y|X}(y_i,x_i;\\theta) \\neq f_{Y|X}(y_i,x_i;\\theta_0)\\) R2: The set \\(\\Theta\\) that contains the true parameters \\(\\theta_0\\) is compact R3: The log-likelihood \\(ln(f_{Y|X}(y_i,x_i;\\theta_0))\\) is continuous at each \\(\\theta\\) with probability 1 R4: \\(E(sup_{\\theta \\in \\Theta}|ln(f_{Y|X}(y_i,x_i;\\theta_0))|)\\) then the MLE estimator is consistent, \\[ \\hat{\\theta}_{MLE} \\to^p \\theta_0 \\] Asymptotic Normality of MLE Suppose that \\(y_1\\) and \\(x_i\\) are iid drawn from the true conditional pdf \\(f_{Y|X}(y_i,x_i;\\theta)\\). If R1-R4 and the following hold R5: \\(\\theta_0\\) is in the interior of the set \\(\\Theta\\) R6: \\(f_{Y|X}(y_i,x_i;\\theta)\\) is twice continuously differentiable in \\(\\theta\\) and \\(f_{Y|X}(y_i,x_i;\\theta) &gt;0\\) for a neighborhood \\(N \\in \\Theta\\) around \\(\\theta_0\\) R7: \\(\\int sup_{\\theta \\in N}||\\partial f_{Y|X}(y_i,x_i;\\theta)\\partial\\theta||d(y,x) &lt;\\infty\\), \\(\\int sup_{\\theta \\in N} || \\partial^2 f_{Y|X}(y_i,x_i;\\theta)/\\partial \\theta \\partial \\theta&#39; || d(y,x) &lt; \\infty\\) and \\(E(sup_{\\theta \\in N} || \\partial^2ln(f_{Y|X}(y_i,x_i;\\theta)) / \\partial \\theta \\partial \\theta&#39; ||) &lt; \\infty\\) R8: The information matrix \\(I(\\theta_0) = Var(\\partial f_{Y|X}(y,x_i; \\theta_0)/\\partial \\theta)\\) exists and is non-singular then the MLE estimator is asymptotically normal, \\[ \\sqrt{n}(\\hat{\\theta}_{MLE} - \\theta_0) \\to^d N(0,I(\\theta_0)^{-1}) \\] 5.10.3 Properties Consistent: estimates are approximately unbiased in large samples Asymptotically efficient: approximately smaller standard errors compared to other estimator Asymptotically normal: with repeated sampling, the estimates will have an approximately normal distribution. Suppose that \\(\\hat{\\theta}_n\\) is the MLE for \\(\\theta\\) based on n independent observations. then \\(\\hat{\\theta}_n \\sim N(\\theta,H^{-1})\\). where H is called the Fisher information matrix. It contains the expected values of the second partial derivatives of the log-likelihood function. The (i.j)th element of H is \\(-E(\\frac{\\partial^2l(\\theta)}{\\partial \\theta_i \\partial \\theta_j})\\) We can estimate H by finding the form determined above, and evaluating it at \\(\\theta = \\hat{\\theta}_n\\) Invariance: MLE for \\(g(\\theta) = g(\\hat{\\theta})\\) for any function g(.) \\[ \\hat{\\Theta} \\approx^d (\\theta,I(\\hat{\\theta)^{-1}})) \\] Explicit vs Implicit MLE If we solve the score equation to get an expression of MLE, then it’s called explicit If there is no closed form for MLE, and we need some algorithms to derive its expression, it’s called implicit Large Sample Property of MLE Implicit in these theorems is the assumption that we know what the conditional distribution, \\[ f_{Y|X}(y_i,x_i;\\theta_0) \\] but just do now know the exact parameter value. Any Distributional mis-specification will result in inconsistent parameter estimates. Quasi-MLE: Particular settings/ assumption that allow for certain types of distributional mis-specification (Ex: as long as the distribution is part of particular class or satisfies a particular assumption, then estimating with a wrong distribution will not lead to inconsistent parameter estimates). non-parametric/ Semi-parametric estimation: no or very little distributional assumption are made. (hard to implement, derive properties, and interpret) The asymptotic variance of the MLE achieves the Cramer-Rao Lower Bound C. R. Rao (1992) The Cramer-Rao Lower Bound is a lower brand for the asymptotic variance of a consistent and asymptotically normally distributed estimator. If an estimator achieves the lower bound then it is the most efficient estimator. The maximum Likelihood estimator (assuming the distribution is correctly specified and R1-R8 hold) is the most efficient consistent and asymptotically normal estimator. * most efficient among ALL consistent estimators (not limited to unbiased or linear estimators). Note ML is better choice for binary, strictly positive, count, or inherent heteroskedasticity than linear model. ML will assume that we know the conditional distribution of the outcome, and derive an estimator using that information. Adds an assumption that we know the distribution (which is similar to A6 Normal Distribution in linear model) will produce a more efficient estimator. 5.10.4 Compare to OLS MLE is not a cure for most of OLS problems: To do joint inference in MLE, we typically use log-likelihood calculation, instead of F-score Functional form affects estimation of MLE and OLS. Perfect Collinearity/Multicollinearity: highly correlated are likely to yield large standard errors. Endogeneity (Omitted variables bias, Simultaneous equations): Like OLS, MLE is also biased against this problem 5.10.5 Application Other applications of MLE Corner Solution Ex: hours worked, donations to charity Estimate with Tobit Non-negative count Ex: Numbers of arrest, Number of cigarettes smoked a day Estimate with Poisson regression Multinomial Choice Ex: Demand for cars, votes for primary election Estimate with mutinomial probit or logit Ordinal Choice Ex: Levels of Happiness, Levels of Income Ordered Probit Model for binary Response A binary variable will have a Bernoulli distribution: \\[ f_Y(y_i;p) = p^{y_i}(1-p)^{(1-y_i)} \\] where p is the probability of success. The conditional distribution is: \\[ f_{Y|X}(y_i,x_i;p(.)) = p(x_i)^{y_i} (1-p(x_i))^{(1-y_i)} \\] So choose \\(p(x_i)\\) to be a reasonable function of \\(x_i\\) and unknown parameters \\(\\theta\\) We can use latent variable model as probability functions \\[ y_i = 1\\{y_i^* &gt; 0 \\} \\\\ y_i^* = x_i \\beta-\\epsilon_i \\] \\(y_i^*\\) is a latent variable (unobserved) that is not well-defined in terms of units/magnitudes \\(\\epsilon_i\\) is a mean 0 unobserved random variable. We can rewrite the model without the latent variable, \\[ y_i = 1\\{x_i beta &gt; \\epsilon_i \\} \\] Then the probability function, \\[ p(x_i) = P(y_i = 1|x_i) \\\\ = P(x_i \\beta &gt; \\epsilon_i | x_i) \\\\ = F_{\\epsilon|X}(x_i \\beta | x_i) \\] then we need to choose a conditional distribution for \\(\\epsilon_i\\). Hence, we can make additional strong independence assumption \\(\\epsilon_i\\) is independent of \\(x_i\\) Then the probability function is simply, \\[ p(x_i) = F_\\epsilon(x_i \\beta) \\] The probability function is also the conditional expectation function, \\[ E(y_i | x_i) = P(y_i = 1|x_i) = F_\\epsilon (x_i \\beta) \\] so we allow the conditional expectation function to be non-linear. Common distributional assumption Probit: Assume \\(\\epsilon_i\\) is standard normally distributed, then \\(F_\\epsilon(.) = \\Phi(.)\\) is the standard normal CDF. Logit: Assume \\(\\epsilon_i\\) is standard logistically distributed, then \\(F_\\epsilon(.) = \\Lambda(.)\\) is the standard normal CDF. Step to derive Choose a distribution (normal or logistic) and plug into the following log likelihood, \\[ ln(f_{Y|X} (y_i , x_i; \\beta)) = y_i ln(F_\\epsilon(x_i \\beta)) + (1-y_i)ln(1-F_\\epsilon(x_i \\beta)) \\] Solve the MLE by finding the Maximum of \\[ \\hat{\\beta}_{MLE} = argmax \\sum_{i=1}^{n}ln(f_{Y|X}(y_i,x_i; \\beta)) \\] Properties of the Probit and Logit Estimators Probit or Logit is consistent and asymptotically normal if [A2][] holds: \\(E(x_i&#39; x_i)\\) exists and is non-singular [A5][] (or A5a) holds: {y_i,x_i} are iid (or stationary and weakly dependent). Distributional assumptions on \\(\\epsilon_i\\) hold: Normal/Logistic and independent of \\(x_i\\) Under the same assumptions, Probit or Logit is also asymptotically efficient with asymptotic variance, \\[ I(\\beta_0)^{-1} = [E(\\frac{(f_\\epsilon(x_i \\beta_0))^2}{F_\\epsilon(x_i\\beta_0)(1-F_\\epsilon(x_i\\beta_0))}x_i&#39; x_i)]^{-1} \\] where \\(F_\\epsilon(x_i\\beta_0)\\) is the probability density function (derivative of the CDF) 5.10.5.1 Interpretation \\(\\beta\\) is the average response in the latent variable associated with a change in \\(x_i\\) Magnitudes do not have meaning Direction does have meaning The partial effect for a Non-linear binary response model \\[ E(y_i |x_i) = F_\\epsilon (x_i \\beta) \\\\ PE(x_{ij}) = \\frac{\\partial E(y_i |x_i)}{\\partial x_{ij}} = f_\\epsilon (x_i \\beta)\\beta_j \\] The partial effect is the coefficient parameter \\(\\beta_j\\) multiplied by a scaling factor \\(f_\\epsilon (x_i \\beta)\\) The scaling factor depends on \\(x_i\\) so the partial effect changes depending on what \\(x_i\\) is Single value for the partial effect Partial Effect at the Average (PEA) is the partial effect for an average individual \\[ f_{\\epsilon}(\\bar{x}\\hat{\\beta})\\hat{\\beta}_j \\] Average Partial Effect (APE) is the average of all partial effect for each individual. \\[ \\frac{1}{n}\\sum_{i=1}^{n}f_\\epsilon(x_i \\hat{\\beta})\\hat{\\beta}_j \\] In the linear model, APE = PEA. In a non-linear model (e.g., binary response), APE \\(\\neq\\) PEA References "],["non-linear-regression.html", "Chapter 6 Non-linear Regression", " Chapter 6 Non-linear Regression Definition: models in which the derivatives of the mean function with respect to the parameters depend on one or more of the parameters. To approximate data, we can approximate the function by a high-order polynomial by a linear model (e.g., a Taylor expansion around X’s) a collection of locally linear models or basis function but it would not easy to interpret, or not enough data, or can’t interpret them globally. intrinsically nonlinear models: \\[ Y_i = f(\\mathbf{x_i;\\theta}) + \\epsilon_i \\] where \\(f(\\mathbf{x_i;\\theta})\\) is a nonlinear function relating \\(E(Y_i)\\) to the independent variables \\(x_i\\) \\(\\mathbf{x}_i\\) is a k x 1 vector of independent variables (fixed). \\(\\mathbf{\\theta}\\) is a p x 1 vector of parameters. \\(\\epsilon_i\\)s are iid variables mean 0 and variance \\(\\sigma^2\\). (sometimes it’s normal). "],["inference-1.html", "6.1 Inference", " 6.1 Inference Since \\(Y_i = f(\\mathbf{x}_i,\\theta) + \\epsilon_i\\), where \\(\\epsilon_i \\sim iid(0,\\sigma^2)\\). We can obtain \\(\\hat{\\theta}\\) by minimizing \\(\\sum_{i=1}^{n}(Y_i - f(x_i,\\theta))^2\\) and estimate \\(s^2 = \\hat{\\sigma}^2_{\\epsilon}=\\frac{\\sum_{i=1}^{n}(Y_i - f(x_i,\\theta))^2}{n-p}\\) 6.1.1 Linear Function of the Parameters If we assume \\(\\epsilon_i \\sim N(0,\\sigma^2)\\), then \\[ \\hat{\\theta} \\sim AN(\\mathbf{\\theta},\\sigma^2[\\mathbf{F}(\\theta)&#39;\\mathbf{F}(\\theta)]^{-1}) \\] where An = asymptotic normality Asymptotic means we have enough data to make inference (As your sample size increases, this becomes more and more accurate (to the true value)). Since we want to do inference on linear combinations of parameters or contrasts. If we have \\(\\mathbf{\\theta} = (\\theta_0,\\theta_1,\\theta_2)&#39;\\) and we want to look at \\(\\theta_1 - \\theta_2\\); we can define vector \\(\\mathbf{a} = (0,1,-1)&#39;\\), consider inference for \\(\\mathbf{a&#39;\\theta}\\) Rules for expectation and variance of a fixed vector \\(\\mathbf{a}\\) and random vector \\(\\mathbf{Z}\\); \\[ E(\\mathbf{a&#39;Z}) = \\mathbf{a&#39;}E(\\mathbf{Z}) \\\\ var(\\mathbf{a&#39;Z}) = \\mathbf{a&#39;}var(\\mathbf{Z}) \\mathbf{a} \\] Then, \\[ \\mathbf{a&#39;\\hat{\\theta}} \\sim AN(\\mathbf{a&#39;\\theta},\\sigma^2\\mathbf{a&#39;[F(\\theta)&#39;F(\\theta)]^{-1}a}) \\] and \\(\\mathbf{a&#39;\\hat{\\theta}}\\) is asymptotically independent of \\(s^2\\) (to order 1/n) then \\[ \\frac{\\mathbf{a&#39;\\hat{\\theta}-a&#39;\\theta}}{s(\\mathbf{a&#39;[F(\\theta)&#39;F(\\theta)]^{-1}a})^{1/2}} \\sim t_{n-p} \\] to construct \\(100(1-\\alpha)\\%\\) confidence interval for \\(\\mathbf{a&#39;\\theta}\\) \\[ \\mathbf{a&#39;\\theta} \\pm t_{(1-\\alpha/2,n-p)}s(\\mathbf{a&#39;[F(\\theta)&#39;F(\\theta)]^{-1}a})^{1/2} \\] Suppose \\(\\mathbf{a&#39;} = (0,...,j,...,0)\\). Then, a confidence interval for the jth element of \\(\\mathbf{\\theta}\\) is \\[ \\hat{\\theta}_j \\pm t_{(1-\\alpha/2,n-p)}s\\sqrt{\\hat{c}^{j}} \\] where \\(\\hat{c}^{j}\\) is the jth diagonal element of \\([\\mathbf{F(\\hat{\\theta})&#39;F(\\hat{\\theta})}]^{-1}\\) #set a seed value set.seed(23) #Generate x as 100 integers using seq function x&lt;-seq(0,100,1) #Generate y as a*e^(bx)+c y&lt;-runif(1,0,20)*exp(runif(1,0.005,0.075)*x)+runif(101,0,5) # visualize plot(x,y) #define our data frame datf = data.frame(x,y) #define our model function mod =function(a,b,x) a*exp(b*x) In this example, we can get the starting values by using linearized version of the function \\(\\log y = \\log a + b x\\). Then, we can fit a linear regression to this and use our estimates as starting values #get starting values by linearizing lin_mod=lm(log(y)~x,data=datf) #convert the a parameter back from the log scale; b is ok astrt = exp(as.numeric(lin_mod$coef[1])) bstrt = as.numeric(lin_mod$coef[2]) print(c(astrt,bstrt)) #&gt; [1] 14.07964761 0.01855635 with nls, we can fit the nonlinear model via least squares nlin_mod = nls(y ~ mod(a, b, x), start = list(a = astrt, b = bstrt), data = datf) #look at model fit summary summary(nlin_mod) #&gt; #&gt; Formula: y ~ mod(a, b, x) #&gt; #&gt; Parameters: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; a 13.603909 0.165390 82.25 &lt;2e-16 *** #&gt; b 0.019110 0.000153 124.90 &lt;2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 1.542 on 99 degrees of freedom #&gt; #&gt; Number of iterations to convergence: 3 #&gt; Achieved convergence tolerance: 7.006e-07 #add prediction to plot plot(x, y) lines(x, predict(nlin_mod), col = &quot;red&quot;) 6.1.2 Nonlinear Suppose that \\(h(\\theta)\\) is a nonlinear function of the parameters. We can use Taylor series about \\(\\theta\\) \\[ h(\\hat{\\theta}) \\approx h(\\theta) + \\mathbf{h}&#39;[\\hat{\\theta}-\\theta] \\] where \\(\\mathbf{h} = (\\frac{\\partial h}{\\partial \\theta_1},...,\\frac{\\partial h}{\\partial \\theta_p})&#39;\\) with \\[ E( \\hat{\\theta}) \\approx \\theta \\\\ var(\\hat{\\theta}) \\approx \\sigma^2[\\mathbf{F(\\theta)&#39;F(\\theta)}]^{-1} \\\\ E(h(\\hat{\\theta})) \\approx h(\\theta) \\\\ var(h(\\hat{\\theta})) \\approx \\sigma^2 \\mathbf{h&#39;[F(\\theta)&#39;F(\\theta)]^{-1}h} \\] Thus, \\[ h(\\hat{\\theta}) \\sim AN(h(\\theta),\\sigma^2\\mathbf{h&#39;[F(\\theta)&#39;F(\\theta)]^{-1}h}) \\] and an approximate \\(100(1-\\alpha)\\%\\) confidence interval for \\(h(\\theta)\\) is \\[ h(\\hat{\\theta}) \\pm t_{(1-\\alpha/2;n-p)}s(\\mathbf{h&#39;[F(\\theta)&#39;F(\\theta)]^{-1}h})^{1/2} \\] where \\(\\mathbf{h}\\) and \\(\\mathbf{F}(\\theta)\\) are evaluated at \\(\\hat{\\theta}\\) Regarding prediction interval for Y at \\(x=x_0\\) \\[ Y_0 = f(x_0;\\theta) + \\epsilon_0, \\epsilon_0 \\sim N(0,\\sigma^2) \\\\ \\hat{Y}_0 = f(x_0,\\hat{\\theta}) \\] As \\(n \\to \\infty\\), \\(\\hat{\\theta} \\to \\theta\\), so we \\[ f(x_0, \\hat{\\theta}) \\approx f(x_0,\\theta) + \\mathbf{f}_0(\\mathbf{\\theta})&#39;[\\hat{\\theta}-\\theta] \\] where \\[ f_0(\\theta)= (\\frac{\\partial f(x_0,\\theta)}{\\partial \\theta_1},..,\\frac{\\partial f(x_0,\\theta)}{\\partial \\theta_p})&#39; \\] (note: this \\(f_0(\\theta)\\) is different from \\(f(\\theta)\\)). \\[ Y_0 - \\hat{Y}_0 \\approx Y_0 - f(x_0,\\theta) - f_0(\\theta)&#39;[\\hat{\\theta}-\\theta] \\\\ = \\epsilon_0 - f_0(\\theta)&#39;[\\hat{\\theta}-\\theta] \\] \\[ E(Y_0 - \\hat{Y}_0) \\approx E(\\epsilon_0)E(\\hat{\\theta}-\\theta) = 0 \\\\ var(Y_0 - \\hat{Y}_0) \\approx var(\\epsilon_0 - \\mathbf{(f_0(\\theta)&#39;[\\hat{\\theta}-\\theta])}) \\\\ = \\sigma^2 + \\sigma^2 \\mathbf{f_0 (\\theta)&#39;[F(\\theta)&#39;F(\\theta)]^{-1}f_0(\\theta)} \\\\ = \\sigma^2 (1 + \\mathbf{f_0 (\\theta)&#39;[F(\\theta)&#39;F(\\theta)]^{-1}f_0(\\theta)}) \\] Hence, combining \\[ Y_0 - \\hat{Y}_0 \\sim AN (0,\\sigma^2 (1 + \\mathbf{f_0 (\\theta)&#39;[F(\\theta)&#39;F(\\theta)]^{-1}f_0(\\theta)})) \\] Note: Confidence intervals for the mean response \\(Y_i\\) (which is different from prediction intervals) can be obtained similarly. "],["non-linear-least-squares.html", "6.2 Non-linear Least Squares", " 6.2 Non-linear Least Squares The LS estimate of \\(\\theta\\), \\(\\hat{\\theta}\\) is the set of parameters that minimizes the residual sum of squares: \\[ S(\\hat{\\theta}) = SSE(\\hat{\\theta}) = \\sum_{i=1}^{n}\\{Y_i - f(\\mathbf{x_i};\\hat{\\theta})\\}^2 \\] to obtain the solution, we can consider the partial derivatives of \\(S(\\theta)\\) with respect to each \\(\\theta_j\\) and set them to 0, which gives a system of p equations. Each normal equation is \\[ \\frac{\\partial S(\\theta)}{\\partial \\theta_j} = -2\\sum_{i=1}^{n}\\{Y_i -f(\\mathbf{x}_i;\\theta)\\}[\\frac{\\partial(\\mathbf{x}_i;\\theta)}{\\partial \\theta_j}] = 0 \\] but we can’t obtain a solution directly/analytically for this equation. Numerical Solutions Grid search A “grid” of possible parameter values and see which one minimize the residual sum of squares. finer grid = greater accuracy could be inefficient, and hard when p is large. Gauss-Newton Algorithm we have an initial estimate of \\(\\theta\\) denoted as \\(\\hat{\\theta}^{(0)}\\) use a Taylor expansions of \\(f(\\mathbf{x}_i;\\theta)\\) as a function of \\(\\theta\\) about the point \\(\\hat{\\theta}^{(0)}\\) \\[ \\begin{aligned} Y_i &amp;= f(x_i;\\theta) + \\epsilon_i \\\\ &amp;= f(x_i;\\theta) + \\sum_{j=1}^{p}\\{\\frac{\\partial f(x_i;\\theta)}{\\partial \\theta_j}\\}_{\\theta = \\hat{\\theta}^{(0)}} (\\theta_j - \\hat{\\theta}^{(0)}) + \\text{remainder} + \\epsilon_i \\end{aligned} \\] Equivalently, In matrix notation, \\[ \\mathbf{Y} = \\left[ \\begin{array} {c} Y_1 \\\\ . \\\\ Y_n \\end{array} \\right] \\] \\[ \\mathbf{f}(\\hat{\\theta}^{(0)}) = \\left[ \\begin{array} {c} f(\\mathbf{x_1,\\hat{\\theta}}^{(0)}) \\\\ . \\\\ f(\\mathbf{x_n,\\hat{\\theta}}^{(0)}) \\end{array} \\right] \\] \\[ \\mathbf{\\epsilon} = \\left[ \\begin{array} {c} \\epsilon_1 \\\\ . \\\\ \\epsilon_n \\end{array} \\right] \\] \\[ \\mathbf{F}(\\hat{\\theta}^{(0)}) = \\left[ \\begin{array} {ccc} \\frac{\\partial f(x_1,\\mathbf{\\theta})}{\\partial \\theta_1} &amp; ... &amp; \\frac{\\partial f(x_1,\\mathbf{\\theta})}{\\partial \\theta_p}\\\\ . &amp; . &amp; . \\\\ \\frac{\\partial f(x_n,\\mathbf{\\theta})}{\\partial \\theta_1} &amp; ... &amp; \\frac{\\partial f(x_n,\\mathbf{\\theta})}{\\partial \\theta_p} \\end{array} \\right]_{\\theta = \\hat{\\theta}^{(0)}} \\] Hence, \\[ \\mathbf{Y} = \\mathbf{f}(\\hat{\\theta}^{(0)}) + \\mathbf{F}(\\hat{\\theta}^{(0)})(\\theta - \\hat{\\theta}^{(0)}) + \\epsilon + \\text{remainder} \\] where we assume that the remainder is small and the error term is only assumed to be iid with mean 0 and variance \\(\\sigma^2\\). We can rewrite the above equation as \\[ \\mathbf{Y} - \\mathbf{f}(\\hat{\\theta}^{(0)}) \\approx \\mathbf{F}(\\hat{\\theta}^{(0)})(\\theta - \\hat{\\theta}^{(0)}) + \\epsilon \\] where it is in the form of linear model. After we solve for \\((\\theta - \\hat{\\theta}^{(0)})\\) and let it equal to \\(\\hat{\\delta}^{(1)}\\) Then we new estimate is given by adding the Gauss increment adjustment to the initial estimate \\(\\hat{\\theta}^{(1)} = \\hat{\\theta}^{(0)} + \\hat{\\delta}^{(1)}\\) We can repeat this process. Gauss-Newton Algorithm Steps: initial estimate \\(\\hat{\\theta}^{(0)}\\), set j = 0 Taylor series expansion and calculate \\(\\mathbf{f}(\\hat{\\theta}^{(j)})\\) and \\(\\mathbf{F}(\\hat{\\theta}^{(j)})\\) Use OLS to get \\(\\hat{\\delta}^{(j+1)}\\) get the new estimate \\(\\hat{\\theta}^{(j+1)}\\), return to step 2 continue until “convergence” With the final parameter estimate \\(\\hat{\\theta}\\), we can estimate \\(\\sigma^2\\) if \\(\\epsilon \\sim (\\mathbf{0}, \\sigma^2 \\mathbf{I})\\) by \\[ \\hat{\\sigma}^2= \\frac{1}{n-p}(\\mathbf{Y}-\\mathbf{f}(x;\\hat{\\theta}))&#39;(\\mathbf{Y}-\\mathbf{f}(x;\\hat{\\theta})) \\] Criteria for convergence Minor change in the objective function (SSE = residual sum of squares) \\[ \\frac{|SSE(\\hat{\\theta}^{(j+1)})-SSE(\\hat{\\theta}^{(j)})|}{SSE(\\hat{\\theta}^{(j)})} &lt; \\gamma_1 \\] Minor change in the parameter estimates \\[ |\\hat{\\theta}^{(j+1)}-\\hat{\\theta}^{(j)}| &lt; \\gamma_2 \\] “residual projection” criterion of (Bates and Watts 1981) 6.2.1 Alternative of Gauss-Newton Algorithm 6.2.1.1 Gauss-Newton Algorithm Normal equations: \\[ \\frac{\\partial SSE(\\theta)}{\\partial \\theta} = 2\\mathbf{F}(\\theta)&#39;[\\mathbf{Y}-\\mathbf{f}(\\theta)] \\] \\[ \\begin{aligned} \\hat{\\theta}^{(j+1)} &amp;= \\hat{\\theta}^{(j)} + \\hat{\\delta}^{(j+1)} \\\\ &amp;= \\hat{\\theta}^{(j)} + [\\mathbf{F}((\\hat{\\theta})^{(j)})&#39;\\mathbf{F}(\\hat{\\theta}^{(j)})]^{-1}\\mathbf{F}(\\hat{\\theta})^{(j)} \\\\ &amp;= \\hat{\\theta}^{(j)} - \\frac{1}{2}[\\mathbf{F}(\\hat{\\theta}^{(j)})&#39;\\mathbf{F}(\\hat{\\theta}^{(j)})]^{-1}\\frac{\\partial SSE(\\hat{\\theta}^{(j)})}{\\partial \\theta} \\end{aligned} \\] where \\(\\frac{\\partial SSE(\\hat{\\theta}^{(j)})}{\\partial \\theta}\\) is a gradient vecotr (points in the direction in which the SSE increases most rapidly). This path is known as steepest ascent. \\([\\mathbf{F}(\\hat{\\theta}^{(j)})&#39;\\mathbf{F}(\\hat{\\theta}^{(j)})]^{-1}\\) indicates how far to move \\(-1/2\\): indicator of the direction of steepest descent. 6.2.1.2 Modified Gauss-Newton Algorithm To avoid overstepping (the local min), we can use the modified Gauss-Newton Algorithm. We define a new proposal for \\(\\theta\\) \\[ \\hat{\\theta}^{(j+1)} = \\hat{\\theta}^{(j)} + \\alpha_j \\hat{\\delta}^{(j+1)}, 0 &lt; \\alpha_j &lt; 1 \\] where \\(\\alpha_j\\) (called the “learning rate”): is used to modify the step length. We could also have \\(\\alpha *1/2\\), but typically it is assumed to be absorbed into the learning rate. A way to choose \\(\\alpha_j\\), we can use step halving \\[ \\hat{\\theta}^{(j+1)} = \\hat{\\theta}^{(j)} + \\frac{1}{2^k}\\hat{\\delta}^{(j+1)} \\] where k is the smallest non-negative integer such that \\[ SSE(\\hat{\\theta}^{(j)}+\\frac{1}{2^k}\\hat{\\delta}^{(j+1)}) &lt; SSE(\\hat{\\theta}^{(j)}) \\] which means we try \\(\\hat{\\delta}^{(j+1)}\\), then \\(\\hat{\\delta}^{(j+1)}/2\\), \\(\\hat{\\delta}^{(j+1)}/4\\), etc. The most general form of the convergence algorithm is \\[ \\hat{\\theta}^{(j+1)} = \\hat{\\theta}^{(j)} - \\alpha_j \\mathbf{A}_j \\frac{\\partial Q(\\hat{\\theta}^{(j)})}{\\partial \\theta} \\] where \\(\\mathbf{A}_j\\) is a positive definite matrix \\(\\alpha_j\\) is the learning rate \\(\\frac{\\partial Q(\\hat{\\theta}^{(j)})}{\\partial \\theta}\\)is the gradient based on some objective function Q (a function of \\(\\theta\\)), which is typically the SSE in nonlinear regression applications (e.g., cross-entropy for classification). Refer back to the Modified Gauss-Newton Algorithm, we can see it is in this form \\[ \\hat{\\theta}^{(j+1)} =\\hat{\\theta}^{(j)} - \\alpha_j[\\mathbf{F}(\\hat{\\theta}^{(j)})&#39;\\mathbf{F}(\\hat{\\theta}^{(j)})]^{-1}\\frac{\\partial SSE(\\hat{\\theta}^{(j)})}{\\partial \\theta} \\] where Q = SSE, \\([\\mathbf{F}(\\hat{\\theta}^{(j)})&#39;\\mathbf{F}(\\hat{\\theta}^{(j)})]^{-1} = \\mathbf{A}\\) 6.2.1.3 Steepest Descent (also known just “gradient descent”) \\[ \\hat{\\theta}^{(j+1)} = \\hat{\\theta}^{(j)} - \\alpha_j \\mathbf{I}_{p \\times p}\\frac{\\partial \\mathbf{Q}(\\hat{\\theta}^{(j)})}{\\partial \\theta} \\] slow to converge, moves rapidly initially. could be use for starting values 6.2.1.4 Levenberg -Marquardt \\[ \\hat{\\theta}^{(j+1)} = \\hat{\\theta}^{(j)} - \\alpha_j [\\mathbf{F}(\\hat{\\theta}^{(j)})&#39;\\mathbf{F}(\\hat{\\theta}^{(j)})+ \\tau \\mathbf{I}_{p \\times p}]\\frac{\\partial \\mathbf{Q}(\\hat{\\theta}^{(j)})}{\\partial \\theta} \\] which is a compromise between the Gauss-Newton Algorithm and the Steepest Descent. best when \\(\\mathbf{F}(\\hat{\\theta}^{(j)})&#39;\\mathbf{F}(\\hat{\\theta}^{(j)})\\) is nearly singular (\\(\\mathbf{F}(\\hat{\\theta}^{(j)})\\) isn’t of full rank) similar to ridge regression If \\(SSE(\\hat{\\theta}^{(j+1)}) &lt; SSE(\\hat{\\theta}^{(j)})\\), then \\(\\tau= \\tau/10\\) for the next iteration. Otherwise, \\(\\tau = 10 \\tau\\) 6.2.1.5 Newton-Raphson \\[ \\hat{\\theta}^{(j+1)} = \\hat{\\theta}^{(j)} - \\alpha_j [\\frac{\\partial^2Q(\\hat{\\theta}^{(j)})}{\\partial \\theta \\partial \\theta&#39;}]^{-1}\\frac{\\partial \\mathbf{Q}(\\hat{\\theta}^{(j)})}{\\partial \\theta} \\] The Hessian matrix can be rewritten as: \\[ \\frac{ \\partial^2Q(\\hat{ \\theta}^{(j)})}{ \\partial \\theta \\partial \\theta&#39;} = 2 \\mathbf{F}((\\hat{ \\theta})^{(j)})&#39; \\mathbf{F} ( \\hat{\\theta}^{(j)}) - 2\\sum_{i=1}^{n} [Y_i - f(x_i;\\theta)] \\frac{\\partial^2f(x_i;\\theta)}{\\partial \\theta \\partial \\theta&#39;} \\] which contains the same term that Gauss-Newton Algorithm, combined with one containing the second partial derivatives of f(). (methods that require the second derivatives of the objective function are known as “second-order methods”.) However, the last term \\(\\frac{\\partial^2f(x_i;\\theta)}{\\partial \\theta \\partial \\theta&#39;}\\) can sometimes be non-singular. 6.2.1.6 Quasi-Newton update \\(\\theta\\) according to \\[ \\hat{\\theta}^{(j+1)} = \\hat{\\theta}^{(j)} - \\alpha_j \\mathbf{H}_j^{-1}\\frac{\\partial \\mathbf{Q}(\\hat{\\theta}^{(j)})}{\\partial \\theta} \\] where \\(H_j\\) is a symmetric positive definite approximation to the Hessian, which gets closer as \\(j \\to \\infty\\). \\(\\mathbf{H}_j\\) is computed iteratively Among first-order methods (where only first derivatives are required), this method performs best. 6.2.1.7 Derivative Free Methods secant Method: like Gauss-Newton Algorithm, but calculates the derivatives numerically from past iterations. Simplex Methods Genetic Algorithm Differential Evolution Algorithms Particle Swarm Optimization Ant Colony Optimization 6.2.2 Practical Considerations To converge, algorithm need good initial estimates. Starting values: Prior or theoretical info A grid search or a graph of \\(SSE(\\theta)\\) could also use OLS to get starting values. Model interpretation: if you have some idea regarding the form of the objective function, then you can try to guess the initial value. Expected Value Parameterization Constrained Parameters: (constraints on parameters like \\(\\theta_i&gt;a,a&lt; \\theta_i &lt;b\\)) fit the model first to see if the converged parameter estimates satisfy the constraints. if they don’t satisfy, then try re-parameterizing 6.2.2.1 Failure to converge \\(SSE(\\theta)\\) may be “flat” in a neighborhood of the minimum. You can try different or “better” starting values. Might suggest the model is too complex for the data, might consider simpler model. 6.2.2.2 Convergence to a Local Minimum Linear least squares has the property that \\(SSE(\\theta) = \\mathbf{(Y-X\\beta)&#39;(Y-X\\beta)}\\), which is quadratic and has a unique minimum (or maximum). Nonlinear east squares need not have a unique minimum Using different starting values can help If the dimension of \\(\\theta\\) is low, graph \\(SSE(\\theta)\\) as a function of \\(\\theta_i\\) Different algorithm can help (e.g., genetic algorithm, particle swarm) To converge, algorithms need good initial estimates. Starting values: prior or theoretical info A grid search or a graph OLS estimates as starting values Model interpretation Expected Value Parameterization Constrained Parameters: try the model without the constraints first. If the resulted parameter estimates does not satisfy the constraint, try re-parameterizing # Grid search #choose grid of a and b values aseq = seq(10,18,.2) bseq = seq(.001,.075,.001) na = length(aseq) nb = length(bseq) SSout = matrix(0,na*nb,3) #matrix to save output cnt = 0 for (k in 1:na){ for (j in 1:nb){ cnt = cnt+1 ypred = mod(aseq[k],bseq[j],x) #evaluate model w/ these parms ss = sum((y-ypred)^2) #this is our SSE objective function #save values of a, b, and SSE SSout[cnt,1]=aseq[k] SSout[cnt,2]=bseq[j] SSout[cnt,3]=ss } } #find minimum SSE and associated a,b values mn_indx = which.min(SSout[,3]) astrt = SSout[mn_indx,1] bstrt = SSout[mn_indx,2] #now, run nls function with these starting values nlin_modG=nls(y~mod(a,b,x),start=list(a=astrt,b=bstrt)) nlin_modG #&gt; Nonlinear regression model #&gt; model: y ~ mod(a, b, x) #&gt; data: parent.frame() #&gt; a b #&gt; 13.60391 0.01911 #&gt; residual sum-of-squares: 235.5 #&gt; #&gt; Number of iterations to convergence: 3 #&gt; Achieved convergence tolerance: 2.293e-07 # Note, the package `nls_multstart` will allow you to do a grid search without programming your own loop For prediction interval plotFit( nlin_modG, interval = &quot;both&quot;, pch = 19, shade = TRUE, col.conf = &quot;skyblue4&quot;, col.pred = &quot;lightskyblue2&quot;, data = datf ) Based on the forms of your function, you can also have programmed starting values from nls function (e.e.g, logistic growth, asymptotic regression, etc). apropos(&quot;^SS&quot;) #&gt; [1] &quot;ss&quot; &quot;SSasymp&quot; &quot;SSasympOff&quot; &quot;SSasympOrig&quot; &quot;SSbiexp&quot; #&gt; [6] &quot;SSD&quot; &quot;SSfol&quot; &quot;SSfpl&quot; &quot;SSgompertz&quot; &quot;SSlogis&quot; #&gt; [11] &quot;SSmicmen&quot; &quot;SSout&quot; &quot;SSweibull&quot; For example, a logistic growth model: \\[ P = \\frac{K}{1+ exp(P_0+ rt)} + \\epsilon \\] where P = population at time t K = carrying capacity r = population growth rate but in R you have slight different parameterization: \\[ P = \\frac{asym}{1 + exp(\\frac{xmid - t}{scal})} \\] where asym = carrying capacity xmid = the x value at the inflection point of the curve scal = scaling parameter. Hence, you have K = asym r = -1/scal \\(P_0 = -rxmid\\) # simulated data time &lt;- c(1, 2, 3, 5, 10, 15, 20, 25, 30, 35) population &lt;- c(2.8, 4.2, 3.5, 6.3, 15.7, 21.3, 23.7, 25.1, 25.8, 25.9) plot(time, population, las = 1, pch = 16) # model fitting logisticModelSS &lt;- nls(population ~ SSlogis(time, Asym, xmid, scal)) summary(logisticModelSS) #&gt; #&gt; Formula: population ~ SSlogis(time, Asym, xmid, scal) #&gt; #&gt; Parameters: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; Asym 25.5029 0.3666 69.56 3.34e-11 *** #&gt; xmid 8.7347 0.3007 29.05 1.48e-08 *** #&gt; scal 3.6353 0.2186 16.63 6.96e-07 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 0.6528 on 7 degrees of freedom #&gt; #&gt; Number of iterations to convergence: 1 #&gt; Achieved convergence tolerance: 1.908e-06 coef(logisticModelSS) #&gt; Asym xmid scal #&gt; 25.502890 8.734698 3.635333 Other parameterization #convert to other parameterization Ks = as.numeric(coef(logisticModelSS)[1]) rs = -1/as.numeric(coef(logisticModelSS)[3]) Pos = - rs * as.numeric(coef(logisticModelSS)[2]) #let&#39;s refit with these parameters logisticModel &lt;- nls(population ~ K / (1 + exp(Po + r * time)),start=list(Po=Pos,r=rs,K=Ks)) summary(logisticModel) #&gt; #&gt; Formula: population ~ K/(1 + exp(Po + r * time)) #&gt; #&gt; Parameters: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; Po 2.40272 0.12702 18.92 2.87e-07 *** #&gt; r -0.27508 0.01654 -16.63 6.96e-07 *** #&gt; K 25.50289 0.36665 69.56 3.34e-11 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 0.6528 on 7 degrees of freedom #&gt; #&gt; Number of iterations to convergence: 0 #&gt; Achieved convergence tolerance: 1.924e-06 #note: initial values = solution (highly unusual, but ok) plot(time, population, las = 1, pch = 16) lines(time, predict(logisticModel), col = &quot;red&quot;) If can also define your own self-starting function if your models are uncommon (built in nls) Example is based on (Schabenberger and Pierce 2001) #Load data dat &lt;- read.table(&quot;images/dat.txt&quot;, header = T) # plot dat.plot &lt;- ggplot(dat) + geom_point(aes( x = no3, y = ryp, color = as.factor(depth) )) + labs(color = &#39;Depth (cm)&#39;) + xlab(&#39;Soil NO3&#39;) + ylab(&#39;relative yield percent&#39;) dat.plot The suggested model (known as plateau model) is \\[ E(Y_{ij}) = (\\beta_{0j} + \\beta_{1j}N_{ij})I_{N_{ij}\\le \\alpha_j} + (\\beta_{0j} + \\beta_{1j}\\alpha_j)I_{N_{ij} &gt; \\alpha_j} \\] where N is an observation i is a particular observation j = 1,2 corresponding to depths (30,60) #First define model as a function nonlinModel &lt;- function(predictor,b0,b1,alpha){ ifelse(predictor&lt;=alpha, b0+b1*predictor, #if observation less than cutoff simple linear model b0+b1*alpha) #otherwise flat line } define selfStart function. Because we defined our model to be linear in the first part and then plateau (remain constant) we can use the first half of our predictors (sorted by increasing value) to get an initial estimate for the slope and intercept of the model, and the last predictor value (alpha) can be the starting value for the plateau parameter. nonlinModelInit &lt;- function(mCall,LHS,data){ #sort data by increasing predictor value - #done so we can just use the low level no3 conc to fit a simple model xy &lt;- sortedXyData(mCall[[&#39;predictor&#39;]],LHS,data) n &lt;- nrow(xy) #For the first half of the data a simple linear model is fit lmFit &lt;- lm(xy[1:(n/2),&#39;y&#39;]~xy[1:(n/2),&#39;x&#39;]) b0 &lt;- coef(lmFit)[1] b1 &lt;- coef(lmFit)[2] #for the cut off to the flat part select the last x value used in creating linear model alpha &lt;- xy[(n/2),&#39;x&#39;] value &lt;- c(b0,b1,alpha) names(value) &lt;- mCall[c(&#39;b0&#39;,&#39;b1&#39;,&#39;alpha&#39;)] value } combine model and custom function to calculate starting values. SS_nonlinModel &lt;- selfStart(nonlinModel,nonlinModelInit,c(&#39;b0&#39;,&#39;b1&#39;,&#39;alpha&#39;)) #Above code defined model and selfStart now just need to call it for each of the depths sep30_nls &lt;- nls(ryp ~ SS_nonlinModel(predictor = no3, b0, b1, alpha), data = dat[dat$depth == 30, ]) sep60_nls &lt;- nls(ryp ~ SS_nonlinModel(predictor = no3, b0, b1, alpha), data = dat[dat$depth == 60, ]) par(mfrow = c(1, 2)) plotFit( sep30_nls, interval = &quot;both&quot;, pch = 19, shade = TRUE, col.conf = &quot;skyblue4&quot;, col.pred = &quot;lightskyblue2&quot;, data = dat[dat$depth == 30, ], main = &#39;Results 30 cm depth&#39;, ylab = &#39;relative yield percent&#39;, xlab = &#39;Soil NO3 concentration&#39;, xlim = c(0, 120) ) plotFit( sep60_nls, interval = &quot;both&quot;, pch = 19, shade = TRUE, col.conf = &quot;lightpink4&quot;, col.pred = &quot;lightpink2&quot;, data = dat[dat$depth == 60, ], main = &#39;Results 60 cm depth&#39;, ylab = &#39;relative yield percent&#39;, xlab = &#39;Soil NO3 concentration&#39;, xlim = c(0, 120) ) summary(sep30_nls) #&gt; #&gt; Formula: ryp ~ SS_nonlinModel(predictor = no3, b0, b1, alpha) #&gt; #&gt; Parameters: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; b0 15.1943 2.9781 5.102 6.89e-07 *** #&gt; b1 3.5760 0.1853 19.297 &lt; 2e-16 *** #&gt; alpha 23.1324 0.5098 45.373 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 8.258 on 237 degrees of freedom #&gt; #&gt; Number of iterations to convergence: 6 #&gt; Achieved convergence tolerance: 3.608e-09 summary(sep60_nls) #&gt; #&gt; Formula: ryp ~ SS_nonlinModel(predictor = no3, b0, b1, alpha) #&gt; #&gt; Parameters: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; b0 5.4519 2.9785 1.83 0.0684 . #&gt; b1 5.6820 0.2529 22.46 &lt;2e-16 *** #&gt; alpha 16.2863 0.2818 57.80 &lt;2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 7.427 on 237 degrees of freedom #&gt; #&gt; Number of iterations to convergence: 5 #&gt; Achieved convergence tolerance: 8.571e-09 Instead of modeling the depths model separately we model them together - so there is a common slope, intercept, and plateau. red_nls &lt;- nls(ryp ~ SS_nonlinModel(predictor = no3, b0, b1, alpha), data = dat) summary(red_nls) #&gt; #&gt; Formula: ryp ~ SS_nonlinModel(predictor = no3, b0, b1, alpha) #&gt; #&gt; Parameters: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; b0 8.7901 2.7688 3.175 0.0016 ** #&gt; b1 4.8995 0.2207 22.203 &lt;2e-16 *** #&gt; alpha 18.0333 0.3242 55.630 &lt;2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 9.13 on 477 degrees of freedom #&gt; #&gt; Number of iterations to convergence: 7 #&gt; Achieved convergence tolerance: 7.126e-09 par(mfrow = c(1, 1)) plotFit( red_nls, interval = &quot;both&quot;, pch = 19, shade = TRUE, col.conf = &quot;lightblue4&quot;, col.pred = &quot;lightblue2&quot;, data = dat, main = &#39;Results combined&#39;, ylab = &#39;relative yield percent&#39;, xlab = &#39;Soil NO3 concentration&#39; ) Examine residual values for the combined model. library(nlstools) #using nlstools nlsResiduals function to get some quick residual plots #can also use test.nlsResiduals(resid) # https://www.rdocumentation.org/packages/nlstools/versions/1.0-2 resid &lt;- nlsResiduals(red_nls) plot(resid) can we test whether the parameters for the two soil depth fits are significantly different? To know if the combined model is appropriate, we consider a parameterization where we let the parameters for the 60cm model be equal to the parameters from the 30cm model plus some increment: \\[ \\beta_{02} = \\beta_{01} + d_0 \\\\ \\beta_{12} = \\beta_{11} + d_1 \\\\ \\alpha_{2} = \\alpha_{1} + d_a \\] We can implement this in the following function: nonlinModelF &lt;- function(predictor,soildep,b01,b11,a1,d0,d1,da){ b02 = b01 + d0 #make 60cm parms = 30cm parms + increment b12 = b11 + d1 a2 = a1 + da y1 = ifelse(predictor&lt;=a1, b01+b11*predictor, #if observation less than cutoff simple linear model b01+b11*a1) #otherwise flat line y2 = ifelse(predictor&lt;=a2, b02+b12*predictor, b02+b12*a2) y = y1*(soildep == 30) + y2*(soildep == 60) #combine models return(y) } Starting values are easy now because we fit each model individually. Soil_full=nls(ryp~nonlinModelF(predictor=no3,soildep=depth,b01,b11,a1,d0,d1,da), data=dat, start=list(b01=15.2,b11=3.58,a1=23.13,d0=-9.74,d1=2.11,da=-6.85)) summary(Soil_full) #&gt; #&gt; Formula: ryp ~ nonlinModelF(predictor = no3, soildep = depth, b01, b11, #&gt; a1, d0, d1, da) #&gt; #&gt; Parameters: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; b01 15.1943 2.8322 5.365 1.27e-07 *** #&gt; b11 3.5760 0.1762 20.291 &lt; 2e-16 *** #&gt; a1 23.1324 0.4848 47.711 &lt; 2e-16 *** #&gt; d0 -9.7424 4.2357 -2.300 0.0219 * #&gt; d1 2.1060 0.3203 6.575 1.29e-10 *** #&gt; da -6.8461 0.5691 -12.030 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 7.854 on 474 degrees of freedom #&gt; #&gt; Number of iterations to convergence: 1 #&gt; Achieved convergence tolerance: 3.742e-06 So, the increment parameters, \\(d_1\\),\\(d_2\\),\\(d_a\\) are all significantly different from 0, suggesting that we should have two models here. 6.2.3 Model/Estimation Adequacy (Bates and Watts 1980) assess nonlinearity in terms of 2 components of curvature: Intrinsic nonlinearity: the degree of bending and twisting in \\(f(\\theta)\\); our estimation approach assumes that the true function is relatively flat (planar) in the neighborhood fo \\(\\hat{\\theta}\\), which would not be true if \\(f()\\) has a lot of “bending” in the neighborhood of \\(\\hat{\\theta}\\) (independent of parameterization) If bad, the distribution of residuals will be seriously distorted slow to converge difficult to identify ( could use this function rms.curve) Solution: could use higher order Taylor expansions estimation Bayesian method Parameter effects nonlinearity: degree to which curvature (nonlinearity) is affected by choice of \\(\\theta\\) (data dependent; dependent on parameterization) leads to problems with inference on \\(\\hat{\\theta}\\) rms.curve in MASS can identify bootstrap-based inference can also be used Solution: try to reparaemterize. #check parameter effects and intrinsic curvature modD = deriv3(~ a*exp(b*x), c(&quot;a&quot;,&quot;b&quot;),function(a,b,x) NULL) nlin_modD=nls(y~modD(a,b,x),start=list(a=astrt,b=bstrt),data=datf) rms.curv(nlin_modD) #&gt; Parameter effects: c^theta x sqrt(F) = 0.0626 #&gt; Intrinsic: c^iota x sqrt(F) = 0.0062 In linear model, we have Linear Regression, we have goodness of fit measure as \\(R^2\\): \\[ R^2 = \\frac{SSR}{SSTO} = 1- \\frac{SSE}{SSTO} \\\\ = \\frac{\\sum_{i=1}^n (\\hat{Y}_i- \\bar{Y})^2}{\\sum_{i=1}^n (Y_i- \\bar{Y})^2} = 1- \\frac{\\sum_{i=1}^n ({Y}_i- \\hat{Y})^2}{\\sum_{i=1}^n (Y_i- \\bar{Y})^2} \\] but not valid in the nonlinear case because the error sum of squares and model sum of squares do not add to the total corrected sum of squares \\[ SSR + SSE \\neq SST \\] but we can use pseudo-\\(R^2\\): \\[ R^2_{pseudo} = 1 - \\frac{\\sum_{i=1}^n ({Y}_i- \\hat{Y})^2}{\\sum_{i=1}^n (Y_i- \\bar{Y})^2} \\] But we can’t interpret this as the proportion of variability explained by the model. We should use as a relative comparison of different models. Residual Plots: standardize, similar to OLS. useful when the intrinsic curvature is small: The studentized residuals \\[ r_i = \\frac{e_i}{s\\sqrt{1-\\hat{c}_i}} \\] where \\(\\hat{c}_i\\)is the i-th diagonal of \\(\\mathbf{\\hat{H}= F(\\hat{\\theta})[F(\\hat{\\theta})&#39;F(\\hat{\\theta})]^{-1}F(\\hat{\\theta})&#39;}\\) We could have problems of Collinearity: the condition number of \\(\\mathbf{[F(\\hat{\\theta})&#39;F(\\hat{\\theta})]^{-1}}\\) should be less than 30. Follow (Magel and Hertsgaard 1987); reparameterize if possible Leverage: Like OLS, but consider \\(\\mathbf{\\hat{H}= F(\\hat{\\theta})[F(\\hat{\\theta})&#39;F(\\hat{\\theta})]^{-1}F(\\hat{\\theta})&#39;}\\) (also known as “tangent plant hat matrix”) (St Laurent and Cook 1992) Heterogeneous Errors: weighted Non-linear Least Squares Correlated Errors: Generalized Nonlinear Least Squares Nonlinear Mixed Models Bayesian methods 6.2.4 Application \\[ y_i = \\frac{\\theta_0 + \\theta_1 x_i}{1 + \\theta_2 \\exp(0.4 x_i)} + \\epsilon_i \\] where \\(i = 1,..,n\\) Get the starting values plot(my_data) We notice that \\(Y_{max} = \\theta_0 + \\theta_1 x_i\\) in which we can find x_i from data max(my_data$y) #&gt; [1] 2.6722 my_data$x[which.max(my_data$y)] #&gt; [1] 0.0094 hence, x = 0.0094 when y = 2.6722 when we have the first equation as \\[ 2.6722 = \\theta_0 + 0.0094 \\theta_1 \\\\ \\theta_0 + 0.0094 \\theta_1 + 0 \\theta_2 = 2.6722 \\] Secondly, we notice that we can obtain the “average” of y when \\[ 1+ \\theta_2 exp(0.4 x) = 2 \\] then we can find this average numbers of x and y mean(my_data$y) #find mean y #&gt; [1] -0.0747864 my_data$y[which.min(abs(my_data$y-(mean(my_data$y))))] # find y closest to its mean #&gt; [1] -0.0773 my_data$x[which.min(abs(my_data$y-(mean(my_data$y))))] #find x closest to the mean y #&gt; [1] 11.0648 we have the second equation \\[ 1 + \\theta_2 exp(0.4*11.0648) = 2 \\\\ 0 \\theta_1 + 0 \\theta_1 + 83.58967 \\theta_2 = 1 \\] Thirdly, we can plug in the value of x closest to 1 to find the value of y my_data$x[which.min(abs(my_data$x-1))] # find value of x closet to 1 #&gt; [1] 0.9895 match(my_data$x[which.min(abs(my_data$x-1))], my_data$x) # find index of x closest to 1 #&gt; [1] 14 my_data$y[match(my_data$x[which.min(abs(my_data$x-1))], my_data$x)]# find y value #&gt; [1] 1.4577 hence we have \\[ 1.457 = \\frac{\\theta_0 + \\theta_1*0.9895}{1 + \\theta_2 exp(0.4*0.9895)} \\\\ 1.457 + 2.164479 *\\theta_2 = \\theta_0 + \\theta_1*0.9895 \\\\ \\theta_0 + \\theta_1*0.9895 - 2.164479 *\\theta_2 = 1.457 \\] with 3 equations, we can solve them to get the starting value for \\(\\theta_0,\\theta_1, \\theta_2\\) \\[ \\theta_0 + 0.0094 \\theta_1 + 0 \\theta_2 = 2.6722 \\\\ 0 \\theta_1 + 0 \\theta_1 + 83.58967 \\theta_2 = 1 \\\\ \\theta_0 + \\theta_1*0.9895 - 2.164479 *\\theta_2 = 1.457 \\] library(matlib) A = matrix(c(0,0.0094, 0, 0,0, 83.58967, 1, 0.9895, - 2.164479), nrow = 3, ncol = 3, byrow = T) b = c(2.6722,1,1.457 ) showEqn(A, b) #&gt; 0*x1 + 0.0094*x2 + 0*x3 = 2.6722 #&gt; 0*x1 + 0*x2 + 83.58967*x3 = 1 #&gt; 1*x1 + 0.9895*x2 - 2.164479*x3 = 1.457 Solve(A, b, fractions = F) #&gt; x1 = -279.80879739 #&gt; x2 = 284.27659574 #&gt; x3 = 0.0119632 Construct manually Gauss-Newton Algorithm #starting value theta_0_strt = -279.80879739 theta_1_strt = 284.27659574 theta_2_strt = 0.0119632 #model mod_4 = function(theta_0,theta_1,theta_2,x){ (theta_0 + theta_1*x)/(1+ theta_2*exp(0.4*x)) } #define a function f_4 = expression((theta_0 + theta_1*x)/(1+ theta_2*exp(0.4*x))) #take the first derivative df_4.d_theta_0=D(f_4,&#39;theta_0&#39;) df_4.d_theta_1=D(f_4,&#39;theta_1&#39;) df_4.d_theta_2=D(f_4,&#39;theta_2&#39;) # save the result of all iterations theta_vec = matrix(c(theta_0_strt,theta_1_strt,theta_2_strt)) delta= matrix(NA, nrow=3,ncol = 1) f_theta = as.matrix(eval(f_4,list(x=my_data$x,theta_0 = theta_vec[1,1],theta_1 = theta_vec[2,1],theta_2 = theta_vec[3,1]))) i = 1 repeat { F_theta_0 = as.matrix(cbind( eval( df_4.d_theta_0, list( x = my_data$x, theta_0 = theta_vec[1, i], theta_1 = theta_vec[2, i], theta_2 = theta_vec[3, i] ) ), eval( df_4.d_theta_1, list( x = my_data$x, theta_0 = theta_vec[1, i], theta_1 = theta_vec[2, i], theta_2 = theta_vec[3, i] ) ), eval( df_4.d_theta_2, list( x = my_data$x, theta_0 = theta_vec[1, i], theta_1 = theta_vec[2, i], theta_2 = theta_vec[3, i] ) ) )) delta[, i] = (solve(t(F_theta_0) %*% F_theta_0)) %*% t(F_theta_0) %*% (my_data$y - f_theta[,i]) theta_vec = cbind(theta_vec, matrix(NA, nrow = 3, ncol = 1)) theta_vec[, i+1] = theta_vec[, i] + delta[, i] i = i + 1 f_theta = cbind(f_theta, as.matrix(eval( f_4, list( x = my_data$x, theta_0 = theta_vec[1, i], theta_1 = theta_vec[2, i], theta_2 = theta_vec[3, i] ) ))) delta = cbind(delta, matrix(NA, nrow = 3, ncol = 1)) #convergence criteria based on SSE if (abs(sum((my_data$y - f_theta[,i])^2)-sum((my_data$y - f_theta[,i-1])^2))/(sum((my_data$y - f_theta[,i-1])^2))&lt;0.001){ break } } delta #&gt; [,1] [,2] [,3] [,4] [,5] [,6] #&gt; [1,] 2.811840e+02 -0.03929013 0.43160654 0.6904856 0.6746748 0.4056460 #&gt; [2,] -2.846545e+02 0.03198446 -0.16403964 -0.2895487 -0.2933345 -0.1734087 #&gt; [3,] -1.804567e-05 0.01530258 0.05137285 0.1183271 0.1613129 0.1160404 #&gt; [,7] [,8] #&gt; [1,] 0.09517681 NA #&gt; [2,] -0.03928239 NA #&gt; [3,] 0.03004911 NA theta_vec #&gt; [,1] [,2] [,3] [,4] [,5] [,6] #&gt; [1,] -279.8087974 1.37521388 1.33592375 1.76753029 2.4580158 3.1326907 #&gt; [2,] 284.2765957 -0.37788712 -0.34590266 -0.50994230 -0.7994910 -1.0928255 #&gt; [3,] 0.0119632 0.01194515 0.02724773 0.07862059 0.1969477 0.3582607 #&gt; [,7] [,8] #&gt; [1,] 3.5383367 3.6335135 #&gt; [2,] -1.2662342 -1.3055166 #&gt; [3,] 0.4743011 0.5043502 head(f_theta) #&gt; [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #&gt; [1,] -273.8482 1.355410 1.297194 1.633802 2.046023 2.296554 2.389041 2.404144 #&gt; [2,] -209.0859 1.268192 1.216738 1.514575 1.863098 2.059505 2.126009 2.135969 #&gt; [3,] -190.3323 1.242916 1.193433 1.480136 1.810629 1.992095 2.051603 2.060202 #&gt; [4,] -177.1891 1.225196 1.177099 1.456024 1.774000 1.945197 1.999945 2.007625 #&gt; [5,] -148.5872 1.186618 1.141549 1.403631 1.694715 1.844154 1.888953 1.894730 #&gt; [6,] -119.9585 1.147980 1.105961 1.351301 1.615968 1.744450 1.779859 1.783866 # estimate sigma^2 sigma2 = 1 / (nrow(my_data) - 3) * (t(my_data$y - (f_theta[, ncol(f_theta)]))) %*% (my_data$y - (f_theta[, ncol(f_theta)])) # p = 3 sigma2 #&gt; [,1] #&gt; [1,] 0.0801686 After 8 iterations, my function has converged. And objective function value at convergence is sum((my_data$y - f_theta[,i])^2) #&gt; [1] 19.80165 and the parameters of \\(\\theta\\)s are theta_vec[,ncol(theta_vec)] #&gt; [1] 3.6335135 -1.3055166 0.5043502 and the asymptotic variance covariance matrix is as.numeric(sigma2)*as.matrix(solve(crossprod(F_theta_0))) #&gt; [,1] [,2] [,3] #&gt; [1,] 0.11552571 -0.04817428 0.02685848 #&gt; [2,] -0.04817428 0.02100861 -0.01158212 #&gt; [3,] 0.02685848 -0.01158212 0.00703916 Issue that I encounter in this problem was that it was very sensitive to starting values. when I tried the value of 1 for all \\(\\theta\\)s, I have vastly different parameter estimates. Then, I try to use the model interpretation to try to find reasonable starting values. Check with predefined function in nls nlin_4 = nls(y ~ mod_4(theta_0,theta_1, theta_2, x), start = list(theta_0=-279.80879739 ,theta_1=284.27659574 , theta_2=0.0119632), data = my_data) nlin_4 #&gt; Nonlinear regression model #&gt; model: y ~ mod_4(theta_0, theta_1, theta_2, x) #&gt; data: my_data #&gt; theta_0 theta_1 theta_2 #&gt; 3.6359 -1.3064 0.5053 #&gt; residual sum-of-squares: 19.8 #&gt; #&gt; Number of iterations to convergence: 9 #&gt; Achieved convergence tolerance: 2.294e-07 References "],["generalized-linear-models.html", "Chapter 7 Generalized Linear Models", " Chapter 7 Generalized Linear Models Even though we call it generalized linear model, it is still under the paradigm of non-linear regression, because the form of the regression model is non-linear. The name generalized linear model derived from the fact that we have \\(\\mathbf{x&#39;_i \\beta}\\) (which is linear form) in the model. "],["logistic-regression-1.html", "7.1 Logistic Regression", " 7.1 Logistic Regression \\[ p_i = f(\\mathbf{x}_i ; \\beta) = \\frac{exp(\\mathbf{x_i&#39;\\beta})}{1 + exp(\\mathbf{x_i&#39;\\beta})} \\] Equivalently, \\[ logit(p_i) = log(\\frac{p_i}{1+p_i}) = \\mathbf{x_i&#39;\\beta} \\] where \\(\\frac{p_i}{1+p_i}\\)is the odds. In this form, the model is specified such that a function of the mean response is linear. Hence, Generalized Linear Models The likelihood function \\[ L(p_i) = \\prod_{i=1}^{n} p_i^{Y_i}(1-p_i)^{1-Y_i} \\] where \\(p_i = \\frac{\\mathbf{x&#39;_i \\beta}}{1+\\mathbf{x&#39;_i \\beta}}\\) and \\(1-p_i = (1+ exp(\\mathbf{x&#39;_i \\beta}))^{-1}\\) Hence, our objective function is \\[ Q(\\beta) = log(L(\\beta)) = \\sum_{i=1}^n Y_i \\mathbf{x&#39;_i \\beta} - \\sum_{i=1}^n log(1+ exp(\\mathbf{x&#39;_i \\beta})) \\] we could maximize this function numerically using the optimization method above, which allows us to find numerical MLE for \\(\\hat{\\beta}\\). Then we can use the standard asymptotic properties of MLEs to make inference. Property of MLEs is that parameters are asymptotically unbiased with sample variance-covariance matrix given by the inverse Fisher information matrix \\[ \\hat{\\beta} \\dot{\\sim} AN(\\beta,[\\mathbf{I}(\\beta)]^{-1}) \\] where the Fisher Information matrix, \\(\\mathbf{I}(\\beta)\\) is \\[ \\begin{aligned} \\mathbf{I}(\\beta) &amp;= E[\\frac{\\partial \\log(L(\\beta))}{\\partial (\\beta)}\\frac{\\partial \\log(L(\\beta))}{\\partial \\beta&#39;}] \\\\ &amp;= E[(\\frac{\\partial \\log(L(\\beta))}{\\partial \\beta_i} \\frac{\\partial \\log(L(\\beta))}{\\partial \\beta_j})_{ij}] \\end{aligned} \\] Under regularity conditions, this is equivalent to the negative of the expected value of the Hessian Matrix \\[ \\begin{aligned} \\mathbf{I}(\\beta) &amp;= -E[\\frac{\\partial^2 \\log(L(\\beta))}{\\partial \\beta \\partial \\beta&#39;}] \\\\ &amp;= -E[(\\frac{\\partial^2 \\log(L(\\beta))}{\\partial \\beta_i \\partial \\beta_j})_{ij}] \\end{aligned} \\] Example: \\[ x_i&#39; \\beta = \\beta_0 + \\beta_1 x_i \\] \\[ - \\frac{\\partial^2 \\ln(L(\\beta))}{\\partial \\beta^2_0} = \\sum_{i=1}^n \\frac{\\exp(x&#39;_i \\beta)}{1 + \\exp(x&#39;_i \\beta)} - [\\frac{\\exp(x_i&#39; \\beta)}{1+ \\exp(x&#39;_i \\beta)}]^2 = \\sum_{i=1}^n p_i (1-p_i) \\\\ - \\frac{\\partial^2 \\ln(L(\\beta))}{\\partial \\beta^2_1} = \\sum_{i=1}^n \\frac{x_i^2\\exp(x&#39;_i \\beta)}{1 + \\exp(x&#39;_i \\beta)} - [\\frac{x_i\\exp(x_i&#39; \\beta)}{1+ \\exp(x&#39;_i \\beta)}]^2 = \\sum_{i=1}^n x_i^2p_i (1-p_i) \\\\ - \\frac{\\partial^2 \\ln(L(\\beta))}{\\partial \\beta_0 \\partial \\beta_1} = \\sum_{i=1}^n \\frac{x_i\\exp(x&#39;_i \\beta)}{1 + \\exp(x&#39;_i \\beta)} - x_i[\\frac{\\exp(x_i&#39; \\beta)}{1+ \\exp(x&#39;_i \\beta)}]^2 = \\sum_{i=1}^n x_ip_i (1-p_i) \\\\ \\] Hence, \\[ \\mathbf{I} (\\beta) = \\left[ \\begin{array} {cc} \\sum_i p_i(1-p_i) &amp; \\sum_i x_i p_i(1-p_i) \\\\ \\sum_i x_i p_i(1-p_i) &amp; \\sum_i x_i^2 p_i(1-p_i) \\end{array} \\right] \\] Inference Likelihood Ratio Tests To formulate the test, let \\(\\beta = [\\beta_1&#39;, \\beta_2&#39;]&#39;\\). If you are interested in testing a hypothesis about \\(\\beta_1\\), then we leave \\(\\beta_2\\) unspecified (called nuisance parameters). \\(\\beta_1\\) and \\(\\beta_2\\) can either a vector or scalar, or \\(\\beta_2\\) can be null. Example: \\(H_0: \\beta_1 = \\beta_{1,0}\\) (where \\(\\beta_{1,0}\\) is specified) and \\(\\hat{\\beta}_{2,0}\\) be the MLE of \\(\\beta_2\\) under the restriction that \\(\\beta_1 = \\beta_{1,0}\\). The likelihood ratio test statistic is \\[ -2\\log\\Lambda = -2[\\log(L(\\beta_{1,0},\\hat{\\beta}_{2,0})) - \\log(L(\\hat{\\beta}_1,\\hat{\\beta}_2))] \\] where the first term is the value fo the likelihood for the fitted restricted model the second term is the likelihood value of the fitted unrestricted model Under the null, \\[ -2 \\log \\Lambda \\sim \\chi^2_{\\upsilon} \\] where \\(\\upsilon\\) is the dimension of \\(\\beta_1\\) We reject the null when \\(-2\\log \\Lambda &gt; \\chi_{\\upsilon,1-\\alpha}^2\\) Wald Statistics Based on \\[ \\hat{\\beta} \\sim AN (\\beta, [\\mathbf{I}(\\beta)^{-1}]) \\] \\[ H_0: \\mathbf{L}\\hat{\\beta} = 0 \\] where \\(\\mathbf{L}\\) is a \\(q \\times p\\) matrix with \\(q\\) linearly independent rows. Then \\[ W = (\\mathbf{L\\hat{\\beta}})&#39;(\\mathbf{L[I(\\hat{\\beta})]^{-1}L&#39;})^{-1}(\\mathbf{L\\hat{\\beta}}) \\] under the null hypothesis Confidence interval \\[ \\hat{\\beta}_i \\pm 1.96 \\hat{s}_{ii}^2 \\] where \\(\\hat{s}_{ii}^2\\) is the i-th diagonal of \\(\\mathbf{[I(\\hat{\\beta})]}^{-1}\\) If you have large sample size, the likelihood ratio and Wald tests have similar results. small sample size, the likelihood ratio test is better. Logistic Regression: Interpretation of \\(\\beta\\) For single regressor, the model is \\[ logit\\{\\hat{p}_{x_i}\\} \\equiv logit (\\hat{p}_i) = \\log(\\frac{\\hat{p}_i}{1 - \\hat{p}_i}) = \\hat{\\beta}_0 + \\hat{\\beta}_1 x_i \\] When \\(x= x_i + 1\\) \\[ logit\\{\\hat{p}_{x_i +1}\\} = \\hat{\\beta}_0 + \\hat{\\beta}(x_i + 1) = logit\\{\\hat{p}_{x_i}\\} + \\hat{\\beta}_1 \\] Then, \\[ logit\\{\\hat{p}_{x_i +1}\\} - logit\\{\\hat{p}_{x_i}\\} = log\\{odds[\\hat{p}_{x_i +1}]\\} - log\\{odds[\\hat{p}_{x_i}]\\} \\\\ = log(\\frac{odds[\\hat{p}_{x_i + 1}]}{odds[\\hat{p}_{x_i}]}) = \\hat{\\beta}_1 \\] and \\[ exp(\\hat{\\beta}_1) = \\frac{odds[\\hat{p}_{x_i + 1}]}{odds[\\hat{p}_{x_i}]} \\] the estimated odds ratio the estimated odds ratio, when there is a difference of c units in the regressor x, is \\(exp(c\\hat{\\beta}_1)\\). When there are multiple covariates, \\(exp(\\hat{\\beta}_k)\\) is the estimated odds ratio for the variable \\(x_k\\), assuming that all of the other variables are held constant. Inference on the Mean Response Let \\(x_h = (1, x_{h1}, ...,x_{h,p-1})&#39;\\). Then \\[ \\hat{p}_h = \\frac{exp(\\mathbf{x&#39;_h \\hat{\\beta}})}{1 + exp(\\mathbf{x&#39;_h \\hat{\\beta}})} \\] and \\(s^2(\\hat{p}_h) = \\mathbf{x&#39;_h[I(\\hat{\\beta})]^{-1}x_h}\\) For new observation, we can have a cutoff point to decide whether y = 0 or 1. 7.1.1 Application library(kableExtra) library(dplyr) library(pscl) library(ggplot2) library(faraway) library(nnet) library(agridat) library(nlstools) Logistic Regression \\(x \\sim Unif(-0.5,2.5)\\). Then \\(\\eta = 0.5 + 0.75 x\\) set.seed(23) #set seed for reproducibility x &lt;- runif(1000,min = -0.5,max = 2.5) eta1 &lt;- 0.5 + 0.75*x Passing \\(\\eta\\)’s into the inverse-logit function, we get \\[ p = \\frac{\\exp(\\eta)}{1+ \\exp(\\eta)} \\] where \\(p \\in [0,1]\\) Then, we generate \\(y \\sim Bernoulli(p)\\) p &lt;- exp(eta1)/(1+exp(eta1)) y &lt;- rbinom(1000,1,p) BinData &lt;- data.frame(X = x, Y = y) Model Fit Logistic_Model &lt;- glm(formula = Y ~ X, family = binomial, # family = specifies the response distribution data = BinData) summary(Logistic_Model) #&gt; #&gt; Call: #&gt; glm(formula = Y ~ X, family = binomial, data = BinData) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.2317 0.4153 0.5574 0.7922 1.1469 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) 0.46205 0.10201 4.530 5.91e-06 *** #&gt; X 0.78527 0.09296 8.447 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for binomial family taken to be 1) #&gt; #&gt; Null deviance: 1106.7 on 999 degrees of freedom #&gt; Residual deviance: 1027.4 on 998 degrees of freedom #&gt; AIC: 1031.4 #&gt; #&gt; Number of Fisher Scoring iterations: 4 nlstools::confint2(Logistic_Model) #&gt; 2.5 % 97.5 % #&gt; (Intercept) 0.2618709 0.6622204 #&gt; X 0.6028433 0.9676934 OddsRatio &lt;- coef(Logistic_Model) %&gt;% exp OddsRatio #&gt; (Intercept) X #&gt; 1.587318 2.192995 Based on the odds ratio, when \\(x = 0\\) , the odds of success of 1.59 \\(x = 1\\), the odds of success increase by a factor of 2.19 (i.e., 119.29% increase). Deviance Tests \\[ H_0: \\text{No variables are related to the response (i.e., model with just the intercept)} \\\\ H_1: \\text{at least one variable is related to the response} \\] Test_Dev = Logistic_Model$null.deviance - Logistic_Model$deviance p_val_dev &lt;- 1-pchisq(q = Test_Dev, df = 1) Since we see the p-value of 0, we reject the null that no variables are related to the response Deviance residuals Logistic_Resids &lt;- residuals(Logistic_Model, type = &quot;deviance&quot;) plot( y = Logistic_Resids, x = BinData$X, xlab = &#39;X&#39;, ylab = &#39;Deviance Resids&#39; ) However, this plot is not informative. Hence, we can can see the residuals plots that are grouped into bins based on prediction values. plot_bin &lt;- function(Y, X, bins = 100, return.DF = FALSE) { Y_Name &lt;- deparse(substitute(Y)) X_Name &lt;- deparse(substitute(X)) Binned_Plot &lt;- data.frame(Plot_Y = Y, Plot_X = X) Binned_Plot$bin &lt;- cut(Binned_Plot$Plot_X, breaks = bins) %&gt;% as.numeric Binned_Plot_summary &lt;- Binned_Plot %&gt;% group_by(bin) %&gt;% summarise( Y_ave = mean(Plot_Y), X_ave = mean(Plot_X), Count = n() ) %&gt;% as.data.frame plot( y = Binned_Plot_summary$Y_ave, x = Binned_Plot_summary$X_ave, ylab = Y_Name, xlab = X_Name ) if (return.DF) return(Binned_Plot_summary) } plot_bin(Y = Logistic_Resids, X = BinData$X, bins = 100) We can also see the predicted value against the residuals. Logistic_Predictions &lt;- predict(Logistic_Model, type = &quot;response&quot;) plot_bin(Y = Logistic_Resids, X = Logistic_Predictions, bins = 100) We can also look at a binned plot of the logistic prediction versus the true category NumBins &lt;- 10 Binned_Data &lt;- plot_bin( Y = BinData$Y, X = Logistic_Predictions, bins = NumBins, return.DF = TRUE ) Binned_Data #&gt; bin Y_ave X_ave Count #&gt; 1 1 0.5833333 0.5382095 72 #&gt; 2 2 0.5200000 0.5795887 75 #&gt; 3 3 0.6567164 0.6156540 67 #&gt; 4 4 0.7014925 0.6579674 67 #&gt; 5 5 0.6373626 0.6984765 91 #&gt; 6 6 0.7500000 0.7373341 72 #&gt; 7 7 0.7096774 0.7786747 93 #&gt; 8 8 0.8503937 0.8203819 127 #&gt; 9 9 0.8947368 0.8601232 133 #&gt; 10 10 0.8916256 0.9004734 203 abline(0, 1, lty = 2, col = &#39;blue&#39;) Formal deviance test Hosmer-Lemeshow test Null hypothesis: the observed events match the expected evens \\[ X^2_{HL} = \\sum_{j=1}^{J} \\frac{(y_j - m_j \\hat{p}_j)^2}{m_j \\hat{p}_j(1-\\hat{p}_j)} \\] where within the j-th bin, \\(y_j\\) is the number of successes \\(m_j\\) = number of observations \\(\\hat{p}_j\\) = predicted probability Under the null hypothesis, \\(X^2_{HLL} \\sim \\chi^2_{J-1}\\) HL_BinVals &lt;- (Binned_Data$Count * Binned_Data$Y_ave - Binned_Data$Count * Binned_Data$X_ave) ^ 2 / Binned_Data$Count * Binned_Data$X_ave * (1 - Binned_Data$X_ave) HLpval &lt;- pchisq(q = sum(HL_BinVals), df = NumBins, lower.tail = FALSE) HLpval #&gt; [1] 0.9999989 Since p-value = 0.99, we do not reject the null hypothesis (i.e., the model is fitting well). "],["probit-regression.html", "7.2 Probit Regression", " 7.2 Probit Regression \\[ E(Y_i) = p_i = \\Phi(\\mathbf{x_i&#39;\\theta}) \\] where \\(\\Phi()\\) is the CDF of a N(0,1) random variable. Other models (e..g, t–distribution; log-log; I complimentary log-log) We let \\(Y_i = 1\\) success, \\(Y_i =0\\) no success. We assume \\(Y \\sim Ber\\) and \\(p_i = P(Y_i =1)\\), the success probability. We consider a logistic regression with the response function \\(logit(p_i) = x&#39;_i \\beta\\) Confusion matrix Predicted Truth 1 0 1 True Positive (TP) False Negative (FN) 0 False Positive (FP) True Negative (TN) Sensitivity: ability to identify positive results \\[ \\text{Sensitivity} = \\frac{TP}{TP + FN} \\] Specificity: ability to identify negative results \\[ \\text{Specificity} = \\frac{TN}{TN + FP} \\] False positive rate: Type I error (1- specificity) \\[ \\text{ False Positive Rate} = \\frac{FP}{TN+ FP} \\] False Negative Rate: Type II error (1-sensitivity) \\[ \\text{False Negative Rate} = \\frac{FN}{TP + FN} \\] Predicted Truth 1 0 1 Sensitivity False Negative Rate 0 False Positive Rate Specificity "],["binomial-regression.html", "7.3 Binomial Regression", " 7.3 Binomial Regression Binomial Here, cancer case = successes, and control case = failures. data(&quot;esoph&quot;) head(esoph, n = 3) #&gt; agegp alcgp tobgp ncases ncontrols #&gt; 1 25-34 0-39g/day 0-9g/day 0 40 #&gt; 2 25-34 0-39g/day 10-19 0 10 #&gt; 3 25-34 0-39g/day 20-29 0 6 plot( esoph$ncases / (esoph$ncases + esoph$ncontrols) ~ esoph$alcgp, ylab = &quot;Proportion&quot;, xlab = &#39;Alcohol consumption&#39;, main = &#39;Esophageal Cancer data&#39; ) class(esoph$agegp) &lt;- &quot;factor&quot; class(esoph$alcgp) &lt;- &quot;factor&quot; class(esoph$tobgp) &lt;- &quot;factor&quot; # only the alcohol consumption as a predictor model &lt;- glm(cbind(ncases, ncontrols) ~ alcgp, data = esoph, family = binomial) summary(model) #&gt; #&gt; Call: #&gt; glm(formula = cbind(ncases, ncontrols) ~ alcgp, family = binomial, #&gt; data = esoph) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -4.0759 -1.2037 -0.0183 1.0928 3.7336 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) -2.5885 0.1925 -13.444 &lt; 2e-16 *** #&gt; alcgp40-79 1.2712 0.2323 5.472 4.46e-08 *** #&gt; alcgp80-119 2.0545 0.2611 7.868 3.59e-15 *** #&gt; alcgp120+ 3.3042 0.3237 10.209 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for binomial family taken to be 1) #&gt; #&gt; Null deviance: 367.95 on 87 degrees of freedom #&gt; Residual deviance: 221.46 on 84 degrees of freedom #&gt; AIC: 344.51 #&gt; #&gt; Number of Fisher Scoring iterations: 5 #Coefficient Odds coefficients(model) %&gt;% exp #&gt; (Intercept) alcgp40-79 alcgp80-119 alcgp120+ #&gt; 0.07512953 3.56527094 7.80261593 27.22570533 deviance(model)/df.residual(model) #&gt; [1] 2.63638 model$aic #&gt; [1] 344.5109 # alcohol consumption and age as predictors better_model &lt;- glm(cbind(ncases, ncontrols) ~ agegp + alcgp, data = esoph, family = binomial) summary(better_model) #&gt; #&gt; Call: #&gt; glm(formula = cbind(ncases, ncontrols) ~ agegp + alcgp, family = binomial, #&gt; data = esoph) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.2395 -0.7186 -0.2324 0.7930 3.3538 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) -6.1472 1.0419 -5.900 3.63e-09 *** #&gt; agegp35-44 1.6311 1.0800 1.510 0.130973 #&gt; agegp45-54 3.4258 1.0389 3.297 0.000976 *** #&gt; agegp55-64 3.9435 1.0346 3.811 0.000138 *** #&gt; agegp65-74 4.3568 1.0413 4.184 2.87e-05 *** #&gt; agegp75+ 4.4242 1.0914 4.054 5.04e-05 *** #&gt; alcgp40-79 1.4343 0.2448 5.859 4.64e-09 *** #&gt; alcgp80-119 2.0071 0.2776 7.230 4.84e-13 *** #&gt; alcgp120+ 3.6800 0.3763 9.778 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for binomial family taken to be 1) #&gt; #&gt; Null deviance: 367.95 on 87 degrees of freedom #&gt; Residual deviance: 105.88 on 79 degrees of freedom #&gt; AIC: 238.94 #&gt; #&gt; Number of Fisher Scoring iterations: 6 better_model$aic #smaller AIC is better #&gt; [1] 238.9361 coefficients(better_model) %&gt;% exp #&gt; (Intercept) agegp35-44 agegp45-54 agegp55-64 agegp65-74 agegp75+ #&gt; 0.002139482 5.109601844 30.748594216 51.596634690 78.005283850 83.448437749 #&gt; alcgp40-79 alcgp80-119 alcgp120+ #&gt; 4.196747169 7.441782227 39.646885126 pchisq( q = model$deviance - better_model$deviance, df = model$df.residual - better_model$df.residual, lower = FALSE ) #&gt; [1] 2.713923e-23 # specify link function as probit Prob_better_model &lt;- glm( cbind(ncases, ncontrols) ~ agegp + alcgp, data = esoph, family = binomial(link = probit) ) summary(Prob_better_model) #&gt; #&gt; Call: #&gt; glm(formula = cbind(ncases, ncontrols) ~ agegp + alcgp, family = binomial(link = probit), #&gt; data = esoph) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.1325 -0.6877 -0.1661 0.7654 3.3258 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) -3.3741 0.4922 -6.855 7.13e-12 *** #&gt; agegp35-44 0.8562 0.5081 1.685 0.092003 . #&gt; agegp45-54 1.7829 0.4904 3.636 0.000277 *** #&gt; agegp55-64 2.1034 0.4876 4.314 1.61e-05 *** #&gt; agegp65-74 2.3374 0.4930 4.741 2.13e-06 *** #&gt; agegp75+ 2.3694 0.5275 4.491 7.08e-06 *** #&gt; alcgp40-79 0.8080 0.1330 6.076 1.23e-09 *** #&gt; alcgp80-119 1.1399 0.1558 7.318 2.52e-13 *** #&gt; alcgp120+ 2.1204 0.2060 10.295 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for binomial family taken to be 1) #&gt; #&gt; Null deviance: 367.95 on 87 degrees of freedom #&gt; Residual deviance: 104.48 on 79 degrees of freedom #&gt; AIC: 237.53 #&gt; #&gt; Number of Fisher Scoring iterations: 6 "],["poisson-regression.html", "7.4 Poisson Regression", " 7.4 Poisson Regression From the Poisson distribution \\[ f(Y_i) = \\frac{\\mu_i^{Y_i}exp(-\\mu_i)}{Y_i!}, Y_i = 0,1,.. \\\\ E(Y_i) = \\mu_i \\\\ var(Y_i) = \\mu_i \\] which is a natural distribution for counts. We can see that the variance is a function of the mean. If we let \\(\\mu_i = f(\\mathbf{x_i; \\theta})\\), it would be similar to Logistic Regression since we can choose \\(f()\\) as \\(\\mu_i = \\mathbf{x_i&#39;\\theta}, \\mu_i = \\exp(\\mathbf{x_i&#39;\\theta}), \\mu_i = \\log(\\mathbf{x_i&#39;\\theta})\\) 7.4.1 Application Count Data and Poisson regression data(bioChemists, package = &quot;pscl&quot;) bioChemists &lt;- bioChemists %&gt;% rename( Num_Article = art, #articles in last 3 years of PhD Sex = fem, #coded 1 if female Married = mar, #coded 1 if married Num_Kid5 = kid5, #number of childeren under age 6 PhD_Quality = phd, #prestige of PhD program Num_MentArticle = ment #articles by mentor in last 3 years ) hist(bioChemists$Num_Article, breaks = 25, main = &#39;Number of Articles&#39;) Poisson_Mod &lt;- glm(Num_Article ~ ., family=poisson, bioChemists) summary(Poisson_Mod) #&gt; #&gt; Call: #&gt; glm(formula = Num_Article ~ ., family = poisson, data = bioChemists) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -3.5672 -1.5398 -0.3660 0.5722 5.4467 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) 0.304617 0.102981 2.958 0.0031 ** #&gt; SexWomen -0.224594 0.054613 -4.112 3.92e-05 *** #&gt; MarriedMarried 0.155243 0.061374 2.529 0.0114 * #&gt; Num_Kid5 -0.184883 0.040127 -4.607 4.08e-06 *** #&gt; PhD_Quality 0.012823 0.026397 0.486 0.6271 #&gt; Num_MentArticle 0.025543 0.002006 12.733 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for poisson family taken to be 1) #&gt; #&gt; Null deviance: 1817.4 on 914 degrees of freedom #&gt; Residual deviance: 1634.4 on 909 degrees of freedom #&gt; AIC: 3314.1 #&gt; #&gt; Number of Fisher Scoring iterations: 5 Residual of 1634 with 909 df isn’t great. We see Pearson \\(\\chi^2\\) Predicted_Means &lt;- predict(Poisson_Mod,type = &quot;response&quot;) X2 &lt;- sum((bioChemists$Num_Article - Predicted_Means)^2/Predicted_Means) X2 #&gt; [1] 1662.547 pchisq(X2,Poisson_Mod$df.residual, lower.tail = FALSE) #&gt; [1] 7.849882e-47 With interaction terms, there are some improvements Poisson_Mod_All2way &lt;- glm(Num_Article ~ .^2, family=poisson, bioChemists) Poisson_Mod_All3way &lt;- glm(Num_Article ~ .^3, family=poisson, bioChemists) Consider the \\(\\hat{\\phi} = \\frac{\\text{deviance}}{df}\\) Poisson_Mod$deviance / Poisson_Mod$df.residual #&gt; [1] 1.797988 This is evidence for over-dispersion. Likely cause is missing variables. And remedies could either be to include more variables or consider random effects. A quick fix is to force the Poisson Regression to include this value of \\(\\phi\\), and this model is called “Quasi-Poisson”. phi_hat = Poisson_Mod$deviance/Poisson_Mod$df.residual summary(Poisson_Mod,dispersion = phi_hat) #&gt; #&gt; Call: #&gt; glm(formula = Num_Article ~ ., family = poisson, data = bioChemists) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -3.5672 -1.5398 -0.3660 0.5722 5.4467 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) 0.30462 0.13809 2.206 0.02739 * #&gt; SexWomen -0.22459 0.07323 -3.067 0.00216 ** #&gt; MarriedMarried 0.15524 0.08230 1.886 0.05924 . #&gt; Num_Kid5 -0.18488 0.05381 -3.436 0.00059 *** #&gt; PhD_Quality 0.01282 0.03540 0.362 0.71715 #&gt; Num_MentArticle 0.02554 0.00269 9.496 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for poisson family taken to be 1.797988) #&gt; #&gt; Null deviance: 1817.4 on 914 degrees of freedom #&gt; Residual deviance: 1634.4 on 909 degrees of freedom #&gt; AIC: 3314.1 #&gt; #&gt; Number of Fisher Scoring iterations: 5 Or directly rerun the model as quasiPoisson_Mod &lt;- glm(Num_Article ~ ., family=quasipoisson, bioChemists) Quasi-Poisson is not recommended, but Negative Binomial Regression that has an extra parameter to account for over-dispersion is. "],["negative-binomial-regression.html", "7.5 Negative Binomial Regression", " 7.5 Negative Binomial Regression library(MASS) NegBinom_Mod &lt;- MASS::glm.nb(Num_Article ~ .,bioChemists) summary(NegBinom_Mod) #&gt; #&gt; Call: #&gt; MASS::glm.nb(formula = Num_Article ~ ., data = bioChemists, init.theta = 2.264387695, #&gt; link = log) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.1678 -1.3617 -0.2806 0.4476 3.4524 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) 0.256144 0.137348 1.865 0.062191 . #&gt; SexWomen -0.216418 0.072636 -2.979 0.002887 ** #&gt; MarriedMarried 0.150489 0.082097 1.833 0.066791 . #&gt; Num_Kid5 -0.176415 0.052813 -3.340 0.000837 *** #&gt; PhD_Quality 0.015271 0.035873 0.426 0.670326 #&gt; Num_MentArticle 0.029082 0.003214 9.048 &lt; 2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for Negative Binomial(2.2644) family taken to be 1) #&gt; #&gt; Null deviance: 1109.0 on 914 degrees of freedom #&gt; Residual deviance: 1004.3 on 909 degrees of freedom #&gt; AIC: 3135.9 #&gt; #&gt; Number of Fisher Scoring iterations: 1 #&gt; #&gt; #&gt; Theta: 2.264 #&gt; Std. Err.: 0.271 #&gt; #&gt; 2 x log-likelihood: -3121.917 We can see the dispersion is 2.264 with SE = 0.271, which is significantly different from 1, indicating over-dispersion. Check Over-Dispersion for more detail "],["multinomial.html", "7.6 Multinomial", " 7.6 Multinomial If we have more than two categories or groups that we want to model relative to covariates (e.g., we have observations \\(i = 1,…,n\\) and groups/ covariates \\(j = 1,2,…,J\\)), multinomial is our candidate model Let \\(p_{ij}\\) be the probability that the i-th observation belongs to the j-th group \\(Y_{ij}\\) be the number of observations for individual i in group j; An individual will have observations \\(Y_{i1},Y_{i2},…Y_{iJ}\\) assume the probability of observing this response is given by a multinomial distribution in terms of probabilities \\(p_{ij}\\), where \\(\\sum_{j = 1}^J p_{ij} = 1\\) . For interpretation, we have a baseline category \\(p_{i1} = 1 - \\sum_{j = 2}^J p_{ij}\\) The link between the mean response (probability) \\(p_{ij}\\) and a linear function of the covariates \\[ \\eta_{ij} = \\mathbf{x&#39;_i \\beta_j} = \\log \\frac{p_{ij}}{p_{i1}}, j = 2,..,J \\] We compare \\(p_{ij}\\) to the baseline \\(p_{i1}\\), suggesting \\[ p_{ij} = \\frac{\\exp(\\eta_{ij})}{1 + \\sum_{i=2}^J \\exp(\\eta_{ij})} \\] which is known as multinomial logistic model. Note: Softmax coding for multinomial logistic regression: rather than selecting a baseline class, we treat all K class symmetrically - equally important (no baseline). \\[ P(Y = k | X = x) = \\frac{exp(\\beta_{k1} + \\dots + \\beta_{k_p x_p})}{\\sum_{l = 1}^K exp(\\beta_{l0} + \\dots + \\beta_{l_p x_p})} \\] then the log odds ratio between k-th and k’-th classes is \\[ \\log (\\frac{P(Y=k|X=x)}{P(Y = k&#39; | X=x)}) = (\\beta_{k0} - \\beta_{k&#39;0}) + \\dots + (\\beta_{kp} - \\beta_{k&#39;p}) x_p \\] library(faraway) library(dplyr) data(nes96, package=&quot;faraway&quot;) head(nes96,3) #&gt; popul TVnews selfLR ClinLR DoleLR PID age educ income vote #&gt; 1 0 7 extCon extLib Con strRep 36 HS $3Kminus Dole #&gt; 2 190 1 sliLib sliLib sliCon weakDem 20 Coll $3Kminus Clinton #&gt; 3 31 7 Lib Lib Con weakDem 24 BAdeg $3Kminus Clinton We try to understand their political strength table(nes96$PID) #&gt; #&gt; strDem weakDem indDem indind indRep weakRep strRep #&gt; 200 180 108 37 94 150 175 nes96$Political_Strength &lt;- NA nes96$Political_Strength[nes96$PID %in% c(&quot;strDem&quot;, &quot;strRep&quot;)] &lt;- &quot;Strong&quot; nes96$Political_Strength[nes96$PID %in% c(&quot;weakDem&quot;, &quot;weakRep&quot;)] &lt;- &quot;Weak&quot; nes96$Political_Strength[nes96$PID %in% c(&quot;indDem&quot;, &quot;indind&quot;, &quot;indRep&quot;)] &lt;- &quot;Neutral&quot; nes96 %&gt;% group_by(Political_Strength) %&gt;% summarise(Count = n()) #&gt; # A tibble: 3 × 2 #&gt; Political_Strength Count #&gt; &lt;chr&gt; &lt;int&gt; #&gt; 1 Neutral 239 #&gt; 2 Strong 375 #&gt; 3 Weak 330 visualize the political strength variable library(ggplot2) Plot_DF &lt;- nes96 %&gt;% mutate(Age_Grp = cut_number(age, 4)) %&gt;% group_by(Age_Grp, Political_Strength) %&gt;% summarise(count = n()) %&gt;% group_by(Age_Grp) %&gt;% mutate(etotal = sum(count), proportion = count / etotal) Age_Plot &lt;- ggplot( Plot_DF, aes( x = Age_Grp, y = proportion, group = Political_Strength, linetype = Political_Strength, color = Political_Strength ) ) + geom_line(size = 2) Age_Plot Fit the multinomial logistic model: model political strength as a function of age and education library(nnet) Multinomial_Model &lt;- multinom(Political_Strength ~ age + educ, nes96, trace = F) summary(Multinomial_Model) #&gt; Call: #&gt; multinom(formula = Political_Strength ~ age + educ, data = nes96, #&gt; trace = F) #&gt; #&gt; Coefficients: #&gt; (Intercept) age educ.L educ.Q educ.C educ^4 #&gt; Strong -0.08788729 0.010700364 -0.1098951 -0.2016197 -0.1757739 -0.02116307 #&gt; Weak 0.51976285 -0.004868771 -0.1431104 -0.2405395 -0.2411795 0.18353634 #&gt; educ^5 educ^6 #&gt; Strong -0.1664377 -0.1359449 #&gt; Weak -0.1489030 -0.2173144 #&gt; #&gt; Std. Errors: #&gt; (Intercept) age educ.L educ.Q educ.C educ^4 #&gt; Strong 0.3017034 0.005280743 0.4586041 0.4318830 0.3628837 0.2964776 #&gt; Weak 0.3097923 0.005537561 0.4920736 0.4616446 0.3881003 0.3169149 #&gt; educ^5 educ^6 #&gt; Strong 0.2515012 0.2166774 #&gt; Weak 0.2643747 0.2199186 #&gt; #&gt; Residual Deviance: 2024.596 #&gt; AIC: 2056.596 Alternatively, stepwise model selection based AIC Multinomial_Step &lt;- step(Multinomial_Model,trace = 0) #&gt; trying - age #&gt; trying - educ #&gt; trying - age Multinomial_Step #&gt; Call: #&gt; multinom(formula = Political_Strength ~ age, data = nes96, trace = F) #&gt; #&gt; Coefficients: #&gt; (Intercept) age #&gt; Strong -0.01988977 0.009832916 #&gt; Weak 0.59497046 -0.005954348 #&gt; #&gt; Residual Deviance: 2030.756 #&gt; AIC: 2038.756 compare the best model to the full model based on deviance pchisq(q = deviance(Multinomial_Step) - deviance(Multinomial_Model), df = Multinomial_Model$edf-Multinomial_Step$edf,lower=F) #&gt; [1] 0.9078172 We see no significant difference Plot of the fitted model PlotData &lt;- data.frame(age = seq(from = 19, to = 91)) Preds &lt;- PlotData %&gt;% bind_cols(data.frame(predict( object = Multinomial_Step, PlotData, type = &quot;probs&quot; ))) plot( x = Preds$age, y = Preds$Neutral, type = &quot;l&quot;, ylim = c(0.2, 0.6), col = &quot;black&quot;, ylab = &quot;Proportion&quot;, xlab = &quot;Age&quot; ) lines(x = Preds$age, y = Preds$Weak, col = &quot;blue&quot;) lines(x = Preds$age, y = Preds$Strong, col = &quot;red&quot;) legend( &#39;topleft&#39;, legend = c(&#39;Neutral&#39;, &#39;Weak&#39;, &#39;Strong&#39;), col = c(&#39;black&#39;, &#39;blue&#39;, &#39;red&#39;), lty = 1 ) predict(Multinomial_Step,data.frame(age = 34)) # predicted result (categoriy of political strength) of 34 year old #&gt; [1] Weak #&gt; Levels: Neutral Strong Weak predict(Multinomial_Step,data.frame(age = c(34,35)),type=&quot;probs&quot;) # predicted result of the probabilities of each level of political strength for a 34 and 35 #&gt; Neutral Strong Weak #&gt; 1 0.2597275 0.3556910 0.3845815 #&gt; 2 0.2594080 0.3587639 0.3818281 If categories are ordered (i.e., ordinal data), we must use another approach (still multinomial, but use cumulative probabilities). Another example library(agridat) dat &lt;- agridat::streibig.competition # See Schaberger and Pierce, pages 370+ # Consider only the mono-species barley data (no competition from Sinapis) gammaDat &lt;- subset(dat, sseeds &lt; 1) gammaDat &lt;- transform(gammaDat, x = bseeds, y = bdwt, block = factor(block)) # Inverse yield looks like it will be a good fit for Gamma&#39;s inverse link ggplot(gammaDat, aes(x = x, y = 1 / y)) + geom_point(aes(color = block, shape = block)) + xlab(&#39;Seeding Rate&#39;) + ylab(&#39;Inverse yield&#39;) + ggtitle(&#39;Streibig Competion - Barley only&#39;) \\[ Y \\sim Gamma \\] because Gamma is non-negative as opposed to Normal. The canonical Gamma link function is the inverse (or reciprocal) link \\[ \\eta_{ij} = \\beta_{0j} + \\beta_{1j}x_{ij} + \\beta_2x_{ij}^2 \\\\ Y_{ij} = \\eta_{ij}^{-1} \\] The linear predictor is a quadratic model fit to each of the j-th blocks. A different model (not fitted) could be one with common slopes: glm(y ~ x + I(x^2),…) # linear predictor is quadratic, with separate intercept and slope per block m1 &lt;- glm(y ~ block + block * x + block * I(x ^ 2), data = gammaDat, family = Gamma(link = &quot;inverse&quot;)) summary(m1) #&gt; #&gt; Call: #&gt; glm(formula = y ~ block + block * x + block * I(x^2), family = Gamma(link = &quot;inverse&quot;), #&gt; data = gammaDat) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -1.21708 -0.44148 0.02479 0.17999 0.80745 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 1.115e-01 2.870e-02 3.886 0.000854 *** #&gt; blockB2 -1.208e-02 3.880e-02 -0.311 0.758630 #&gt; blockB3 -2.386e-02 3.683e-02 -0.648 0.524029 #&gt; x -2.075e-03 1.099e-03 -1.888 0.072884 . #&gt; I(x^2) 1.372e-05 9.109e-06 1.506 0.146849 #&gt; blockB2:x 5.198e-04 1.468e-03 0.354 0.726814 #&gt; blockB3:x 7.475e-04 1.393e-03 0.537 0.597103 #&gt; blockB2:I(x^2) -5.076e-06 1.184e-05 -0.429 0.672475 #&gt; blockB3:I(x^2) -6.651e-06 1.123e-05 -0.592 0.560012 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for Gamma family taken to be 0.3232083) #&gt; #&gt; Null deviance: 13.1677 on 29 degrees of freedom #&gt; Residual deviance: 7.8605 on 21 degrees of freedom #&gt; AIC: 225.32 #&gt; #&gt; Number of Fisher Scoring iterations: 5 For predict new value of x newdf &lt;- expand.grid(x = seq(0, 120, length = 50), block = factor(c(&#39;B1&#39;, &#39;B2&#39;, &#39;B3&#39;))) newdf$pred &lt;- predict(m1, new = newdf, type = &#39;response&#39;) ggplot(gammaDat, aes(x = x, y = y)) + geom_point(aes(color = block, shape = block)) + xlab(&#39;Seeding Rate&#39;) + ylab(&#39;Inverse yield&#39;) + ggtitle(&#39;Streibig Competion - Barley only Predictions&#39;) + geom_line(data = newdf, aes( x = x, y = pred, color = block, linetype = block )) "],["generalization.html", "7.7 Generalization", " 7.7 Generalization We can see that Poisson regression looks similar to logistic regression. Hence, we can generalize to a class of modeling. Thanks to Nelder and Wedderburn (1972), we have the generalized linear models (GLMs). Estimation is generalize in these models. Exponential Family The theory of GLMs is developed for data with distribution given y the exponential family. The form of the data distribution that is useful for GLMs is \\[ f(y;\\theta, \\phi) = \\exp(\\frac{\\theta y - b(\\theta)}{a(\\phi)} + c(y, \\phi)) \\] where \\(\\theta\\) is called the natural parameter \\(\\phi\\) is called the dispersion parameter Note: This family includes the Gamma, Normal, Poisson, and other. For all parameterization of the exponential family, check this link Example if we have \\(Y \\sim N(\\mu, \\sigma^2)\\) \\[ \\begin{aligned} f(y; \\mu, \\sigma^2) &amp;= \\frac{1}{(2\\pi \\sigma^2)^{1/2}}\\exp(-\\frac{1}{2\\sigma^2}(y- \\mu)^2) \\\\ &amp;= \\exp(-\\frac{1}{2\\sigma^2}(y^2 - 2y \\mu +\\mu^2)- \\frac{1}{2}\\log(2\\pi \\sigma^2)) \\\\ &amp;= \\exp(\\frac{y \\mu - \\mu^2/2}{\\sigma^2} - \\frac{y^2}{2\\sigma^2} - \\frac{1}{2}\\log(2\\pi \\sigma^2)) \\\\ &amp;= \\exp(\\frac{\\theta y - b(\\theta)}{a(\\phi)} + c(y , \\phi)) \\end{aligned} \\] where \\(\\theta = \\mu\\) \\(b(\\theta) = \\frac{\\mu^2}{2}\\) \\(a(\\phi) = \\sigma^2 = \\phi\\) \\(c(y , \\phi) = - \\frac{1}{2}(\\frac{y^2}{\\phi}+\\log(2\\pi \\sigma^2))\\) Properties of GLM exponential families \\(E(Y) = b&#39; (\\theta)\\) where \\(b&#39;(\\theta) = \\frac{\\partial b(\\theta)}{\\partial \\theta}\\) (here ' is “prime”, not transpose) \\(var(Y) = a(\\phi)b&#39;&#39;(\\theta)= a(\\phi)V(\\mu)\\). \\(V(\\mu)\\) is the variance function; however, it is only the variance in the case that \\(a(\\phi) =1\\) If \\(a(), b(), c()\\) are identifiable, we will derive expected value and variance of Y. Example Normal distribution \\[ b&#39;(\\theta) = \\frac{\\partial b(\\mu^2/2)}{\\partial \\mu} = \\mu \\\\ V(\\mu) = \\frac{\\partial^2 (\\mu^2/2)}{\\partial \\mu^2} = 1 \\\\ \\to var(Y) = a(\\phi) = \\sigma^2 \\] Poisson distribution \\[ \\begin{aligned} f(y, \\theta, \\phi) &amp;= \\frac{\\mu^y \\exp(-\\mu)}{y!} \\\\ &amp;= \\exp(y\\log(\\mu) - \\mu - \\log(y!)) \\\\ &amp;= \\exp(y\\theta - \\exp(\\theta) - \\log(y!)) \\end{aligned} \\] where \\(\\theta = \\log(\\mu)\\) \\(a(\\phi) = 1\\) \\(b(\\theta) = \\exp(\\theta)\\) \\(c(y, \\phi) = \\log(y!)\\) Hence, \\[ E(Y) = \\frac{\\partial b(\\theta)}{\\partial \\theta} = \\exp(\\theta) = \\mu \\\\ var(Y) = \\frac{\\partial^2 b(\\theta)}{\\partial \\theta^2} = \\mu \\] Since \\(\\mu = E(Y) = b&#39;(\\theta)\\) In GLM, we take some monotone function (typically nonlinear) of \\(\\mu\\) to be linear in the set of covariates \\[ g(\\mu) = g(b&#39;(\\theta)) = \\mathbf{x&#39;\\beta} \\] Equivalently, \\[ \\mu = g^{-1}(\\mathbf{x&#39;\\beta}) \\] where \\(g(.)\\) is the link function since it links mean response (\\(\\mu = E(Y)\\)) and a linear expression of the covariates Some people use \\(\\eta = \\mathbf{x&#39;\\beta}\\) where \\(\\eta\\) = the “linear predictor” GLM is composed of 2 components The random component: is the distribution chosen to model the response variables \\(Y_1,...,Y_n\\) is specified by the choice fo \\(a(), b(), c()\\) in the exponential form Notation: Assume that there are n independent response variables \\(Y_1,...,Y_n\\) with densities \\[ f(y_i ; \\theta_i, \\phi) = \\exp(\\frac{\\theta_i y_i - b(\\theta_i)}{a(\\phi)}+ c(y_i, \\phi)) \\] notice each observation might have different densities Assume that \\(\\phi\\) is constant for all \\(i = 1,...,n\\), but \\(\\theta_i\\) will vary. \\(\\mu_i = E(Y_i)\\) for all i. The systematic component is the portion of the model that gives the relation between \\(\\mu\\) and the covariates \\(\\mathbf{x}\\) consists of 2 parts: the link function, \\(g(.)\\) the linear predictor, \\(\\eta = \\mathbf{x&#39;\\beta}\\) Notation: assume \\(g(\\mu_i) = \\mathbf{x&#39;\\beta} = \\eta_i\\) where \\(\\mathbf{\\beta} = (\\beta_1,..., \\beta_p)&#39;\\) The parameters to be estimated are \\(\\beta_1,...\\beta_p , \\phi\\) The Canonical Link To choose \\(g(.)\\), we can use canonical link function (Remember: Canonical link is just a special case of the link function) If the link function \\(g(.)\\) is such \\(g(\\mu_i) = \\eta_i = \\theta_i\\), the natural parameter, then \\(g(.)\\) is the canonical link. \\(b(\\theta)\\) = cumulant moment generating function \\(g(\\mu)\\) is the link function, which relates the linear predictor to the mean and is required to be monotone increasing, continuously differentiable and invertible. Equivalently, we can think of canonical link function as \\[ \\gamma^{-1} \\circ g^{-1} = I \\] which is the identity. Hence, \\[ \\theta = \\eta \\] The inverse link \\(g^{-1}(.)\\) is also known as the mean function, take linear predictor output (ranging from \\(-\\infty\\) to \\(\\infty\\)) and transform it into a different scale. Exponential: converts \\(\\mathbf{\\beta X}\\) into a curve that is restricted between 0 and \\(\\infty\\) (which you can see that is useful in case you want to convert a linear predictor into a non-negative value). \\(\\lambda = \\exp(y) = \\mathbf{\\beta X}\\) Inverse Logit (also known as logistic): converts \\(\\mathbf{\\beta X}\\) into a curve that is restricted between 0 and 1, which is useful in case you want to convert a linear predictor to a probability. \\(\\theta = \\frac{1}{1 + \\exp(-y)} = \\frac{1}{1 + \\exp(- \\mathbf{\\beta X})}\\) \\(y\\) = linear predictor value \\(\\theta\\) = transformed value The identity link is that \\[ \\eta_i = g(\\mu_i) = \\mu_i \\\\ \\mu_i = g^{-1}(\\eta_i) = \\eta_i \\] Table 15.1 Generalized Linear Models 15.1 the Structure of Generalized Linear Models More example on the link functions and their inverses can be found on page 380 Example Normal random component Mean Response: \\(\\mu_i = \\theta_i\\) Canonical Link: \\(g( \\mu_i) = \\mu_i\\) (the identity link) Binomial random component Mean Response: \\(\\mu_i = \\frac{n_i \\exp( \\theta)}{1+\\exp (\\theta_i)}\\) and \\(\\theta(\\mu_i) = \\log(\\frac{p_i }{1-p_i}) = \\log (\\frac{\\mu_i} {n_i - \\mu_i})\\) Canonical link: \\(g(\\mu_i) = \\log(\\frac{\\mu_i} {n_i - \\mu_i})\\) (logit link) Poisson random component Mean Response: \\(\\mu_i = \\exp(\\theta_i)\\) Canonical Link: \\(g(\\mu_i) = \\log(\\mu_i)\\) Gamma random component: Mean response: \\(\\mu_i = -\\frac{1}{\\theta_i}\\) and \\(\\theta(\\mu_i) = - \\mu_i^{-1}\\) Canonical Link: \\(g(\\mu\\_i) = - \\frac{1}{\\mu_i}\\) Inverse Gaussian random Canonical Link: \\(g(\\mu_i) = \\frac{1}{\\mu_i^2}\\) 7.7.1 Estimation MLE for parameters of the systematic component (\\(\\beta\\)) Unification of derivation and computation (thanks to the exponential forms) No unification for estimation of the dispersion parameter (\\(\\phi\\)) 7.7.1.1 Estimation of \\(\\beta\\) We have \\[ f(y_i ; \\theta_i, \\phi) = \\exp(\\frac{\\theta_i y_i - b(\\theta_i)}{a(\\phi)}+ c(y_i, \\phi)) \\\\ E(Y_i) = \\mu_i = b&#39;(\\theta) \\\\ var(Y_i) = b&#39;&#39;(\\theta)a(\\phi) = V(\\mu_i)a(\\phi) \\\\ g(\\mu_i) = \\mathbf{x}_i&#39;\\beta = \\eta_i \\] If the log-likelihood for a single observation is \\(l_i (\\beta,\\phi)\\). The log-likelihood for all n observations is \\[ \\begin{aligned} l(\\beta,\\phi) &amp;= \\sum_{i=1}^n l_i (\\beta,\\phi) \\\\ &amp;= \\sum_{i=1}^n (\\frac{\\theta_i y_i - b(\\theta_i)}{a(\\phi)}+ c(y_i, \\phi)) \\end{aligned} \\] Using MLE to find \\(\\beta\\), we use the chain rule to get the derivatives \\[ \\begin{aligned} \\frac{\\partial l_i (\\beta,\\phi)}{\\partial \\beta_j} &amp;= \\frac{\\partial l_i (\\beta, \\phi)}{\\partial \\theta_i} \\times \\frac{\\partial \\theta_i}{\\partial \\mu_i} \\times \\frac{\\partial \\mu_i}{\\partial \\eta_i}\\times \\frac{\\partial \\eta_i}{\\partial \\beta_j} \\\\ &amp;= \\sum_{i=1}^{n}(\\frac{ y_i - \\mu_i}{a(\\phi)} \\times \\frac{1}{V(\\mu_i)} \\times \\frac{\\partial \\mu_i}{\\partial \\eta_i} \\times x_{ij}) \\end{aligned} \\] If we let \\[ w_i \\equiv ((\\frac{\\partial \\eta_i}{\\partial \\mu_i})^2 V(\\mu_i))^{-1} \\] Then, \\[ \\frac{\\partial l_i (\\beta,\\phi)}{\\partial \\beta_j} = \\sum_{i=1}^n (\\frac{y_i \\mu_i}{a(\\phi)} \\times w_i \\times \\frac{\\partial \\eta_i}{\\partial \\mu_i} \\times x_{ij}) \\] We can also get the second derivatives using the chain rule. Example: For the \\[Newton-Raphson\\] algorithm, we need \\[ - E(\\frac{\\partial^2 l(\\beta,\\phi)}{\\partial \\beta_j \\partial \\beta_k}) \\] where \\((j,k)\\)th element of the Fisher information matrix \\(\\mathbf{I}(\\beta)\\) Hence, \\[ - E(\\frac{\\partial^2 l(\\beta,\\phi)}{\\partial \\beta_j \\partial \\beta_k}) = \\sum_{i=1}^n \\frac{w_i}{a(\\phi)}x_{ij}x_{ik} \\] for the (j,k)th element If Bernoulli model with logit link function (which is the canonical link) \\[ b(\\theta) = \\log(1 + \\exp(\\theta)) = \\log(1 + \\exp(\\mathbf{x&#39;\\beta})) \\\\ a(\\phi) = 1 \\\\ c(y_i, \\phi) = 0 \\\\ E(Y) = b&#39;(\\theta) = \\frac{\\exp(\\theta)}{1 + \\exp(\\theta)} = \\mu = p \\\\ \\eta = g(\\mu) = \\log(\\frac{\\mu}{1-\\mu}) = \\theta = \\log(\\frac{p}{1-p}) = \\mathbf{x&#39;\\beta} \\] For \\(Y_i\\), i = 1,.., the log-likelihood is \\[ l_i (\\beta, \\phi) = \\frac{y_i \\theta_i - b(\\theta_i)}{a(\\phi)} + c(y_i, \\phi) = y_i \\mathbf{x}&#39;_i \\beta - \\log(1+ \\exp(\\mathbf{x&#39;\\beta})) \\] Additionally, \\[ V(\\mu_i) = \\mu_i(1-\\mu_i)= p_i (1-p_i) \\\\ \\frac{\\partial \\mu_i}{\\partial \\eta_i} = p_i(1-p_i) \\] Hence, \\[ \\begin{aligned} \\frac{\\partial l(\\beta, \\phi)}{\\partial \\beta_j} &amp;= \\sum_{i=1}^n[\\frac{y_i - \\mu_i}{a(\\phi)} \\times \\frac{1}{V(\\mu_i)}\\times \\frac{\\partial \\mu_i}{\\partial \\eta_i} \\times x_{ij}] \\\\ &amp;= \\sum_{i=1}^n (y_i - p_i) \\times \\frac{1}{p_i(1-p_i)} \\times p_i(1-p_i) \\times x_{ij} \\\\ &amp;= \\sum_{i=1}^n (y_i - p_i) x_{ij} \\\\ &amp;= \\sum_{i=1}^n (y_i - \\frac{\\exp(\\mathbf{x&#39;_i\\beta})}{1+ \\exp(\\mathbf{x&#39;_i\\beta})})x_{ij} \\end{aligned} \\] then \\[ w_i = ((\\frac{\\partial \\eta_i}{\\partial \\mu_i})^2 V(\\mu_i))^{-1} = p_i (1-p_i) \\] \\[ \\mathbf{I}_{jk}(\\mathbf{\\beta}) = \\sum_{i=1}^n \\frac{w_i}{a(\\phi)} x_{ij}x_{ik} = \\sum_{i=1}^n p_i (1-p_i)x_{ij}x_{ik} \\] The Fisher-scoring algorithm for the MLE of \\(\\mathbf{\\beta}\\) is \\[ \\left( \\begin{array} {c} \\beta_1 \\\\ \\beta_2 \\\\ . \\\\ . \\\\ . \\\\ \\beta_p \\\\ \\end{array} \\right)^{(m+1)} = \\left( \\begin{array} {c} \\beta_1 \\\\ \\beta_2 \\\\ . \\\\ . \\\\ . \\\\ \\beta_p \\\\ \\end{array} \\right)^{(m)} + \\mathbf{I}^{-1}(\\mathbf{\\beta}) \\left( \\begin{array} {c} \\frac{\\partial l (\\beta, \\phi)}{\\partial \\beta_1} \\\\ \\frac{\\partial l (\\beta, \\phi)}{\\partial \\beta_2} \\\\ . \\\\ . \\\\ . \\\\ \\frac{\\partial l (\\beta, \\phi)}{\\partial \\beta_p} \\\\ \\end{array} \\right)|_{\\beta = \\beta^{(m)}} \\] Similar to \\[Newton-Raphson\\] expect the matrix of second derivatives by the expected value of the second derivative matrix. In matrix notation, \\[ \\begin{aligned} \\frac{\\partial l }{\\partial \\beta} &amp;= \\frac{1}{a(\\phi)}\\mathbf{X&#39;W\\Delta(y - \\mu)} \\\\ &amp;= \\frac{1}{a(\\phi)}\\mathbf{F&#39;V^{-1}(y - \\mu)} \\\\ \\end{aligned} \\] \\[ \\mathbf{I}(\\beta) = \\frac{1}{a(\\phi)}\\mathbf{X&#39;WX} = \\frac{1}{a(\\phi)}\\mathbf{F&#39;V^{-1}F} \\\\ \\] where \\(\\mathbf{X}\\) is an n x p matrix of covariates \\(\\mathbf{W}\\) is an n x n diagonal matrix with (i,i)th element given by \\(w_i\\) \\(\\mathbf{\\Delta}\\) an n x n diagonal matrix with (i,i)th element given by \\(\\frac{\\partial \\eta_i}{\\partial \\mu_i}\\) \\(\\mathbf{F} = \\mathbf{\\frac{\\partial \\mu}{\\partial \\beta}}\\) an n x p matrix with i-th row \\(\\frac{\\partial \\mu_i}{\\partial \\beta} = (\\frac{\\partial \\mu_i}{\\partial \\eta_i})\\mathbf{x}&#39;_i\\) \\(\\mathbf{V}\\) an n x n diagonal matrix with (i,i)th element given by \\(V(\\mu_i)\\) Setting the derivative of the log-likelihood equal to 0, ML estimating equations are \\[ \\mathbf{F&#39;V^{-1}y= F&#39;V^{-1}\\mu} \\] where all components of this equation expect y depends on the parameters \\(\\beta\\) Special Cases If one has a canonical link, the estimating equations reduce to \\[ \\mathbf{X&#39;y= X&#39;\\mu} \\] If one has an identity link, then \\[ \\mathbf{X&#39;V^{-1}y = X&#39;V^{-1}X\\hat{\\beta}} \\] which gives the generalized least squares estimator Generally, we can rewrite the Fisher-scoring algorithm as \\[ \\beta^{(m+1)} = \\beta^{(m)} + \\mathbf{(\\hat{F}&#39;\\hat{V}^{-1}\\hat{F})^{-1}\\hat{F}&#39;\\hat{V}^{-1}(y- \\hat{\\mu})} \\] Since \\(\\hat{F},\\hat{V}, \\hat{\\mu}\\) depend on \\(\\beta\\), we evaluate at \\(\\beta^{(m)}\\) From starting values \\(\\beta^{(0)}\\), we can iterate until convergence. Notes: if \\(a(\\phi)\\) is a constant or of the form \\(m_i \\phi\\) with known \\(m_i\\), then \\(\\phi\\) cancels. 7.7.1.2 Estimation of \\(\\phi\\) 2 approaches: MLE \\[ \\frac{\\partial l_i}{\\partial \\phi} = \\frac{(\\theta_i y_i - b(\\theta_i)a&#39;(\\phi))}{a^2(\\phi)} + \\frac{\\partial c(y_i,\\phi)}{\\partial \\phi} \\] the MLE of \\(\\phi\\) solves \\[ \\frac{a^2(\\phi)}{a&#39;(\\phi)}\\sum_{i=1}^n \\frac{\\partial c(y_i, \\phi)}{\\partial \\phi} = \\sum_{i=1}^n(\\theta_i y_i - b(\\theta_i)) \\] Situation others than normal error case, expression for \\(\\frac{\\partial c(y,\\phi)}{\\partial \\phi}\\) are not simple Even for the canonical link and \\(a(\\phi)\\) constant, there is no nice general expression for \\(-E(\\frac{\\partial^2 l}{\\partial \\phi^2})\\), so the unification GLMs provide for estimation of \\(\\beta\\) breaks down for \\(\\phi\\) Moment Estimation (“Bias Corrected \\(\\chi^2\\)”) The MLE is not conventional approach to estimation of \\(\\phi\\) in GLMS. For the exponential family \\(var(Y) =V(\\mu)a(\\phi)\\). This implies \\[ a(\\phi) = \\frac{var(Y)}{V(\\mu)} = \\frac{E(Y- \\mu)^2}{V(\\mu)} \\\\ a(\\hat{\\phi}) = \\frac{1}{n-p} \\sum_{i=1}^n \\frac{(y_i -\\hat{\\mu}_i)^2}{V(\\hat{\\mu})} \\] where p is the dimension of \\(\\beta\\) GLM with canonical link function \\(g(.)= (b&#39;(.))^{-1}\\) \\[ g(\\mu) = \\theta = \\eta = \\mathbf{x&#39;\\beta} \\\\ \\mu = g^{-1}(\\eta)= b&#39;(\\eta) \\] so the method estimator for \\(a(\\phi)=\\phi\\) is \\[ \\hat{\\phi} = \\frac{1}{n-p} \\sum_{i=1}^n \\frac{(y_i - g^{-1}(\\hat{\\eta}_i))^2}{V(g^{-1}(\\hat{\\eta}_i))} \\] 7.7.2 Inference We have \\[ \\hat{var}(\\beta) = a(\\phi)(\\mathbf{\\hat{F}&#39;\\hat{V}\\hat{F}})^{-1} \\] where \\(\\mathbf{V}\\) is an n x n diagonal matrix with diagonal elements given by \\(V(\\mu_i)\\) \\(\\mathbf{F}\\) is an n x p matrix given by \\(\\mathbf{F} = \\frac{\\partial \\mu}{\\partial \\beta}\\) Both \\(\\mathbf{V,F}\\) are dependent on the mean \\(\\mu\\), and thus \\(\\beta\\). Hence, their estimates (\\(\\mathbf{\\hat{V},\\hat{F}}\\)) depend on \\(\\hat{\\beta}\\). \\[ H_0: \\mathbf{L\\beta = d} \\] where \\(\\mathbf{L}\\) is a q x p matrix with a Wald test \\[ W = \\mathbf{(L \\hat{\\beta}-d)&#39;(a(\\phi)L(\\hat{F}&#39;\\hat{V}^{-1}\\hat{F})L&#39;)^{-1}(L \\hat{\\beta}-d)} \\] which follows \\(\\chi_q^2\\) distribution (asymptotically), where q is the rank of \\(\\mathbf{L}\\) In the simple case \\(H_0: \\beta_j = 0\\) gives \\(W = \\frac{\\hat{\\beta}^2_j}{\\hat{var}(\\hat{\\beta}_j)} \\sim \\chi^2_1\\) asymptotically Likelihood ratio test \\[ \\Lambda = 2 (l(\\hat{\\beta}_f)-l(\\hat{\\beta}_r)) \\sim \\chi^2_q \\] where q is the number of constraints used to fit the reduced model \\(\\hat{\\beta}_r\\), and \\(\\hat{\\beta}_r\\) is the fit under the full model. Wald test is easier to implement, but likelihood ratio test is better (especially for small samples). 7.7.3 Deviance Deviance is necessary for goodness of fit, inference and for alternative estimation of the dispersion parameter. We define and consider Deviance from a likelihood ratio perspective. Assume that \\(\\phi\\) is known. Let \\(\\tilde{\\theta}\\) denote the full and \\(\\hat{\\theta}\\) denote the reduced model MLEs. Then, the likelihood ratio (2 times the difference in log-likelihoods) is \\[ 2\\sum_{i=1}^{n} \\frac{y_i (\\tilde{\\theta}_i- \\hat{\\theta}_i)-b(\\tilde{\\theta}_i) + b(\\hat{\\theta}_i)}{a_i(\\phi)} \\] For exponential families, \\(\\mu = E(y) = b&#39;(\\theta)\\), so the natural parameter is a function of \\(\\mu: \\theta = \\theta(\\mu) = b&#39;^{-1}(\\mu)\\), and the likelihood ratio turns into \\[ 2 \\sum_{i=1}^m \\frac{y_i\\{\\theta(\\tilde{\\mu}_i - \\theta(\\hat{\\mu}_i)\\} - b(\\theta(\\tilde{\\mu}_i)) + b(\\theta(\\hat{\\mu}_i))}{a_i(\\phi)} \\] Comparing a fitted model to “the fullest possible model”, which is the saturated model: \\(\\tilde{\\mu}_i = y_i\\), i = 1,..,n. If \\(\\tilde{\\theta}_i^* = \\theta(y_i), \\hat{\\theta}_i^* = \\theta (\\hat{\\mu})\\), the likelihood ratio is \\[ 2 \\sum_{i=1}^{n} \\frac{y_i (\\tilde{\\theta}_i^* - \\hat{\\theta}_i^* + b(\\hat{\\theta}_i^*))}{a_i(\\phi)} \\] (McCullagh 2019) specify \\(a(\\phi) = \\phi\\), then the likelihood ratio can be written as \\[ D^*(\\mathbf{y, \\hat{\\mu}}) = \\frac{2}{\\phi}\\sum_{i=1}^n\\{y_i (\\tilde{\\theta}_i^*- \\hat{\\theta}_i^*)- b(\\tilde{\\theta}_i^*) +b(\\hat{\\theta}_i^*) \\} \\] where \\(D^*(\\mathbf{y, \\hat{\\mu}})\\) = scaled deviance \\(D(\\mathbf{y, \\hat{\\mu}}) = \\phi D^*(\\mathbf{y, \\hat{\\mu}})\\) = deviance Note: in some random component distributions, we can write \\(a_i(\\phi) = \\phi m_i\\), where \\(m_i\\) is some known scalar that may change with the observations. THen, the scaled deviance components are divided by \\(m_i\\): \\[ D^*(\\mathbf{y, \\hat{\\mu}}) \\equiv 2\\sum_{i=1}^n\\{y_i (\\tilde{\\theta}_i^*- \\hat{\\theta}_i^*)- b(\\tilde{\\theta}_i^*) +b(\\hat{\\theta}_i^*)\\} / (\\phi m_i) \\] \\(D^*(\\mathbf{y, \\hat{\\mu}}) = \\sum_{i=1}^n d_i\\)m where \\(d_i\\) is the deviance contribution from the ith observation. D is used in model selection \\(D^*\\) is used in goodness of fit tests (as it is a likelihood ratio statistic). \\[ D^*(\\mathbf{y, \\hat{\\mu}}) = 2\\{l(\\mathbf{y,\\tilde{\\mu}})-l(\\mathbf{y,\\hat{\\mu}})\\} \\] \\(d_i\\) are used to form deviance residuals Normal We have \\[ \\theta = \\mu \\\\ \\phi = \\sigma^2 \\\\ b(\\theta) = \\frac{1}{2} \\theta^2 \\\\ a(\\phi) = \\phi \\] Hence, \\[ \\tilde{\\theta}_i = y_i \\\\ \\hat{\\theta}_i = \\hat{\\mu}_i = g^{-1}(\\hat{\\eta}_i) \\] And \\[ \\begin{aligned} D &amp;= 2 \\sum_{1=1}^n Y^2_i - y_i \\hat{\\mu}_i - \\frac{1}{2}y^2_i + \\frac{1}{2} \\hat{\\mu}_i^2 \\\\ &amp;= \\sum_{i=1}^n y_i^2 - 2y_i \\hat{\\mu}_i + \\hat{\\mu}_i^2 \\\\ &amp;= \\sum_{i=1}^n (y_i - \\hat{\\mu}_i)^2 \\end{aligned} \\] which is the residual sum of squares Poisson \\[ f(y) = \\exp\\{y\\log(\\mu) - \\mu - \\log(y!)\\} \\\\ \\theta = \\log(\\mu) \\\\ b(\\theta) = \\exp(\\theta) \\\\ a(\\phi) = 1 \\\\ \\tilde{\\theta}_i = \\log(y_i) \\\\ \\hat{\\theta}_i = \\log(\\hat{\\mu}_i) \\\\ \\hat{\\mu}_i = g^{-1}(\\hat{\\eta}_i) \\] Then, \\[ \\begin{aligned} D &amp;= 2 \\sum_{i = 1}^n y_i \\log(y_i) - y_i \\log(\\hat{\\mu}_i) - y_i + \\hat{\\mu}_i \\\\ &amp;= 2 \\sum_{i = 1}^n y_i \\log(\\frac{y_i}{\\hat{\\mu}_i}) - (y_i - \\hat{\\mu}_i) \\end{aligned} \\] and \\[ d_i = 2\\{y_i \\log(\\frac{y_i}{\\hat{\\mu}})- (y_i - \\hat{\\mu}_i)\\} \\] 7.7.3.1 Analysis of Deviance The difference in deviance between a reduced and full model, where q is the difference in the number of free parameters, has an asymptotic \\(\\chi^2_q\\). The likelihood ratio test \\[ D^*(\\mathbf{y;\\hat{\\mu}_r}) - D^*(\\mathbf{y;\\hat{\\mu}_f}) = 2\\{l(\\mathbf{y;\\hat{\\mu}_f})-l(\\mathbf{y;\\hat{\\mu}_r})\\} \\] this comparison of models is Analysis of Deviance. GLM uses this analysis for model selection. An estimation of \\(\\phi\\) is \\[ \\hat{\\phi} = \\frac{D(\\mathbf{y, \\hat{\\mu}})}{n - p} \\] where p = number of parameters fit. Excessive use of \\(\\chi^2\\) test could be problematic since it is asymptotic (McCullagh 2019) 7.7.3.2 Deviance Residuals We have \\(D = \\sum_{i=1}^{n}d_i\\). Then, we define deviance residuals \\[ r_{D_i} = \\text{sign}(y_i -\\hat{\\mu}_i)\\sqrt{d_i} \\] Standardized version of deviance residuals is \\[ r_{s,i} = \\frac{y_i -\\hat{\\mu}}{\\hat{\\sigma}(1-h_{ii})^{1/2}} \\] Let \\(\\mathbf{H^{GLM} = W^{1/2}X(X&#39;WX)^{-1}X&#39;W^{-1/2}}\\), where \\(\\mathbf{W}\\) is an n x n diagonal matrix with (i,i)th element given by \\(w_i\\) (see Estimation of \\(\\beta\\)). Then Standardized deviance residuals is equivalently \\[ r_{s, D_i} = \\frac{r_{D_i}}{\\{\\hat{\\phi}(1-h_{ii}^{glm}\\}^{1/2}} \\] where \\(h_{ii}^{glm}\\) is the i-th diagonal of \\(\\mathbf{H}^{GLM}\\) 7.7.3.3 Pearson Chi-square Residuals Another \\(\\chi^2\\) statistic is Pearson \\(\\chi^2\\) statistics: (assume \\(m_i = 1\\)) \\[ X^2 = \\sum_{i=1}^{n} \\frac{(y_i - \\hat{\\mu}_i)^2}{V(\\hat{\\mu}_i)} \\] where \\(\\hat{\\mu}_i\\) is the fitted mean response fo the model of interest. The Scaled Pearson \\(\\chi^2\\) statistic is given by \\(\\frac{X^2}{\\phi} \\sim \\chi^2_{n-p}\\) where p is the number of parameters estimated. Hence, the Pearson \\(\\chi^2\\) residuals are \\[ X^2_i = \\frac{(y_i - \\hat{\\mu}_i)^2}{V(\\hat{\\mu}_i)} \\] If we have the following assumptions: Independent samples No over-dispersion: If \\(\\phi = 1\\), \\(\\frac{D(\\mathbf{y;\\hat{\\mu}})}{n-p}\\) and \\(\\frac{X^2}{n-p}\\) have a value substantially larger 1 indicates improperly specified model or overdispersion Multiple groups then \\(\\frac{X^2}{\\phi}\\) and \\(D^*(\\mathbf{y; \\hat{\\mu}})\\) both follow \\(\\chi^2_{n-p}\\) 7.7.4 Diagnostic Plots Standardized residual Plots: plot(\\(r_{s, D_i}\\), \\(\\hat{\\mu}_i\\)) or plot(\\(r_{s, D_i}\\), \\(T(\\hat{\\mu}_i)\\)) where \\(T(\\hat{\\mu}_i)\\) is transformation(\\(\\hat{\\mu}_i\\)) called constant information scale: plot(\\(r_{s, D_i}\\), \\(\\hat{\\eta}_i\\)) Random Component \\(T(\\hat{\\mu}_i)\\) Normal \\(\\hat{\\mu}\\) Poisson \\(2\\sqrt{\\mu}\\) Binomial \\(2 \\sin^{-1}(\\sqrt{\\hat{\\mu}})\\) Gamma \\(2 \\log(\\hat{\\mu})\\) Inverse Gaussian \\(-2\\hat{\\mu}^{-1/2}\\) If we see: Trend, it means we might have a wrong link function, or choice of scale Systematic change in range of residuals with a change in \\(T(\\hat{\\mu})\\) (incorrect random component) (systematic \\(\\neq\\) random) plot(\\(|r_{D_i}|,\\hat{\\mu}_i\\)) to check Variance Function. 7.7.5 Goodness of Fit To assess goodness of fit, we can use Deviance Pearson Chi-square Residuals In nested model, we could use likelihood-based information measures: \\[ AIC = -2l(\\mathbf{\\hat{\\mu}}) + 2p \\\\ AICC = -2l(\\mathbf{\\hat{\\mu}}) + 2p(\\frac{n}{n-p-1}) \\\\ BIC = 2l(\\hat{\\mu}) + p \\log(n) \\] where \\(l(\\hat{\\mu})\\) is the log-likelihood evaluated at the parameter estimates p is the number of parameters n is the number of observations. Note: you have to use the same data with the same model (i.e., same link function, same random underlying random distribution). but you can have different number of parameters. Even though statisticians try to come up with measures that are similar to \\(R^2\\), in practice, it is not so appropriate. For example, they compare the log-likelihood of the fitted model against the that of a model with just the intercept: \\[ R^2_p = 1 - \\frac{l(\\hat{\\mu})}{l(\\hat{\\mu}_0)} \\] For certain specific random components such as binary response model, we have rescaled generalized \\(R^2\\): \\[ \\bar{R}^2 = \\frac{R^2_*}{\\max(R^2_*)} = \\frac{1-\\exp\\{-\\frac{2}{n}(l(\\hat{\\mu}) - l(\\hat{\\mu}_0) \\}}{1 - \\exp\\{\\frac{2}{n}l(\\hat{\\mu}_0)\\}} \\] 7.7.6 Over-Dispersion Random Components \\(var(Y)\\) \\(V(\\mu)\\) Binomial \\(var(Y) = n \\mu (1- \\mu)\\) \\(V(\\mu) = \\phi n \\mu(1- \\mu)\\) where \\(m_i =n\\) Poisson \\(var(Y) = \\mu\\) \\(V(\\mu) = \\phi \\mu\\) In both cases \\(\\phi = 1\\). Recall \\(b&#39;&#39;(\\theta)= V(\\mu)\\) check Estimation of \\(\\phi\\). If we find \\(\\phi &gt;1\\): over-dispersion (i.e., too much variation for an independent binomial or Poisson distribution). \\(\\phi&lt;1\\): under-dispersion (i.e., too little variation for an independent binomial or Poisson distribution). If we have either over or under-dispersion, it means we might have unspecified random component, we could Select a different random component distribution that can accommodate over or under-dispersion (e.g., negative binomial, Conway-Maxwell Poisson) use Nonlinear and Generalized Linear Mixed Models to handle random effects in generalized linear models. References "],["linear-mixed-models.html", "Chapter 8 Linear Mixed Models ", " Chapter 8 Linear Mixed Models "],["dependent-data.html", "8.1 Dependent Data", " 8.1 Dependent Data Forms of dependent data: Multivariate measurements on different individuals: (e.g., a person’s blood pressure, fat, etc are correlated) Clustered measurements: (e.g., blood pressure measurements of people in the same family can be correlated). Repeated measurements: (e.g., measurement of cholesterol over time can be correlated) “If data are collected repeatedly on experimental material to which treatments were applied initially, the data is a repeated measure.” (Schabenberger and Pierce 2001) Longitudinal data: (e.g., individual’s cholesterol tracked over time are correlated): “data collected repeatedly over time in an observational study are termed longitudinal.” (Schabenberger and Pierce 2001) Spatial data: (e.g., measurement of individuals living in the same neighborhood are correlated) Hence, we like to account for these correlations. Linear Mixed Model (LMM), also known as Mixed Linear Model has 2 components: Fixed effect (e.g, gender, age, diet, time) Random effects representing individual variation or auto correlation/spatial effects that imply dependent (correlated) errors Review Two-Way Mixed Effects ANOVA We choose to model the random subject-specific effect instead of including dummy subject covariates in our model because: reduction in the number of parameters to estimate when you do inference, it would make more sense that you can infer from a population (i.e., random effect). LLM Motivation In a repeated measurements analysis where \\(Y_{ij}\\) is the response for the i-th individual measured at the j-th time, \\(i =1,…,N\\) ; \\(j = 1,…,n_i\\) \\[ \\mathbf{Y}_i = \\left( \\begin{array} {c} Y_{i1} \\\\ . \\\\ .\\\\ .\\\\ Y_{in_i} \\end{array} \\right) \\] is all measurements for subject i. Stage 1: (Regression Model) how the response changes over time for the i-th subject \\[ \\mathbf{Y_i = Z_i \\beta_i + \\epsilon_i} \\] where \\(Z_i\\) is an \\(n_i \\times q\\) matrix of known covariates \\(\\beta_i\\) is an unknown q x 1 vector of subjective -specific coefficients (regression coefficients different for each subject) \\(\\epsilon_i\\) are the random errors (typically \\(\\sim N(0, \\sigma^2 I)\\)) We notice that there are two many \\(\\beta\\) to estimate here. Hence, this is the motivation for the second stage Stage 2: (Parameter Model) \\[ \\mathbf{\\beta_i = K_i \\beta + b_i} \\] where \\(K_i\\) is a q x p matrix of known covariates \\(\\beta\\) is a p x 1 vector of unknown parameter \\(\\mathbf{b}_i\\) are independent \\(N(0,D)\\) random variables This model explain the observed variability between subjects with respect to the subject-specific regression coefficients, \\(\\beta_i\\). We model our different coefficient (\\(\\beta_i\\)) with respect to \\(\\beta\\). Example: Stage 1: \\[ Y_{ij} = \\beta_{1i} + \\beta_{2i}t_{ij} + \\epsilon_{ij} \\] where \\(j = 1,..,n_i\\) In the matrix notation, \\[ \\mathbf{Y_i} = \\left( \\begin{array} {c} Y_{i1} \\\\ .\\\\ Y_{in_i} \\end{array} \\right) \\] \\[ \\mathbf{Z}_i = \\left( \\begin{array} {cc} 1 &amp; t_{i1} \\\\ . &amp; . \\\\ 1 &amp; t_{in_i} \\end{array} \\right) \\] \\[ \\beta_i = \\left( \\begin{array} {c} \\beta_{1i} \\\\ \\beta_{2i} \\end{array} \\right) \\] \\[ \\epsilon_i = \\left( \\begin{array} {c} \\epsilon_{i1} \\\\ . \\\\ \\epsilon_{in_i} \\end{array} \\right) \\] Thus, \\[ \\mathbf{Y_i = Z_i \\beta_i + \\epsilon_i} \\] Stage 2: \\[ \\beta_{1i} = \\beta_0 + b_{1i} \\\\ \\beta_{2i} = \\beta_1 L_i + \\beta_2 H_i + \\beta_3 C_i + b_{2i} \\] where \\(L_i, H_i, C_i\\) are indicator variables defined to 1 as the subject falls into different categories. Subject specific intercepts do not depend upon treatment, with \\(\\beta_0\\) (the average response at the start of treatment), and \\(\\beta_1 , \\beta_2, \\beta_3\\) (the average time effects for each of three treatment groups). \\[ \\mathbf{K}_i = \\left( \\begin{array} {cccc} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; L_i &amp; H_i &amp; C_i \\end{array} \\right) \\\\ \\beta = (\\beta_0 , \\beta_1, \\beta_2, \\beta_3)&#39; \\\\ \\mathbf{b}_i = \\left( \\begin{array} {c} b_{1i} \\\\ b_{2i} \\\\ \\end{array} \\right) \\\\ \\beta_i = \\mathbf{K_i \\beta + b_i} \\] To get \\(\\hat{\\beta}\\), we can fit the model sequentially: Estimate \\(\\hat{\\beta_i}\\) in the first stage Estimate \\(\\hat{\\beta}\\) in the second stage by replacing \\(\\beta_i\\) with \\(\\hat{\\beta}_i\\) However, problems arise from this method: information is lost by summarizing the vector \\(\\mathbf{Y}_i\\) solely by \\(\\hat{\\beta}_i\\) we need to account for variability when replacing \\(\\beta_i\\) with its estimate different subjects might have different number of observations. To address these problems, we can use Linear Mixed Model (Laird and Ware 1982) Substituting stage 2 into stage 1: \\[ \\mathbf{Y}_i = \\mathbf{Z}_i \\mathbf{K}_i \\beta + \\mathbf{Z}_i \\mathbf{b}_i + \\mathbf{\\epsilon}_i \\] Let \\(\\mathbf{X}_i = \\mathbf{Z}_i \\mathbf{K}_i\\) be an \\(n_i \\times p\\) matrix . Then, the LMM is \\[ \\mathbf{Y}_i = \\mathbf{X}_i \\beta + \\mathbf{Z}_i \\mathbf{b}_i + \\mathbf{\\epsilon}_i \\] where \\(i = 1,..,N\\) \\(\\beta\\) are the fixed effects, which are common to all subjects \\(\\mathbf{b}_i\\) are the subject specific random effects. \\(\\mathbf{b}_i \\sim N_q (\\mathbf{0,D})\\) \\(\\mathbf{\\epsilon}_i \\sim N_{n_i}(\\mathbf{0,\\Sigma_i})\\) \\(\\mathbf{b}_i\\) and \\(\\epsilon_i\\) are independent \\(\\mathbf{Z}_{i(n_i \\times q})\\) and \\(\\mathbf{X}_{i(n_i \\times p})\\) are matrices of known covariates. Equivalently, in the hierarchical form, we call conditional or hierarchical formulation of the linear mixed model \\[ \\mathbf{Y}_i | \\mathbf{b}_i \\sim N(\\mathbf{X}_i \\beta+ \\mathbf{Z}_i \\mathbf{b}_i, \\mathbf{\\Sigma}_i) \\\\ \\mathbf{b}_i \\sim N(\\mathbf{0,D}) \\] for \\(i = 1,..,N\\). denote the respective functions by \\(f(\\mathbf{Y}_i |\\mathbf{b}_i)\\) and \\(f(\\mathbf{b}_i)\\) In general, \\[ f(A,B) = f(A|B)f(B) \\\\ f(A) = \\int f(A,B)dB = \\int f(A|B) f(B) dB \\] In the LMM, the marginal density of \\(\\mathbf{Y}_i\\) is \\[ f(\\mathbf{Y}_i) = \\int f(\\mathbf{Y}_i | \\mathbf{b}_i) f(\\mathbf{b}_i) d\\mathbf{b}_i \\] which can be shown \\[ \\mathbf{Y}_i \\sim N(\\mathbf{X_i \\beta, Z_i DZ&#39;_i + \\Sigma_i}) \\] This is the marginal formulation of the linear mixed model Notes: We no longer have \\(Z_i b_i\\) in the mean, but add error in the variance (marginal dependence in Y). kinda of averaging out the common effect. Technically, we shouldn’t call it averaging the error b (adding it to the variance covariance matrix), it should be called adding random effect Continue with our example \\[ Y_{ij} = (\\beta_0 + b_{1i}) + (\\beta_1L_i + \\beta_2 H_i + \\beta_3 C_i + b_{2i})t_{ij} + \\epsilon_{ij} \\] for each treatment group \\[ Y_{ik}= \\begin{cases} \\beta_0 + b_{1i} + (\\beta_1 + \\ b_{2i})t_{ij} + \\epsilon_{ij} &amp; L \\\\ \\beta_0 + b_{1i} + (\\beta_2 + \\ b_{2i})t_{ij} + \\epsilon_{ij} &amp; H\\\\ \\beta_0 + b_{1i} + (\\beta_3 + \\ b_{2i})t_{ij} + \\epsilon_{ij} &amp; C \\end{cases} \\] Intercepts and slopes are all subject specific Different treatment groups have different slops, but the same intercept. In the hierarchical model form \\[ \\mathbf{Y}_i | \\mathbf{b}_i \\sim N(\\mathbf{X}_i \\beta + \\mathbf{Z}_i \\mathbf{b}_i, \\mathbf{\\Sigma}_i)\\\\ \\mathbf{b}_i \\sim N(\\mathbf{0,D}) \\] X will be in the form of \\[ \\mathbf{X}_i = \\mathbf{Z}_i \\mathbf{K}_i \\\\ = \\left[ \\begin{array} {cc} 1 &amp; t_{i1} \\\\ 1 &amp; t_{i2} \\\\ . &amp; . \\\\ 1 &amp; t_{in_i} \\end{array} \\right] \\times \\left[ \\begin{array} {cccc} 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; L_i &amp; H_i &amp; C_i \\\\ \\end{array} \\right] \\\\ = \\left[ \\begin{array} {cccc} 1 &amp; t_{i1}L_i &amp; t_{i1}H_i &amp; T_{i1}C_i \\\\ 1 &amp; t_{i2}L_i &amp; t_{i2}H_i &amp; T_{i2}C_i \\\\ . &amp;. &amp;. &amp;. \\\\ 1 &amp; t_{in_i}L_i &amp; t_{in_i}H_i &amp; T_{in_i}C_i \\\\ \\end{array} \\right] \\] \\[ \\beta = (\\beta_0, \\beta_1, \\beta_2, \\beta_3)&#39; \\\\ \\mathbf{b}_i = \\left( \\begin{array} {c} b_{1i} \\\\ b_{2i} \\end{array} \\right) , D = \\left( \\begin{array} {cc} d_{11} &amp; d_{12}\\\\ d_{12} &amp; d_{22} \\end{array} \\right) \\] Assuming \\(\\mathbf{\\Sigma}_i = \\sigma^2 \\mathbf{I}_{n_i}\\), which is called conditional independence, meaning the response on subject i are independent conditional on \\(\\mathbf{b}_i\\) and \\(\\beta\\) In the marginal model form \\[ Y_{ij} = \\beta_0 + \\beta_1 L_i t_{ij} + \\beta_2 H_i t_{ij} + \\beta_3 C_i t_{ij} + \\eta_{ij} \\] where \\(\\eta_i \\sim N(\\mathbf{0},\\mathbf{Z}_i\\mathbf{DZ}_i&#39;+ \\mathbf{\\Sigma}_i)\\) Equivalently, \\[ \\mathbf{Y_i \\sim N(X_i \\beta, Z_i DZ_i&#39; + \\Sigma_i}) \\] In this case that \\(n_i = 2\\) \\[ \\mathbf{Z_iDZ_i&#39;} = \\left( \\begin{array} {cc} 1 &amp; t_{i1} \\\\ 1 &amp; t_{i2} \\end{array} \\right) \\left( \\begin{array} {cc} d_{11} &amp; d_{12} \\\\ d_{12} &amp; d_{22} \\end{array} \\right) \\left( \\begin{array} {cc} 1 &amp; 1 \\\\ t_{i1} &amp; t_{i2} \\end{array} \\right) \\\\ = \\left( \\begin{array} {cc} d_{11} + 2d_{12}t_{i1} + d_{22}t_{i1}^2 &amp; d_{11} + d_{12}(t_{i1} + t_{i2}) + d_{22}t_{i1}t_{i2} \\\\ d_{11} + d_{12}(t_{i1} + t_{i2}) + d_{22} t_{i1} t_{i2} &amp; d_{11} + 2d_{12}t_{i2} + d_{22}t_{i2}^2 \\end{array} \\right) \\] \\[ var(Y_{i1}) = d_{11} + 2d_{12}t_{i1} + d_{22} t_{i1}^2 + \\sigma^2 \\] On top of correlation in the errors, the marginal implies that the variance function of the response is quadratic over time, with positive curvature \\(d_{22}\\) 8.1.1 Random-Intercepts Model If we remove the random slopes, the assumption is that all variability in subject-specific slopes can be attributed to treatment differences the model is random-intercepts model. This has subject specific intercepts, but the same slopes within each treatment group. \\[ \\mathbf{Y}_i | b_i \\sim N(\\mathbf{X}_i \\beta + 1 b_i , \\Sigma_i) \\\\ b_i \\sim N(0,d_{11}) \\] The marginal model is then (\\(\\mathbf{\\Sigma}_i = \\sigma^2 \\mathbf{I}\\)) \\[ \\mathbf{Y}_i \\sim N(\\mathbf{X}_i \\beta, 11&#39;d_{11} + \\sigma^2 \\mathbf{I}) \\] The marginal covariance matrix is \\[ cov(\\mathbf{Y}_i) = 11&#39;d_{11} + \\sigma^2I \\\\ = \\left( \\begin{array} {cccc} d_{11}+ \\sigma^2 &amp; d_{11} &amp; ... &amp; d_{11} \\\\ d_{11} &amp; d_{11} + \\sigma^2 &amp; d_{11} &amp; ... \\\\ . &amp; . &amp; . &amp; . \\\\ d_{11} &amp; ... &amp; ... &amp; d_{11} + \\sigma^2 \\end{array} \\right) \\] the associated correlation matrix is \\[ corr(\\mathbf{Y}_i) = \\left( \\begin{array} {cccc} 1 &amp; \\rho &amp; ... &amp; \\rho \\\\ \\rho &amp; 1 &amp; \\rho &amp; ... \\\\ . &amp; . &amp; . &amp; . \\\\ \\rho &amp; ... &amp; ... &amp; 1 \\\\ \\end{array} \\right) \\] where \\(\\rho \\equiv \\frac{d_{11}}{d_{11} + \\sigma^2}\\) Thu, we have constant variance over time equal, positive correlation between any two measurements from the same subject a covariance structure that is called compound symmetry, and \\(\\rho\\) is called the intra-class correlation that when \\(\\rho\\) is large, the inter-subject variability (\\(d_{11}\\)) is large relative to the intra-subject variability (\\(\\sigma^2\\)) 8.1.2 Covariance Models If the conditional independence assumption, (\\(\\mathbf{\\Sigma_i= \\sigma^2 I_{n_i}}\\)). Consider, \\(\\epsilon_i = \\epsilon_{(1)i} + \\epsilon_{(2)i}\\), where \\(\\epsilon_{(1)i}\\) is a “serial correlation” component. That is, part of the individual’s profile is a response to time-varying stochastic processes. \\(\\epsilon_{(2)i}\\) is the measurement error component, and is independent of \\(\\epsilon_{(1)i}\\) Then \\[ \\mathbf{Y_i = X_i \\beta + Z_i b_i + \\epsilon_{(1)i} + \\epsilon_{(2)i}} \\] where \\(\\mathbf{b_i} \\sim N(\\mathbf{0,D})\\) \\(\\epsilon_{(2)i} \\sim N(\\mathbf{0,\\sigma^2 I_{n_i}})\\) \\(\\epsilon_{(1)i} \\sim N(\\mathbf{0,\\tau^2H_i})\\) \\(\\mathbf{b}_i\\) and \\(\\epsilon_i\\) are mutually independent To model the structure of the \\(n_i \\times n_i\\) correlation (or covariance ) matrix \\(\\mathbf{H}_i\\). Let the (j,k)th element of \\(\\mathbf{H}_i\\) be \\(h_{ijk}= g(t_{ij}t_{ik})\\). that is a function of the times \\(t_{ij}\\) and \\(t_{ik}\\) , which is assumed to be some function of the “distance’ between the times. \\[ h_{ijk} = g(|t_{ij}-t_{ik}|) \\] for some decreasing function \\(g(.)\\) with \\(g(0)=1\\) (for correlation matrices). Examples of this type of function: Exponential function: \\(g(|t_{ij}-t_{ik}|) = \\exp(-\\phi|t_{ij} - t_{ik}|)\\) Gaussian function: \\(g(|t_{ij} - t_{ik}|) = \\exp(-\\phi(t_{ij} - t_{ik})^2)\\) Similar structures could also be used for \\(\\mathbf{D}\\) matrix (of \\(\\mathbf{b}\\)) Example: Autoregressive Covariance Structure A first order Autoregressive Model (AR(1)) has the form \\[ \\alpha_t = \\phi \\alpha_{t-1} + \\eta_t \\] where \\(\\eta_t \\sim iid N (0,\\sigma^2_\\eta)\\) Then, the covariance between two observations is \\[ cov(\\alpha_t, \\alpha_{t+h}) = \\frac{\\sigma^2_\\eta \\phi^{|h|}}{1- \\phi^2} \\] for \\(h = 0, \\pm 1, \\pm 2, ...; |\\phi|&lt;1\\) Hence, \\[ corr(\\alpha_t, \\alpha_{t+h}) = \\phi^{|h|} \\] If we let \\(\\alpha_T = (\\alpha_1,...\\alpha_T)&#39;\\), then \\[ corr(\\alpha_T) = \\left[ \\begin{array} {ccccc} 1 &amp; \\phi^1 &amp; \\phi^2 &amp; ... &amp; \\phi^2 \\\\ \\phi^1 &amp; 1 &amp; \\phi^1 &amp; ... &amp; \\phi^{T-1} \\\\ \\phi^2 &amp; \\phi^1 &amp; 1 &amp; ... &amp; \\phi^{T-2} \\\\ . &amp; . &amp; . &amp; . &amp;. \\\\ \\phi^T &amp; \\phi^{T-1} &amp; \\phi^{T-2} &amp; ... &amp; 1 \\end{array} \\right] \\] Notes: The correlation decreases as time lag increases This matrix structure is known as a Toeplitz structure More complicated covariance structures are possible, which is critical component of spatial random effects models and time series models. Often, we don’t need both random effects \\(\\mathbf{b}\\) and \\(\\epsilon_{(1)i}\\) More in the Time Series section References "],["estimation-2.html", "8.2 Estimation", " 8.2 Estimation \\[ \\mathbf{Y}_i = \\mathbf{X}_i \\beta + \\mathbf{Z}_i \\mathbf{b}_i + \\epsilon_i \\] where \\(\\beta, \\mathbf{b}_i, \\mathbf{D}, \\mathbf{\\Sigma}_i\\) we must obtain estimation from the data \\(\\mathbf{\\beta}, \\mathbf{D}, \\mathbf{\\Sigma}_i\\) are unknown, but fixed, parameters, and must be estimated from the data \\(\\mathbf{b}_i\\) is a random variable. Thus, we can’t estimate these values, but we can predict them. (i.e., you can’t estimate a random thing). If we have \\(\\hat{\\beta}\\) as an estimator of \\(\\beta\\) \\(\\hat{\\mathbf{b}}_i\\) as a predictor of \\(\\mathbf{b}_i\\) Then, The population average estimate of \\(\\mathbf{Y}_i\\) is \\(\\hat{\\mathbf{Y}_i} = \\mathbf{X}_i \\hat{\\beta}\\) The subject-specific prediction is \\(\\hat{\\mathbf{Y}_i} = \\mathbf{X}_i \\hat{\\beta} + \\mathbf{Z}_i \\hat{b}_i\\) According to (Henderson 1975), estimating equations known as the mixed model equations: \\[ \\left[ \\begin{array} {c} \\hat{\\beta} \\\\ \\hat{\\mathbf{b}} \\end{array} \\right] = \\left[ \\begin{array} {cc} \\mathbf{X&#39;\\Sigma^{-1}X} &amp; \\mathbf{X&#39;\\Sigma^{-1}Z} \\\\ \\mathbf{Z&#39;\\Sigma^{-1}X} &amp; \\mathbf{Z&#39;\\Sigma^{-1}Z +B^{-1}} \\end{array} \\right] \\left[ \\begin{array} {cc} \\mathbf{X&#39;\\Sigma^{-1}Y} \\\\ \\mathbf{Z&#39;\\Sigma^{-1}Y} \\end{array} \\right] \\] where \\[ \\mathbf{Y} = \\left[ \\begin{array} {c} \\mathbf{y}_1 \\\\ . \\\\ \\mathbf{y}_N \\end{array} \\right] ; \\mathbf{X} = \\left[ \\begin{array} {c} \\mathbf{X}_1 \\\\ . \\\\ \\mathbf{X}_N \\end{array} \\right]; \\mathbf{b} = \\left[ \\begin{array} {c} \\mathbf{b}_1 \\\\ . \\\\ \\mathbf{b}_N \\end{array} \\right] ; \\epsilon = \\left[ \\begin{array} {c} \\epsilon_1 \\\\ . \\\\ \\epsilon_N \\end{array} \\right] \\\\ cov(\\epsilon) = \\mathbf{\\Sigma}, \\mathbf{Z} = \\left[ \\begin{array} {cccc} \\mathbf{Z}_1 &amp; 0 &amp; ... &amp; 0 \\\\ 0 &amp; \\mathbf{Z}_2 &amp; ... &amp; 0 \\\\ . &amp; . &amp; . &amp; . \\\\ 0 &amp; 0 &amp; ... &amp; \\mathbf{Z}_n \\end{array} \\right], \\mathbf{B} = \\left[ \\begin{array} {cccc} \\mathbf{D} &amp; 0 &amp; ... &amp; 0 \\\\ 0 &amp; \\mathbf{D} &amp; ... &amp; 0 \\\\ . &amp; . &amp; . &amp; . \\\\ 0 &amp; 0 &amp; ... &amp; \\mathbf{D} \\end{array} \\right] \\] The model has the form \\[ \\mathbf{Y = X \\beta + Z b + \\epsilon} \\\\ \\mathbf{Y} \\sim N(\\mathbf{X \\beta, ZBZ&#39; + \\Sigma}) \\] If \\(\\mathbf{V = ZBZ&#39; + \\Sigma}\\), then the solutions to the estimating equations can be \\[ \\hat{\\beta} = \\mathbf{(X&#39;V^{-1}X)^{-1}X&#39;V^{-1}Y} \\\\ \\hat{\\mathbf{b}} = \\mathbf{BZ&#39;V^{-1}(Y-X\\hat{\\beta}}) \\] The estimate \\(\\hat{\\beta}\\) is a generalized least squares estimate. The predictor, \\(\\hat{\\mathbf{b}}\\) is the best linear unbiased predictor (BLUP), for \\(\\mathbf{b}\\) \\[ E(\\hat{\\beta}) = \\beta \\\\ var(\\hat{\\beta}) = (\\mathbf{X&#39;V^{-1}X})^{-1} \\\\ E(\\hat{\\mathbf{b}}) = 0 \\\\ var(\\mathbf{\\hat{b}-b}) = \\mathbf{B-BZ&#39;V^{-1}ZB + BZ&#39;V^{-1}X(X&#39;V^{-1}X)^{-1}X&#39;V^{-1}B} \\] The variance here is the variance of the prediction error (mean squared prediction error, MSPE), which is more meaningful than \\(var(\\hat{\\mathbf{b}})\\), since MSPE accounts for both variance and bias in the prediction. To derive the mixed model equations, consider \\[ \\mathbf{\\epsilon = Y - X\\beta - Zb} \\] Let \\(T = \\sum_{i=1}^N n_i\\) be the total number of observations (i.e., the length of \\(\\mathbf{Y},\\epsilon\\)) and \\(Nq\\) the length of \\(\\mathbf{b}\\). The joint distribution of \\(\\mathbf{b, \\epsilon}\\) is \\[ f(\\mathbf{b,\\epsilon})= \\frac{1}{(2\\pi)^{(T+ Nq)/2}} \\left| \\begin{array} {cc} \\mathbf{B} &amp; 0 \\\\ 0 &amp; \\mathbf{\\Sigma} \\end{array} \\right| ^{-1/2} \\exp \\left( -\\frac{1}{2} \\left[ \\begin{array} {c} \\mathbf{b} \\\\ \\mathbf{Y - X \\beta - Zb} \\end{array} \\right]&#39; \\left[ \\begin{array} {cc} \\mathbf{B} &amp; 0 \\\\ 0 &amp; \\mathbf{\\Sigma} \\end{array} \\right]^{-1} \\left[ \\begin{array} {c} \\mathbf{b} \\\\ \\mathbf{Y - X \\beta - Zb} \\end{array} \\right] \\right) \\] Maximization of \\(f(\\mathbf{b},\\epsilon)\\) with respect to \\(\\mathbf{b}\\) and \\(\\beta\\) requires minimization of \\[ Q = \\left[ \\begin{array} {c} \\mathbf{b} \\\\ \\mathbf{Y - X \\beta - Zb} \\end{array} \\right]&#39; \\left[ \\begin{array} {cc} \\mathbf{B} &amp; 0 \\\\ 0 &amp; \\mathbf{\\Sigma} \\end{array} \\right]^{-1} \\left[ \\begin{array} {c} \\mathbf{b} \\\\ \\mathbf{Y - X \\beta - Zb} \\end{array} \\right] \\\\ = \\mathbf{b&#39;B^{-1}b+(Y-X \\beta-Zb)&#39;\\Sigma^{-1}(Y-X \\beta-Zb)} \\] Setting the derivatives of Q with respect to \\(\\mathbf{b}\\) and \\(\\mathbf{\\beta}\\) to zero leads to the system of equations: \\[ \\begin{aligned} \\mathbf{X&#39;\\Sigma^{-1}X\\beta + X&#39;\\Sigma^{-1}Zb} &amp;= \\mathbf{X&#39;\\Sigma^{-1}Y}\\\\ \\mathbf{(Z&#39;\\Sigma^{-1}Z + B^{-1})b + Z&#39;\\Sigma^{-1}X\\beta} &amp;= \\mathbf{Z&#39;\\Sigma^{-1}Y} \\end{aligned} \\] Rearranging \\[ \\left[ \\begin{array} {cc} \\mathbf{X&#39;\\Sigma^{-1}X} &amp; \\mathbf{X&#39;\\Sigma^{-1}Z} \\\\ \\mathbf{Z&#39;\\Sigma^{-1}X} &amp; \\mathbf{Z&#39;\\Sigma^{-1}Z + B^{-1}} \\end{array} \\right] \\left[ \\begin{array} {c} \\beta \\\\ \\mathbf{b} \\end{array} \\right] = \\left[ \\begin{array} {c} \\mathbf{X&#39;\\Sigma^{-1}Y} \\\\ \\mathbf{Z&#39;\\Sigma^{-1}Y} \\end{array} \\right] \\] Thus, the solution to the mixed model equations give: \\[ \\left[ \\begin{array} {c} \\hat{\\beta} \\\\ \\hat{\\mathbf{b}} \\end{array} \\right] = \\left[ \\begin{array} {cc} \\mathbf{X&#39;\\Sigma^{-1}X} &amp; \\mathbf{X&#39;\\Sigma^{-1}Z} \\\\ \\mathbf{Z&#39;\\Sigma^{-1}X} &amp; \\mathbf{Z&#39;\\Sigma^{-1}Z + B^{-1}} \\end{array} \\right] ^{-1} \\left[ \\begin{array} {c} \\mathbf{X&#39;\\Sigma^{-1}Y} \\\\ \\mathbf{Z&#39;\\Sigma^{-1}Y} \\end{array} \\right] \\] Equivalently, Bayes’ theorem \\[ f(\\mathbf{b}| \\mathbf{Y}) = \\frac{f(\\mathbf{Y}|\\mathbf{b})f(\\mathbf{b})}{\\int f(\\mathbf{Y}|\\mathbf{b})f(\\mathbf{b}) d\\mathbf{b}} \\] where \\(f(\\mathbf{Y}|\\mathbf{b})\\) is the “likelihood” \\(f(\\mathbf{b})\\) is the prior the denominator is the “normalizing constant” \\(f(\\mathbf{b}|\\mathbf{Y})\\) is the posterior distribution In this case \\[ \\mathbf{Y} | \\mathbf{b} \\sim N(\\mathbf{X\\beta+Zb,\\Sigma}) \\\\ \\mathbf{b} \\sim N(\\mathbf{0,B}) \\] The posterior distribution has the form \\[ \\mathbf{b}|\\mathbf{Y} \\sim N(\\mathbf{BZ&#39;V^{-1}(Y-X\\beta),(Z&#39;\\Sigma^{-1}Z + B^{-1})^{-1}}) \\] Hence, the best predictor (based on squared error loss) \\[ E(\\mathbf{b}|\\mathbf{Y}) = \\mathbf{BZ&#39;V^{-1}(Y-X\\beta)} \\] 8.2.1 Estimating \\(\\mathbf{V}\\) If we have \\(\\tilde{\\mathbf{V}}\\) (estimate of \\(\\mathbf{V}\\)), then we can estimate: \\[ \\hat{\\beta} = \\mathbf{(X&#39;\\tilde{V}^{-1}X)^{-1}X&#39;\\tilde{V}^{-1}Y} \\\\ \\hat{\\mathbf{b}} = \\mathbf{BZ&#39;\\tilde{V}^{-1}(Y-X\\hat{\\beta})} \\] where \\({\\mathbf{b}}\\) is EBLUP (estimated BLUP) or empirical Bayes estimate Note: \\(\\hat{var}(\\hat{\\beta})\\) is a consistent estimator of \\(var(\\hat{\\beta})\\) if \\(\\tilde{\\mathbf{V}}\\) is a consistent estimator of \\(\\mathbf{V}\\) However, \\(\\hat{var}(\\hat{\\beta})\\) is biased since the variability arises from estimating \\(\\mathbf{V}\\) is not accounted for in the estimate. Hence, \\(\\hat{var}(\\hat{\\beta})\\) underestimates the true variability Ways to estimate \\(\\mathbf{V}\\) Maximum Likelihood Estimation (MLE) Restricted Maximum Likelihood (REML) Estimated Generalized Least Squares Bayesian Hierarchical Models (BHM) 8.2.1.1 Maximum Likelihood Estimation (MLE) Grouping unknown parameters in \\(\\Sigma\\) and \\(B\\) under a parameter vector \\(\\theta\\). Under MLE, \\(\\hat{\\theta}\\) and \\(\\hat{\\beta}\\) maximize the likelihood \\(\\mathbf{y} \\sim N(\\mathbf{X\\beta, V(\\theta))}\\). Synonymously, \\(-2\\log L(\\mathbf{y;\\theta,\\beta})\\): \\[ -2l(\\mathbf{\\beta,\\theta,y}) = \\log |\\mathbf{V(\\theta)}| + \\mathbf{(y-X\\beta)&#39;V(\\theta)^{-1}(y-X\\beta)} + N \\log(2\\pi) \\] Step 1: Replace \\(\\beta\\) with its maximum likelihood (where \\(\\theta\\) is known \\(\\hat{\\beta}= (\\mathbf{X&#39;V(\\theta)^{-1}X)^{-1}X&#39;V(\\theta)^{-1}y}\\) Step 2: Minimize the above equation with respect to \\(\\theta\\) to get the estimator \\(\\hat{\\theta}_{MLE}\\) Step 3: Substitute \\(\\hat{\\theta}_{MLE}\\) back to get \\(\\hat{\\beta}_{MLE} = (\\mathbf{X&#39;V(\\theta_{MLE})^{-1}X)^{-1}X&#39;V(\\theta_{MLE})^{-1}y}\\) Step 4: Get \\(\\hat{\\mathbf{b}}_{MLE} = \\mathbf{B(\\hat{\\theta}_{MLE})Z&#39;V(\\hat{\\theta}_{MLE})^{-1}(y-X\\hat{\\beta}_{MLE})}\\) Note: \\(\\hat{\\theta}\\) are typically negatively biased due to unaccounted fixed effects being estimated, which we could try to account for. 8.2.1.2 Restricted Maximum Likelihood (REML) REML accounts for the number of estimated mean parameters by adjusting the objective function. Specifically, the likelihood of linear combination of the elements of \\(\\mathbf{y}\\) is accounted for. We have \\(\\mathbf{K&#39;y}\\), where \\(\\mathbf{K}\\) is any \\(N \\times (N - p)\\) full-rank contrast matrix, which has columns orthogonal to the \\(\\mathbf{X}\\) matrix (that is \\(\\mathbf{K&#39;X} = 0\\)). Then, \\[ \\mathbf{K&#39;y} \\sim N(0,\\mathbf{K&#39;V(\\theta)K}) \\] where \\(\\beta\\) is no longer in the distribution We can proceed to maximize this likelihood for the contrasts to get \\(\\hat{\\theta}_{REML}\\), which does not depend on the choice of \\(\\mathbf{K}\\). And \\(\\hat{\\beta}\\) are based on \\(\\hat{\\theta}\\) Comparison REML and MLE Both methods are based upon the likelihood principle, and have desired properties for the estimates: consistency asymptotic normality efficiency ML estimation provides estimates for fixed effects, while REML can’t In balanced models, REML is identical to ANOVA REML accounts for df for the fixed effects int eh model, which is important when \\(\\mathbf{X}\\) is large relative to the sample size Changing \\(\\mathbf{\\beta}\\) has no effect on the REML estimates of \\(\\theta\\) REML is less sensitive to outliers than MLE MLE is better than REML regarding model comparisons (e.g., AIC or BIC) 8.2.1.3 Estimated Generalized Least Squares MLE and REML rely upon the Gaussian assumption. To overcome this issue, EGLS uses the first and second moments. \\[ \\mathbf{Y}_i = \\mathbf{X}_i \\beta + \\mathbf{Z}_i \\mathbf{b}_i + \\epsilon_i \\] where \\(\\epsilon_i \\sim (\\mathbf{0,\\Sigma_i})\\) \\(\\mathbf{b}_i \\sim (\\mathbf{0,D})\\) \\(cov(\\epsilon_i, \\mathbf{b}_i) = 0\\) Then the EGLS estimator is \\[ \\begin{aligned} \\hat{\\beta}_{GLS} &amp;= \\{\\sum_{i=1}^n \\mathbf{X&#39;_iV_i(\\theta)^{-1}X_i} \\}^{-1} \\sum_{i=1}^n \\mathbf{X&#39;_iV_i(\\theta)^{-1}Y_i} \\\\ &amp;=\\{\\mathbf{X&#39;V(\\theta)^{-1}X} \\}^{-1} \\mathbf{X&#39;V(\\theta)^{-1}Y} \\end{aligned} \\] depends on the first two moments \\(E(\\mathbf{Y}_i) = \\mathbf{X}_i \\beta\\) \\(var(\\mathbf{Y}_i)= \\mathbf{V}_i\\) EGLS use \\(\\hat{\\mathbf{V}}\\) for \\(\\mathbf{V(\\theta)}\\) \\[ \\hat{\\beta}_{EGLS} = \\{ \\mathbf{X&#39;\\hat{V}^{-1}X} \\}^{-1} \\mathbf{X&#39;\\hat{V}^{-1}Y} \\] Hence, the fixed effects estimators for the MLE, REML, and EGLS are of the same form, except for the estimate of \\(\\mathbf{V}\\) In case of non-iterative approach, EGLS can be appealing when \\(\\mathbf{V}\\) can be estimated without much computational burden. 8.2.1.4 Bayesian Hierarchical Models (BHM) Joint distribution cane be decomposed hierarchically in terms of the product of conditional distributions and a marginal distribution \\[ f(A,B,C) = f(A|B,C) f(B|C)f(C) \\] Applying to estimate \\(\\mathbf{V}\\) \\[ \\begin{aligned} f(\\mathbf{Y, \\beta, b, \\theta}) &amp;= f(\\mathbf{Y|\\beta,b, \\theta})f(\\mathbf{b|\\theta,\\beta})f(\\mathbf{\\beta|\\theta})f(\\mathbf{\\theta}) &amp; \\text{based on probability decomposition} \\\\ &amp;= f(\\mathbf{Y|\\beta,b, \\theta})f(\\mathbf{b|\\theta})f(\\mathbf{\\beta})f(\\mathbf{\\theta}) &amp; \\text{based on simplifying modeling assumptions} \\end{aligned} \\] elaborate on the second equality, if we assume conditional independence (e.g., given \\(\\theta\\), no additional info about \\(\\mathbf{b}\\) is given by knowing \\(\\beta\\)), then we can simply from the first equality Using Bayes’ rule \\[ f(\\mathbf{\\beta, b, \\theta|Y}) \\propto f(\\mathbf{Y|\\beta,b, \\theta})f(\\mathbf{b|\\theta})f(\\mathbf{\\beta})f(\\mathbf{\\theta}) \\] where \\[ \\mathbf{Y| \\beta, b, \\theta \\sim N(X\\beta+ Zb, \\Sigma(\\theta))} \\\\ \\mathbf{b | \\theta \\sim N(0, B(\\theta))} \\] and we also have to have prior distributions for \\(f(\\beta), f(\\theta)\\) With normalizing constant, we can obtain the posterior distribution. Typically, we can’t get analytical solution right away. Hence, we can use Markov Chain Monte Carlo (MCMC) to obtain samples from the posterior distribution. Bayesian Methods: account for the uncertainty in parameters estimates and accommodate the propagation of that uncertainty through the model can adjust prior information (i.e., priori) in parameters Can extend beyond Gaussian distributions but hard to implement algorithms and might have problem converging References "],["inference-3.html", "8.3 Inference", " 8.3 Inference 8.3.1 Parameters \\(\\beta\\) 8.3.1.1 Wald test We have \\[ \\mathbf{\\hat{\\beta}(\\theta) = \\{X&#39;V^{-1}(\\theta) X\\}^{-1}X&#39;V^{-1}(\\theta) Y} \\\\ var(\\hat{\\beta}(\\theta)) = \\mathbf{\\{X&#39;V^{-1}(\\theta) X\\}^{-1}} \\] We can use \\(\\hat{\\theta}\\) in place of \\(\\theta\\) to approximate Wald test \\[ H_0: \\mathbf{A \\beta =d} \\] With \\[ W = \\mathbf{(A\\hat{\\beta} - d)&#39;[A(X&#39;\\hat{V}^{-1}X)^{-1}A&#39;]^{-1}(A\\hat{\\beta} - d)} \\] where \\(W \\sim \\chi^2_{rank(A)}\\) under \\(H_0\\) is true. However, it does not take into account variability from using \\(\\hat{\\theta}\\) in place of \\(\\theta\\), hence the standard errors are underestimated 8.3.1.2 F-test Alternatively, we can use the modified F-test, suppose we have \\(var(\\mathbf{Y}) = \\sigma^2 \\mathbf{V}(\\theta)\\), then \\[ F^* = \\frac{\\mathbf{(A\\hat{\\beta} - d)&#39;[A(X&#39;\\hat{V}^{-1}X)^{-1}A&#39;]^{-1}(A\\hat{\\beta} - d)}}{\\hat{\\sigma}^2 \\text{rank}(A)} \\] where \\(F^* \\sim f_{rank(A), den(df)}\\) under the null hypothesis. And den(df) needs to be approximated from the data by either: Satterthwaite method Kenward-Roger approximation Under balanced cases, the Wald and F tests are similar. But for small sample sizes, they can differ in p-values. And both can be reduced to t-test for a single \\(\\beta\\) 8.3.1.3 Likelihood Ratio Test \\[ H_0: \\beta \\in \\Theta_{\\beta,0} \\] where \\(\\Theta_{\\beta, 0}\\) is a subspace of the parameter space, \\(\\Theta_{\\beta}\\) of the fixed effects \\(\\beta\\) . Then \\[ -2\\log \\lambda_N = -2\\log\\{\\frac{\\hat{L}_{ML,0}}{\\hat{L}_{ML}}\\} \\] where \\(\\hat{L}_{ML,0}\\) , \\(\\hat{L}_{ML}\\) are the maximized likelihood obtained from maximizing over \\(\\Theta_{\\beta,0}\\) and \\(\\Theta_{\\beta}\\) \\(-2 \\log \\lambda_N \\dot{\\sim} \\chi^2_{df}\\) where df is the difference in the dimension (i.e., number of parameters) of \\(\\Theta_{\\beta,0}\\) and \\(\\Theta_{\\beta}\\) This method is not applicable for REML. But REML can still be used to test for covariance parameters between nested models. 8.3.2 Variance Components For ML and REML estimator, \\(\\hat{\\theta} \\sim N(\\theta, I(\\theta))\\) for large samples Wald test in variance components is analogous to the fixed effects case (see 8.3.1.1 ) However, the normal approximation depends largely on the true value of \\(\\theta\\). It will fail if the true value of \\(\\theta\\) is close to the boundary of the parameter space \\(\\Theta_{\\theta}\\) (i.e., \\(\\sigma^2 \\approx 0\\)) Typically works better for covariance parameter, than vairance prarmetesr. The likelihood ratio tests can also be used with ML or REML estimates. However, the same problem of parameters "],["information-criteria.html", "8.4 Information Criteria", " 8.4 Information Criteria account for the likelihood and the number of parameters to assess model comparison. 8.4.1 Akaike’s Information Criteria (AIC) Derived as an estimator of the expected Kullback discrepancy between the true model and a fitted candidate model \\[ AIC = -2l(\\hat{\\theta}, \\hat{\\beta}) + 2q \\] where \\(l(\\hat{\\theta}, \\hat{\\beta})\\) is the log-likelihood q = the effective number of parameters; total of fixed and those associated with random effects (variance/covariance; those not estimated to be on a boundary constraint) Note: In comparing models that differ in their random effects, this method is not advised to due the inability to get the correct number of effective parameters). We prefer smaller AIC values. If your program uses \\(l-q\\) then we prefer larger AIC values (but rarely). can be used for mixed model section, (e.g., selection of the covariance structure), but the sample size must be very large to have adequate comparison based on the criterion Can have a large negative bias (e.g., when sample size is small but the number of parameters is large) due to the penalty term can’t approximate the bias adjustment adequately 8.4.2 Corrected AIC (AICC) developed by (Hurvich and Tsai 1989) correct small-sample adjustment depends on the candidate model class Only if you have fixed covariance structure, then AICC is justified, but not general covariance structure 8.4.3 Bayesian Information Criteria (BIC) \\[ BIC = -2l(\\hat{\\theta}, \\hat{\\beta}) + q \\log n \\] where n = number of observations. we prefer smaller BIC value BIC and AIC are used for both REML and MLE if we have the same mean structure. Otherwise, in general, we should prefer MLE With our example presented at the beginning of Linear Mixed Models, \\[ Y_{ik}= \\begin{cases} \\beta_0 + b_{1i} + (\\beta_1 + \\ b_{2i})t_{ij} + \\epsilon_{ij} &amp; L \\\\ \\beta_0 + b_{1i} + (\\beta_2 + \\ b_{2i})t_{ij} + \\epsilon_{ij} &amp; H\\\\ \\beta_0 + b_{1i} + (\\beta_3 + \\ b_{2i})t_{ij} + \\epsilon_{ij} &amp; C \\end{cases} \\] where \\(i = 1,..,N\\) \\(j = 1,..,n_i\\) (measures at time \\(t_{ij}\\)) Note: we have subject-specific intercepts, \\[ \\mathbf{Y}_i |b_i \\sim N(\\mathbf{X}_i \\beta + 1 b_i, \\sigma^2 \\mathbf{I}) \\\\ b_i \\sim N(0,d_{11}) \\] here, we want to estimate \\(\\beta, \\sigma^2, d_{11}\\) and predict \\(b_i\\) References "],["split-plot-designs.html", "8.5 Split-Plot Designs", " 8.5 Split-Plot Designs Typically used in the case that you have two factors where one needs much larger units than the other. Example: A: 3 levels (large units) B: 2 levels (small units) A and B levels are randomized into 4 blocks. But it differs from Randomized Block Designs. In each block, both have one of the 6 (3x2) treatment combinations. But Randomized Block Designs assign in each block randomly, while split-plot does not randomize this step. Moreover, because A needs to be applied in large units, factor A is applied only once in each block while B can be applied multiple times. Hence, we have our model If A is our factor of interest \\[ Y_{ij} = \\mu + \\rho_i + \\alpha_j + e_{ij} \\] where i = replication (block or subject) j = level of Factor A \\(\\mu\\) = overall mean \\(\\rho_i\\) = variation due to the i-th block \\(e_{ij} \\sim N(0, \\sigma^2_e)\\) = whole plot error If B is our factor of interest \\[ Y_{ijk} = \\mu + \\phi_{ij} + \\beta_k + \\epsilon_{ijk} \\] where \\(\\phi_{ij}\\) = variation due to the ij-th main plot \\(\\beta_k\\) = Factor B effect \\(\\epsilon_{ijk} \\sim N(0, \\sigma^2_\\epsilon)\\) = subplot error \\(\\phi_{ij} = \\rho_i + \\alpha_j + e_{ij}\\) Together, the split-plot model \\[ Y_{ijk} = \\mu + \\rho_i + \\alpha_j + e_{ij} + \\beta_k + (\\alpha \\beta)_{jk} + \\epsilon_{ijk} \\] where i = replicate (blocks or subjects) j = level of factor A k = level of factor B \\(\\mu\\) = overall mean \\(\\rho_i\\) = effect of the block \\(\\alpha_j\\) = main effect of factor A (fixed) \\(e_{ij} = (\\rho \\alpha)_{ij}\\) = block by factor A interaction (the whole plot error, random) \\(\\beta_k\\) = main effect of factor B (fixed) \\((\\alpha \\beta)_{jk}\\) = interaction between factors A and B (fixed) \\(\\epsilon_{ijk}\\) = subplot error (random) We can approach sub-plot analysis based on the ANOVA perspective Whole plot comparisons Compare factor A to the whole plot error (i.e., \\(\\alpha_j\\) to \\(e_{ij}\\)) Compare the block to the whole plot error (i.e., \\(\\rho_i\\) to \\(e_{ij}\\)) Sub-plot comparisons: Compare factor B to the subplot error (\\(\\beta\\) to \\(\\epsilon_{ijk}\\)) Compare the AB interaction to the subplot error (\\((\\alpha \\beta)_{jk}\\) to \\(\\epsilon_{ijk}\\)) the mixed model perspective \\[ \\mathbf{Y = X \\beta + Zb + \\epsilon} \\] 8.5.1 Application 8.5.1.1 Example 1 \\[ y_{ijk} = \\mu + i_i + v_j + (iv)_{ij} + f_k + \\epsilon_{ijk} \\] where \\(y_{ijk}\\) = observed yield \\(\\mu\\) = overall average yield \\(i_i\\) = irrigation effect \\(v_j\\) = variety effect \\((iv)_{ij}\\) = irrigation by variety interaction \\(f_k\\) = random field (block) effect \\(\\epsilon_{ijk}\\) = residual because variety-field combination is only observed once, we can’t have the random interaction effects between variety and field library(ggplot2) data(irrigation, package = &quot;faraway&quot;) summary(irrigation) #&gt; field irrigation variety yield #&gt; f1 :2 i1:4 v1:8 Min. :34.80 #&gt; f2 :2 i2:4 v2:8 1st Qu.:37.60 #&gt; f3 :2 i3:4 Median :40.15 #&gt; f4 :2 i4:4 Mean :40.23 #&gt; f5 :2 3rd Qu.:42.73 #&gt; f6 :2 Max. :47.60 #&gt; (Other):4 head(irrigation, 4) #&gt; field irrigation variety yield #&gt; 1 f1 i1 v1 35.4 #&gt; 2 f1 i1 v2 37.9 #&gt; 3 f2 i2 v1 36.7 #&gt; 4 f2 i2 v2 38.2 ggplot(irrigation, aes( x = field, y = yield, shape = irrigation, color = variety )) + geom_point(size = 3) sp_model &lt;- lmerTest::lmer(yield ~ irrigation * variety + (1 | field), irrigation) summary(sp_model) #&gt; Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ #&gt; lmerModLmerTest] #&gt; Formula: yield ~ irrigation * variety + (1 | field) #&gt; Data: irrigation #&gt; #&gt; REML criterion at convergence: 45.4 #&gt; #&gt; Scaled residuals: #&gt; Min 1Q Median 3Q Max #&gt; -0.7448 -0.5509 0.0000 0.5509 0.7448 #&gt; #&gt; Random effects: #&gt; Groups Name Variance Std.Dev. #&gt; field (Intercept) 16.200 4.025 #&gt; Residual 2.107 1.452 #&gt; Number of obs: 16, groups: field, 8 #&gt; #&gt; Fixed effects: #&gt; Estimate Std. Error df t value Pr(&gt;|t|) #&gt; (Intercept) 38.500 3.026 4.487 12.725 0.000109 *** #&gt; irrigationi2 1.200 4.279 4.487 0.280 0.791591 #&gt; irrigationi3 0.700 4.279 4.487 0.164 0.877156 #&gt; irrigationi4 3.500 4.279 4.487 0.818 0.454584 #&gt; varietyv2 0.600 1.452 4.000 0.413 0.700582 #&gt; irrigationi2:varietyv2 -0.400 2.053 4.000 -0.195 0.855020 #&gt; irrigationi3:varietyv2 -0.200 2.053 4.000 -0.097 0.927082 #&gt; irrigationi4:varietyv2 1.200 2.053 4.000 0.584 0.590265 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Correlation of Fixed Effects: #&gt; (Intr) irrgt2 irrgt3 irrgt4 vrtyv2 irr2:2 irr3:2 #&gt; irrigation2 -0.707 #&gt; irrigation3 -0.707 0.500 #&gt; irrigation4 -0.707 0.500 0.500 #&gt; varietyv2 -0.240 0.170 0.170 0.170 #&gt; irrgtn2:vr2 0.170 -0.240 -0.120 -0.120 -0.707 #&gt; irrgtn3:vr2 0.170 -0.120 -0.240 -0.120 -0.707 0.500 #&gt; irrgtn4:vr2 0.170 -0.120 -0.120 -0.240 -0.707 0.500 0.500 anova(sp_model,ddf = c(&quot;Kenward-Roger&quot;)) #&gt; Type III Analysis of Variance Table with Kenward-Roger&#39;s method #&gt; Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) #&gt; irrigation 2.4545 0.81818 3 4 0.3882 0.7685 #&gt; variety 2.2500 2.25000 1 4 1.0676 0.3599 #&gt; irrigation:variety 1.5500 0.51667 3 4 0.2452 0.8612 Since p-value of the interaction term is insignificant, we consider fitting without it. library(lme4) sp_model_additive &lt;- lmer(yield ~ irrigation + variety + (1 | field), irrigation) anova(sp_model_additive,sp_model,ddf = &quot;Kenward-Roger&quot;) #&gt; Data: irrigation #&gt; Models: #&gt; sp_model_additive: yield ~ irrigation + variety + (1 | field) #&gt; sp_model: yield ~ irrigation * variety + (1 | field) #&gt; npar AIC BIC logLik deviance Chisq Df Pr(&gt;Chisq) #&gt; sp_model_additive 7 83.959 89.368 -34.980 69.959 #&gt; sp_model 10 88.609 96.335 -34.305 68.609 1.3503 3 0.7172 Since p-value of Chi-square test is insignificant, we can’t reject the additive model is already sufficient. Looking at AIC and BIC, we can also see that we would prefer the additive model Random Effect Examination exactRLRT test \\(H_0\\): Var(random effect) (i.e., \\(\\sigma^2\\))= 0 \\(H_a\\): Var(random effect) (i.e., \\(\\sigma^2\\)) &gt; 0 sp_model &lt;- lme4::lmer(yield ~ irrigation * variety + (1 | field), irrigation) library(RLRsim) exactRLRT(sp_model) #&gt; #&gt; simulated finite sample distribution of RLRT. #&gt; #&gt; (p-value based on 10000 simulated values) #&gt; #&gt; data: #&gt; RLRT = 6.1118, p-value = 0.0097 Since the p-value is significant, we reject \\(H_0\\) "],["repeated-measures-in-mixed-models.html", "8.6 Repeated Measures in Mixed Models", " 8.6 Repeated Measures in Mixed Models \\[ Y_{ijk} = \\mu + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\delta_{i(k)}+ \\epsilon_{ijk} \\] where i-th group (fixed) j-th (repeated measure) time effect (fixed) k-th subject \\(\\delta_{i(k)} \\sim N(0,\\sigma^2_\\delta)\\) (k-th subject in the i-th group) and \\(\\epsilon_{ijk} \\sim N(0,\\sigma^2)\\) (independent error) are random effects (\\(i = 1,..,n_A, j = 1,..,n_B, k = 1,...,n_i\\)) hence, the variance-covariance matrix of the repeated observations on the k-th subject of the i-th group, \\(\\mathbf{Y}_{ik} = (Y_{i1k},..,Y_{in_Bk})&#39;\\), will be \\[ \\begin{aligned} \\mathbf{\\Sigma}_{subject} &amp;= \\left( \\begin{array} {cccc} \\sigma^2_\\delta + \\sigma^2 &amp; \\sigma^2_\\delta &amp; ... &amp; \\sigma^2_\\delta \\\\ \\sigma^2_\\delta &amp; \\sigma^2_\\delta +\\sigma^2 &amp; ... &amp; \\sigma^2_\\delta \\\\ . &amp; . &amp; . &amp; . \\\\ \\sigma^2_\\delta &amp; \\sigma^2_\\delta &amp; ... &amp; \\sigma^2_\\delta + \\sigma^2 \\\\ \\end{array} \\right) \\\\ &amp;= (\\sigma^2_\\delta + \\sigma^2) \\left( \\begin{array} {cccc} 1 &amp; \\rho &amp; ... &amp; \\rho \\\\ \\rho &amp; 1 &amp; ... &amp; \\rho \\\\ . &amp; . &amp; . &amp; . \\\\ \\rho &amp; \\rho &amp; ... &amp; 1 \\\\ \\end{array} \\right) &amp; \\text{product of a scalar and a correlation matrix} \\end{aligned} \\] where \\(\\rho = \\frac{\\sigma^2_\\delta}{\\sigma^2_\\delta + \\sigma^2}\\), which is the compound symmetry structure that we discussed in Random-Intercepts Model But if you only have repeated measurements on the subject over time, AR(1) structure might be more appropriate Mixed model for a repeated measure \\[ Y_{ijk} = \\mu + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\epsilon_{ijk} \\] where \\(\\epsilon_{ijk}\\) combines random error of both the whole and subplots. In general, \\[ \\mathbf{Y = X \\beta + \\epsilon} \\] where \\(\\epsilon \\sim N(0, \\sigma^2 \\mathbf{\\Sigma})\\) where \\(\\mathbf{\\Sigma}\\) is block diagonal if the random error covariance is the same for each subject The variance covariance matrix with AR(1) structure is \\[ \\mathbf{\\Sigma}_{subject} = \\sigma^2 \\left( \\begin{array} {ccccc} 1 &amp; \\rho &amp; \\rho^2 &amp; ... &amp; \\rho^{n_B-1} \\\\ \\rho &amp; 1 &amp; \\rho &amp; ... &amp; \\rho^{n_B-2} \\\\ . &amp; . &amp; . &amp; . &amp; . \\\\ \\rho^{n_B-1} &amp; \\rho^{n_B-2} &amp; \\rho^{n_B-3} &amp; ... &amp; 1 \\\\ \\end{array} \\right) \\] Hence, the mixed model for a repeated measure can be written as \\[ Y_{ijk} = \\mu + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\epsilon_{ijk} \\] where \\(\\epsilon_{ijk}\\) = random error of whole and subplots Generally, \\[ \\mathbf{Y = X \\beta + \\epsilon} \\] where \\(\\epsilon \\sim N(0, \\mathbf{\\sigma^2 \\Sigma})\\) and \\(\\Sigma\\) = block diagonal if the random error covariance is the same for each subject. "],["unbalanced-or-unequally-spaced-data.html", "8.7 Unbalanced or Unequally Spaced Data", " 8.7 Unbalanced or Unequally Spaced Data Consider the model \\[ Y_{ikt} = \\beta_0 + \\beta_{0i} + \\beta_{1}t + \\beta_{1i}t + \\beta_{2} t^2 + \\beta_{2i} t^2 + \\epsilon_{ikt} \\] where i = 1,2 (groups) \\(k = 1,…, n_i\\) ( individuals) \\(t = (t_1,t_2,t_3,t_4)\\) (times) \\(\\beta_{2i}\\) = common quadratic term \\(\\beta_{1i}\\) = common linear time trends \\(\\beta_{0i}\\) = common intercepts Then, we assume the variance-covariance matrix of the repeated measurements collected on a particular subject over time has the form \\[ \\mathbf{\\Sigma}_{ik} = \\sigma^2 \\left( \\begin{array} {cccc} 1 &amp; \\rho^{t_2-t_1} &amp; \\rho^{t_3-t_1} &amp; \\rho^{t_4-t_1} \\\\ \\rho^{t_2-t_1} &amp; 1 &amp; \\rho^{t_3-t_2} &amp; \\rho^{t_4-t_2} \\\\ \\rho^{t_3-t_1} &amp; \\rho^{t_3-t_2} &amp; 1 &amp; \\rho^{t_4-t_3} \\\\ \\rho^{t_4-t_1} &amp; \\rho^{t_4-t_2} &amp; \\rho^{t_4-t_3} &amp; 1 \\end{array} \\right) \\] which is called “power” covariance model We can consider \\(\\beta_{2i} , \\beta_{1i}, \\beta_{0i}\\) accordingly to see whether these terms are needed in the final model "],["application-5.html", "8.8 Application", " 8.8 Application R Packages for mixed models nlme has nested structure flexible for complex design not user-friendly lme4 computationally efficient user-friendly can handle nonnormal response for more detailed application, check Fitting Linear Mixed-Effects Models Using lme4 Others Bayesian setting: MCMCglmm, brms For genetics: ASReml 8.8.1 Example 1 (Pulps) Model: \\[ y_{ij} = \\mu + \\alpha_i + \\epsilon_{ij} \\] where \\(i = 1,..,a\\) groups for random effect \\(\\alpha_i\\) \\(j = 1,...,n\\) individuals in each group \\(\\alpha_i \\sim N(0, \\sigma^2_\\alpha)\\) is random effects \\(\\epsilon_{ij} \\sim N(0, \\sigma^2_\\epsilon)\\) is random effects Imply compound symmetry model where the intraclass correlation coefficient is: \\(\\rho = \\frac{\\sigma^2_\\alpha}{\\sigma^2_\\alpha + \\sigma^2_\\epsilon}\\) If factor \\(a\\) does not explain much variation, low correlation within the levels: \\(\\sigma^2_\\alpha \\to 0\\) then \\(\\rho \\to 0\\) If factor \\(a\\) explain much variation, high correlation within the levels \\(\\sigma^2_\\alpha \\to \\infty\\) hence, \\(\\rho \\to 1\\) data(pulp, package = &quot;faraway&quot;) plot( y = pulp$bright, x = pulp$operator, xlab = &quot;Operator&quot;, ylab = &quot;Brightness&quot; ) pulp %&gt;% dplyr::group_by(operator) %&gt;% dplyr::summarise(average = mean(bright)) #&gt; # A tibble: 4 × 2 #&gt; operator average #&gt; &lt;fct&gt; &lt;dbl&gt; #&gt; 1 a 60.2 #&gt; 2 b 60.1 #&gt; 3 c 60.6 #&gt; 4 d 60.7 lmer application library(lme4) mixed_model &lt;- lmer(formula = bright ~ 1 + (1 | operator), # pipe (i..e, | ) denotes random-effect terms data = pulp) summary(mixed_model) #&gt; Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ #&gt; lmerModLmerTest] #&gt; Formula: bright ~ 1 + (1 | operator) #&gt; Data: pulp #&gt; #&gt; REML criterion at convergence: 18.6 #&gt; #&gt; Scaled residuals: #&gt; Min 1Q Median 3Q Max #&gt; -1.4666 -0.7595 -0.1244 0.6281 1.6012 #&gt; #&gt; Random effects: #&gt; Groups Name Variance Std.Dev. #&gt; operator (Intercept) 0.06808 0.2609 #&gt; Residual 0.10625 0.3260 #&gt; Number of obs: 20, groups: operator, 4 #&gt; #&gt; Fixed effects: #&gt; Estimate Std. Error df t value Pr(&gt;|t|) #&gt; (Intercept) 60.4000 0.1494 3.0000 404.2 3.34e-08 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 coef(mixed_model) #&gt; $operator #&gt; (Intercept) #&gt; a 60.27806 #&gt; b 60.14088 #&gt; c 60.56767 #&gt; d 60.61340 #&gt; #&gt; attr(,&quot;class&quot;) #&gt; [1] &quot;coef.mer&quot; fixef(mixed_model) # fixed effects #&gt; (Intercept) #&gt; 60.4 confint(mixed_model) # confidence interval #&gt; 2.5 % 97.5 % #&gt; .sig01 0.000000 0.6178987 #&gt; .sigma 0.238912 0.4821845 #&gt; (Intercept) 60.071299 60.7287012 ranef(mixed_model) # random effects #&gt; $operator #&gt; (Intercept) #&gt; a -0.1219403 #&gt; b -0.2591231 #&gt; c 0.1676679 #&gt; d 0.2133955 #&gt; #&gt; with conditional variances for &quot;operator&quot; VarCorr(mixed_model) # random effects standard deviation #&gt; Groups Name Std.Dev. #&gt; operator (Intercept) 0.26093 #&gt; Residual 0.32596 re_dat = as.data.frame(VarCorr(mixed_model)) rho = re_dat[1, &#39;vcov&#39;] / (re_dat[1, &#39;vcov&#39;] + re_dat[2, &#39;vcov&#39;]) # rho based on the above formula rho #&gt; [1] 0.3905354 To Satterthwaite approximation for the denominator df, we use lmerTest library(lmerTest) summary(lmerTest::lmer(bright ~ 1 + (1 | operator), pulp))$coefficients #&gt; Estimate Std. Error df t value Pr(&gt;|t|) #&gt; (Intercept) 60.4 0.1494434 3 404.1664 3.340265e-08 confint(mixed_model)[3,] #&gt; 2.5 % 97.5 % #&gt; 60.0713 60.7287 In this example, we can see that the confidence interval computed by confint in lmer package is very close is confint in lmerTest model. MCMglmm application under the Bayesian framework library(MCMCglmm) mixed_model_bayes &lt;- MCMCglmm(bright~1,random=~operator, data=pulp, verbose=FALSE) summary(mixed_model_bayes)$solutions #&gt; post.mean l-95% CI u-95% CI eff.samp pMCMC #&gt; (Intercept) 60.40297 60.17655 60.65777 750.1806 0.001 this method offers the confidence interval slightly more positive than lmer and lmerTest 8.8.1.1 Prediction # random effects prediction (BLUPs) ranef(mixed_model)$operator #&gt; (Intercept) #&gt; a -0.1219403 #&gt; b -0.2591231 #&gt; c 0.1676679 #&gt; d 0.2133955 fixef(mixed_model) + ranef(mixed_model)$operator #prediction for each categories #&gt; (Intercept) #&gt; a 60.27806 #&gt; b 60.14088 #&gt; c 60.56767 #&gt; d 60.61340 predict(mixed_model, newdata=data.frame(operator=c(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;))) # equivalent to the above method #&gt; 1 2 3 4 #&gt; 60.27806 60.14088 60.56767 60.61340 use bootMer() to get bootstrap-based confidence intervals for predictions. Another example using GLMM in the context of blocking Penicillin data data(penicillin, package = &quot;faraway&quot;) summary(penicillin) #&gt; treat blend yield #&gt; A:5 Blend1:4 Min. :77 #&gt; B:5 Blend2:4 1st Qu.:81 #&gt; C:5 Blend3:4 Median :87 #&gt; D:5 Blend4:4 Mean :86 #&gt; Blend5:4 3rd Qu.:89 #&gt; Max. :97 library(ggplot2) ggplot(penicillin, aes( y = yield, x = treat, shape = blend, color = blend )) + # treatment = fixed effect, blend = random effects geom_point(size = 3) + xlab(&quot;Treatment&quot;) library(lmerTest) # for p-values mixed_model &lt;- lmerTest::lmer(yield ~ treat + (1 | blend), data = penicillin) summary(mixed_model) #&gt; Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ #&gt; lmerModLmerTest] #&gt; Formula: yield ~ treat + (1 | blend) #&gt; Data: penicillin #&gt; #&gt; REML criterion at convergence: 103.8 #&gt; #&gt; Scaled residuals: #&gt; Min 1Q Median 3Q Max #&gt; -1.4152 -0.5017 -0.1644 0.6830 1.2836 #&gt; #&gt; Random effects: #&gt; Groups Name Variance Std.Dev. #&gt; blend (Intercept) 11.79 3.434 #&gt; Residual 18.83 4.340 #&gt; Number of obs: 20, groups: blend, 5 #&gt; #&gt; Fixed effects: #&gt; Estimate Std. Error df t value Pr(&gt;|t|) #&gt; (Intercept) 84.000 2.475 11.075 33.941 1.51e-12 *** #&gt; treatB 1.000 2.745 12.000 0.364 0.7219 #&gt; treatC 5.000 2.745 12.000 1.822 0.0935 . #&gt; treatD 2.000 2.745 12.000 0.729 0.4802 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Correlation of Fixed Effects: #&gt; (Intr) treatB treatC #&gt; treatB -0.555 #&gt; treatC -0.555 0.500 #&gt; treatD -0.555 0.500 0.500 #The BLUPs for the each blend ranef(mixed_model)$blend #&gt; (Intercept) #&gt; Blend1 4.2878788 #&gt; Blend2 -2.1439394 #&gt; Blend3 -0.7146465 #&gt; Blend4 1.4292929 #&gt; Blend5 -2.8585859 Examine treatment effect anova(mixed_model) # p-value based on lmerTest #&gt; Type III Analysis of Variance Table with Satterthwaite&#39;s method #&gt; Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) #&gt; treat 70 23.333 3 12 1.2389 0.3387 Since the p-value is greater than 0.05, we can’t reject the null hypothesis that there is no treatment effect. library(pbkrtest) full_model &lt;- lmer(yield ~ treat + (1 | blend), penicillin, REML=FALSE) #REML is not appropriate for testing fixed effects, it should be ML null_model &lt;- lmer(yield ~ 1 + (1 | blend), penicillin, REML=FALSE) KRmodcomp(full_model, null_model) # use Kenward-Roger approximation for df #&gt; large : yield ~ treat + (1 | blend) #&gt; small : yield ~ 1 + (1 | blend) #&gt; stat ndf ddf F.scaling p.value #&gt; Ftest 1.2389 3.0000 12.0000 1 0.3387 Since the p-value is greater than 0.05, and consistent with our previous observation, we conclude that we can’t reject the null hypothesis that there is no treatment effect. 8.8.2 Example 2 (Rats) rats &lt;- read.csv( &quot;images/rats.dat&quot;, header = F, sep = &#39; &#39;, col.names = c(&#39;Treatment&#39;, &#39;rat&#39;, &#39;age&#39;, &#39;y&#39;) ) rats$t &lt;- log(1 + (rats$age - 45)/10) #log transformed age We are interested in whether treatment effect induces changes over time. rat_model &lt;- lmerTest::lmer(y~t:Treatment+(1|rat),data=rats) #treatment = fixed effect, rat = random effects summary(rat_model) #&gt; Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ #&gt; lmerModLmerTest] #&gt; Formula: y ~ t:Treatment + (1 | rat) #&gt; Data: rats #&gt; #&gt; REML criterion at convergence: 932.4 #&gt; #&gt; Scaled residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.25574 -0.65898 -0.01163 0.58356 2.88309 #&gt; #&gt; Random effects: #&gt; Groups Name Variance Std.Dev. #&gt; rat (Intercept) 3.565 1.888 #&gt; Residual 1.445 1.202 #&gt; Number of obs: 252, groups: rat, 50 #&gt; #&gt; Fixed effects: #&gt; Estimate Std. Error df t value Pr(&gt;|t|) #&gt; (Intercept) 68.6074 0.3312 89.0275 207.13 &lt;2e-16 *** #&gt; t:Treatmentcon 7.3138 0.2808 247.2762 26.05 &lt;2e-16 *** #&gt; t:Treatmenthig 6.8711 0.2276 247.7097 30.19 &lt;2e-16 *** #&gt; t:Treatmentlow 7.5069 0.2252 247.5196 33.34 &lt;2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Correlation of Fixed Effects: #&gt; (Intr) t:Trtmntc t:Trtmnth #&gt; t:Tretmntcn -0.327 #&gt; t:Tretmnthg -0.340 0.111 #&gt; t:Tretmntlw -0.351 0.115 0.119 anova(rat_model) #&gt; Type III Analysis of Variance Table with Satterthwaite&#39;s method #&gt; Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F) #&gt; t:Treatment 3181.9 1060.6 3 223.21 734.11 &lt; 2.2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Since the p-value is significant, we can be confident concluding that there is a treatment effect 8.8.3 Example 3 (Agridat) library(agridat) library(latticeExtra) dat &lt;- harris.wateruse # Compare to Schabenberger &amp; Pierce, fig 7.23 useOuterStrips( xyplot( water ~ day | species * age, dat, as.table = TRUE, group = tree, type = c(&#39;p&#39;, &#39;smooth&#39;), main = &quot;harris.wateruse 2 species, 2 ages (10 trees each)&quot; ) ) Remove outliers dat &lt;- subset(dat, day!=268) Plot between age and species xyplot( water ~ day | tree, dat, subset = age == &quot;A2&quot; &amp; species == &quot;S2&quot;, as.table = TRUE, type = c(&#39;p&#39;, &#39;smooth&#39;), ylab = &quot;Water use profiles of individual trees&quot;, main = &quot;harris.wateruse (Age 2, Species 2)&quot; ) # Rescale day for nicer output, and convergence issues, add quadratic term dat &lt;- transform(dat, ti = day / 100) dat &lt;- transform(dat, ti2 = ti * ti) # Start with a subgroup: age 2, species 2 d22 &lt;- droplevels(subset(dat, age == &quot;A2&quot; &amp; species == &quot;S2&quot;)) lme function from nlme package library(nlme) ## We use pdDiag() to get uncorrelated random effects m1n &lt;- lme( water ~ 1 + ti + ti2, #intercept, time and time-squared = fixed effects data = d22, na.action = na.omit, random = list(tree = pdDiag( ~ 1 + ti + ti2)) # random intercept, time and time squared per tree = random effects ) ranef(m1n) #&gt; (Intercept) ti ti2 #&gt; T04 0.1985796 1.609864e-09 4.990101e-10 #&gt; T05 0.3492827 2.487690e-10 -4.845287e-11 #&gt; T19 -0.1978989 -7.681202e-10 -1.961453e-10 #&gt; T23 0.4519003 -3.270426e-10 -2.413583e-10 #&gt; T38 -0.6457494 -1.608770e-09 -3.298010e-10 #&gt; T40 0.3739432 3.264705e-10 -2.543109e-11 #&gt; T49 0.8620648 9.021831e-10 -5.402247e-12 #&gt; T53 -0.5655049 -8.279040e-10 -4.579291e-11 #&gt; T67 -0.4394623 -3.485113e-10 2.147434e-11 #&gt; T71 -0.3871552 7.930610e-10 3.718993e-10 fixef(m1n) #&gt; (Intercept) ti ti2 #&gt; -10.798799 12.346704 -2.838503 summary(m1n) #&gt; Linear mixed-effects model fit by REML #&gt; Data: d22 #&gt; AIC BIC logLik #&gt; 276.5142 300.761 -131.2571 #&gt; #&gt; Random effects: #&gt; Formula: ~1 + ti + ti2 | tree #&gt; Structure: Diagonal #&gt; (Intercept) ti ti2 Residual #&gt; StdDev: 0.5187869 1.438333e-05 3.864019e-06 0.3836614 #&gt; #&gt; Fixed effects: water ~ 1 + ti + ti2 #&gt; Value Std.Error DF t-value p-value #&gt; (Intercept) -10.798799 0.8814666 227 -12.25094 0 #&gt; ti 12.346704 0.7827112 227 15.77428 0 #&gt; ti2 -2.838503 0.1720614 227 -16.49704 0 #&gt; Correlation: #&gt; (Intr) ti #&gt; ti -0.979 #&gt; ti2 0.970 -0.997 #&gt; #&gt; Standardized Within-Group Residuals: #&gt; Min Q1 Med Q3 Max #&gt; -3.07588246 -0.58531056 0.01210209 0.65402695 3.88777402 #&gt; #&gt; Number of Observations: 239 #&gt; Number of Groups: 10 lmer function from lme4 package m1lmer &lt;- lmer(water ~ 1 + ti + ti2 + (ti + ti2 || tree), data = d22, na.action = na.omit) ranef(m1lmer) #&gt; $tree #&gt; (Intercept) ti ti2 #&gt; T04 0.1985796 0 0 #&gt; T05 0.3492827 0 0 #&gt; T19 -0.1978989 0 0 #&gt; T23 0.4519003 0 0 #&gt; T38 -0.6457494 0 0 #&gt; T40 0.3739432 0 0 #&gt; T49 0.8620648 0 0 #&gt; T53 -0.5655049 0 0 #&gt; T67 -0.4394623 0 0 #&gt; T71 -0.3871552 0 0 #&gt; #&gt; with conditional variances for &quot;tree&quot; Notes: || double pipes= uncorrelated random effects To remove the intercept term: (0+ti|tree) (ti-1|tree) fixef(m1lmer) #&gt; (Intercept) ti ti2 #&gt; -10.798799 12.346704 -2.838503 m1l &lt;- lmer(water ~ 1 + ti + ti2 + (1 | tree) + (0 + ti | tree) + (0 + ti2 | tree), data = d22) ranef(m1l) #&gt; $tree #&gt; (Intercept) ti ti2 #&gt; T04 0.1985796 0 0 #&gt; T05 0.3492827 0 0 #&gt; T19 -0.1978989 0 0 #&gt; T23 0.4519003 0 0 #&gt; T38 -0.6457494 0 0 #&gt; T40 0.3739432 0 0 #&gt; T49 0.8620648 0 0 #&gt; T53 -0.5655049 0 0 #&gt; T67 -0.4394623 0 0 #&gt; T71 -0.3871552 0 0 #&gt; #&gt; with conditional variances for &quot;tree&quot; fixef(m1l) #&gt; (Intercept) ti ti2 #&gt; -10.798799 12.346704 -2.838503 To include structured covariance terms, we can use the following way m2n &lt;- lme( water ~ 1 + ti + ti2, data = d22, random = ~ 1 | tree, cor = corExp(form = ~ day | tree), na.action = na.omit ) ranef(m2n) #&gt; (Intercept) #&gt; T04 0.1929971 #&gt; T05 0.3424631 #&gt; T19 -0.1988495 #&gt; T23 0.4538660 #&gt; T38 -0.6413664 #&gt; T40 0.3769378 #&gt; T49 0.8410043 #&gt; T53 -0.5528236 #&gt; T67 -0.4452930 #&gt; T71 -0.3689358 fixef(m2n) #&gt; (Intercept) ti ti2 #&gt; -11.223310 12.712094 -2.913682 summary(m2n) #&gt; Linear mixed-effects model fit by REML #&gt; Data: d22 #&gt; AIC BIC logLik #&gt; 263.3081 284.0911 -125.654 #&gt; #&gt; Random effects: #&gt; Formula: ~1 | tree #&gt; (Intercept) Residual #&gt; StdDev: 0.5154042 0.3925777 #&gt; #&gt; Correlation Structure: Exponential spatial correlation #&gt; Formula: ~day | tree #&gt; Parameter estimate(s): #&gt; range #&gt; 3.794624 #&gt; Fixed effects: water ~ 1 + ti + ti2 #&gt; Value Std.Error DF t-value p-value #&gt; (Intercept) -11.223310 1.0988725 227 -10.21348 0 #&gt; ti 12.712094 0.9794235 227 12.97916 0 #&gt; ti2 -2.913682 0.2148551 227 -13.56115 0 #&gt; Correlation: #&gt; (Intr) ti #&gt; ti -0.985 #&gt; ti2 0.976 -0.997 #&gt; #&gt; Standardized Within-Group Residuals: #&gt; Min Q1 Med Q3 Max #&gt; -3.04861039 -0.55703950 0.00278101 0.62558762 3.80676991 #&gt; #&gt; Number of Observations: 239 #&gt; Number of Groups: 10 "],["nonlinear-and-generalized-linear-mixed-models.html", "Chapter 9 Nonlinear and Generalized Linear Mixed Models", " Chapter 9 Nonlinear and Generalized Linear Mixed Models NLMMs extend the nonlinear model to include both fixed effects and random effects GLMMs extend the generalized linear model to include both fixed effects and random effects. A nonlinear mixed model has the form of \\[ Y_{ij} = f(\\mathbf{x_{ij} , \\theta, \\alpha_i}) + \\epsilon_{ij} \\] for the j-th response from cluster (or subject) i (\\(i = 1,...,n\\)), where \\(j = 1,...,n_i\\) \\(\\mathbf{\\theta}\\) are the fixed effects \\(\\mathbf{\\alpha}_i\\) are the random effects for cluster i \\(\\mathbf{x}_{ij}\\) are the regressors or design variables \\(f(.)\\) is nonlinear mean response function A GLMM can be written as: we assume \\[ y_i |\\alpha_i \\sim \\text{indep } f(y_i | \\alpha) \\] and \\(f(y_i | \\mathbf{\\alpha})\\) is an exponential family distribution, \\[ f(y_i | \\alpha) = \\exp [\\frac{y_i \\theta_i - b(\\theta_i)}{a(\\phi)} - c(y_i, \\phi)] \\] The conditional mean of \\(y_i\\) is related to \\(\\theta_i\\) \\[ \\mu_i = \\frac{\\partial b(\\theta_i)}{\\partial \\theta_i} \\] The transformation of this mean will give us the desired linear model to model both the fixed and random effects. \\[ E(y_i |\\alpha) = \\mu_i \\\\ g(\\mu_i) = \\mathbf{x_i&#39; \\beta + z&#39;_i \\alpha} \\] where \\(g()\\) is a known link function and \\(\\mu_i\\) is the conditional mean. We can see similarity to GLM We also have to specify the random effects distribution \\[ \\alpha \\sim f(\\alpha) \\] which is similar to the specification for mixed models. Moreover, law of large number applies to fixed effects so that you know it is a normal distribution. But here, you can specify \\(\\alpha\\) subjectively. Hence, we can show NLMM is a special case of the GLMM \\[ \\mathbf{Y}_i = \\mathbf{f}(\\mathbf{x}_i, \\mathbf{\\theta, \\alpha}_i) + \\mathbf{\\epsilon}_i \\\\ \\mathbf{Y}_i = \\mathbf{g}^{-1} (\\mathbf{x}_i&#39; \\beta + \\mathbf{z}_i&#39; \\mathbf{\\alpha}_i) + \\mathbf{\\epsilon}_i \\] where the inverse link function corresponds to a nonlinear transformation of the fixed and random effects. Note: we can’t derive the analytical formulation of the marginal distribution because nonlinear combination of normal variables is not normally distributed, even in the case of additive error (\\(e_i\\)) and random effects (\\(\\alpha_i\\)) are both normal. Consequences of having random effects The marginal mean of \\(y_i\\) is \\[ E(y_i) = E_\\alpha(E(y_i | \\alpha)) = E_\\alpha (\\mu_i) = E(g^{-1}(\\mathbf{x_i&#39; \\beta + z_i&#39; \\alpha})) \\] Because \\(g^{-1}()\\) is nonlinear, this is the most simplified version we can go for. In special cases such as log link (\\(g(\\mu) = \\log \\mu\\) or \\(g^{-1}() = \\exp()\\)) then \\[ E(y_i) = E(\\exp(\\mathbf{x_i&#39; \\beta + z_i&#39; \\alpha})) = \\exp(\\mathbf{x&#39;_i \\beta})E(\\exp(\\mathbf{z}_i&#39;\\alpha)) \\] which is the moment generating function of \\(\\alpha\\) evaluated at \\(\\mathbf{z}_i\\) Marginal variance of \\(y_i\\) \\[ \\begin{aligned} var(y_i) &amp;= var_\\alpha (E(y_i | \\alpha)) + E_\\alpha (var(y_i | \\alpha)) \\\\ &amp;= var(\\mu_i) + E(a(\\phi) V(\\mu_i)) \\\\ &amp;= var(g^{-1} (\\mathbf{x&#39;_i \\beta + z&#39;_i \\alpha})) + E(a(\\phi)V(g^{-1} (\\mathbf{x&#39;_i \\beta + z&#39;_i \\alpha}))) \\end{aligned} \\] Without specific assumption about \\(g()\\) and/or the conditional distribution of \\(\\mathbf{y}\\), this is the most simplified version. Marginal covariance of \\(\\mathbf{y}\\) In a linear mixed model, random effects introduce a dependence among observations which share any random effect in common \\[ \\begin{aligned} cov(y_i, y_j) &amp;= cov_{\\alpha}(E(y_i | \\mathbf{\\alpha}),E(y_j | \\mathbf{\\alpha})) + E_{\\alpha}(cov(y_i, y_j | \\mathbf{\\alpha})) \\\\ &amp;= cov(\\mu_i, \\mu_j) + E(0) \\\\ &amp;= cov(g^{-1}(\\mathbf{x}_i&#39; \\beta + \\mathbf{z}_i&#39; \\mathbf{\\alpha}), g^{-1}(\\mathbf{x}&#39;_j \\beta + \\mathbf{z}_j&#39; \\mathbf{\\alpha})) \\end{aligned} \\] Important: conditioning to induce the covariability Example: Repeated measurements on the subjects. Let \\(y_{ij}\\) be the j-th count taken on the i-th subject. then, the model is \\(y_{ij} | \\mathbf{\\alpha} \\sim \\text{indep } Pois(\\mu_{ij})\\). Here \\[ \\log(\\mu_{ij}) = \\mathbf{x}_{ij}&#39; \\beta + \\alpha_i \\] where \\(\\alpha_i \\sim iid N(0,\\sigma^2_{\\alpha})\\) which is a log-link with a random patient effect. "],["estimation-3.html", "9.1 Estimation", " 9.1 Estimation In linear mixed models, the marginal likelihood for \\(\\mathbf{y}\\) is the integration of the random effects from the hierarchical formulation \\[ f(\\mathbf{y}) = \\int f(\\mathbf{y}| \\alpha) f(\\alpha) d \\alpha \\] For linear mixed models, we assumed that the 2 component distributions were Gaussian with linear relationships, which implied the marginal distribution was also linear and Gaussian and allows us to solve this integral analytically. On the other hand, GLMMs, the distribution for \\(f(\\mathbf{y} | \\alpha)\\) is not Gaussian in general, and for NLMMs, the functional form between the mean response and the random (and fixed) effects is nonlinear. In both cases, we can’t perform the integral analytically, which means we have to solve it numerically and/or linearize the inverse link function. 9.1.1 Estimation by Numerical Integration The marginal likelihood is \\[ L(\\beta; \\mathbf{y}) = \\int f(\\mathbf{y} | \\alpha) f(\\alpha) d \\alpha \\] Estimation fo the fixed effects requires \\(\\frac{\\partial l}{\\partial \\beta}\\), where \\(l\\) is the log-likelihood One way to obtain the marginal inference is to numerically integrate out the random effects through numerical quadrature Laplace approximation Monte Carlo methods When the dimension of \\(\\mathbf{\\alpha}\\) is relatively low, this is easy. But when the dimension of \\(\\alpha\\) is high, additional approximation is required. 9.1.2 Estimation by Linearization Idea: Linearized version of the response (known as working response, or pseudo-response) called \\(\\tilde{y}_i\\) and then the conditional mean is \\[ E(\\tilde{y}_i | \\alpha) = \\mathbf{x}_i&#39; \\beta + \\mathbf{z}_i&#39; \\alpha \\] and also estimate \\(var(\\tilde{y}_i | \\alpha)\\). then, apply Linear Mixed Models estimation as usual. The difference is only in how the linearization is done (i.e., how to expand \\(f(\\mathbf{x, \\theta, \\alpha})\\) or the inverse link function 9.1.2.1 Penalized quasi-likelihood (PQL) This is the more popular method \\[ \\tilde{y}_i^{(k)} = \\hat{\\eta}_i^{(k-1)} + ( y_i - \\hat{\\mu}_i^{(k-1)})\\frac{d \\eta}{d \\mu}| \\hat{\\eta}_i^{(k-1)} \\] where \\(\\eta_i = g(\\mu_i)\\) is the linear predictor k = iteration of the optimization algorithm The algorithm updates \\(\\tilde{y}_i\\) after each linear mixed model fit using \\(E(\\tilde{y}_i | \\alpha)\\) and \\(var(\\tilde{y}_i | \\alpha)\\) Comments: Easy to implement Inference is only asymptotically correct due to the linearizaton Biased estimates are likely for binomial response with small groups and worst for Bernoulli response. Similarly for Poisson models with small counts. (Faraway 2016) Hypothesis testing and confidence intervals also have problems. 9.1.2.2 Generalized Estimating Equations (GEE) Let a marginal generalized linear model for the mean of y as a function of the predictors, which means we linearize the mean response function and assume a dependent error structure Example Binary data: \\[ logit (E(\\mathbf{y})) = \\mathbf{X} \\beta \\] If we assume a “working covariance matrix”, \\(\\mathbf{V}\\) the the elements of \\(\\mathbf{y}\\), then the maximum likelihood equations for estimating \\(\\beta\\) is \\[ \\mathbf{X&#39;V^{-1}y} = \\mathbf{X&#39;V^{-1}} E(\\mathbf{y}) \\] If \\(\\mathbf{V}\\) is correct, then unbiased estimating equations We typically define \\(\\mathbf{V} = \\mathbf{I}\\). Solutions to unbiased estimating equation give consistent estimators. In practice, we assume a covariance structure, and then do a logistic regression, and calculate its large sample variance Let \\(y_{ij} , j = 1,..,n_i, i = 1,..,K\\) be the j-th measurement on the i-th subject. \\[ \\mathbf{y}_i = \\left( \\begin{array} {c} y_{i1} \\\\ . \\\\ y_{in_i} \\end{array} \\right) \\] with mean \\[ \\mathbf{\\mu}_i = \\left( \\begin{array} {c} \\mu_{i1} \\\\ . \\\\ \\mu_{in_i} \\end{array} \\right) \\] and \\[ \\mathbf{x}_{ij} = \\left( \\begin{array} {c} X_{ij1} \\\\ . \\\\ X_{ijp} \\end{array} \\right) \\] Let \\(\\mathbf{V}_i = cov(\\mathbf{y}_i)\\), then based on(Liang and Zeger 1986) GEE estimates for \\(\\beta\\) can be obtained from solving the equation: \\[ S(\\beta) = \\sum_{i=1}^K \\frac{\\partial \\mathbf{\\mu}_i&#39;}{\\partial \\beta} \\mathbf{V}^{-1}(\\mathbf{y}_i - \\mathbf{\\mu}_i) = 0 \\] Let \\(\\mathbf{R}_i (\\mathbf{c})\\) be an \\(n_i \\times n_i\\) “working” correlation matrix specified up to some parameters \\(\\mathbf{c}\\). Then, \\(\\mathbf{V}_i = a(\\phi) \\mathbf{B}_i^{1/2}\\mathbf{R}(\\mathbf{c}) \\mathbf{B}_i^{1/2}\\), where \\(\\mathbf{B}_i\\) is an \\(n_i \\times n_i\\) diagonal matrix with \\(V(\\mu_{ij})\\) on the j-th diagonal If \\(\\mathbf{R}(\\mathbf{c})\\) is the true correlation matrix of \\(\\mathbf{y}_i\\), then \\(\\mathbf{V}_i\\) is the true covariance matrix The working correlation matrix must be estimated iteratively by a fitting algorithm: Compute the initial estimate of \\(\\beta\\) (using GLM under the independence assumption) Compute the working correlation matrix \\(\\mathbf{R}\\) based upon studentized residuals Compute the estimate covariance \\(\\hat{\\mathbf{V}}_i\\) Update \\(\\beta\\) according to \\[ \\beta_{r+1} = \\beta_r + (\\sum_{i=1}^K \\frac{\\partial \\mathbf{\\mu}&#39;_i}{\\partial \\beta} \\hat{\\mathbf{V}}_i^{-1} \\frac{\\partial \\mathbf{\\mu}_i}{\\partial \\beta}) \\] Iterate until the algorithm converges Note: Inference based on likelihoods is not appropriate because this is not a likelihood estimator 9.1.3 Estimation by Bayesian Hierarchical Models Bayesian Estimation \\[ f(\\mathbf{\\alpha}, \\mathbf{\\beta} | \\mathbf{y}) \\propto f(\\mathbf{y} | \\mathbf{\\alpha}, \\mathbf{\\beta}) f(\\mathbf{\\alpha})f(\\mathbf{\\beta}) \\] Numerical techniques (e.g., MCMC) can be used to find posterior distribution. This method is best in terms of not having to make simplifying approximation and fully accounting for uncertainty in estimation and prediction, but it could be complex, time-consuming, and computationally intensive. Implementation Issues: No valid joint distribution can be constructed from the given conditional model and random parameters The mean/ variance relationship and the random effects lead to constraints on the marginal covariance model Difficult to fit computationally 2 types of estimation approaches: Approximate the objective function (marginal likelihood) through integral approximation Laplace methods Quadrature methods Monte Carlo integration Approximate the model (based on Taylor series linearization) Packages in R GLMM: MASS:glmmPQL lme4::glmer glmmTMB NLMM: nlme::nlme; lme4::nlmer brms::brm Bayesian: MCMCglmm ; brms:brm Example: Non-Gaussian Repeated measurements When the data are Gaussian, then Linear Mixed Models When the data are non-Gaussian, then Nonlinear and Generalized Linear Mixed Models References "],["application-6.html", "9.2 Application", " 9.2 Application 9.2.1 Binomial (CBPP Data) data(cbpp,package = &quot;lme4&quot;) head(cbpp) #&gt; herd incidence size period #&gt; 1 1 2 14 1 #&gt; 2 1 3 12 2 #&gt; 3 1 4 9 3 #&gt; 4 1 0 5 4 #&gt; 5 2 3 22 1 #&gt; 6 2 1 18 2 PQL Pro: Linearizes the response to have a pseudo-response as the mean response (like LMM) computationally efficient Cons: biased for binary, Poisson data with small counts random effects have to be interpreted on the link scale can’t interpret AIC/BIC value library(MASS) pql_cbpp &lt;- glmmPQL( cbind(incidence, size - incidence) ~ period, random = ~ 1 | herd, data = cbpp, family = binomial(link = &quot;logit&quot;), verbose = F ) summary(pql_cbpp) #&gt; Linear mixed-effects model fit by maximum likelihood #&gt; Data: cbpp #&gt; AIC BIC logLik #&gt; NA NA NA #&gt; #&gt; Random effects: #&gt; Formula: ~1 | herd #&gt; (Intercept) Residual #&gt; StdDev: 0.5563535 1.184527 #&gt; #&gt; Variance function: #&gt; Structure: fixed weights #&gt; Formula: ~invwt #&gt; Fixed effects: cbind(incidence, size - incidence) ~ period #&gt; Value Std.Error DF t-value p-value #&gt; (Intercept) -1.327364 0.2390194 38 -5.553372 0.0000 #&gt; period2 -1.016126 0.3684079 38 -2.758156 0.0089 #&gt; period3 -1.149984 0.3937029 38 -2.920944 0.0058 #&gt; period4 -1.605217 0.5178388 38 -3.099839 0.0036 #&gt; Correlation: #&gt; (Intr) perid2 perid3 #&gt; period2 -0.399 #&gt; period3 -0.373 0.260 #&gt; period4 -0.282 0.196 0.182 #&gt; #&gt; Standardized Within-Group Residuals: #&gt; Min Q1 Med Q3 Max #&gt; -2.0591168 -0.6493095 -0.2747620 0.5170492 2.6187632 #&gt; #&gt; Number of Observations: 56 #&gt; Number of Groups: 15 exp(0.556) #&gt; [1] 1.743684 is how the herd specific outcome odds varies. We can interpret the fixed effect coefficients just like in GLM. Because we use logit link function here, we can say that the log odds of the probability of having a case in period 2 is -1.016 less than period 1 (baseline). summary(pql_cbpp)$tTable #&gt; Value Std.Error DF t-value p-value #&gt; (Intercept) -1.327364 0.2390194 38 -5.553372 2.333216e-06 #&gt; period2 -1.016126 0.3684079 38 -2.758156 8.888179e-03 #&gt; period3 -1.149984 0.3937029 38 -2.920944 5.843007e-03 #&gt; period4 -1.605217 0.5178388 38 -3.099839 3.637000e-03 Numerical Integration Pro: more accurate Con: computationally expensive won’t work for complex models. library(lme4) numint_cbpp &lt;- glmer( cbind(incidence, size - incidence) ~ period + (1 | herd), data = cbpp, family = binomial(link = &quot;logit&quot;) ) summary(numint_cbpp) #&gt; Generalized linear mixed model fit by maximum likelihood (Laplace #&gt; Approximation) [glmerMod] #&gt; Family: binomial ( logit ) #&gt; Formula: cbind(incidence, size - incidence) ~ period + (1 | herd) #&gt; Data: cbpp #&gt; #&gt; AIC BIC logLik deviance df.resid #&gt; 194.1 204.2 -92.0 184.1 51 #&gt; #&gt; Scaled residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.3816 -0.7889 -0.2026 0.5142 2.8791 #&gt; #&gt; Random effects: #&gt; Groups Name Variance Std.Dev. #&gt; herd (Intercept) 0.4123 0.6421 #&gt; Number of obs: 56, groups: herd, 15 #&gt; #&gt; Fixed effects: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) -1.3983 0.2312 -6.048 1.47e-09 *** #&gt; period2 -0.9919 0.3032 -3.272 0.001068 ** #&gt; period3 -1.1282 0.3228 -3.495 0.000474 *** #&gt; period4 -1.5797 0.4220 -3.743 0.000182 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Correlation of Fixed Effects: #&gt; (Intr) perid2 perid3 #&gt; period2 -0.363 #&gt; period3 -0.340 0.280 #&gt; period4 -0.260 0.213 0.198 For small data set, the difference between two approaches are minimal library(rbenchmark) benchmark( &quot;MASS&quot; = { pql_cbpp &lt;- glmmPQL( cbind(incidence, size - incidence) ~ period, random = ~ 1 | herd, data = cbpp, family = binomial(link = &quot;logit&quot;), verbose = F ) }, &quot;lme4&quot; = { glmer( cbind(incidence, size - incidence) ~ period + (1 | herd), data = cbpp, family = binomial(link = &quot;logit&quot;) ) }, replications = 50, columns = c(&quot;test&quot;, &quot;replications&quot;, &quot;elapsed&quot;, &quot;relative&quot;), order = &quot;relative&quot; ) #&gt; test replications elapsed relative #&gt; 1 MASS 50 3.43 1.00 #&gt; 2 lme4 50 6.21 1.81 In numerical integration, we can set nAGQ &gt; 1 to switch the method of likelihood evaluation, which might increase accuracy library(lme4) numint_cbpp_GH &lt;- glmer( cbind(incidence, size - incidence) ~ period + (1 | herd), data = cbpp, family = binomial(link = &quot;logit&quot;), nAGQ = 20 ) summary(numint_cbpp_GH)$coefficients[, 1] - summary(numint_cbpp)$coefficients[, 1] #&gt; (Intercept) period2 period3 period4 #&gt; -0.0008808634 0.0005160912 0.0004066218 0.0002644629 Bayesian approach to GLMMs assume the fixed effects parameters have distribution can handle models with intractable result under traditional methods computationally expensive library(MCMCglmm) Bayes_cbpp &lt;- MCMCglmm( cbind(incidence, size - incidence) ~ period, random = ~ herd, data = cbpp, family = &quot;multinomial2&quot;, verbose = FALSE ) summary(Bayes_cbpp) #&gt; #&gt; Iterations = 3001:12991 #&gt; Thinning interval = 10 #&gt; Sample size = 1000 #&gt; #&gt; DIC: 537.5268 #&gt; #&gt; G-structure: ~herd #&gt; #&gt; post.mean l-95% CI u-95% CI eff.samp #&gt; herd 0.006121 1.636e-16 0.02088 271 #&gt; #&gt; R-structure: ~units #&gt; #&gt; post.mean l-95% CI u-95% CI eff.samp #&gt; units 1.138 0.3625 2.143 349.5 #&gt; #&gt; Location effects: cbind(incidence, size - incidence) ~ period #&gt; #&gt; post.mean l-95% CI u-95% CI eff.samp pMCMC #&gt; (Intercept) -1.5384 -2.1512 -0.8681 874.0 &lt;0.001 *** #&gt; period2 -1.2650 -2.3351 -0.2939 749.6 0.012 * #&gt; period3 -1.4028 -2.3657 -0.1453 801.9 0.006 ** #&gt; period4 -1.9719 -3.1809 -0.6963 556.8 0.002 ** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 MCMCglmm fits a residual variance component (useful with dispersion issues) apply(Bayes_cbpp$VCV,2,sd) #explains less variability #&gt; herd units #&gt; 0.03983352 0.52169359 summary(Bayes_cbpp)$solutions #&gt; post.mean l-95% CI u-95% CI eff.samp pMCMC #&gt; (Intercept) -1.538390 -2.151216 -0.8681065 874.0309 0.001 #&gt; period2 -1.265045 -2.335091 -0.2939023 749.6249 0.012 #&gt; period3 -1.402763 -2.365737 -0.1453223 801.8498 0.006 #&gt; period4 -1.971879 -3.180906 -0.6962504 556.7658 0.002 interpret Bayesian “credible intervals” similarly to confidence intervals Make sure you make post-hoc diagnoses library(lattice) xyplot(as.mcmc(Bayes_cbpp$Sol), layout = c(2, 2)) There is no trend, well-mixed xyplot(as.mcmc(Bayes_cbpp$VCV),layout=c(2,1)) For the herd variable, a lot of them are 0, which suggests problem. To fix the instability in the herd effect sampling, we can either modify the prior distribution on the herd variation increases the number of iteration library(MCMCglmm) Bayes_cbpp2 &lt;- MCMCglmm( cbind(incidence, size - incidence) ~ period, random = ~ herd, data = cbpp, family = &quot;multinomial2&quot;, nitt = 20000, burnin = 10000, prior = list(G = list(list( V = 1, nu = .1 ))), verbose = FALSE ) xyplot(as.mcmc(Bayes_cbpp2$VCV), layout = c(2, 1)) To change the shape of priors, in MCMCglmm use: V controls for the location of the distribution (default = 1) nu controls for the concentration around V (default = 0) 9.2.2 Count (Owl Data) library(glmmTMB) library(dplyr) data(Owls, package = &quot;glmmTMB&quot;) Owls &lt;- Owls %&gt;% rename(Ncalls = SiblingNegotiation) In a typical Poisson model, \\(\\lambda\\) (Poisson mean), is model as \\(\\log(\\lambda) = \\mathbf{x&#39;\\beta}\\) But if the response is the rate (e.g., counts per BroodSize), we could model it as \\(\\log(\\lambda / b) = \\mathbf{x&#39;\\beta}\\) , equivalently \\(\\log(\\lambda) = \\log(b) + \\mathbf{x&#39;\\beta}\\) where \\(b\\) is BroodSize. Hence, we “offset” the mean by the log of this variable. owls_glmer &lt;- glmer( Ncalls ~ offset(log(BroodSize)) + FoodTreatment * SexParent + (1 | Nest), family = poisson, data = Owls ) summary(owls_glmer) #&gt; Generalized linear mixed model fit by maximum likelihood (Laplace #&gt; Approximation) [glmerMod] #&gt; Family: poisson ( log ) #&gt; Formula: Ncalls ~ offset(log(BroodSize)) + FoodTreatment * SexParent + #&gt; (1 | Nest) #&gt; Data: Owls #&gt; #&gt; AIC BIC logLik deviance df.resid #&gt; 5212.8 5234.8 -2601.4 5202.8 594 #&gt; #&gt; Scaled residuals: #&gt; Min 1Q Median 3Q Max #&gt; -3.5529 -1.7971 -0.6842 1.2689 11.4312 #&gt; #&gt; Random effects: #&gt; Groups Name Variance Std.Dev. #&gt; Nest (Intercept) 0.2063 0.4542 #&gt; Number of obs: 599, groups: Nest, 27 #&gt; #&gt; Fixed effects: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) 0.65585 0.09567 6.855 7.12e-12 *** #&gt; FoodTreatmentSatiated -0.65612 0.05606 -11.705 &lt; 2e-16 *** #&gt; SexParentMale -0.03705 0.04501 -0.823 0.4104 #&gt; FoodTreatmentSatiated:SexParentMale 0.13135 0.07036 1.867 0.0619 . #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Correlation of Fixed Effects: #&gt; (Intr) FdTrtS SxPrnM #&gt; FdTrtmntStt -0.225 #&gt; SexParentMl -0.292 0.491 #&gt; FdTrtmS:SPM 0.170 -0.768 -0.605 nest explains a relatively large proportion of the variability (its standard deviation is larger than some coefficients) the model fit isn’t great (deviance of 5202 on 594 df) # Negative binomial model owls_glmerNB &lt;- glmer.nb(Ncalls ~ offset(log(BroodSize)) + FoodTreatment * SexParent + (1 | Nest), data = Owls) c(Deviance = round(summary(owls_glmerNB)$AICtab[&quot;deviance&quot;], 3), df = summary(owls_glmerNB)$AICtab[&quot;df.resid&quot;]) #&gt; Deviance.deviance df.df.resid #&gt; 3483.616 593.000 There is an improvement using negative binomial considering over-dispersion hist(Owls$Ncalls,breaks=30) To account for too many 0s in these data, we can use zero-inflated Poisson (ZIP) model. glmmTMB can handle ZIP GLMMs since it adds automatic differentiation to existing estimation strategies. library(glmmTMB) owls_glmm &lt;- glmmTMB( Ncalls ~ FoodTreatment * SexParent + offset(log(BroodSize)) + (1 | Nest), ziformula = ~ 0, family = nbinom2(link = &quot;log&quot;), data = Owls ) owls_glmm_zi &lt;- glmmTMB( Ncalls ~ FoodTreatment * SexParent + offset(log(BroodSize)) + (1 | Nest), ziformula = ~ 1, family = nbinom2(link = &quot;log&quot;), data = Owls ) # Scale Arrival time to use as a covariate for zero-inflation parameter Owls$ArrivalTime &lt;- scale(Owls$ArrivalTime) owls_glmm_zi_cov &lt;- glmmTMB( Ncalls ~ FoodTreatment * SexParent + offset(log(BroodSize)) + (1 | Nest), ziformula = ~ ArrivalTime, family = nbinom2(link = &quot;log&quot;), data = Owls ) as.matrix(anova(owls_glmm, owls_glmm_zi)) #&gt; Df AIC BIC logLik deviance Chisq Chi Df #&gt; owls_glmm 6 3495.610 3521.981 -1741.805 3483.610 NA NA #&gt; owls_glmm_zi 7 3431.646 3462.413 -1708.823 3417.646 65.96373 1 #&gt; Pr(&gt;Chisq) #&gt; owls_glmm NA #&gt; owls_glmm_zi 4.592983e-16 as.matrix(anova(owls_glmm_zi,owls_glmm_zi_cov)) #&gt; Df AIC BIC logLik deviance Chisq Chi Df #&gt; owls_glmm_zi 7 3431.646 3462.413 -1708.823 3417.646 NA NA #&gt; owls_glmm_zi_cov 8 3422.532 3457.694 -1703.266 3406.532 11.11411 1 #&gt; Pr(&gt;Chisq) #&gt; owls_glmm_zi NA #&gt; owls_glmm_zi_cov 0.0008567362 summary(owls_glmm_zi_cov) #&gt; Family: nbinom2 ( log ) #&gt; Formula: #&gt; Ncalls ~ FoodTreatment * SexParent + offset(log(BroodSize)) + (1 | Nest) #&gt; Zero inflation: ~ArrivalTime #&gt; Data: Owls #&gt; #&gt; AIC BIC logLik deviance df.resid #&gt; 3422.5 3457.7 -1703.3 3406.5 591 #&gt; #&gt; Random effects: #&gt; #&gt; Conditional model: #&gt; Groups Name Variance Std.Dev. #&gt; Nest (Intercept) 0.07487 0.2736 #&gt; Number of obs: 599, groups: Nest, 27 #&gt; #&gt; Dispersion parameter for nbinom2 family (): 2.22 #&gt; #&gt; Conditional model: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) 0.84778 0.09961 8.511 &lt; 2e-16 *** #&gt; FoodTreatmentSatiated -0.39529 0.13742 -2.877 0.00402 ** #&gt; SexParentMale -0.07025 0.10435 -0.673 0.50079 #&gt; FoodTreatmentSatiated:SexParentMale 0.12388 0.16449 0.753 0.45138 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Zero-inflation model: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) -1.3018 0.1261 -10.32 &lt; 2e-16 *** #&gt; ArrivalTime 0.3545 0.1074 3.30 0.000966 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 We can see ZIP GLMM with an arrival time covariate on the zero is best. arrival time has a positive effect on observing a nonzero number of calls interactions are non significant, the food treatment is significant (fewer calls after eating) nest variability is large in magnitude (without this, the parameter estimates change) 9.2.3 Binomial library(agridat) library(ggplot2) library(lme4) library(spaMM) data(gotway.hessianfly) dat &lt;- gotway.hessianfly dat$prop &lt;- dat$y / dat$n ggplot(dat, aes(x = lat, y = long, fill = prop)) + geom_tile() + scale_fill_gradient(low = &#39;white&#39;, high = &#39;black&#39;) + geom_text(aes(label = gen, color = block)) + ggtitle(&#39;Gotway Hessian Fly&#39;) Fixed effects (\\(\\beta\\)) = genotype Random effects (\\(\\alpha\\)) = block flymodel &lt;- glmer( cbind(y, n - y) ~ gen + (1 | block), data = dat, family = binomial, nAGQ = 5 ) summary(flymodel) #&gt; Generalized linear mixed model fit by maximum likelihood (Adaptive #&gt; Gauss-Hermite Quadrature, nAGQ = 5) [glmerMod] #&gt; Family: binomial ( logit ) #&gt; Formula: cbind(y, n - y) ~ gen + (1 | block) #&gt; Data: dat #&gt; #&gt; AIC BIC logLik deviance df.resid #&gt; 162.2 198.9 -64.1 128.2 47 #&gt; #&gt; Scaled residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.38644 -1.01188 0.09631 1.03468 2.75479 #&gt; #&gt; Random effects: #&gt; Groups Name Variance Std.Dev. #&gt; block (Intercept) 0.001022 0.03196 #&gt; Number of obs: 64, groups: block, 4 #&gt; #&gt; Fixed effects: #&gt; Estimate Std. Error z value Pr(&gt;|z|) #&gt; (Intercept) 1.5035 0.3914 3.841 0.000122 *** #&gt; genG02 -0.1939 0.5302 -0.366 0.714644 #&gt; genG03 -0.5408 0.5103 -1.060 0.289260 #&gt; genG04 -1.4342 0.4714 -3.043 0.002346 ** #&gt; genG05 -0.2037 0.5429 -0.375 0.707486 #&gt; genG06 -0.9783 0.5046 -1.939 0.052533 . #&gt; genG07 -0.6041 0.5111 -1.182 0.237235 #&gt; genG08 -1.6774 0.4907 -3.418 0.000630 *** #&gt; genG09 -1.3984 0.4725 -2.960 0.003078 ** #&gt; genG10 -0.6817 0.5333 -1.278 0.201181 #&gt; genG11 -1.4630 0.4843 -3.021 0.002522 ** #&gt; genG12 -1.4591 0.4918 -2.967 0.003010 ** #&gt; genG13 -3.5528 0.6600 -5.383 7.31e-08 *** #&gt; genG14 -2.5073 0.5264 -4.763 1.90e-06 *** #&gt; genG15 -2.0872 0.4851 -4.302 1.69e-05 *** #&gt; genG16 -2.9697 0.5383 -5.517 3.46e-08 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Equivalently, we can use MCMCglmm , for a Bayesian approach library(coda) Bayes_flymodel &lt;- MCMCglmm( cbind(y, n - y) ~ gen , random = ~ block, data = dat, family = &quot;multinomial2&quot;, verbose = FALSE ) plot(Bayes_flymodel$Sol[, 1], main = dimnames(Bayes_flymodel$Sol)[[2]][1]) autocorr.plot(Bayes_flymodel$Sol[,1],main=dimnames(Bayes_flymodel$Sol)[[2]][1]) 9.2.4 Example from (Schabenberger and Pierce 2001) section 8.4.1 dat2 &lt;- read.table(&quot;images/YellowPoplarData_r.txt&quot;) names(dat2) &lt;- c(&#39;tn&#39;, &#39;k&#39;, &#39;dbh&#39;, &#39;totht&#39;, &#39;dob&#39;, &#39;ht&#39;, &#39;maxd&#39;, &#39;cumv&#39;) dat2$t &lt;- dat2$dob / dat2$dbh dat2$r &lt;- 1 - dat2$dob / dat2$totht The cumulative volume relates to the complementary diameter (subplots were created based on total tree height) library(ggplot2) library(dplyr) dat2 &lt;- dat2 %&gt;% group_by(tn) %&gt;% mutate( z = case_when( totht &lt; 74 &amp; totht &gt;= 0 ~ &#39;a: 0-74ft&#39;, totht &lt; 88 &amp; totht &gt;= 74 ~ &#39;b: 74-88&#39;, totht &lt; 95 &amp; totht &gt;= 88 ~ &#39;c: 88-95&#39;, totht &lt; 99 &amp; totht &gt;= 95 ~ &#39;d: 95-99&#39;, totht &lt; 104 &amp; totht &gt;= 99 ~ &#39;e: 99-104&#39;, totht &lt; 109 &amp; totht &gt;= 104 ~ &#39;f: 104-109&#39;, totht &lt; 115 &amp; totht &gt;= 109 ~ &#39;g: 109-115&#39;, totht &lt; 120 &amp; totht &gt;= 115 ~ &#39;h: 115-120&#39;, totht &lt; 140 &amp; totht &gt;= 120 ~ &#39;i: 120-150&#39;, ) ) ggplot(dat2, aes(x = r, y = cumv)) + geom_point(size = 0.5) + facet_wrap(vars(z)) The proposed non-linear model: \\[ V_{id_j} = (\\beta_0 + (\\beta_1 + b_{1i})\\frac{D^2_i H_i}{1000})(\\exp[-(\\beta_2 + b_{2i})t_{ij} \\exp(\\beta_3 t_{ij})]) + e_{ij} \\] where \\(b_{1i}, b_{2i}\\) are random effects \\(e_{ij}\\) are random errors library(nlme) tmp &lt;- nlme( cumv ~ (b0 + (b1 + u1) * (dbh * dbh * totht / 1000)) * (exp(-(b2 + u2) * (t / 1000) * exp(b3 * t))), data = dat2, fixed = b0 + b1 + b2 + b3 ~ 1, # 1 on the right hand side of the formula indicates a single fixed effects for the corresponding parameters random = list(pdDiag(u1 + u2 ~ 1)), #uncorrelated random effects groups = ~ tn, #group on trees so each tree w/ have u1 and u2 start = list(fixed = c( b0 = 0.25, b1 = 2.3, b2 = 2.87, b3 = 6.7 )) ) summary(tmp) #&gt; Nonlinear mixed-effects model fit by maximum likelihood #&gt; Model: cumv ~ (b0 + (b1 + u1) * (dbh * dbh * totht/1000)) * (exp(-(b2 + u2) * (t/1000) * exp(b3 * t))) #&gt; Data: dat2 #&gt; AIC BIC logLik #&gt; 31103.73 31151.33 -15544.86 #&gt; #&gt; Random effects: #&gt; Formula: list(u1 ~ 1, u2 ~ 1) #&gt; Level: tn #&gt; Structure: Diagonal #&gt; u1 u2 Residual #&gt; StdDev: 0.1508094 0.447829 2.226361 #&gt; #&gt; Fixed effects: b0 + b1 + b2 + b3 ~ 1 #&gt; Value Std.Error DF t-value p-value #&gt; b0 0.249386 0.12894687 6297 1.9340 0.0532 #&gt; b1 2.288832 0.01266804 6297 180.6776 0.0000 #&gt; b2 2.500497 0.05606685 6297 44.5985 0.0000 #&gt; b3 6.848871 0.02140677 6297 319.9395 0.0000 #&gt; Correlation: #&gt; b0 b1 b2 #&gt; b1 -0.639 #&gt; b2 0.054 0.056 #&gt; b3 -0.011 -0.066 -0.850 #&gt; #&gt; Standardized Within-Group Residuals: #&gt; Min Q1 Med Q3 Max #&gt; -6.694575e+00 -3.081861e-01 -8.904304e-05 3.469469e-01 7.855665e+00 #&gt; #&gt; Number of Observations: 6636 #&gt; Number of Groups: 336 nlme::intervals(tmp) #&gt; Approximate 95% confidence intervals #&gt; #&gt; Fixed effects: #&gt; lower est. upper #&gt; b0 -0.003318061 0.2493855 0.5020892 #&gt; b1 2.264006036 2.2888322 2.3136584 #&gt; b2 2.390620340 2.5004973 2.6103743 #&gt; b3 6.806919342 6.8488713 6.8908232 #&gt; #&gt; Random Effects: #&gt; Level: tn #&gt; lower est. upper #&gt; sd(u1) 0.1376084 0.1508094 0.1652768 #&gt; sd(u2) 0.4056209 0.4478290 0.4944291 #&gt; #&gt; Within-group standard error: #&gt; lower est. upper #&gt; 2.187258 2.226361 2.266162 Little different from the book because of different implementation of nonlinear mixed models. library(cowplot) nlmmfn &lt;- function(fixed,rand,dbh,totht,t){ b0 &lt;- fixed[1] b1 &lt;- fixed[2] b2 &lt;- fixed[3] b3 &lt;- fixed[4] u1 &lt;- rand[1] u2 &lt;- rand[2] #just made so we can predict w/o random effects return((b0+(b1+u1)*(dbh*dbh*totht/1000))*(exp(-(b2+u2)*(t/1000)*exp(b3*t)))) } #Tree 1 pred1 &lt;- data.frame(seq(1,24,length.out=100)) names(pred1) &lt;- &#39;dob&#39; pred1$tn &lt;- 1 pred1$dbh &lt;- unique(dat2[dat2$tn==1,]$dbh) pred1$t &lt;- pred1$dob/pred1$dbh pred1$totht &lt;- unique(dat2[dat2$tn==1,]$totht) pred1$r &lt;- 1-pred1$dob/pred1$totht pred1$test &lt;- predict(tmp,pred1) pred1$testno &lt;- nlmmfn(fixed=tmp$coefficients$fixed, rand = c(0,0),pred1$dbh,pred1$totht,pred1$t) p1 &lt;- ggplot(pred1)+geom_line(aes(x=r,y=test,color=&#39;with random&#39;))+geom_line(aes(x=r,y=testno,color=&#39;No random&#39;))+labs(colour = &quot;&quot;) + geom_point(data=dat2[dat2$tn==1,],aes(x=r,y=cumv)) +ggtitle(&#39;Tree 1&#39;)+ theme(legend.position = &quot;none&quot;) #Tree 151 pred151 &lt;- data.frame(seq(1,21,length.out=100)) names(pred151) &lt;- &#39;dob&#39; pred151$tn &lt;- 151 pred151$dbh &lt;- unique(dat2[dat2$tn==151,]$dbh) pred151$t &lt;- pred151$dob/pred151$dbh pred151$totht &lt;- unique(dat2[dat2$tn==151,]$totht) pred151$r &lt;- 1-pred151$dob/pred151$totht pred151$test &lt;- predict(tmp,pred151) pred151$testno &lt;- nlmmfn(fixed=tmp$coefficients$fixed, rand = c(0,0),pred151$dbh,pred151$totht,pred151$t) p2 &lt;- ggplot(pred151)+geom_line(aes(x=r,y=test,color=&#39;with random&#39;))+geom_line(aes(x=r,y=testno,color=&#39;No random&#39;))+labs(colour = &quot;&quot;) + geom_point(data=dat2[dat2$tn==151,],aes(x=r,y=cumv)) + ggtitle(&#39;Tree 151&#39;)+ theme(legend.position = &quot;none&quot;) #Tree 279 pred279 &lt;- data.frame(seq(1,9,length.out=100)) names(pred279) &lt;- &#39;dob&#39; pred279$tn &lt;- 279 pred279$dbh &lt;- unique(dat2[dat2$tn==279,]$dbh) pred279$t &lt;- pred279$dob/pred279$dbh pred279$totht &lt;- unique(dat2[dat2$tn==279,]$totht) pred279$r &lt;- 1-pred279$dob/pred279$totht pred279$test &lt;- predict(tmp,pred279) pred279$testno &lt;- nlmmfn(fixed=tmp$coefficients$fixed, rand = c(0,0),pred279$dbh,pred279$totht,pred279$t) p3 &lt;- ggplot(pred279)+geom_line(aes(x=r,y=test,color=&#39;with random&#39;))+geom_line(aes(x=r,y=testno,color=&#39;No random&#39;))+labs(colour = &quot;&quot;) + geom_point(data=dat2[dat2$tn==279,],aes(x=r,y=cumv)) + ggtitle(&#39;Tree 279&#39;)+ theme(legend.position = &quot;none&quot;) plot_grid(p1,p2,p3) red line = predicted observations based on the common fixed effects teal line = tree-specific predictions with random effects References "],["summary-2.html", "9.3 Summary", " 9.3 Summary "],["model-specification.html", "Chapter 10 Model Specification", " Chapter 10 Model Specification Test whether underlying assumptions hold true Nested Model (A1/A3) Non-Nested Model (A1/A3) Heteroskedasticity (A4) "],["nested-model.html", "10.1 Nested Model", " 10.1 Nested Model \\[ \\begin{aligned} y = \\beta_0 + x_1\\beta_1 + x_2\\beta-2 + x_3\\beta_3 + \\epsilon &amp;&amp; \\text{unrestricted model} \\\\ y = \\beta_0 + x_1\\beta_1 + \\epsilon &amp;&amp; \\text{restricted model} \\end{aligned} \\] Unrestricted model is always longer than the restricted model The restricted model is “nested” within the unrestricted model To determine which variables should be included or exclude, we could use the same Wald Test Adjusted \\(R^2\\) \\(R^2\\) will always increase with more variables included Adjusted \\(R^2\\) tries to correct by penalizing inclusion of unnecessary variables. \\[ {R}^2 = 1 - \\frac{SSR/n}{SST/n} \\\\ {R}^2_{adj}= 1- \\frac{SSR/(n-k)}{SST/(n-1)} = 1 - \\frac{(n-1)(1-R^2)}{(n-k)} \\] \\({R}^2_{adj}\\) increases if and only if the t-statistic on the additional variable is greater than 1 in absolute value. \\({R}^2_{adj}\\) is valid in models where there is no heteroskedasticity there fore it should not be used in determining which variables should be included in the model (the t or F-tests are more appropriate) 10.1.1 Chow test Should we run two different regressions for two groups? "],["non-nested-model.html", "10.2 Non-Nested Model", " 10.2 Non-Nested Model compare models with different non-nested specifications 10.2.1 Davidson-Mackinnon test 10.2.1.1 Independent Variable Should the independent variables be logged? (decide between non-nested alternatives) \\[ \\begin{aligned} y = \\beta_0 + x_1\\beta_1 + x_2\\beta_2 + \\epsilon &amp;&amp; \\text{(level eq)} \\\\ y = \\beta_0 + ln(x_1)\\beta_1 + x_2\\beta_2 + \\epsilon &amp;&amp; \\text{(log eq)} \\end{aligned} \\] Obtain predict outcome when estimating the model in log equation \\(\\check{y}\\) and then estimate the following auxiliary equation, \\[ y = \\beta_0 + x_1\\beta_1 + x_2\\beta_2 + \\check{y}\\gamma + error \\] and evaluate the t-statistic for the null hypothesis \\(H_0: \\gamma = 0\\) Obtain predict outcome when estimating the model in the level equation \\(\\hat{y}\\), then estimate the following auxiliary equation, \\[ y = \\beta_0 + ln(x_1)\\beta_1 + x_2\\beta_2 + \\check{y}\\gamma + error \\] and evaluate the t-statistic for the null hypothesis \\(H_0: \\gamma = 0\\) If you reject the null in the (1) step but fail to reject the null in the second step, then the log equation is preferred. If fail to reject the null in the (1) step but reject the null in the (2) step then, level equation is preferred. If reject in both steps, then you have statistical evidence that neither model should be used and should re-evaluate the functional form of your model. If fail to reject in both steps, you do not have sufficient evidence to prefer one model over the other. You can compare the \\(R^2_{adj}\\) to choose between the two models. \\[ y = \\beta_0 + ln(x)\\beta_1 + \\epsilon \\\\ y = \\beta_0 + x(\\beta_1) + x^2\\beta_2 + \\epsilon \\] Compare which better fits the data Compare standard \\(R^2\\) is unfair because the second model is less parsimonious (more parameters to estimate) The \\(R_{adj}^2\\) will penalize the second model for being less parsimonious + Only valid when there is no heteroskedasticity (A4 holds) Should only compare after a Davidson-Mackinnon test 10.2.1.2 Dependent Variable \\[ \\begin{aligned} y = \\beta_0 + x_1\\beta_1 + \\epsilon &amp;&amp; \\text{level eq} \\\\ ln(y) = \\beta_0 + x_1\\beta_1 + \\epsilon &amp;&amp; \\text{log eq} \\\\ \\end{aligned} \\] In the level model, regardless of how big y is, x has a constant effect (i.e., one unit change in \\(x_1\\) results in a \\(\\beta_1\\) unit change in y) In the log model, the larger in y is, the effect of x is stronger (i.e., one unit change in \\(x_1\\) could increase y from 1 to \\(1+\\beta_1\\) or from 100 to 100+100x\\(\\beta_1\\)) Cannot compare \\(R^2\\) or \\(R^2_{adj}\\) because the outcomes are complement different, the scaling is different (SST is different) We need to “un-transform” the \\(ln(y)\\) back to the same scale as y and then compare, Estimate the model in the log equation to obtain the predicted outcome \\(\\hat{ln(y)}\\) “Un-transform” the predicted outcome \\[ \\hat{m} = exp(\\hat{ln(y)}) \\] Estimate the following model (without an intercept) \\[ y = \\alpha\\hat{m} + error \\] and obtain predicted outcome \\(\\hat{y}\\) Then take the square of the correlation between \\(\\hat{y}\\) and y as a scaled version of the \\(R^2\\) from the log model that can now compare with the usual \\(R^2\\) in the level model. "],["heteroskedasticity-1.html", "10.3 Heteroskedasticity", " 10.3 Heteroskedasticity Using roust standard errors are always valid If there is significant evidence of heteroskedasticity implying A4 does not hold Gauss-Markov Theorem no longer holds, OLS is not BLUE. Should consider using a better linear unbiased estimator (Weighted Least Squares or Generalized Least Squares) 10.3.1 Breusch-Pagan test A4 implies \\[ E(\\epsilon_i^2|\\mathbf{x_i})=\\sigma^2 \\] \\[ \\epsilon_i^2 = \\gamma_0 + x_{i1}\\gamma_1 + ... + x_{ik -1}\\gamma_{k-1} + error \\] and determining whether or not \\(\\mathbf{x}_i\\) has any predictive value if \\(\\mathbf{x}_i\\) has predictive value, then the variance changes over the levels of \\(\\mathbf{x}_i\\) which is evidence of heteroskedasticity if \\(\\mathbf{x}_i\\) does not have predictive value, the variance is constant for all levels of \\(\\mathbf{x}_i\\) The Breusch-Pagan test for heteroskedasticity would compute the F-test of total significance for the following model \\[ e_i^2 = \\gamma_0 + x_{i1}\\gamma_1 + ... + x_{ik -1}\\gamma_{k-1} + error \\] A low p-value means we reject the null of homoskedasticity However, Breusch-Pagan test cannot detect heteroskedasticity in non-linear form 10.3.2 White test test heteroskedasticity would allow for a non-linear relationship by computing the F-test of total significance for the following model (assume there are three independent random variables) \\[ \\begin{aligned} e_i^2 &amp;= \\gamma_0 + x_i \\gamma_1 + x_{i2}\\gamma_2 + x_{i3}\\gamma_3 \\\\ &amp;+ x_{i1}^2\\gamma_4 + x_{i2}^2\\gamma_5 + x_{i3}^2\\gamma_6 \\\\ &amp;+ (x_{i1} \\times x_{i2})\\gamma_7 + (x_{i1} \\times x_{i3})\\gamma_8 + (x_{i2} \\times x_{i3})\\gamma_9 + error \\end{aligned} \\] A low p-value means we reject the null of homoskedasticity Equivalently, we can compute LM as \\(LM = nR^2_{e^2}\\) where the \\(R^2_{e^2}\\) come from the regression with the squared residual as the outcome The LM statistic has a \\(\\chi_k^2\\) distribution "],["imputation-missing-data.html", "Chapter 11 Imputation (Missing Data)", " Chapter 11 Imputation (Missing Data) Imputation is a statistical procedure where you replace missing data with some reasonable values Unit imputation = single data point Item imputation = single feature value Imputation is usually seen as the illegitimate child of statistical analysis. Several reasons that contribute to these negative views could be: Peopled hardly do imputation correctly (which will introduce bias to your estimates) Imputation can only be applied to a small range of problems correctly If you have missing data on \\(y\\) (dependent variable), you probably would not be able to do any imputation appropriately. However, if you have certain type of missing data (e.g., non-random missing data) in the \\(x\\)’s variable (independent variables), then you can still salvage your collected data points with imputation. We also need to talk why you would want to do imputation in the first place. If your purpose is inference/ explanation (valid statistical inference not optimal point prediction), then imputation would not offer much help (Rubin 1996). However, if your purpose is prediction, you would want your standard error to be reduced by including information (non-missing data) on other variables of a data point. Then imputation could be the tool that you’re looking for. For most software packages, it will use listwise deletion or casewise deletion to have complete case analysis (analysis with only observations with all information). Not until recently that statistician can propose some methods that are a bit better than listwise deletion which are maximum likelihood and multiple imputation. “Judging the quality of missing data procedures by their ability to recreate the individual missing values (according to hit rate, mean square error, etc) does not lead to choosing procedures that result in valid inference”, (Rubin 1996) Missing data can make it more challenging to big datasets. References "],["assumptions-1.html", "11.1 Assumptions", " 11.1 Assumptions 11.1.1 Missing Completely at Random (MCAR) Missing Completely at Random, MCAR, means there is no relationship between the missingness of the data and any values, observed or missing. Those missing data points are a random subset of the data. There is nothing systematic going on that makes some data more likely to be missing than others. The probability of missing data on a variable is unrelated to the value of it or to the values of any other variables in the data set. Note: the “missingness” on Y can be correlated with the “missingness” on X We can compare the value of other variables for the observations with missing data, and observations without missing data. If we reject the t-test for mean difference, we can say there is evidence that the data are not MCAR. But we cannot say that our data are MCAR if we fail to reject the t-test. the propensity for a data point to be missing is completely random. There’s no relationship between whether a data point is missing and any values in the data set, missing or observed. The missing data are just a random subset of the data. 11.1.2 Missing at Random (MAR) Missing at Random, MAR, means there is a systematic relationship between the propensity of missing values and the observed data, but not the missing data. Whether an observation is missing has nothing to do with the missing values, but it does have to do with the values of an individual’s observed variables. So, for example, if men are more likely to tell you their weight than women, weight is MAR. MAR is weaker than MCAR \\[ P(Y_{missing}|Y,X)= P(Y_{missing}|X) \\] The probability of Y missing given Y and X equal to the probability of of Y missing given X. However, it is impossible to provide evidence to the MAR condition. the propensity for a data point to be missing is not related to the missing data, but it is related to some of the observed data. In another word, there is a systematic relationship between the propensity of missing values and the observed data, but not the missing data. For example, if men are more likely to tell you their weight than women, weight is MAR MAR requires that the cause of the missing data is unrelated to the missing values but may be related to the observed values of other variables. MAR means that the missing values are related to observed values on other variables. As an example of CD missing data, missing income data may be unrelated to the actual income values but are related to education. Perhaps people with more education are less likely to reveal their income than those with less education 11.1.3 Ignorable The missing data mechanism is ignorable when The data are MAR the parameters in the function of the missing data process are unrelated to the parameters (of interest) that need to be estimated. In this case, you actually don’t need to model the missing data mechanisms unless you would like to improve on your accuracy, in which case you still need to be very rigorous about your approach to improve efficiency in your parameters. 11.1.4 Nonignorable Missing Not at Random, MNAR, means there is a relationship between the propensity of a value to be missing and its values. Example: people with the lowest education are missing on education or the sickest people are most likely to drop out of the study. MNAR is called Nonignorable because the missing data mechanism itself has to be modeled as you deal with the missing data. You have to include some model for why the data are missing and what the likely values are. Hence, in the case of nonignorable, the data are not MAR. Then, your parameters of interest will be biased if you do not model the missing data mechanism. One of the most widely used approach for nonignorable missing data is (James J. Heckman 1976) Another name: Missing Not at Random (MNAR): there is a relationship between the propensity of a value to be missing and its values For example, people with low education will be less likely to report it We need to model why the data are missing and what the likely values are. the missing data mechanism is related to the missing values It commonly occurs when people do not want to reveal something very personal or unpopular about themselves Complete case analysis can give highly biased results for NI missing data. If proportionally more low and moderate income individuals are left in the sample because high income people are missing, an estimate of the mean income will be lower than the actual population mean. One can use instrument that can predict the nonresponse process in outcome variable, and unrelated to the outcome of the population to correct for this missingness (but you still have to use complete cases) (B. Sun et al. 2018; Tchetgen Tchetgen and Wirth 2017) References "],["solutions-to-missing-data.html", "11.2 Solutions to Missing data", " 11.2 Solutions to Missing data 11.2.1 Listwise Deletion Also known as complete case deletion only where you only retain cases with complete data for all features. Advantages: Can be applied to any statistical test (SEM, multi-level regression, etc.) In the case of MCAR, both the parameters estimates and its standard errors are unbiased. In the case of MAR among independent variables (not depend on the values of dependent variables), then listwise deletion parameter estimates can still be unbiased. (Little 1992) For example, you have a model \\(y=\\beta_{0}+\\beta_1X_1 + \\beta_2X_2 +\\epsilon\\) if the probability of missing data on X1 is independent of Y, but dependent on the value of X1 and X2, then the model estimates are still unbiased. The missing data mechanism the depends on the values of the independent variables are the same as stratified sampling. And stratified sampling does not bias your estimates In the case of logistic regression, if the probability of missing data on any variable depends on the value of the dependent variable, but independent of the value of the independent variables, then the listwise deletion will yield biased intercept estimate, but consistent estimates of the slope and their standard errors (Vach and Vach 1994). However, logistic regression will still fail if the probability of missing data is dependent on both the value of the dependent and independent variables. Under regression analysis, listwise deletion is more robust than maximum likelihood and multiple imputation when MAR assumption is violated. Disadvantages: It will yield a larger standard errors than other more sophisticated methods discussed later. If the data are not MCAR, but MAR, then your listwise deletion can yield biased estimates. In other cases than regression analysis, other sophisticated methods can yield better estimates compared to listwise deletion. 11.2.2 Pairwise Deletion This method could only be used in the case of linear models such as linear regression, factor analysis, or SEM. The premise of this method based on that the coefficient estimates are calculated based on the means, standard deviations, and correlation matrix. Compared to listwise deletion, we still utilized as many correlation between variables as possible to compute the correlation matrix. Advantages: If the true missing data mechanism is MCAR, pair wise deletion will yield consistent estimates, and unbiased in large samples Compared to listwise deletion: (Glasser 1964) If the correlation among variables are low, pairwise deletion is more efficient estimates than listwise If the correlations among variables are high, listwise deletion is more efficient than pairwise. Disadvantages: If the data mechanism is MAR, pairwise deletion will yield biased estimates. In small sample, sometimes covariance matrix might not be positive definite, which means coefficients estimates cannot be calculated. Note: You need to read carefully on how your software specify the sample size because it will alter the standard errors. 11.2.3 Dummy Variable Adjustment Also known as Missing Indicator Method or Proxy Variable Add another variable in the database to indicate whether a value is missing. Create 2 variables \\[\\begin{equation} D= \\begin{cases} 1 &amp; \\text{data on X are missing} \\\\ 0 &amp; \\text{otherwise}\\\\ \\end{cases} \\end{equation}\\] \\[\\begin{equation} X^* = \\begin{cases} X &amp; \\text{data are available} \\\\ c &amp; \\text{data are missing}\\\\ \\end{cases} \\end{equation}\\] Note: A typical choice for c is usually the mean of X Interpretation: Coefficient of D is the the difference in the expected value of Y between the group with data and the group without data on X. Coefficient of \\(X^*\\) is the effect of the group with data on Y Disadvantages: This method yields biased estimates of the coefficient even in the case of MCAR (Jones 1996) 11.2.4 Imputation 11.2.4.1 Mean, Mode, Median Imputation Bad: Mean imputation does not preserve the relationships among variables Mean imputation leads to An Underestimate of Standard Errors → you’re making Type I errors without realizing it. Biased estimates of variances and covariances (Haitovsky 1968) In high-dimensions, mean substitution cannot account for dependence structure among features. 11.2.4.2 Maximum Likelihood When missing data are MAR and monotonic (such as in the case of panel studies), ML can be adequately in estimating coefficients. Monotonic means that if you are missing data on X1, then that observation also has missing data on all other variables that come after it. ML can generally handle linear models, log-linear model, but beyond that, ML still lacks both theory and software to implement. 11.2.4.2.1 Expectation-Maximization Algorithm (EM Algorithm) An iterative process: Other variables are used to impute a value (Expectation). Check whether the value is most likely (Maximization). If not, it re-imputes a more likely value. You start your regression with your estimates based on either listwise deletion or pairwise deletion. After regressing missing variables on available variables, you obtain a regression model. Plug the missing data back into the original model, with modified variances and covariances For example, if you have missing data on \\(X_{ij}\\) you would regress it on available data of \\(X_{i(j)}\\), then plug the expected value of \\(X_{ij}\\) back with its \\(X_{ij}^2\\) turn into \\(X_{ij}^2 + s_{j(j)}^2\\) where \\(s_{j(j)}^2\\) stands for the residual variance from regressing \\(X_{ij}\\) on \\(X_{i(j)}\\) With the new estimated model, you rerun the process until the estimates converge. Advantages: easy to use preserves the relationship with other variables (important if you use Factor Analysis or Linear Regression later on), but best in the case of Factor Analysis, which doesn’t require standard error of individuals item. Disadvantages: Standard errors of the coefficients are incorrect (biased usually downward - underestimate) Models with overidentification, the estimates will not be efficient 11.2.4.2.2 Direct ML (raw maximum likelihood) Advantages efficient estimates and correct standard errors. Disadvantages: Hard to implements 11.2.4.3 Multiple Imputation MI is designed to use “the Bayesian model-based approach to create procedures, and the frequentist (randomization-based approach) to evaluate procedures”. (Rubin 1996) MI estimates have the same properties as ML when the data is MAR Consistent Asymptotically efficient Asymptotically normal MI can be applied to any type of model, unlike Maximum Likelihood that is only limited to a small set of models. A drawback of MI is that it will produce slightly different estimates every time you run it. To avoid such problem, you can set seed when doing your analysis to ensure its reproducibility. 11.2.4.3.1 Single Random Imputation Random draws form the residual distribution of each imputed variable and add those random numbers to the imputed values. For example, if we have missing data on X, and it’s MCAR, then regress X on Y (Listwise Deletion method) to get its residual distribution. For every missing value on X, we substitute with \\(\\tilde{x_i}=\\hat{x_i} + \\rho u_i\\) where \\(u_i\\) is a random draw from a standard normal distribution \\(x_i\\) is the predicted value from the regression of X and Y \\(\\rho\\) is the standard deviation of the residual distribution of X regressed on Y. However, the model you run with the imputed data still thinks that your data are collected, not imputed, which leads your standard error estimates to be too low and test statistics too high. To address this problem, we need to repeat the imputation process which leads us to repeated imputation or multiple random imputation. 11.2.4.3.2 Repeated Imputation “Repeated imputations are draws from the posterior predictive distribution of the missing values under a specific model , a particular Bayesian model for both the data and the missing mechanism”.(Rubin 1996) Repeated imputation, also known as, multiple random imputation, allows us to have multiple “completed” data sets. The variability across imputations will adjust the standard errors upward. The estimate of the standard error of \\(\\bar{r}\\) (mean correlation estimates between X and Y) is \\[ SE(\\bar{r})=\\sqrt{\\frac{1}{M}\\sum_{k}s_k^2+ (1+\\frac{1}{M})(\\frac{1}{M-1})\\sum_{k}(r_k-\\bar{r})^2} \\] where M is the number of replications, \\(r_k\\) is the the correlation in replication k, \\(s_k\\) is the estimated standard error in replication k. However, this method still considers the parameter in predicting \\(\\tilde{x}\\) is still fixed, which means we assume that we are using the true parameters to predict \\(\\tilde{x}\\). To overcome this challenge, we need to introduce variability into our model for \\(\\tilde{x}\\) by treating the parameters as a random variables and use Bayesian posterior distribution of the parameters to predict the parameters. However, if your sample is large and the proportion of missing data is small, the extra Bayesian step might not be necessary. If your sample is small or the proportion of missing data is large, the extra Bayesian step is necessary. Two algorithms to get random draws of the regression parameters from its posterior distribution: Data Augmentation Sampling importance/resampling (SIR) Authors have argued for SIR superiority due to its computer time (G. King et al. 2001) 11.2.4.3.2.1 Data Augmentation Steps for data augmentation: Choose starting values for the parameters (e.g., for multivariate normal, choose means and covariance matrix). These values can come from previous values, expert knowledge, or from listwise deletion or pairwise deletion or EM estimation. Based on the current values of means and covariances calculate the coefficients estimates for the equation that variable with missing data is regressed on all other variables (or variables that you think will help predict the missing values, could also be variables that are not in the final estimation model) Use the estimates in step (2) to predict values for missing values. For each predicted value, add a random error from the residual normal distribution for that variable. From the “complete” data set, recalculate the means and covariance matrix. And take a random draw from the posterior distribution of the means and covariances with Jeffreys’ prior. Using the random draw from step (4), repeat step (2) to (4) until the means and covariances stabilize (converged). The iterative process allows us to get random draws from the joint posterior distribution of both data nd parameters, given the observed data. Rules of thumb regarding convergence: The higher the proportion of missing, the more iterations the rate of convergence for EM algorithm should be the minimum threshold for DA. You can also check if your distribution has been converged by diagnostic statistics Can check Bayesian Diagnostics for some introduction. Types of chains Parallel: Run a separate chain of iterations for each of data set. Different starting values are encouraged. For example, one could use bootstrap to generate different data set with replacement, and for each data set, calculate the starting values by EM estimates. Pro: Run faster, and less likely to have dependence in the resulting data sets. Con: Sometimes it will not converge Sequential one long chain of data augmentation cycles. After burn-in and thinning, you will have to data sets Pro: Converged to the true posterior distribution is more likely. Con: The resulting data sets are likely to be dependent. Remedies can be thinning and burn-in. Note on Non-normal or categorical data The normal-based methods still work well, but you will need to do some transformation. For example, If the data is skewed, then log-transform, then impute, the exponentiate to have the missing data back to its original metric. If the data is proportion, logit-transform, impute, then de-transform the missing data. If you want to impute non-linear relationship, such as interaction between 2 variables and 1 variable is categorical. You can do separate imputation for different levels of that variable separately, then combined for the final analysis. If all variables that have missing data are categorical, then unrestricted multinomial model or log-linear model is recommended. If a single categorical variable, logistic (logit) regression would be sufficient. 11.2.4.4 Nonparametric/ Semiparametric Methods 11.2.4.4.1 Hot Deck Imputation Used by U.S. Census Bureau for public datasets approximate Bayesian bootstrap A randomly chosen value from an individual in the sample who has similar values on other variables. In other words, find all the sample subjects who are similar on other variables, then randomly choose one of their values on the missing variable. When we have \\(n_1\\) cases with complete data on Y and \\(n_0\\) cases with missing data on Y Step 1: From \\(n_1\\), take a random sample (with replacement) of \\(n_1\\) cases Step 2: From the retrieved sample take a random sample (with replacement) of \\(n_0\\) cases Step 3: Assign the \\(n_0\\) cases in step 2 to \\(n_0\\) missing data cases. Step 4: Repeat the process for every variable. Step 5: For multiple imputation, repeat the four steps multiple times. Note: If we skip step 1, it reduce variability for estimating standard errors. Good: Constrained to only possible values. Since the value is picked at random, it adds some variability, which might come in handy when calculating standard errors. Challenge: how can you define “similar” here. 11.2.4.4.2 Cold Deck Imputation Contrary to Hot Deck, Cold Deck choose value systematically from an observation that has similar values on other variables, which remove the random variation that we want. Donor samples of “cold-deck” imputation come from a different data set. 11.2.4.4.3 Predictive Mean Matching Steps: Regress Y on X (matrix of covariates) for the \\(n_1\\) (i.e., non-missing cases) to get coefficients \\(b\\) (a \\(k \\times 1\\) vector) and residual variance estimates \\(s^2\\) Draw randomly from the posterior predictive distribution of the residual variance (assuming a noninformative prior) by calculating \\(\\frac{(n_1-k)s^2}{\\chi^2}\\), where \\(\\chi^2\\) is a random draw from a \\(\\chi^2_{n_1-k}\\) and let \\(s^2_{[1]}\\) be an i-th random draw Randomly draw from the posterior distribution of the coefficients \\(b\\), by drawing from \\(MVN(b, s^2_{[1]}(X&#39;X)^{-1})\\), where X is an \\(n_1 \\times k\\) matrix of X values. Then we have \\(b_{1}\\) Using step 1, we can calculate standardized residuals for \\(n_1\\) cases: \\(e_i = \\frac{y_i - bx_i}{\\sqrt{s^2(1-k/n_1)}}\\) Randomly draw a sample (with replacement) of \\(n_0\\) from the \\(n_1\\) residuals in step 4 With \\(n_0\\) cases, we can calculate imputed values of Y: \\(y_i = b_{[1]}x_i + s_{[1]}e_i\\) where \\(e_i\\) are taken from step 5, and \\(b_{[1]}\\) taken from step 3, and \\(s_{[1]}\\) taken from step 2. Repeat steps 2 through 6 except for step 4. Notes: can be used for multiple variables where each variable is imputed using all other variables as predictor. can also be used for heteroskedasticity in imputed values. Example from Statistics Globle set.seed(918273) # Seed N &lt;- 3000 # Sample size y &lt;- round(runif(N, -10, 10)) # Target variable Y x1 &lt;- y + round(runif(N, 0, 50)) # Auxiliary variable 1 x2 &lt;- round(y + 0.25 * x1 + rnorm(N, - 3, 15)) # Auxiliary variable 2 x3 &lt;- round(0.1 * x1 + rpois(N, 2)) # Auxiliary variable 3 x4 &lt;- as.factor(round(0.02 * y + runif(N))) # Auxiliary variable 4 (categorical variable) y[rbinom(N, 1, 0.2) == 1] &lt;- NA # Insert 20% missing data in Y data &lt;- data.frame(y, x1, x2, x3, x4) # Store data in dataset head(data) # First 6 rows of our data #&gt; y x1 x2 x3 x4 #&gt; 1 8 38 -3 6 1 #&gt; 2 1 50 -9 5 0 #&gt; 3 5 43 20 5 1 #&gt; 4 NA 9 13 3 0 #&gt; 5 -4 40 -10 6 0 #&gt; 6 NA 29 -6 5 1 library(&quot;mice&quot;) # Load mice package ##### Impute data via predictive mean matching (single imputation)##### imp_single &lt;- mice(data, m = 1, method = &quot;pmm&quot;) # Impute missing values #&gt; #&gt; iter imp variable #&gt; 1 1 y #&gt; 2 1 y #&gt; 3 1 y #&gt; 4 1 y #&gt; 5 1 y data_imp_single &lt;- complete(imp_single) # Store imputed data # head(data_imp_single) # SInce single imputation underestiamtes stnadard errors, we use multiple imputaiton ##### Predictive mean matching (multiple imputation)##### imp_multi &lt;- mice(data, m = 5, method = &quot;pmm&quot;) # Impute missing values multiple times #&gt; #&gt; iter imp variable #&gt; 1 1 y #&gt; 1 2 y #&gt; 1 3 y #&gt; 1 4 y #&gt; 1 5 y #&gt; 2 1 y #&gt; 2 2 y #&gt; 2 3 y #&gt; 2 4 y #&gt; 2 5 y #&gt; 3 1 y #&gt; 3 2 y #&gt; 3 3 y #&gt; 3 4 y #&gt; 3 5 y #&gt; 4 1 y #&gt; 4 2 y #&gt; 4 3 y #&gt; 4 4 y #&gt; 4 5 y #&gt; 5 1 y #&gt; 5 2 y #&gt; 5 3 y #&gt; 5 4 y #&gt; 5 5 y data_imp_multi_all &lt;- complete(imp_multi, # Store multiply imputed data &quot;repeated&quot;, include = TRUE) data_imp_multi &lt;- data.frame( # Combine imputed Y and X1-X4 (for convenience) data_imp_multi_all[ , 1:6], data[, 2:5]) head(data_imp_multi) # First 6 rows of our multiply imputed data #&gt; y.0 y.1 y.2 y.3 y.4 y.5 x1 x2 x3 x4 #&gt; 1 8 8 8 8 8 8 38 -3 6 1 #&gt; 2 1 1 1 1 1 1 50 -9 5 0 #&gt; 3 5 5 5 5 5 5 43 20 5 1 #&gt; 4 NA 1 -2 -4 9 -8 9 13 3 0 #&gt; 5 -4 -4 -4 -4 -4 -4 40 -10 6 0 #&gt; 6 NA 4 7 7 6 0 29 -6 5 1 Example from UCLA Statistical Consulting library(mice) library(VIM) library(lattice) library(ggplot2) ## set observations to NA anscombe &lt;- within(anscombe, { y1[1:3] &lt;- NA y4[3:5] &lt;- NA }) ## view head(anscombe) #&gt; x1 x2 x3 x4 y1 y2 y3 y4 #&gt; 1 10 10 10 8 NA 9.14 7.46 6.58 #&gt; 2 8 8 8 8 NA 8.14 6.77 5.76 #&gt; 3 13 13 13 8 NA 8.74 12.74 NA #&gt; 4 9 9 9 8 8.81 8.77 7.11 NA #&gt; 5 11 11 11 8 8.33 9.26 7.81 NA #&gt; 6 14 14 14 8 9.96 8.10 8.84 7.04 ## check missing data patterns md.pattern(anscombe) #&gt; x1 x2 x3 x4 y2 y3 y1 y4 #&gt; 6 1 1 1 1 1 1 1 1 0 #&gt; 2 1 1 1 1 1 1 1 0 1 #&gt; 2 1 1 1 1 1 1 0 1 1 #&gt; 1 1 1 1 1 1 1 0 0 2 #&gt; 0 0 0 0 0 0 3 3 6 ## Number of observations per patterns for all pairs of variables p &lt;- md.pairs(anscombe) p # rr = number of observations where both pairs of values are observed #&gt; $rr #&gt; x1 x2 x3 x4 y1 y2 y3 y4 #&gt; x1 11 11 11 11 8 11 11 8 #&gt; x2 11 11 11 11 8 11 11 8 #&gt; x3 11 11 11 11 8 11 11 8 #&gt; x4 11 11 11 11 8 11 11 8 #&gt; y1 8 8 8 8 8 8 8 6 #&gt; y2 11 11 11 11 8 11 11 8 #&gt; y3 11 11 11 11 8 11 11 8 #&gt; y4 8 8 8 8 6 8 8 8 #&gt; #&gt; $rm #&gt; x1 x2 x3 x4 y1 y2 y3 y4 #&gt; x1 0 0 0 0 3 0 0 3 #&gt; x2 0 0 0 0 3 0 0 3 #&gt; x3 0 0 0 0 3 0 0 3 #&gt; x4 0 0 0 0 3 0 0 3 #&gt; y1 0 0 0 0 0 0 0 2 #&gt; y2 0 0 0 0 3 0 0 3 #&gt; y3 0 0 0 0 3 0 0 3 #&gt; y4 0 0 0 0 2 0 0 0 #&gt; #&gt; $mr #&gt; x1 x2 x3 x4 y1 y2 y3 y4 #&gt; x1 0 0 0 0 0 0 0 0 #&gt; x2 0 0 0 0 0 0 0 0 #&gt; x3 0 0 0 0 0 0 0 0 #&gt; x4 0 0 0 0 0 0 0 0 #&gt; y1 3 3 3 3 0 3 3 2 #&gt; y2 0 0 0 0 0 0 0 0 #&gt; y3 0 0 0 0 0 0 0 0 #&gt; y4 3 3 3 3 2 3 3 0 #&gt; #&gt; $mm #&gt; x1 x2 x3 x4 y1 y2 y3 y4 #&gt; x1 0 0 0 0 0 0 0 0 #&gt; x2 0 0 0 0 0 0 0 0 #&gt; x3 0 0 0 0 0 0 0 0 #&gt; x4 0 0 0 0 0 0 0 0 #&gt; y1 0 0 0 0 3 0 0 1 #&gt; y2 0 0 0 0 0 0 0 0 #&gt; y3 0 0 0 0 0 0 0 0 #&gt; y4 0 0 0 0 1 0 0 3 # rm = the number of observations where both variables are missing values # mr = the number of observations where the first variable’s value (e.g. the row variable) is observed and second (or column) variable is missing # mm = the number of observations where the second variable’s value (e.g. the col variable) is observed and first (or row) variable is missing ## Margin plot of y1 and y4 marginplot(anscombe[c(5, 8)], col = c(&quot;blue&quot;, &quot;red&quot;, &quot;orange&quot;)) ## 5 imputations for all missing values imp1 &lt;- mice(anscombe, m = 5) #&gt; #&gt; iter imp variable #&gt; 1 1 y1 y4 #&gt; 1 2 y1 y4 #&gt; 1 3 y1 y4 #&gt; 1 4 y1 y4 #&gt; 1 5 y1 y4 #&gt; 2 1 y1 y4 #&gt; 2 2 y1 y4 #&gt; 2 3 y1 y4 #&gt; 2 4 y1 y4 #&gt; 2 5 y1 y4 #&gt; 3 1 y1 y4 #&gt; 3 2 y1 y4 #&gt; 3 3 y1 y4 #&gt; 3 4 y1 y4 #&gt; 3 5 y1 y4 #&gt; 4 1 y1 y4 #&gt; 4 2 y1 y4 #&gt; 4 3 y1 y4 #&gt; 4 4 y1 y4 #&gt; 4 5 y1 y4 #&gt; 5 1 y1 y4 #&gt; 5 2 y1 y4 #&gt; 5 3 y1 y4 #&gt; 5 4 y1 y4 #&gt; 5 5 y1 y4 ## linear regression for each imputed data set - 5 regression are run fitm &lt;- with(imp1, lm(y1 ~ y4 + x1)) summary(fitm) #&gt; # A tibble: 15 × 6 #&gt; term estimate std.error statistic p.value nobs #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; #&gt; 1 (Intercept) 8.60 2.67 3.23 0.0121 11 #&gt; 2 y4 -0.533 0.251 -2.12 0.0667 11 #&gt; 3 x1 0.334 0.155 2.16 0.0628 11 #&gt; 4 (Intercept) 4.19 2.93 1.43 0.190 11 #&gt; 5 y4 -0.213 0.273 -0.782 0.457 11 #&gt; 6 x1 0.510 0.167 3.05 0.0159 11 #&gt; 7 (Intercept) 6.51 2.35 2.77 0.0244 11 #&gt; 8 y4 -0.347 0.215 -1.62 0.145 11 #&gt; 9 x1 0.395 0.132 3.00 0.0169 11 #&gt; 10 (Intercept) 5.48 3.02 1.81 0.107 11 #&gt; 11 y4 -0.316 0.282 -1.12 0.295 11 #&gt; 12 x1 0.486 0.173 2.81 0.0230 11 #&gt; 13 (Intercept) 7.12 1.81 3.92 0.00439 11 #&gt; 14 y4 -0.436 0.173 -2.53 0.0355 11 #&gt; 15 x1 0.425 0.102 4.18 0.00308 11 ## pool coefficients and standard errors across all 5 regression models pool(fitm) #&gt; Class: mipo m = 5 #&gt; term m estimate ubar b t dfcom df #&gt; 1 (Intercept) 5 6.3808015 6.72703243 2.785088109 10.06913816 8 3.902859 #&gt; 2 y4 5 -0.3690455 0.05860053 0.014674911 0.07621042 8 4.716160 #&gt; 3 x1 5 0.4301588 0.02191260 0.004980516 0.02788922 8 4.856052 #&gt; riv lambda fmi #&gt; 1 0.4968172 0.3319158 0.5254832 #&gt; 2 0.3005074 0.2310693 0.4303733 #&gt; 3 0.2727480 0.2142985 0.4143230 ## output parameter estimates summary(pool(fitm)) #&gt; term estimate std.error statistic df p.value #&gt; 1 (Intercept) 6.3808015 3.1731905 2.010847 3.902859 0.11643863 #&gt; 2 y4 -0.3690455 0.2760624 -1.336819 4.716160 0.24213491 #&gt; 3 x1 0.4301588 0.1670007 2.575791 4.856052 0.05107581 11.2.4.4.4 Stochastic Imputation Regression imputation + random residual = Stochastic Imputation Most multiple imputation is based off of some form of stochastic regression imputation. Good: Has all the advantage of Regression Imputation and also has the random components Bad: might lead to implausible values (e.g. negative values) can’t handle heteroskadastic data Note Multiple Imputation usually based on some form of stochastic regression imputation. # Income data set.seed(91919) # Set seed N &lt;- 1000 # Sample size income &lt;- round(rnorm(N, 0, 500)) # Create some synthetic income data income[income &lt; 0] &lt;- income[income &lt; 0] * (- 1) x1 &lt;- income + rnorm(N, 1000, 1500) # Auxiliary variables x2 &lt;- income + rnorm(N, - 5000, 2000) income[rbinom(N, 1, 0.1) == 1] &lt;- NA # Create 10% missingness in income data_inc_miss &lt;- data.frame(income, x1, x2) Single stochastic regression imputation imp_inc_sri &lt;- mice(data_inc_miss, method = &quot;norm.nob&quot;, m = 1) #&gt; #&gt; iter imp variable #&gt; 1 1 income #&gt; 2 1 income #&gt; 3 1 income #&gt; 4 1 income #&gt; 5 1 income data_inc_sri &lt;- complete(imp_inc_sri) Single predictive mean matching imp_inc_pmm &lt;- mice(data_inc_miss, method = &quot;pmm&quot;, m = 1) #&gt; #&gt; iter imp variable #&gt; 1 1 income #&gt; 2 1 income #&gt; 3 1 income #&gt; 4 1 income #&gt; 5 1 income data_inc_pmm &lt;- complete(imp_inc_pmm) Stochastic regression imputation contains negative values data_inc_sri$income[data_inc_sri$income &lt; 0] #&gt; [1] -66.055957 -96.980053 -28.921432 -4.175686 -54.480798 -27.207102 #&gt; [7] -143.603500 -80.960488 data_inc_pmm$income[data_inc_pmm$income &lt; 0] # No values below 0 #&gt; numeric(0) Evidence for heteroskadastic data # Heteroscedastic data set.seed(654654) # Set seed N &lt;- 1:5000 # Sample size a &lt;- 0 b &lt;- 1 sigma2 &lt;- N^2 eps &lt;- rnorm(N, mean = 0, sd = sqrt(sigma2)) y &lt;- a + b * N + eps # Heteroscedastic variable x &lt;- 30 * N + rnorm(N[length(N)], 1000, 200) # Correlated variable y[rbinom(N[length(N)], 1, 0.3) == 1] &lt;- NA # 30% missings data_het_miss &lt;- data.frame(y, x) Single stochastic regression imputation imp_het_sri &lt;- mice(data_het_miss, method = &quot;norm.nob&quot;, m = 1) #&gt; #&gt; iter imp variable #&gt; 1 1 y #&gt; 2 1 y #&gt; 3 1 y #&gt; 4 1 y #&gt; 5 1 y data_het_sri &lt;- complete(imp_het_sri) Single predictive mean matching imp_het_pmm &lt;- mice(data_het_miss, method = &quot;pmm&quot;, m = 1) #&gt; #&gt; iter imp variable #&gt; 1 1 y #&gt; 2 1 y #&gt; 3 1 y #&gt; 4 1 y #&gt; 5 1 y data_het_pmm &lt;- complete(imp_het_pmm) Comparison between predictive mean matching and stochastic regression imputation par(mfrow = c(1, 2)) # Both plots in one graphic plot(x[!is.na(data_het_sri$y)], # Plot of observed values data_het_sri$y[!is.na(data_het_sri$y)], main = &quot;&quot;, xlab = &quot;X&quot;, ylab = &quot;Y&quot;) points(x[is.na(y)], data_het_sri$y[is.na(y)], # Plot of missing values col = &quot;red&quot;) title(&quot;Stochastic Regression Imputation&quot;, # Title of plot line = 0.5) abline(lm(y ~ x, data_het_sri), # Regression line col = &quot;#1b98e0&quot;, lwd = 2.5) legend(&quot;topleft&quot;, # Legend c(&quot;Observed Values&quot;, &quot;Imputed Values&quot;, &quot;Regression Y ~ X&quot;), pch = c(1, 1, NA), lty = c(NA, NA, 1), col = c(&quot;black&quot;, &quot;red&quot;, &quot;#1b98e0&quot;)) plot(x[!is.na(data_het_pmm$y)], # Plot of observed values data_het_pmm$y[!is.na(data_het_pmm$y)], main = &quot;&quot;, xlab = &quot;X&quot;, ylab = &quot;Y&quot;) points(x[is.na(y)], data_het_pmm$y[is.na(y)], # Plot of missing values col = &quot;red&quot;) title(&quot;Predictive Mean Matching&quot;, # Title of plot line = 0.5) abline(lm(y ~ x, data_het_pmm), col = &quot;#1b98e0&quot;, lwd = 2.5) legend(&quot;topleft&quot;, # Legend c(&quot;Observed Values&quot;, &quot;Imputed Values&quot;, &quot;Regression Y ~ X&quot;), pch = c(1, 1, NA), lty = c(NA, NA, 1), col = c(&quot;black&quot;, &quot;red&quot;, &quot;#1b98e0&quot;)) mtext(&quot;Imputation of Heteroscedastic Data&quot;, # Main title of plot side = 3, line = - 1.5, outer = TRUE, cex = 2) 11.2.4.5 Regression Imputation Also known as conditional mean imputation Missing value is based (regress) on other variables. Good: Maintain the relationship with other variables (i.e., preserve dependence structure among features, unlike 11.2.4.1). If the data are MCAR, least-squares coefficients estimates will be consistent, and approximately unbiased in large samples (Gourieroux and Monfort 1981) Can have improvement on efficiency by using weighted least squares (Beale and Little 1975) or generalized least squares (Gourieroux and Monfort 1981). Bad: No variability left. treated data as if they were collected. Underestimate the standard errors and overestimate test statistics 11.2.4.6 Interpolation and Extrapolation An estimated value from other observations from the same individual. It usually only works in longitudinal data. 11.2.4.7 K-nearest neighbor (KNN) imputation The above methods are model-based imputation (regression). This is an example of neighbor-based imputation (K-nearest neighbor). For every observation that needs to be imputed, the algorithm identifies ‘k’ closest observations based on some types distance (e.g., Euclidean) and computes the weighted average (weighted based on distance) of these ‘k’ obs. For a discrete variable, it uses the most frequent value among the k nearest neighbors. Distance metrics: Hamming distance. For a continuous variable, it uses the mean or mode. Distance metrics: Euclidean Mahalanobis Manhattan 11.2.4.8 Bayesian Ridge regression implementation 11.2.4.9 Matrix Completion Impute items missing at random while accounting for dependence between features by using principal components, which is known as matrix completion (James et al. 2013, Sec 12.3) Consider an \\(n \\times p\\) feature matrix, \\(\\mathbf{X}\\), with element \\(x_{ij}\\), some of which are missing. Similar to 22.2, we can approximate the matrix \\(\\mathbf{X}\\) in terms of its leading PCs. We consider the \\(M\\) principal components that optimize \\[ \\underset{\\mathbf{A} \\in R^{n \\times M}, \\mathbf{B} \\in R^{p \\times M}}{\\operatorname{min}} \\{ \\sum_{(i,j) \\in \\cal{O}} (x_{ij} - \\sum_{m=1}^M a_{im}b_{jm})^2 \\} \\] where \\(\\cal{O}\\) is the set of all observed pairs indices \\((i,j)\\), a subset of the possible \\(n \\times p\\) pairs Once this minimization is solved, One can impute a missing observation, \\(x_{ij}\\), with \\(\\hat{x}_{ij} = \\sum_{m=1}^M \\hat{a}_{im}\\hat{b}_{jm}\\) where \\(\\hat{a}_{im}, \\hat{b}_{jm}\\) are the \\((i,m)\\) and \\((j.m)\\) elements, respectively, of the matrices \\(\\hat{\\mathbf{A}}\\) and \\(\\hat{\\mathbf{B}}\\) from the minimization, and One can approximately recover the \\(M\\) principal component scores and loadings, as we did when the data were complete The challenge here is to solve this minimization problem: the eigen-decomposition non longer applies (as in 22.2 Hence, we have to use iterative algorithm (James et al. 2013 Alg 12.1) Create a complete data matrix \\(\\tilde{\\mathbf{X}}\\) of dimension \\(n \\times p\\) of which the \\((i,j)\\) element equals \\[ \\tilde{x}_{ij} = \\begin{cases} x_{ij} &amp; \\text{if } (i,j) \\in \\cal{O} \\\\ \\bar{x}_{j} &amp; \\text{if } (i,j) \\notin \\cal{O} \\end{cases} \\] where \\(\\bar{x}_j\\) is the average of the observed values for the \\(j\\)th variable in the incomplete data matrix \\(\\mathbf{X}\\) \\(\\cal{O}\\) indexes the observations that are observed in \\(\\mathbf{X}\\) Repeat these 3 steps until some objectives are met a. Solve \\[ \\underset{\\mathbf{A} \\in R^{n \\times M}, \\mathbf{B} \\in R^{p \\times M}}{\\operatorname{min}} \\{ \\sum_{(i,j) \\in \\cal{O}} (x_{ij} - \\sum_{m=1}^M a_{im}b_{jm})^2 \\} \\] by computing the principal components of \\(\\tilde{\\mathbf{X}}\\) b. For each element \\((i,j) \\notin \\cal{O}\\), set \\(\\tilde{x}_{ij} \\leftarrow \\sum_{m=1}^M \\hat{a}_{im}\\hat{b}_{jm}\\) c. Compute the objective \\[ \\sum_{(i,j \\in \\cal{O})} (x_{ij} - \\sum_{m=1}^M \\hat{a}_{im} \\hat{b}_{jm})^2 \\] Return the estimated missing entries \\(\\tilde{x}_{ij}, (i,j) \\notin \\cal{O}\\) 11.2.5 Other methods For panel data, or clustered data, use pan package by Schafer (1997) References "],["criteria-for-choosing-an-effective-approach.html", "11.3 Criteria for Choosing an Effective Approach", " 11.3 Criteria for Choosing an Effective Approach Criteria for an ideal technique in treating missing data: Unbiased parameter estimates Adequate power Accurate standard errors (p-values, confidence intervals) The Multiple Imputation and Full Information Maximum Likelihood are the the most ideal candidate. Single imputation will generally lead to underestimation of standard errors. "],["another-perspective.html", "11.4 Another Perspective", " 11.4 Another Perspective Model bias can arisen from various factors including: Imputation method Missing data mechanism (MCAR vs. MAR) Proportion of the missing data Information available in the data set Since the imputed observations are themselves estimates, their values have corresponding random error. But when you put in that estimate as a data point, your software doesn’t know that. So it overlooks the extra source of error, resulting in too-small standard errors and too-small p-values. So multiple imputation comes up with multiple estimates. Because multiple imputation have a random component, the multiple estimates are slightly different. This re-introduces some variation that your software can incorporate in order to give your model accurate estimates of standard error. Multiple imputation was a huge breakthrough in statistics about 20 years ago. It solves a lot of problems with missing data (though, unfortunately not all) and if done well, leads to unbiased parameter estimates and accurate standard errors. If your rate of missing data is very, very small (2-3%) it doesn’t matter what technique you use. Remember that there are three goals of multiple imputation, or any missing data technique: Unbiased parameter estimates in the final analysis (regression coefficients, group means, odds ratios, etc.) accurate standard errors of those parameter estimates, and therefore, accurate p-values in the analysis adequate power to find meaningful parameter values significant. Hence, Don’t round off imputations for dummy variables. Many common imputation techniques, like MCMC, require normally distributed variables. Suggestions for imputing categorical variables were to dummy code them, impute them, then round off imputed values to 0 or 1. Recent research, however, has found that rounding off imputed values actually leads to biased parameter estimates in the analysis model. You actually get better results by leaving the imputed values at impossible values, even though it’s counter-intuitive. Don’t transform skewed variables. Likewise, when you transform a variable to meet normality assumptions before imputing, you not only are changing the distribution of that variable but the relationship between that variable and the others you use to impute. Doing so can lead to imputing outliers, creating more bias than just imputing the skewed variable. Use more imputations. The advice for years has been that 5-10 imputations are adequate. And while this is true for unbiasedness, you can get inconsistent results if you run the multiple imputation more than once. (Bodner 2008) recommends having as many imputations as the percentage of missing data. Since running more imputations isn’t any more work for the data analyst, there’s no reason not to. Create multiplicative terms before imputing. When the analysis model contains a multiplicative term, like an interaction term or a quadratic, create the multiplicative terms first, then impute. Imputing first, and then creating the multiplicative terms actually biases the regression parameters of the multiplicative term (Von Hippel 2009) References "],["diagnosing-the-mechanism.html", "11.5 Diagnosing the Mechanism", " 11.5 Diagnosing the Mechanism 11.5.1 MAR vs. MNAR The only true way to distinguish between MNAR and MAR is to measure some of that missing data. It’s a common practice among professional surveyors to, for example, follow-up on a paper survey with phone calls to a group of the non-respondents and ask a few key survey items. This allows you to compare respondents to non-respondents. If their responses on those key items differ by very much, that’s good evidence that the data are MNAR. However in most missing data situations, we can’t get a hold of the missing data. So while we can’t test it directly, we can examine patterns in the data get an idea of what’s the most likely mechanism. The first thing in diagnosing randomness of the missing data is to use your substantive scientific knowledge of the data and your field. The more sensitive the issue, the less likely people are to tell you. They’re not going to tell you as much about their cocaine usage as they are about their phone usage. Likewise, many fields have common research situations in which non-ignorable data is common. Educate yourself in your field’s literature. 11.5.2 MCAR vs. MAR There is a very useful test for MCAR, Little’s test. A second technique is to create dummy variables for whether a variable is missing. 1 = missing 0 = observed You can then run t-tests and chi-square tests between this variable and other variables in the data set to see if the missingness on this variable is related to the values of other variables. For example, if women really are less likely to tell you their weight than men, a chi-square test will tell you that the percentage of missing data on the weight variable is higher for women than men. "],["application-7.html", "11.6 Application", " 11.6 Application library(visdat) library(naniar) library(ggplot2) vis_miss() ggplot(data, aes(x, y)) + geom_miss_point() + facet_wrap(~ group) gg_miss_var(data, facet = group) gg_miss_upset(data) gg_miss_fct(x = variable1, fct = variable2) Read more on The Missing Book by Nicholas Tierney &amp; Allison Horst How many imputation: Usually 5. (unless you have extremely high portion of missing, in which case you probably need to check your data again) According to Rubin, the relative efficiency of an estimate based on \\(m\\) imputations to infinity imputation is approximately \\[ (1+\\frac{\\lambda}{m})^{-1} \\] where \\(\\lambda\\) is the rate of missing data Example 50% of missing data means an estimate based on 5 imputation has standard deviation that is only 5% wider compared to an estimate based on infinity imputation (\\(\\sqrt{1+0.5/5}=1.049\\)) library(missForest) #load data data &lt;- iris #Generate 10% missing values at Random set.seed(1) iris.mis &lt;- prodNA(iris, noNA = 0.1) #remove categorical variables iris.mis.cat &lt;- iris.mis iris.mis &lt;- subset(iris.mis, select = -c(Species)) 11.6.1 Imputation with mean / median / mode # whole data set e1071::impute(iris.mis, what = &quot;mean&quot;) # replace with mean e1071::impute(iris.mis, what = &quot;median&quot;) # replace with median # by variables Hmisc::impute(iris.mis$Sepal.Length, mean) # mean Hmisc::impute(iris.mis$Sepal.Length, median) # median Hmisc::impute(iris.mis$Sepal.Length, 0) # replace specific number check accuracy # library(DMwR2) # actuals &lt;- iris$Sepal.Width[is.na(iris.mis$Sepal.Width)] # predicteds &lt;- rep(mean(iris$Sepal.Width, na.rm=T), length(actuals)) # regr.eval(actuals, predicteds) 11.6.2 KNN # library(DMwR2) # # iris.mis[,!names(iris.mis) %in% c(&quot;Sepal.Length&quot;)] # # data should be this line. But since knn cant work with 3 or less variables, we need to use at least 4 variables. # # # knn is not appropriate for categorical variables # knnOutput &lt;- # knnImputation(data = iris.mis.cat, # #k = 10, # meth = &quot;median&quot; # could use &quot;median&quot; or &quot;weighAvg&quot; # ) # should exclude the dependent variable: Sepal.Length # anyNA(knnOutput) # library(DMwR2) # actuals &lt;- iris$Sepal.Width[is.na(iris.mis$Sepal.Width)] # predicteds &lt;- knnOutput[is.na(iris.mis$Sepal.Width), &quot;Sepal.Width&quot;] # regr.eval(actuals, predicteds) Compared to mape (mean absolute percentage error) of mean imputation, we see almost always see improvements. 11.6.3 rpart For categorical (factor) variables, rpart can handle library(rpart) class_mod &lt;- rpart(Species ~ . - Sepal.Length, data=iris.mis.cat[!is.na(iris.mis.cat$Species), ], method=&quot;class&quot;, na.action=na.omit) # since Species is a factor, and exclude dependent variable &quot;Sepal.Length&quot; anova_mod &lt;- rpart(Sepal.Width ~ . - Sepal.Length, data=iris.mis[!is.na(iris.mis$Sepal.Width), ], method=&quot;anova&quot;, na.action=na.omit) # since Sepal.Width is numeric. species_pred &lt;- predict(class_mod, iris.mis.cat[is.na(iris.mis.cat$Species), ]) width_pred &lt;- predict(anova_mod, iris.mis[is.na(iris.mis$Sepal.Width), ]) 11.6.4 MICE (Multivariate Imputation via Chained Equations) Assumption: data are MAR It imputes data per variable by specifying an imputation model for each variable Example We have \\(X_1, X_2,..,X_k\\). If \\(X_1\\) has missing data, then it is regressed on the rest of the variables. Same procedure applies if \\(X_2\\) has missing data. Then, predicted values are used in place of missing values. By default, Continuous variables use linear regression. Categorical Variables use logistic regression. Methods in MICE: PMM (Predictive Mean Matching) – For numeric variables logreg(Logistic Regression) – For Binary Variables( with 2 levels) polyreg(Bayesian polytomous regression) – For Factor Variables (&gt;= 2 levels) Proportional odds model (ordered, &gt;= 2 levels) # load package library(mice) library(VIM) # check missing values md.pattern(iris.mis) #&gt; Sepal.Width Sepal.Length Petal.Length Petal.Width #&gt; 100 1 1 1 1 0 #&gt; 15 1 1 1 0 1 #&gt; 8 1 1 0 1 1 #&gt; 2 1 1 0 0 2 #&gt; 11 1 0 1 1 1 #&gt; 1 1 0 1 0 2 #&gt; 1 1 0 0 1 2 #&gt; 1 1 0 0 0 3 #&gt; 7 0 1 1 1 1 #&gt; 3 0 1 0 1 2 #&gt; 1 0 0 1 1 2 #&gt; 11 15 15 19 60 #plot the missing values aggr(iris.mis, col=mdc(1:2), numbers=TRUE, sortVars=TRUE, labels=names(iris.mis), cex.axis=.7, gap=3, ylab=c(&quot;Proportion of missingness&quot;,&quot;Missingness Pattern&quot;)) #&gt; #&gt; Variables sorted by number of missings: #&gt; Variable Count #&gt; Petal.Width 0.12666667 #&gt; Sepal.Length 0.10000000 #&gt; Petal.Length 0.10000000 #&gt; Sepal.Width 0.07333333 mice_plot &lt;- aggr(iris.mis, col=c(&#39;navyblue&#39;,&#39;yellow&#39;), numbers=TRUE, sortVars=TRUE, labels=names(iris.mis), cex.axis=.7, gap=3, ylab=c(&quot;Missing data&quot;,&quot;Pattern&quot;)) #&gt; #&gt; Variables sorted by number of missings: #&gt; Variable Count #&gt; Petal.Width 0.12666667 #&gt; Sepal.Length 0.10000000 #&gt; Petal.Length 0.10000000 #&gt; Sepal.Width 0.07333333 Impute Data imputed_Data &lt;- mice( iris.mis, m = 5, # number of imputed datasets maxit = 50, # number of iterations taken to impute missing values method = &#39;pmm&#39;, # method used in imputation. Here, we used predictive mean matching # other methods can be # &quot;pmm&quot;: Predictive mean matching # &quot;midastouch&quot; : weighted predictive mean matching # &quot;sample&quot;: Random sample from observed values # &quot;cart&quot;: classification and regression trees # &quot;rf&quot;: random forest imputations. # &quot;2lonly.pmm&quot;: Level-2 class predictive mean matching # Other methods based on whether variables are (1) numeric, (2) binary, (3) ordered, (4), unordered seed = 500 ) summary(imputed_Data) #&gt; Class: mids #&gt; Number of multiple imputations: 5 #&gt; Imputation methods: #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width #&gt; &quot;pmm&quot; &quot;pmm&quot; &quot;pmm&quot; &quot;pmm&quot; #&gt; PredictorMatrix: #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width #&gt; Sepal.Length 0 1 1 1 #&gt; Sepal.Width 1 0 1 1 #&gt; Petal.Length 1 1 0 1 #&gt; Petal.Width 1 1 1 0 #make a density plot densityplot(imputed_Data) #the red (imputed values) should be similar to the blue (observed) Check imputed dataset # 1st dataset completeData &lt;- complete(imputed_Data,1) # 2nd dataset complete(imputed_Data,2) Regression model using imputed datasets # regression model fit &lt;- with(data = imputed_Data, exp = lm(Sepal.Width ~ Sepal.Length + Petal.Width)) #combine results of all 5 models combine &lt;- pool(fit) summary(combine) #&gt; term estimate std.error statistic df p.value #&gt; 1 (Intercept) 1.8963130 0.32453912 5.843095 131.0856 3.838556e-08 #&gt; 2 Sepal.Length 0.2974293 0.06679204 4.453066 130.2103 1.802241e-05 #&gt; 3 Petal.Width -0.4811603 0.07376809 -6.522608 108.8253 2.243032e-09 11.6.5 Amelia Use bootstrap based EMB algorithm (faster and robust to impute many variables including cross sectional, time series data etc) Use parallel imputation feature using multicore CPUs. Assumptions All variables follow Multivariate Normal Distribution (MVN). Hence, this package works best when data is MVN, or transformation to normality. Missing data is Missing at Random (MAR) Steps: m bootstrap samples and applies EMB algorithm to each sample. Then we have m different estimates of mean and variances. the first set of estimates are used to impute first set of missing values using regression, then second set of estimates are used for second set and so on. However, Amelia is different from MICE MICE imputes data on variable by variable basis whereas MVN uses a joint modeling approach based on multivariate normal distribution. MICE can handle different types of variables while the variables in MVN need to be normally distributed or transformed to approximate normality. MICE can manage imputation of variables defined on a subset of data whereas MVN cannot. library(Amelia) data(&quot;iris&quot;) #seed 10% missing values iris.mis &lt;- prodNA(iris, noNA = 0.1) # idvars – keep all ID variables and other variables which you don’t want to impute # noms – keep nominal variables here #specify columns and run amelia amelia_fit &lt;- amelia(iris.mis, m=5, parallel = &quot;multicore&quot;, noms = &quot;Species&quot;) #&gt; -- Imputation 1 -- #&gt; #&gt; 1 2 3 4 5 6 7 8 #&gt; #&gt; -- Imputation 2 -- #&gt; #&gt; 1 2 3 4 5 6 7 8 #&gt; #&gt; -- Imputation 3 -- #&gt; #&gt; 1 2 3 4 5 #&gt; #&gt; -- Imputation 4 -- #&gt; #&gt; 1 2 3 4 5 6 7 #&gt; #&gt; -- Imputation 5 -- #&gt; #&gt; 1 2 3 4 5 6 7 # access imputed outputs # amelia_fit$imputations[[1]] 11.6.6 missForest an implementation of random forest algorithm (a non parametric imputation method applicable to various variable types). Hence, no assumption about function form of f. Instead, it tries to estimate f such that it can be as close to the data points as possible. builds a random forest model for each variable. Then it uses the model to predict missing values in the variable with the help of observed values. It yields out of bag imputation error estimate. Moreover, it provides high level of control on imputation process. Since bagging works well on categorical variable too, we don’t need to remove them here. library(missForest) #impute missing values, using all parameters as default values iris.imp &lt;- missForest(iris.mis) # check imputed values # iris.imp$ximp # check imputation error # NRMSE is normalized mean squared error. It is used to represent error derived from imputing continuous values. # PFC (proportion of falsely classified) is used to represent error derived from imputing categorical values. iris.imp$OOBerror #&gt; NRMSE PFC #&gt; 0.13631893 0.04477612 #comparing actual data accuracy iris.err &lt;- mixError(iris.imp$ximp, iris.mis, iris) iris.err #&gt; NRMSE PFC #&gt; 0.1501524 0.0625000 This means categorical variables are imputed with 5% error and continuous variables are imputed with 14% error. This can be improved by tuning the values of mtry and ntree parameter. mtry refers to the number of variables being randomly sampled at each split. ntree refers to number of trees to grow in the forest. 11.6.7 Hmisc impute() function imputes missing value using user defined statistical method (mean, max, mean). It’s default is median. aregImpute() allows mean imputation using additive regression, bootstrapping, and predictive mean matching. In bootstrapping, different bootstrap resamples are used for each of multiple imputations. Then, a flexible additive model (non parametric regression method) is fitted on samples taken with replacements from original data and missing values (acts as dependent variable) are predicted using non-missing values (independent variable). it uses predictive mean matching (default) to impute missing values. Predictive mean matching works well for continuous and categorical (binary &amp; multi-level) without the need for computing residuals and maximum likelihood fit. Note For predicting categorical variables, Fisher’s optimum scoring method is used. Hmisc automatically recognizes the variables types and uses bootstrap sample and predictive mean matching to impute missing values. missForest can outperform Hmisc if the observed variables have sufficient information. Assumption linearity in the variables being predicted. library(Hmisc) # impute with mean value iris.mis$imputed_age &lt;- with(iris.mis, impute(Sepal.Length, mean)) # impute with random value iris.mis$imputed_age2 &lt;- with(iris.mis, impute(Sepal.Length, &#39;random&#39;)) # could also use min, max, median to impute missing value # using argImpute impute_arg &lt;- aregImpute(~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width + Species, data = iris.mis, n.impute = 5) # argImpute() automatically identifies the variable type and treats them accordingly. #&gt; Iteration 1 Iteration 2 Iteration 3 Iteration 4 Iteration 5 Iteration 6 Iteration 7 Iteration 8 impute_arg # R-squares are for predicted missing values. #&gt; #&gt; Multiple Imputation using Bootstrap and PMM #&gt; #&gt; aregImpute(formula = ~Sepal.Length + Sepal.Width + Petal.Length + #&gt; Petal.Width + Species, data = iris.mis, n.impute = 5) #&gt; #&gt; n: 150 p: 5 Imputations: 5 nk: 3 #&gt; #&gt; Number of NAs: #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species #&gt; 11 11 13 24 16 #&gt; #&gt; type d.f. #&gt; Sepal.Length s 2 #&gt; Sepal.Width s 2 #&gt; Petal.Length s 2 #&gt; Petal.Width s 2 #&gt; Species c 2 #&gt; #&gt; Transformation of Target Variables Forced to be Linear #&gt; #&gt; R-squares for Predicting Non-Missing Values for Each Variable #&gt; Using Last Imputations of Predictors #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species #&gt; 0.907 0.660 0.978 0.963 0.993 # check imputed variable Sepal.Length impute_arg$imputed$Sepal.Length #&gt; [,1] [,2] [,3] [,4] [,5] #&gt; 19 5.2 5.2 5.2 5.8 5.7 #&gt; 21 5.1 5.0 5.1 5.7 5.4 #&gt; 31 4.8 5.0 5.2 5.0 4.8 #&gt; 35 4.6 4.9 4.9 4.9 4.8 #&gt; 49 5.0 5.1 5.1 5.1 5.1 #&gt; 62 6.2 5.7 6.0 6.4 5.6 #&gt; 65 5.5 5.5 5.2 5.8 5.5 #&gt; 67 6.5 5.8 5.8 6.3 6.5 #&gt; 82 5.2 5.1 5.7 5.8 5.5 #&gt; 113 6.4 6.5 7.4 7.2 6.3 #&gt; 122 6.2 5.8 5.5 5.8 6.7 11.6.8 mi allows graphical diagnostics of imputation models and convergence of imputation process. uses Bayesian version of regression models to handle issue of separation. automatically detects irregularities in data (e.g., high collinearity among variables). adds noise to imputation process to solve the problem of additive constraints. library(mi) # default values of parameters # 1. rand.imp.method as “bootstrap” # 2. n.imp (number of multiple imputations) as 3 # 3. n.iter ( number of iterations) as 30 mi_data &lt;- mi(iris.mis, seed = 335) summary(mi_data) "],["data.html", "Chapter 12 Data", " Chapter 12 Data There are multiple ways to categorize data. For example, Qualitative vs. Quantitative: Qualitative Quantitative in-depth interviews, documents, focus groups, case study, ethnography. open-ended questions. observations in words experiments, observation in words, survey with closed-end questions, structured interviews language, descriptive quantities, numbers Text-based Numbers-based Subjective Objectivity "],["cross-sectional.html", "12.1 Cross-Sectional", " 12.1 Cross-Sectional "],["time-series-1.html", "12.2 Time Series", " 12.2 Time Series \\[ y_t = \\beta_0 + x_{t1}\\beta_1 + x_{t2}\\beta_2 + ... + x_{t(k-1)}\\beta_{k-1} + \\epsilon_t \\] Examples Static Model \\(y_t=\\beta_0 + x_1\\beta_1 + x_2\\beta_2 - x_3\\beta_3 - \\epsilon_t\\) Finite Distributed Lag model \\(y_t=\\beta_0 + pe_t\\delta_0 + pe_{t-1}\\delta_1 +pe_{t-2}\\delta_2 + \\epsilon_t\\) Long Run Propensity (LRP) is \\(LRP = \\delta_0 + \\delta_1 + \\delta_2\\) Dynamic Model \\(GDP_t = \\beta_0 + \\beta_1GDP_{t-1} - \\epsilon_t\\) Finite Sample Properties for Time Series: A1-A3: OLS is unbiased A1-A4: usual standard errors are consistent and Gauss-Markov Theorem holds (OLS is BLUE) A1-A6, A6: Finite Sample Wald Test (t-test and F-test) are valid A3 might not hold under time series setting Spurious Time Trend - solvable Strict vs Contemporaneous Exogeneity - not solvable In time series data, there are many processes: Autoregressive model of order p: AR(p) Moving average model of order q: MA(q) Autoregressive model of order p and moving average model of order q: ARMA(p,q) Autoregressive conditional heteroskedasticity model of order p: ARCH(p) Generalized Autoregressive conditional heteroskedasticity of orders p and q; GARCH(p.q) 12.2.1 Deterministic Time trend Both the dependent and independent variables are trending over time Spurious Time Series Regression \\[ y_t = \\alpha_0 + t\\alpha_1 + v_t \\] and x takes the form \\[ x_t = \\lambda_0 + t\\lambda_1 + u_t \\] \\(\\alpha_1 \\neq 0\\) and \\(\\lambda_1 \\neq 0\\) \\(v_t\\) and \\(u_t\\) are independent there is no relationship between \\(y_t\\) and \\(x_t\\) If we estimate the regression, \\[ y_t = \\beta_0 + x_t\\beta_1 + \\epsilon_t \\] so the true \\(\\beta_1=0\\) Inconsistent: \\(plim(\\hat{\\beta}_1)=\\frac{\\alpha_1}{\\lambda_1}\\) Invalid Inference: \\(|t| \\to^d \\infty\\) for \\(H_0: \\beta_1=0\\), will always reject the null as \\(n \\to \\infty\\) Uninformative \\(R^2\\): \\(plim(R^2) = 1\\) will be able to perfectly predict as \\(n \\to \\infty\\) We can rewrite the equation as \\[ y_t=\\beta_0 + \\beta_1x_t+\\epsilon_t \\\\ \\epsilon_t = \\alpha_1t + v_t \\] where \\(\\beta_0 = \\alpha_0\\) and \\(\\beta_1=0\\). Since \\(x_t\\) is a deterministic function of time, \\(\\epsilon_t\\) is correlated with \\(x_t\\) and we have the usual omitted variable bias. Even when \\(y_t\\) and \\(x_t\\) are related (\\(\\beta_1 \\neq 0\\)) but they are both trending over time, we still get spurious results with the simple regression on \\(y_t\\) on \\(x_t\\) Solutions to Spurious Trend Include time trend t as an additional control consistent parameter estimates and valid inference Detrend both dependent and independent variables and then regress the detrended outcome on detrended independent variables (i.e., regress residuals \\(\\hat{u}_t\\) on residuals \\(\\hat{v}_t\\)) Detrending is the same as partialling out in the Frisch-Waugh-Lovell Theorem Could allow for non-linear time trends by including t \\(t^2\\), and exp(t) Allow for seasonality by including indicators for relevant “seasons” (quarters, months, weeks). A3 does not hold under: Feedback Effect \\(\\epsilon_t\\) influences next period’s independent variables Dynamic Specification include last time period outcome as an explanatory variable Dynamically Complete For finite distrusted lag model, the number of lags needs to be absolutely correct. 12.2.2 Feedback Effect \\[ y_t = \\beta_0 + x_t\\beta_1 + \\epsilon_t \\] A3 \\[ E(\\epsilon_t|\\mathbf{X})= E(\\epsilon_t| x_1,x_2, ...,x_t,x_{t+1},...,x_T) \\] will not equal 0, because \\(y_t\\) will likely influence \\(x_{t+1},..,x_T\\) A3 is violated because we require the error to be uncorrelated with all time observation of the independent regressors (strict exogeneity) 12.2.3 Dynamic Specification \\[ y_t = \\beta_0 + y_{t-1}\\beta_1 + \\epsilon_t \\] \\[ E(\\epsilon_t|\\mathbf{X})= E(\\epsilon_t| y_1,y_2, ...,y_t,y_{t+1},...,y_T) \\] will not equal 0, because \\(y_t\\) and \\(\\epsilon_t\\) are inherently correlated A3 is violated because we require the error to be uncorrelated with all time observation of the independent regressors (strict exogeneity) Dynamic Specification is not allowed under A3 12.2.4 Dynamically Complete \\[ y_t = \\beta_0 + x_t\\delta_0 + x_{t-1}\\delta_1 + \\epsilon_t \\] \\[ E(\\epsilon_t|\\mathbf{X})= E(\\epsilon_t| x_1,x_2, ...,x_t,x_{t+1},...,x_T) \\] will not equal 0, because if we did not include enough lags, \\(x_{t-2}\\) and \\(\\epsilon_t\\) are correlated A3 is violated because we require the error to be uncorrelated with all time observation of the independent regressors (strict exogeneity) Can be corrected by including more lags (but when stop? ) Without A3 OLS is biased Gauss-Markov Theorem Finite Sample Properties are invalid then, we can Focus on Large Sample Properties Can use A3a instead of A3 A3a in time series become \\[ A3a: E(\\mathbf{x}_t&#39;\\epsilon_t)= 0 \\] only the regressors in this time period need to be independent from the error in this time period (Contemporaneous Exogeneity) \\(\\epsilon_t\\) can be correlated with \\(...,x_{t-2},x_{t-1},x_{t+1}, x_{t+2},...\\) can have a dynamic specification \\(y_t = \\beta_0 + y_{t-1}\\beta_1 + \\epsilon_t\\) Deriving Large Sample Properties for Time Series Assumptions A1, A2, A3a Weak Law and Central Limit Theorem depend on A5 \\(x_t\\) and \\(\\epsilon_t\\) are dependent over t without Weak Law or Central Limit Theorem depend on A5, we cannot have Large Sample Properties for OLS Instead of A5, we consider A5a Derivation of the Asymptotic Variance depends on A4 time series setting introduces Serial Correlation: \\(Cov(\\epsilon_t, \\epsilon_s) \\neq 0\\) under A1, A2, A3a, and A5a, OLS estimator is consistent, and asymptotically normal 12.2.5 Highly Persistent Data If \\(y_t, \\mathbf{x}_t\\) are not weakly dependent stationary process * \\(y_t\\) and \\(y_{t-h}\\) are not almost independent for large h * A5a does not hold and OLS is not consistent and does not have a limiting distribution. * Example + Random Walk \\(y_t = y_{t-1} + u_t\\) + Random Walk with a drift: \\(y_t = \\alpha+ y_{t-1} + u_t\\) Solution First difference is a stationary process \\[ y_t - y_{t-1} = u_t \\] If \\(u_t\\) is a weakly dependent process (also called integrated of order 0) then \\(y_t\\) is said to be difference-stationary process (integrated of order 1) For regression, if \\(\\{y_t, \\mathbf{x}_t \\}\\) are random walks (integrated at order 1), can consistently estimate the first difference equation \\[ \\begin{aligned} y_t - y_{t-1} &amp;= (\\mathbf{x}_t - \\mathbf{x}_{t-1}\\beta + \\epsilon_t - \\epsilon_{t-1}) \\\\ \\Delta y_t &amp;= \\Delta \\mathbf{x}\\beta + \\Delta u_t \\end{aligned} \\] Unit Root Test \\[ y_t = \\alpha + \\alpha y_{t-1} + u_t \\] tests if \\(\\rho=1\\) (integrated of order 1) Under the null \\(H_0: \\rho = 1\\), OLS is not consistent or asymptotically normal. Under the alternative \\(H_a: \\rho &lt; 1\\), OLS is consistent and asymptotically normal. usual t-test is not valid, will need to use the transformed equation to produce a valid test. Dickey-Fuller Test \\[ \\Delta y_t= \\alpha + \\theta y_{t-1} + v_t \\] where \\(\\theta = \\rho -1\\) \\(H_0: \\theta = 0\\) and \\(H_a: \\theta &lt; 0\\) Under the null, \\(\\Delta y_t\\) is weakly dependent but \\(y_{t-1}\\) is not. Dickey and Fuller derived the non-normal asymptotic distribution. If you reject the null then \\(y_t\\) is not a random walk. Concerns with the standard Dickey Fuller Test 1. Only considers a fairly simplistic dynamic relationship \\[ \\Delta y_t = \\alpha + \\theta y_{t-1} + \\gamma_1 \\Delta_{t-1} + ..+ \\gamma_p \\Delta_{t-p} +v_t \\] with one additional lag, under the null \\(\\Delta_{y_t}\\) is an AR(1) process and under the alternative \\(y_t\\) is an AR(2) process. Solution: include lags of \\(\\Delta_{y_t}\\) as controls. Does not allow for time trend \\[ \\Delta y_t = \\alpha + \\theta y_{t-1} + \\delta t + v_t \\] allows \\(y_t\\) to have a quadratic relationship with t Solution: include time trend (changes the critical values). Adjusted Dickey-Fuller Test \\[ \\Delta y_t = \\alpha + \\theta y_{t-1} + \\delta t + \\gamma_1 \\Delta y_{t-1} + ... + \\gamma_p \\Delta y_{t-p} + v_t \\] where \\(\\theta = 1 - \\rho\\) \\(H_0: \\theta_1 = 0\\) and \\(H_a: \\theta_1 &lt; 0\\) Under the null, \\(\\Delta y_t\\) is weakly dependent but \\(y_{t-1}\\) is not Critical values are different with the time trend, if you reject the null then \\(y_t\\) is not a random walk. 12.2.5.0.1 Newey West Standard Errors If A4 does not hold, we can use Newey West Standard Errors (HAC - Heteroskedasticity Autocorrelation Consistent) \\[ \\hat{B} = T^{-1} \\sum_{t=1}^{T} e_t^2 \\mathbf{x&#39;_tx_t} + \\sum_{h=1}^{g}(1-\\frac{h}{g+1})T^{-1}\\sum_{t=h+1}^{T} e_t e_{t-h}(\\mathbf{x_t&#39;x_{t-h}+ x_{t-h}&#39;x_t}) \\] estimates the covariances up to a distance g part downweights to insure \\(\\hat{B}\\) is PSD How to choose g: For yearly data: g = 1 or 2 is likely to account for most of the correlation For quarterly or monthly data: g should be larger (g = 4 or 8 for quarterly and g = 12 or 14 for monthly) can also take integer part of \\(4(T/100)^{2/9}\\) or integer part of \\(T^{1/4}\\) Testing for Serial Correlation Run OLS regression of \\(y_t\\) on \\(\\mathbf{x_t}\\) and obtain residuals \\(e_t\\) Run OLS regression of \\(e_t\\) on \\(\\mathbf{x}_t, e_{t-1}\\) and test whether coefficient on \\(e_{t-1}\\) is significant. Reject the null of no serial correlation if the coefficient is significant at the 5% level. Test using heteroskedastic robust standard errors can include \\(e_{t-2},e_{t-3},..\\) in step 2 to test for higher order serial correlation (t-test would now be an F-test of joint significance) "],["repeated-cross-sections.html", "12.3 Repeated Cross Sections", " 12.3 Repeated Cross Sections For each time point (day, month, year, etc.), a set of data is sampled. This set of data can be different among different time points. For example, you can sample different groups of students each time you survey. Allowing structural change in pooled cross section \\[ y_i = \\mathbf{x}_i \\beta + \\delta_1 y_1 + ... + \\delta_T y_T + \\epsilon_i \\] Dummy variables for all but one time period allows different intercept for each time period allows outcome to change on average for each time period Allowing for structural change in pooled cross section \\[ y_i = \\mathbf{x}_i \\beta + \\mathbf{x}_i y_1 \\gamma_1 + ... + \\mathbf{x}_i y_T \\gamma_T + \\delta_1 y_1 + ...+ \\delta_T y_T + \\epsilon_i \\] Interact \\(x_i\\) with time period dummy variables allows different slopes for each time period allows effects to change based on time period (structural break) Interacting all time period dummies with \\(x_i\\) can produce many variables - use hypothesis testing to determine which structural breaks are needed. 12.3.1 Pooled Cross Section \\[ y_i=\\mathbf{x_i\\beta +x_i \\times y1\\gamma_1 + ...+ x_i \\times yT\\gamma_T + \\delta_1y_1+...+ \\delta_Ty_T + \\epsilon_i} \\] Interact \\(x_i\\) with time period dummy variables allows different slopes for each time period allows effect to change based on time period (structural break) interacting all time period dummies with \\(x_i\\) can produce many variables - use hypothesis testing to determine which structural breaks are needed. "],["panel-data.html", "12.4 Panel Data", " 12.4 Panel Data Detail notes in R can be found here Follows an individual over T time periods. Panel data structure is like having n samples of time series data Characteristics Information both across individuals and over time (cross-sectional and time-series) N individuals and T time periods Data can be either Balanced: all individuals are observed in all time periods Unbalanced: all individuals are not observed in all time periods. Assume correlation (clustering) over time for a given individual, with independence over individuals. Types Short panel: many individuals and few time periods. Long panel: many time periods and few individuals Both: many time periods and many individuals Time Trends and Time Effects Nonlinear Seasonality Discontinuous shocks Regressors Time-invariant regressors \\(x_{it}=x_i\\) for all t (e.g., gender, race, education) have zero within variation Individual-invariant regressors \\(x_{it}=x_{t}\\) for all i (e.g., time trend, economy trends) have zero between variation Variation for the dependent variable and regressors Overall variation: variation over time and individuals. Between variation: variation between individuals Within variation: variation within individuals (over time). Estimate Formula Individual mean \\(\\bar{x_i}= \\frac{1}{T} \\sum_{t}x_{it}\\) Overall mean \\(\\bar{x}=\\frac{1}{NT} \\sum_{i} \\sum_t x_{it}\\) Overall Variance \\(s _O^2 = \\frac{1}{NT-1} \\sum_i \\sum_t (x_{it} - \\bar{x})^2\\) Between variance \\(s_B^2 = \\frac{1}{N-1} \\sum_i (\\bar{x_i} -\\bar{x})^2\\) Within variance \\(s_W^2= \\frac{1}{NT-1} \\sum_i \\sum_t (x_{it} - \\bar{x_i})^2 = \\frac{1}{NT-1} \\sum_i \\sum_t (x_{it} - \\bar{x_i} +\\bar{x})^2\\) Note: \\(s_O^2 \\approx s_B^2 + s_W^2\\) Since we have n observation for each time period t, we can control for each time effect separately by including time dummies (time effects) \\[ y_{it}=\\mathbf{x_{it}\\beta} + d_1\\delta_1+...+d_{T-1}\\delta_{T-1} + \\epsilon_{it} \\] Note: we cannot use these many time dummies in time series data because in time series data, our n is 1. Hence, there is no variation, and sometimes not enough data compared to variables to estimate coefficients. Unobserved Effects Model Similar to group clustering, assume that there is a random effect that captures differences across individuals but is constant in time. \\[ y_it=\\mathbf{x_{it}\\beta} + d_1\\delta_1+...+d_{T-1}\\delta_{T-1} + c_i + u_{it} \\] where \\(c_i + u_{it} = \\epsilon_{it}\\) \\(c_i\\) unobserved individual heterogeneity (effect) \\(u_{it}\\) idiosyncratic shock \\(\\epsilon_{it}\\) unobserved error term. 12.4.1 Pooled OLS Estimator If \\(c_i\\) is uncorrelated with \\(x_{it}\\) \\[ E(\\mathbf{x_{it}&#39;}(c_i+u_{it})) = 0 \\] then A3a still holds. And we have Pooled OLS consistent. If A4 does not hold, OLS is still consistent, but not efficient, and we need cluster robust SE. Sufficient for A3a to hold, we need Exogeneity for \\(u_{it}\\) A3a (contemporaneous exogeneity): \\(E(\\mathbf{x_{it}&#39;}u_{it})=0\\) time varying error Random Effect Assumption (time constant error): \\(E(\\mathbf{x_{it}&#39;}c_{i})=0\\) Pooled OLS will give you consistent coefficient estimates under A1, A2, A3a (for both \\(u_{it}\\) and RE assumption), and A5 (randomly sampling across i). 12.4.2 Individual-specific effects model If we believe that there is unobserved heterogeneity across individual (e.g., unobserved ability of an individual affects \\(y\\)), If the individual-specific effects are correlated with the regressors, then we have the Fixed Effects Estimator. and if they are not correlated we have the Random Effects Estimator. 12.4.2.1 Random Effects Estimator Random Effects estimator is the Feasible GLS estimator that assumes \\(u_{it}\\) is serially uncorrelated and homoskedastic Under A1, A2, A3a (for both \\(u_{it}\\) and RE assumption) and A5 (randomly sampling across i), RE estimator is consistent. If A4 holds for \\(u_{it}\\), RE is the most efficient estimator If A4 fails to hold (may be heteroskedasticity across i, and serial correlation over t), then RE is not the most efficient, but still more efficient than pooled OLS. 12.4.2.2 Fixed Effects Estimator also known as Within Estimator uses within variation (over time) If the RE assumption is not hold (\\(E(\\mathbf{x_{it}&#39;}c_i) \\neq 0\\)), then A3a does not hold (\\(E(\\mathbf{x_{it}&#39;}\\epsilon_i) \\neq 0\\)). Hence, the OLS and RE are inconsistent/biased (because of omitted variable bias) However, FE can only fix bias due to time-invariant factors (both observables and unobservables) correlated with treatment (not time-variant factors that correlated with the treatment). The traditional FE technique is flawed when lagged dependent variables are included in the model. (Nickell 1981) (Narayanan and Nair 2013) With measurement error in the independent, FE will exacerbate the errors-in-the-variables bias. 12.4.2.2.1 Demean Approach To deal with violation in \\(c_i\\), we have \\[ y_{it}= \\mathbf{x_{it} \\beta} + c_i + u_{it} \\] \\[ \\bar{y_i}=\\bar{\\mathbf{x_i}} \\beta + c_i + \\bar{u_i} \\] where the second equation is the time averaged equation using within transformation, we have \\[ y_{it} - \\bar{y_i} = \\mathbf{(x_{it} - \\bar{x_i})}\\beta + u_{it} - \\bar{u_i} \\] because \\(c_i\\) is time constant. The Fixed Effects estimator uses POLS on the transformed equation \\[ y_{it} - \\bar{y_i} = \\mathbf{(x_{it} - \\bar{x_i})} \\beta + d_1\\delta_1 + ... + d_{T-2}\\delta_{T-2} + u_{it} - \\bar{u_i} \\] we need A3 (strict exogeneity) (\\(E((\\mathbf{x_{it}-\\bar{x_i}})&#39;(u_{it}-\\bar{u_i})=0\\)) to have FE consistent. Variables that are time constant will be absorbed into \\(c_i\\). Hence we cannot make inference on time constant independent variables. If you are interested in the effects of time-invariant variables, you could consider the OLS or between estimator It’s recommended that you should still use cluster robust standard errors. 12.4.2.2.2 Dummy Approach Equivalent to the within transformation (i.e., mathematically equivalent to Demean Approach), we can have the fixed effect estimator be the same with the dummy regression \\[ y_{it} = x_{it}\\beta + d_1\\delta_1 + ... + d_{T-2}\\delta_{T-2} + c_1\\gamma_1 + ... + c_{n-1}\\gamma_{n-1} + u_{it} \\] where \\[\\begin{equation} c_i = \\begin{cases} 1 &amp;\\text{if observation is i} \\\\ 0 &amp;\\text{otherwise} \\\\ \\end{cases} \\end{equation}\\] The standard error is incorrectly calculated. the FE within transformation is controlling for any difference across individual which is allowed to correlated with observables. 12.4.2.2.3 First-difference Approach Economists typically use this approach \\[ y_{it} - y_{i (t-1)} = (\\mathbf{x}_{it} - \\mathbf{x}_{i(t-1)}) \\beta + + (u_{it} - u_{i(t-1)}) \\] 12.4.2.2.4 Fixed Effects Summary The three approaches are almost equivalent. Demean Approach is mathematically equivalent to Dummy Approach If you have only 1 period, all 3 are the same. Since fixed effect is a within estimator, only status changes can contribute to \\(\\beta\\) variation. Hence, with a small number of changes then the standard error for \\(\\beta\\) will explode Status changes mean subjects change from (1) control to treatment group or (2) treatment to control group. Those who have status change, we call them switchers. (more on this in Treatment effect is typically non-directional. You can give a parameter for the direction if needed. Issues: You could have fundamental difference between switchers and non-switchers. Even though we can’t definitive test this, but providing descriptive statistics on switchers and non-switchers can give us confidence in our conclusion. Because fixed effects focus on bias reduction, you might have larger variance (typically, with fixed effects you will have less df) If the true model is random effect, economists typically don’t care, especially when \\(c_i\\) is the random effect and \\(c_i \\perp x_{it}\\) (because RE assumption is that it is unrelated to \\(x_{it}\\)). The reason why economists don’t care is because RE wouldn’t correct bias, it only improves efficiency over OLS. You can estimate FE for different units (not just individuals). FE removes bias from time invariant factors but not without costs because it uses within variation, which imposes strict exogeneity assumption on \\(u_{it}\\): \\(E[(x_{it} - \\bar{x}_{i})(u_{it} - \\bar{u}_{it})]=0\\) Recall \\[ Y_{it} = \\beta_0 + X_{it}\\beta_1 + \\alpha_i + u_{it} \\] where \\(\\epsilon_{it} = \\alpha_i + u_{it}\\) \\[ \\hat{\\sigma}^2_\\epsilon = \\frac{SSR_{OLS}}{NT - K} \\] \\[ \\hat{\\sigma}^2_u = \\frac{SSR_{FE}}{NT - (N+K)} = \\frac{SSR_{FE}}{N(T-1)-K} \\] It’s ambiguous whether your variance of error changes up or down because SSR can increase while the denominator decreases. FE can be unbiased, but not consistent (i.e., not converging to the true effect) 12.4.2.2.5 FE Examples 12.4.2.2.6 Blau (1999) Intergenerational mobility If we transfer resources to low income family, can we generate upward mobility (increase ability)? Mechanisms for intergenerational mobility Genetic (policy can’t affect) (i.e., ability endowment) Environmental indirect Environmental direct \\[ \\frac{\\% \\Delta \\text{Human capital}}{\\% \\Delta \\text{income}} \\] Financial transfer Income measures: Total household income Wage income Non-wage income Annual versus permanent income Core control variables: Bad controls are those jointly determined with dependent variable Control by mother = choice by mother Uncontrolled by mothers: mother race location of birth education of parents household structure at age 14 \\[ Y_{ijt} = X_{jt} \\beta_i + I_{jt} \\alpha_i + \\epsilon_{ijt} \\] where \\(i\\) = test \\(j\\) = individual (child) \\(t\\) = time Grandmother’s model Since child is nested within mother and mother nested within grandmother, the fixed effect of child is included in the fixed effect of mother, which is included in the fixed-effect of grandmother \\[ Y_{ijgmt} = X_{it} \\beta_{i} + I_{jt} \\alpha_i + \\gamma_g + u_{ijgmt} \\] where i = test, j = kid, m = mother, g = grandmother where \\(\\gamma_g\\) includes \\(\\gamma_m\\) includes \\(\\gamma_j\\) Grandma fixed-effect Pros: control for some genetics + fixed characteristics of how mother are raised can estimate effect of parameter income Con: Might not be a sufficient control Common to cluster a the fixed-effect level (common correlated component) Fixed effect exaggerates attenuation bias Error rate on survey can help you fix this (plug in the number only , but not the uncertainty associated with that number). 12.4.2.2.7 Babcock (2010) \\[ T_{ijct} = \\alpha_0 + S_{jct} \\alpha_1 + X_{ijct} \\alpha_2 + u_{ijct} \\] where \\(S_{jct}\\) is the average class expectation \\(X_{ijct}\\alpha_2\\) is the individual characteristics \\(i\\) student \\(j\\) instructor \\(c\\) course \\(t\\) time \\[ T_{ijct} = \\beta_0+ S_{jct} \\beta_1+ X_{ijct} \\beta_2 +\\mu_{jc} + \\epsilon_{ijct} \\] where \\(\\mu_{jc}\\) is instructor by course fixed effect (unique id), which is different from \\((\\theta_j + \\delta_c)\\) Decrease course shopping because conditioned on available information (\\(\\mu_{jc}\\)) (class grade and instructor’s info). Grade expectation change even though class materials stay the same Identification strategy is Under (fixed) time-varying factor that could bias my coefficient (simultaneity) \\[ Y_{ijt} = X_{it} \\beta_1 + \\text{Teacher Experience}_{jt} \\beta_2 + \\text{Teacher education}_{jt} \\beta_3 + \\text{Teacher score}_{it}\\beta_4 + \\dots + \\epsilon_{ijt} \\] Drop teacher characteristics, and include teacher dummy effect \\[ Y_{ijt} = X_{it} \\alpha + \\Gamma_{it} \\theta_j + u_{ijt} \\] where \\(\\alpha\\) is the within teacher (conditional on teacher fixed effect) and \\(j = 1 \\to (J-1)\\) Nuisance in the sense that we don’t about the interpretation of \\(\\alpha\\) The least we can say about \\(\\theta_j\\) is the teacher effect conditional on student test score. \\[ Y_{ijt} = X_{it} \\gamma + \\epsilon_{ijt} \\] \\(\\gamma\\) is between within (unconditional) and \\(e_{ijt}\\) is the prediction error \\[ e_{ijt} = T_{it} \\delta_j + \\tilde{e}_{ijt} \\] where \\(\\delta_j\\) is the mean for each group \\[ Y_{ijkt} = Y_{ijkt-1} + X_{it} \\beta + T_{it} \\tau_j + (W_i + P_k + \\epsilon_{ijkt}) \\] where \\(Y_{ijkt-1}\\) = lag control \\(\\tau_j\\) = teacher fixed time \\(W_i\\) is the student fixed effect \\(P_k\\) is the school fixed effect \\(u_{ijkt} = W_i + P_k + \\epsilon_{ijkt}\\) And we worry about selection on class and school Bias in \\(\\tau\\) (for 1 teacher) is \\[ \\frac{1}{N_j} \\sum_{i = 1}^N (W_i + P_k + \\epsilon_{ijkt}) \\] where \\(N_j\\) = the number of student in class with teacher \\(j\\) then we can \\(P_k + \\frac{1}{N_j} \\sum_{i = 1}^{N_j} (W_i + \\epsilon_{ijkt})\\) Shocks from small class can bias \\(\\tau\\) \\[ \\frac{1}{N_j} \\sum_{i = 1}^{N_j} \\epsilon_{ijkt} \\neq 0 \\] which will inflate the teacher fixed effect Even if we create random teacher fixed effect and put it in the model, it still contains bias mentioned above which can still \\(\\tau\\) (but we do not know the way it will affect - whether more positive or negative). If teachers switch schools, then we can estimate both teacher and school fixed effect (mobility web thin vs. thick) Mobility web refers to the web of switchers (i.e., from one status to another). \\[ Y_{ijkt} = Y_{ijk(t-1)} \\alpha + X_{it}\\beta + T_{it} \\tau + P_k + \\epsilon_{ijkt} \\] If we demean (fixed-effect), \\(\\tau\\) (teacher fixed effect) will go away If you want to examine teacher fixed effect, we have to include teacher fixed effect Control for school, the article argues that there is no selection bias For \\(\\frac{1}{N_j} \\sum_{i =1}^{N_j} \\epsilon_{ijkt}\\) (teacher-level average residuals), \\(var(\\tau)\\) does not change with \\(N_j\\) (Figure 2 in the paper). In words, the quality of teachers is not a function of the number of students If \\(var(\\tau) =0\\) it means that teacher quality does not matter Spin-off of Measurement Error: Sampling error or estimation error \\[ \\hat{\\tau}_j = \\tau_j + \\lambda_j \\] \\[ var(\\hat{\\tau}) = var(\\tau + \\lambda) \\] Assume \\(cov(\\tau_j, \\lambda_j)=0\\) (reasonable) In words, your randomness in getting children does not correlation with teacher quality. Hence, \\[ \\begin{aligned} var(\\hat{\\tau}) &amp;= var(\\tau) + var(\\lambda) \\\\ var(\\tau) &amp;= var(\\hat{\\tau}) - var(\\lambda) \\\\ \\end{aligned} \\] We have \\(var(\\hat{\\tau})\\) and we need to estimate \\(var(\\lambda)\\) \\[ var(\\lambda) = \\frac{1}{J} \\sum_{j=1}^J \\hat{\\sigma}^2_j \\] where \\(\\hat{\\sigma}^2_j\\) is the squared standard error of the teacher \\(j\\) (a function of \\(n\\)) Hence, \\[ \\frac{var(\\tau)}{var(\\hat{\\tau})} = \\text{reliability} = \\text{true variance signal} \\] also known as how much noise in \\(\\hat{\\tau}\\) and \\[ 1 - \\frac{var(\\tau)}{var(\\hat{\\tau})} = \\text{noise} \\] Even in cases where the true relationship is that \\(\\tau\\) is a function of \\(N_j\\), then our recovery method for \\(\\lambda\\) is still not affected To examine our assumption \\[ \\hat{\\tau}_j = \\beta_0 + X_j \\beta_1 + \\epsilon_j \\] Regressing teacher fixed-effect on teacher characteristics should give us \\(R^2\\) close to 0, because teacher characteristics cannot predict sampling error (\\(\\hat{\\tau}\\) contain sampling error) 12.4.3 Tests for Assumptions We typically don’t test heteroskedasticity because we will use robust covariance matrix estimation anyway. Dataset library(&quot;plm&quot;) data(&quot;EmplUK&quot;, package=&quot;plm&quot;) data(&quot;Produc&quot;, package=&quot;plm&quot;) data(&quot;Grunfeld&quot;, package=&quot;plm&quot;) data(&quot;Wages&quot;, package=&quot;plm&quot;) 12.4.3.1 Poolability also known as an F test of stability (or Chow test) for the coefficients \\(H_0\\): All individuals have the same coefficients (i.e., equal coefficients for all individuals). \\(H_a\\) Different individuals have different coefficients. Notes: Under a within (i.e., fixed) model, different intercepts for each individual are assumed Under random model, same intercept is assumed library(plm) plm::pooltest(inv~value+capital, data=Grunfeld, model=&quot;within&quot;) #&gt; #&gt; F statistic #&gt; #&gt; data: inv ~ value + capital #&gt; F = 5.7805, df1 = 18, df2 = 170, p-value = 1.219e-10 #&gt; alternative hypothesis: unstability Hence, we reject the null hypothesis that coefficients are stable. Then, we should use the random model. 12.4.3.2 Individual and time effects use the Lagrange multiplier test to test the presence of individual or time or both (i.e., individual and time). Types: honda: (Honda 1985) Default bp: (Breusch and Pagan 1980) for unbalanced panels kw: (M. L. King and Wu 1997) unbalanced panels, and two-way effects ghm: (Gourieroux, Holly, and Monfort 1982): two-way effects pFtest(inv~value+capital, data=Grunfeld, effect=&quot;twoways&quot;) #&gt; #&gt; F test for twoways effects #&gt; #&gt; data: inv ~ value + capital #&gt; F = 17.403, df1 = 28, df2 = 169, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: significant effects pFtest(inv~value+capital, data=Grunfeld, effect=&quot;individual&quot;) #&gt; #&gt; F test for individual effects #&gt; #&gt; data: inv ~ value + capital #&gt; F = 49.177, df1 = 9, df2 = 188, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: significant effects pFtest(inv~value+capital, data=Grunfeld, effect=&quot;time&quot;) #&gt; #&gt; F test for time effects #&gt; #&gt; data: inv ~ value + capital #&gt; F = 0.23451, df1 = 19, df2 = 178, p-value = 0.9997 #&gt; alternative hypothesis: significant effects 12.4.3.3 Cross-sectional dependence/contemporaneous correlation Null hypothesis: residuals across entities are not correlated. 12.4.3.3.1 Global cross-sectional dependence pcdtest(inv~value+capital, data=Grunfeld, model=&quot;within&quot;) #&gt; #&gt; Pesaran CD test for cross-sectional dependence in panels #&gt; #&gt; data: inv ~ value + capital #&gt; z = 4.6612, p-value = 3.144e-06 #&gt; alternative hypothesis: cross-sectional dependence 12.4.3.3.2 Local cross-sectional dependence use the same command, but supply matrix w to the argument. pcdtest(inv~value+capital, data=Grunfeld, model=&quot;within&quot;) #&gt; #&gt; Pesaran CD test for cross-sectional dependence in panels #&gt; #&gt; data: inv ~ value + capital #&gt; z = 4.6612, p-value = 3.144e-06 #&gt; alternative hypothesis: cross-sectional dependence 12.4.3.4 Serial Correlation Null hypothesis: there is no serial correlation usually seen in macro panels with long time series (large N and T), not seen in micro panels (small T and large N) Serial correlation can arise from individual effects(i.e., time-invariant error component), or idiosyncratic error terms (e..g, in the case of AR(1) process). But typically, when we refer to serial correlation, we refer to the second one. Can be marginal test: only 1 of the two above dependence (but can be biased towards rejection) joint test: both dependencies (but don’t know which one is causing the problem) conditional test: assume you correctly specify one dependence structure, test whether the other departure is present. 12.4.3.4.1 Unobserved effect test semi-parametric test (the test statistic \\(W \\dot{\\sim} N\\) regardless of the distribution of the errors) with \\(H_0: \\sigma^2_\\mu = 0\\) (i.e., no unobserved effects in the residuals), favors pooled OLS. Under the null, covariance matrix of the residuals = its diagonal (off-diagonal = 0) It is robust against both unobserved effects that are constant within every group, and any kind of serial correlation. pwtest(log(gsp)~log(pcap)+log(pc)+log(emp)+unemp, data=Produc) #&gt; #&gt; Wooldridge&#39;s test for unobserved individual effects #&gt; #&gt; data: formula #&gt; z = 3.9383, p-value = 8.207e-05 #&gt; alternative hypothesis: unobserved effect Here, we reject the null hypothesis that the no unobserved effects in the residuals. Hence, we will exclude using pooled OLS. 12.4.3.4.2 Locally robust tests for random effects and serial correlation A joint LM test for random effects and serial correlation assuming normality and homoskedasticity of the idiosyncratic errors [Baltagi and Li (1991)](Baltagi and Li 1995) pbsytest(log(gsp)~log(pcap)+log(pc)+log(emp)+unemp, data=Produc, test=&quot;j&quot;) #&gt; #&gt; Baltagi and Li AR-RE joint test #&gt; #&gt; data: formula #&gt; chisq = 4187.6, df = 2, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: AR(1) errors or random effects Here, we reject the null hypothesis that there is no presence of serial correlation, and random effects. But we still do not know whether it is because of serial correlation, of random effects or of both To know the departure from the null assumption, we can use Bera, Sosa-Escudero, and Yoon (2001)’s test for first-order serial correlation or random effects (both under normality and homoskedasticity assumption of the error). BSY for serial correlation pbsytest(log(gsp)~log(pcap)+log(pc)+log(emp)+unemp, data=Produc) #&gt; #&gt; Bera, Sosa-Escudero and Yoon locally robust test #&gt; #&gt; data: formula #&gt; chisq = 52.636, df = 1, p-value = 4.015e-13 #&gt; alternative hypothesis: AR(1) errors sub random effects BSY for random effects pbsytest(log(gsp)~log(pcap)+log(pc)+log(emp)+unemp, data=Produc, test=&quot;re&quot;) #&gt; #&gt; Bera, Sosa-Escudero and Yoon locally robust test (one-sided) #&gt; #&gt; data: formula #&gt; z = 57.914, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: random effects sub AR(1) errors Since BSY is only locally robust, if you “know” there is no serial correlation, then this test is based on LM test is more superior: plmtest(inv ~ value + capital, data = Grunfeld, type = &quot;honda&quot;) #&gt; #&gt; Lagrange Multiplier Test - (Honda) #&gt; #&gt; data: inv ~ value + capital #&gt; normal = 28.252, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: significant effects On the other hand, if you know there is no random effects, to test for serial correlation, use (Breusch 1978)-(Godfrey 1978)’s test lmtest::bgtest() If you “know” there are random effects, use (Baltagi and Li 1995)’s. to test for serial correlation in both AR(1) and MA(1) processes. \\(H_0\\): Uncorrelated errors. Note: one-sided only has power against positive serial correlation. applicable to only balanced panels. pbltest(log(gsp)~log(pcap)+log(pc)+log(emp)+unemp, data=Produc, alternative=&quot;onesided&quot;) #&gt; #&gt; Baltagi and Li one-sided LM test #&gt; #&gt; data: log(gsp) ~ log(pcap) + log(pc) + log(emp) + unemp #&gt; z = 21.69, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: AR(1)/MA(1) errors in RE panel model General serial correlation tests applicable to random effects model, OLS, and FE (with large T, also known as long panel). can also test higher-order serial correlation plm::pbgtest(plm::plm(inv~value+capital, data = Grunfeld, model = &quot;within&quot;), order = 2) #&gt; #&gt; Breusch-Godfrey/Wooldridge test for serial correlation in panel models #&gt; #&gt; data: inv ~ value + capital #&gt; chisq = 42.587, df = 2, p-value = 5.655e-10 #&gt; alternative hypothesis: serial correlation in idiosyncratic errors in the case of short panels (small T and large n), we can use pwartest(log(emp) ~ log(wage) + log(capital), data=EmplUK) #&gt; #&gt; Wooldridge&#39;s test for serial correlation in FE panels #&gt; #&gt; data: plm.model #&gt; F = 312.3, df1 = 1, df2 = 889, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: serial correlation 12.4.3.5 Unit roots/stationarity Dickey-Fuller test for stochastic trends. Null hypothesis: the series is non-stationary (unit root) You would want your test to be less than the critical value (p&lt;.5) so that there is evidence there is not unit roots. 12.4.3.6 Heteroskedasticity Breusch-Pagan test Null hypothesis: the data is homoskedastic If there is evidence for heteroskedasticity, robust covariance matrix is advised. To control for heteroskedasticity: Robust covariance matrix estimation (Sandwich estimator) “white1” - for general heteroskedasticity but no serial correlation (check serial correlation first). Recommended for random effects. “white2” - is “white1” restricted to a common variance within groups. Recommended for random effects. “arellano” - both heteroskedasticity and serial correlation. Recommended for fixed effects 12.4.4 Model Selection 12.4.4.1 POLS vs. RE The continuum between RE (used FGLS which more assumption ) and POLS check back on the section of FGLS Breusch-Pagan LM test Test for the random effect model based on the OLS residual Null hypothesis: variances across entities is zero. In another word, no panel effect. If the test is significant, RE is preferable compared to POLS 12.4.4.2 FE vs. RE RE does not require strict exogeneity for consistency (feedback effect between residual and covariates) Hypothesis If true \\(H_0: Cov(c_i,\\mathbf{x_{it}})=0\\) \\(\\hat{\\beta}_{RE}\\) is consistent and efficient, while \\(\\hat{\\beta}_{FE}\\) is consistent \\(H_0: Cov(c_i,\\mathbf{x_{it}}) \\neq 0\\) \\(\\hat{\\beta}_{RE}\\) is inconsistent, while \\(\\hat{\\beta}_{FE}\\) is consistent Hausman Test For the Hausman test to run, you need to assume that strict exogeneity hold A4 to hold for \\(u_{it}\\) Then, Hausman test statistic: \\(H=(\\hat{\\beta}_{RE}-\\hat{\\beta}_{FE})&#39;(V(\\hat{\\beta}_{RE})- V(\\hat{\\beta}_{FE}))(\\hat{\\beta}_{RE}-\\hat{\\beta}_{FE}) \\sim \\chi_{n(X)}^2\\) where \\(n(X)\\) is the number of parameters for the time-varying regressors. A low p-value means that we would reject the null hypothesis and prefer FE A high p-value means that we would not reject the null hypothesis and consider RE estimator. gw &lt;- plm(inv~value+capital, data=Grunfeld, model=&quot;within&quot;) gr &lt;- plm(inv~value+capital, data=Grunfeld, model=&quot;random&quot;) phtest(gw, gr) #&gt; #&gt; Hausman Test #&gt; #&gt; data: inv ~ value + capital #&gt; chisq = 2.3304, df = 2, p-value = 0.3119 #&gt; alternative hypothesis: one model is inconsistent Violation Estimator | Basic Estimator | Instrumental variable Estimator | Variable Coefficients estimator | Generalized Method of Moments estimator | General FGLS estimator | Means groups estimator | CCEMG | Estimator for limited dependent variables | 12.4.5 Summary All three estimators (POLS, RE, FE) require A1, A2, A5 (for individuals) to be consistent. Additionally, POLS is consistent under A3a(for \\(u_{it}\\)): \\(E(\\mathbf{x}_{it}&#39;u_{it})=0\\), and RE Assumption \\(E(\\mathbf{x}_{it}&#39;c_{i})=0\\) If A4 does not hold, use cluster robust SE but POLS is not efficient RE is consistent under A3a(for \\(u_{it}\\)): \\(E(\\mathbf{x}_{it}&#39;u_{it})=0\\), and RE Assumption \\(E(\\mathbf{x}_{it}&#39;c_{i})=0\\) If A4 (for \\(u_{it}\\)) holds then usual SE are valid and RE is most efficient If A4 (for \\(u_{it}\\)) does not hold, use cluster robust SE ,and RE is no longer most efficient (but still more efficient than POLS) FE is consistent under A3 \\(E((\\mathbf{x}_{it}-\\bar{\\mathbf{x}}_{it})&#39;(u_{it} -\\bar{u}_{it}))=0\\) Cannot estimate effects of time constant variables A4 generally does not hold for \\(u_{it} -\\bar{u}_{it}\\) so cluster robust SE are needed Note: A5 for individual (not for time dimension) implies that you have A5a for the entire data set. Estimator / True Model POLS RE FE POLS Consistent Consistent Inconsistent FE Consistent Consistent Consistent RE Consistent Consistent Inconsistent Based on table provided by Ani Katchova 12.4.6 Application 12.4.6.1 plm package Recommended application of plm can be found here and here by Yves Croissant #install.packages(&quot;plm&quot;) library(&quot;plm&quot;) library(foreign) Panel &lt;- read.dta(&quot;http://dss.princeton.edu/training/Panel101.dta&quot;) attach(Panel) Y &lt;- cbind(y) X &lt;- cbind(x1, x2, x3) # Set data as panel data pdata &lt;- pdata.frame(Panel, index=c(&quot;country&quot;,&quot;year&quot;)) # Pooled OLS estimator pooling &lt;- plm(Y ~ X, data=pdata, model= &quot;pooling&quot;) summary(pooling) # Between estimator between &lt;- plm(Y ~ X, data=pdata, model= &quot;between&quot;) summary(between) # First differences estimator firstdiff &lt;- plm(Y ~ X, data=pdata, model= &quot;fd&quot;) summary(firstdiff) # Fixed effects or within estimator fixed &lt;- plm(Y ~ X, data=pdata, model= &quot;within&quot;) summary(fixed) # Random effects estimator random &lt;- plm(Y ~ X, data=pdata, model= &quot;random&quot;) summary(random) # LM test for random effects versus OLS # Accept Null, then OLS, Reject Null then RE plmtest(pooling,effect = &quot;individual&quot;, type = c(&quot;bp&quot;)) # other type: &quot;honda&quot;, &quot;kw&quot;,&quot; &quot;ghm&quot;; other effect : &quot;time&quot; &quot;twoways&quot; # B-P/LM and Pesaran CD (cross-sectional dependence) test pcdtest(fixed, test = c(&quot;lm&quot;)) # Breusch and Pagan&#39;s original LM statistic pcdtest(fixed, test = c(&quot;cd&quot;)) # Pesaran&#39;s CD statistic # Serial Correlation pbgtest(fixed) # stationary library(&quot;tseries&quot;) adf.test(pdata$y, k = 2) # LM test for fixed effects versus OLS pFtest(fixed, pooling) # Hausman test for fixed versus random effects model phtest(random, fixed) # Breusch-Pagan heteroskedasticity library(lmtest) bptest(y ~ x1 + factor(country), data = pdata) # If there is presence of heteroskedasticity ## For RE model coeftest(random) #orginal coef coeftest(random, vcovHC) # Heteroskedasticity consistent coefficients t(sapply(c(&quot;HC0&quot;, &quot;HC1&quot;, &quot;HC2&quot;, &quot;HC3&quot;, &quot;HC4&quot;), function(x) sqrt(diag(vcovHC(random, type = x))))) #show HC SE of the coef # HC0 - heteroskedasticity consistent. The default. # HC1,HC2, HC3 – Recommended for small samples. HC3 gives less weight to influential observations. # HC4 - small samples with influential observations # HAC - heteroskedasticity and autocorrelation consistent ## For FE model coeftest(fixed) # Original coefficients coeftest(fixed, vcovHC) # Heteroskedasticity consistent coefficients coeftest(fixed, vcovHC(fixed, method = &quot;arellano&quot;)) # Heteroskedasticity consistent coefficients (Arellano) t(sapply(c(&quot;HC0&quot;, &quot;HC1&quot;, &quot;HC2&quot;, &quot;HC3&quot;, &quot;HC4&quot;), function(x) sqrt(diag(vcovHC(fixed, type = x))))) #show HC SE of the coef Advanced Other methods to estimate the random model: \"swar\": default (Swamy and Arora 1972) \"walhus\": (Wallace and Hussain 1969) \"amemiya\": (Amemiya 1971) \"nerlove\"” (Nerlove 1971) Other effects: Individual effects: default Time effects: \"time\" Individual and time effects: \"twoways\" Note: no random two-ways effect model for random.method = \"nerlove\" amemiya &lt;- plm(Y ~ X, data=pdata, model= &quot;random&quot;,random.method = &quot;amemiya&quot;,effect = &quot;twoways&quot;) To call the estimation of the variance of the error components ercomp(Y~X, data=pdata, method = &quot;amemiya&quot;, effect = &quot;twoways&quot;) Check for the unbalancedness. Closer to 1 indicates balanced data (Ahrens and Pincus 1981) punbalancedness(random) Instrumental variable \"bvk\": default (Balestra and Varadharajan-Krishnakumar 1987) \"baltagi\": (Baltagi 1981) \"am\" (Amemiya and MaCurdy 1986) \"bms\": (Breusch, Mizon, and Schmidt 1989) instr &lt;- plm(Y ~ X | X_ins, data = pdata, random.method = &quot;ht&quot;, model = &quot;random&quot;, inst.method = &quot;baltagi&quot;) 12.4.6.1.1 Other Estimators 12.4.6.1.1.1 Variable Coefficients Model fixed_pvcm &lt;- pvcm(Y~X, data=pdata, model=&quot;within&quot;) random_pvcm &lt;- pvcm(Y~X, data=pdata, model=&quot;random&quot;) More details can be found here 12.4.6.1.1.2 Generalized Method of Moments Estimator Typically use in dynamic models. Example is from plm package z2 &lt;- pgmm(log(emp) ~ lag(log(emp), 1)+ lag(log(wage), 0:1) + lag(log(capital), 0:1) | lag(log(emp), 2:99) + lag(log(wage), 2:99) + lag(log(capital), 2:99), data = EmplUK, effect = &quot;twoways&quot;, model = &quot;onestep&quot;, transformation = &quot;ld&quot;) summary(z2, robust = TRUE) 12.4.6.1.1.3 General Feasible Generalized Least Squares Models Assume there is no cross-sectional correlation Robust against intragroup heteroskedasticity and serial correlation. Suited when n is much larger than T (long panel) However, inefficient under groupwise heteorskedasticity. # Random Effects zz &lt;- pggls(log(emp)~log(wage)+log(capital), data=EmplUK, model=&quot;pooling&quot;) # Fixed zz &lt;- pggls(log(emp)~log(wage)+log(capital), data=EmplUK, model=&quot;within&quot;) 12.4.6.2 fixest package Available functions feols: linear models feglm: generalized linear models femlm: maximum likelihood estimation feNmlm: non-linear in RHS parameters fepois: Poisson fixed-effect fenegbin: negative binomial fixed-effect Notes can only work for fixest object Examples by the package’s authors library(fixest) data(airquality) # Setting a dictionary setFixest_dict( c( Ozone = &quot;Ozone (ppb)&quot;, Solar.R = &quot;Solar Radiation (Langleys)&quot;, Wind = &quot;Wind Speed (mph)&quot;, Temp = &quot;Temperature&quot; ) ) # On multiple estimations: see the dedicated vignette est = feols(Ozone ~ Solar.R + sw0(Wind + Temp) | csw(Month, Day), data = airquality, cluster = ~ Day) etable(est) #&gt; est.1 est.2 #&gt; Dependent Var.: Ozone (ppb) Ozone (ppb) #&gt; #&gt; Solar Radiation (Langleys) 0.1148*** (0.0234) 0.0522* (0.0202) #&gt; Wind Speed (mph) -3.109*** (0.7986) #&gt; Temperature 1.875*** (0.3671) #&gt; Fixed-Effects: ------------------ ------------------ #&gt; Month Yes Yes #&gt; Day No No #&gt; __________________________ __________________ __________________ #&gt; S.E.: Clustered by: Day by: Day #&gt; Observations 111 111 #&gt; R2 0.31974 0.63686 #&gt; Within R2 0.12245 0.53154 #&gt; #&gt; est.3 est.4 #&gt; Dependent Var.: Ozone (ppb) Ozone (ppb) #&gt; #&gt; Solar Radiation (Langleys) 0.1078** (0.0329) 0.0509* (0.0236) #&gt; Wind Speed (mph) -3.289*** (0.7777) #&gt; Temperature 2.052*** (0.2415) #&gt; Fixed-Effects: ----------------- ------------------ #&gt; Month Yes Yes #&gt; Day Yes Yes #&gt; __________________________ _________________ __________________ #&gt; S.E.: Clustered by: Day by: Day #&gt; Observations 111 111 #&gt; R2 0.58018 0.81604 #&gt; Within R2 0.12074 0.61471 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # in latex etable(est, tex = T) #&gt; \\begingroup #&gt; \\centering #&gt; \\begin{tabular}{lcccc} #&gt; \\tabularnewline \\midrule \\midrule #&gt; Dependent Variable: &amp; \\multicolumn{4}{c}{Ozone (ppb)}\\\\ #&gt; Model: &amp; (1) &amp; (2) &amp; (3) &amp; (4)\\\\ #&gt; \\midrule #&gt; \\emph{Variables}\\\\ #&gt; Solar Radiation (Langleys) &amp; 0.1148$^{***}$ &amp; 0.0522$^{**}$ &amp; 0.1078$^{***}$ &amp; 0.0509$^{**}$\\\\ #&gt; &amp; (0.0234) &amp; (0.0202) &amp; (0.0329) &amp; (0.0236)\\\\ #&gt; Wind Speed (mph) &amp; &amp; -3.109$^{***}$ &amp; &amp; -3.289$^{***}$\\\\ #&gt; &amp; &amp; (0.7986) &amp; &amp; (0.7777)\\\\ #&gt; Temperature &amp; &amp; 1.875$^{***}$ &amp; &amp; 2.052$^{***}$\\\\ #&gt; &amp; &amp; (0.3671) &amp; &amp; (0.2415)\\\\ #&gt; \\midrule #&gt; \\emph{Fixed-effects}\\\\ #&gt; Month &amp; Yes &amp; Yes &amp; Yes &amp; Yes\\\\ #&gt; Day &amp; &amp; &amp; Yes &amp; Yes\\\\ #&gt; \\midrule #&gt; \\emph{Fit statistics}\\\\ #&gt; Observations &amp; 111 &amp; 111 &amp; 111 &amp; 111\\\\ #&gt; R$^2$ &amp; 0.31974 &amp; 0.63686 &amp; 0.58018 &amp; 0.81604\\\\ #&gt; Within R$^2$ &amp; 0.12245 &amp; 0.53154 &amp; 0.12074 &amp; 0.61471\\\\ #&gt; \\midrule \\midrule #&gt; \\multicolumn{5}{l}{\\emph{Clustered (Day) standard-errors in parentheses}}\\\\ #&gt; \\multicolumn{5}{l}{\\emph{Signif. Codes: ***: 0.01, **: 0.05, *: 0.1}}\\\\ #&gt; \\end{tabular} #&gt; \\par\\endgroup # get the fixed-effects coefficients for 1 model fixedEffects = fixef(est[[1]]) summary(fixedEffects) #&gt; Fixed_effects coefficients #&gt; Number of fixed-effects for variable Month is 5. #&gt; Mean = 19.6 Variance = 272 #&gt; #&gt; COEFFICIENTS: #&gt; Month: 5 6 7 8 9 #&gt; 3.219 8.288 34.26 40.12 12.13 # see the fixed effects for one dimension fixedEffects$Month #&gt; 5 6 7 8 9 #&gt; 3.218876 8.287899 34.260812 40.122257 12.130971 plot(fixedEffects) For multiple estimation # set up library(fixest) # let R know the base dataset (the biggest/ultimate dataset that includes everything in your analysis) base = iris # rename variables names(base) = c(&quot;y1&quot;,&quot;y2&quot;, &quot;x1&quot;,&quot;x2&quot;, &quot;species&quot;) res_multi = feols( c(y1, y2) ~ x1 + csw(x2, x2 ^ 2) | sw0(species), data = base, fsplit = ~ species, lean = TRUE, vcov = &quot;hc1&quot; # can also clustered at the fixed effect level ) # it&#39;s recommended to use vcov at estimation stage, not summary stage summary(res_multi, &quot;compact&quot;) #&gt; sample fixef lhs rhs (Intercept) x1 #&gt; 1 Full sample 1 y1 x1 + x2 4.19*** (0.104) 0.542*** (0.076) #&gt; 2 Full sample 1 y1 x1 + x2 + I(x2^2) 4.27*** (0.101) 0.719*** (0.082) #&gt; 3 Full sample 1 y2 x1 + x2 3.59*** (0.103) -0.257*** (0.066) #&gt; 4 Full sample 1 y2 x1 + x2 + I(x2^2) 3.68*** (0.097) -0.030 (0.078) #&gt; 5 Full sample species y1 x1 + x2 0.906*** (0.076) #&gt; 6 Full sample species y1 x1 + x2 + I(x2^2) 0.900*** (0.077) #&gt; 7 Full sample species y2 x1 + x2 0.155* (0.073) #&gt; 8 Full sample species y2 x1 + x2 + I(x2^2) 0.148. (0.075) #&gt; 9 setosa 1 y1 x1 + x2 4.25*** (0.474) 0.399 (0.325) #&gt; 10 setosa 1 y1 x1 + x2 + I(x2^2) 4.00*** (0.504) 0.405 (0.325) #&gt; 11 setosa 1 y2 x1 + x2 2.89*** (0.416) 0.247 (0.305) #&gt; 12 setosa 1 y2 x1 + x2 + I(x2^2) 2.82*** (0.423) 0.248 (0.304) #&gt; 13 setosa species y1 x1 + x2 0.399 (0.325) #&gt; 14 setosa species y1 x1 + x2 + I(x2^2) 0.405 (0.325) #&gt; 15 setosa species y2 x1 + x2 0.247 (0.305) #&gt; 16 setosa species y2 x1 + x2 + I(x2^2) 0.248 (0.304) #&gt; 17 versicolor 1 y1 x1 + x2 2.38*** (0.423) 0.934*** (0.166) #&gt; 18 versicolor 1 y1 x1 + x2 + I(x2^2) 0.323 (1.44) 0.901*** (0.164) #&gt; 19 versicolor 1 y2 x1 + x2 1.25*** (0.275) 0.067 (0.095) #&gt; 20 versicolor 1 y2 x1 + x2 + I(x2^2) 0.097 (1.01) 0.048 (0.099) #&gt; 21 versicolor species y1 x1 + x2 0.934*** (0.166) #&gt; 22 versicolor species y1 x1 + x2 + I(x2^2) 0.901*** (0.164) #&gt; 23 versicolor species y2 x1 + x2 0.067 (0.095) #&gt; 24 versicolor species y2 x1 + x2 + I(x2^2) 0.048 (0.099) #&gt; 25 virginica 1 y1 x1 + x2 1.05. (0.539) 0.995*** (0.090) #&gt; 26 virginica 1 y1 x1 + x2 + I(x2^2) -2.39 (2.04) 0.994*** (0.088) #&gt; 27 virginica 1 y2 x1 + x2 1.06. (0.572) 0.149 (0.107) #&gt; 28 virginica 1 y2 x1 + x2 + I(x2^2) 1.10 (1.76) 0.149 (0.108) #&gt; 29 virginica species y1 x1 + x2 0.995*** (0.090) #&gt; 30 virginica species y1 x1 + x2 + I(x2^2) 0.994*** (0.088) #&gt; 31 virginica species y2 x1 + x2 0.149 (0.107) #&gt; 32 virginica species y2 x1 + x2 + I(x2^2) 0.149 (0.108) #&gt; x2 I(x2^2) #&gt; 1 -0.320. (0.170) #&gt; 2 -1.52*** (0.307) 0.348*** (0.075) #&gt; 3 0.364* (0.142) #&gt; 4 -1.18*** (0.313) 0.446*** (0.074) #&gt; 5 -0.006 (0.163) #&gt; 6 0.290 (0.408) -0.088 (0.117) #&gt; 7 0.623*** (0.114) #&gt; 8 0.951* (0.472) -0.097 (0.125) #&gt; 9 0.712. (0.418) #&gt; 10 2.51. (1.47) -2.91 (2.10) #&gt; 11 0.702 (0.560) #&gt; 12 1.27 (2.39) -0.911 (3.28) #&gt; 13 0.712. (0.418) #&gt; 14 2.51. (1.47) -2.91 (2.10) #&gt; 15 0.702 (0.560) #&gt; 16 1.27 (2.39) -0.911 (3.28) #&gt; 17 -0.320 (0.364) #&gt; 18 3.01 (2.31) -1.24 (0.841) #&gt; 19 0.929*** (0.244) #&gt; 20 2.80. (1.65) -0.695 (0.583) #&gt; 21 -0.320 (0.364) #&gt; 22 3.01 (2.31) -1.24 (0.841) #&gt; 23 0.929*** (0.244) #&gt; 24 2.80. (1.65) -0.695 (0.583) #&gt; 25 0.007 (0.205) #&gt; 26 3.50. (2.09) -0.870 (0.519) #&gt; 27 0.535*** (0.122) #&gt; 28 0.503 (1.56) 0.008 (0.388) #&gt; 29 0.007 (0.205) #&gt; 30 3.50. (2.09) -0.870 (0.519) #&gt; 31 0.535*** (0.122) #&gt; 32 0.503 (1.56) 0.008 (0.388) # call the first 3 estimated models only etable(res_multi[1:3], # customize the headers headers = c(&quot;mod1&quot;,&quot;mod2&quot;,&quot;mod3&quot;)) #&gt; res_multi[1:3].1 res_multi[1:3].2 res_multi[1:3].3 #&gt; mod1 mod2 mod3 #&gt; Dependent Var.: y1 y1 y2 #&gt; #&gt; Constant 4.191*** (0.1037) 4.266*** (0.1007) 3.587*** (0.1031) #&gt; x1 0.5418*** (0.0761) 0.7189*** (0.0815) -0.2571*** (0.0664) #&gt; x2 -0.3196. (0.1700) -1.522*** (0.3072) 0.3640* (0.1419) #&gt; x2 square 0.3479*** (0.0748) #&gt; _______________ __________________ __________________ ___________________ #&gt; S.E. type Heteroskedas.-rob. Heteroskedas.-rob. Heteroskedast.-rob. #&gt; Observations 150 150 150 #&gt; R2 0.76626 0.79456 0.21310 #&gt; Adj. R2 0.76308 0.79034 0.20240 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 12.4.6.2.1 Multiple estimation (Left-hand side) When you have multiple interested dependent variables etable(feols(c(y1, y2) ~ x1 + x2, base)) #&gt; feols(c(y1, y2)..1 feols(c(y1, y2) ..2 #&gt; Dependent Var.: y1 y2 #&gt; #&gt; Constant 4.191*** (0.0970) 3.587*** (0.0937) #&gt; x1 0.5418*** (0.0693) -0.2571*** (0.0669) #&gt; x2 -0.3196* (0.1605) 0.3640* (0.1550) #&gt; _______________ __________________ ___________________ #&gt; S.E. type IID IID #&gt; Observations 150 150 #&gt; R2 0.76626 0.21310 #&gt; Adj. R2 0.76308 0.20240 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 To input a list of dependent variable depvars &lt;- c(&quot;y1&quot;, &quot;y2&quot;) res &lt;- lapply(depvars, function(var) { res &lt;- feols(xpd(..lhs ~ x1 + x2, ..lhs = var), data = base) # summary(res) }) etable(res) #&gt; model 1 model 2 #&gt; Dependent Var.: y1 y2 #&gt; #&gt; Constant 4.191*** (0.0970) 3.587*** (0.0937) #&gt; x1 0.5418*** (0.0693) -0.2571*** (0.0669) #&gt; x2 -0.3196* (0.1605) 0.3640* (0.1550) #&gt; _______________ __________________ ___________________ #&gt; S.E. type IID IID #&gt; Observations 150 150 #&gt; R2 0.76626 0.21310 #&gt; Adj. R2 0.76308 0.20240 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 12.4.6.2.2 Multiple estimation (Right-hand side) Options to write the functions sw (stepwise): sequentially analyze each elements y ~ sw(x1, x2) will be estimated as y ~ x1 and y ~ x2 sw0 (stepwise 0): similar to sw but also estimate a model without the elements in the set first y ~ sw(x1, x2) will be estimated as y ~ 1 and y ~ x1 and y ~ x2 csw (cumulative stepwise): sequentially add each element of the set to the formula y ~ csw(x1, x2) will be estimated as y ~ x1 and y ~ x1 + x2 csw0 (cumulative stepwise 0): similar to csw but also estimate a model without the elements in the set first y ~ csw(x1, x2) will be estimated as y~ 1 y ~ x1 and y ~ x1 + x2 mvsw (multiverse stepwise): all possible combination of the elements in the set (it will get large very quick). mvsw(x1, x2, x3) will be sw0(x1, x2, x3, x1 + x2, x1 + x3, x2 + x3, x1 + x2 + x3) 12.4.6.2.3 Split sample estimation etable(feols(y1 ~ x1 + x2, fsplit = ~ species, data = base)) #&gt; feols(y1 ~ x1 +..1 feols(y1 ~ x1 ..2 feols(y1 ~ x1 +..3 #&gt; Sample (species) Full sample setosa versicolor #&gt; Dependent Var.: y1 y1 y1 #&gt; #&gt; Constant 4.191*** (0.0970) 4.248*** (0.4114) 2.381*** (0.4493) #&gt; x1 0.5418*** (0.0693) 0.3990 (0.2958) 0.9342*** (0.1693) #&gt; x2 -0.3196* (0.1605) 0.7121 (0.4874) -0.3200 (0.4024) #&gt; ________________ __________________ _________________ __________________ #&gt; S.E. type IID IID IID #&gt; Observations 150 50 50 #&gt; R2 0.76626 0.11173 0.57432 #&gt; Adj. R2 0.76308 0.07393 0.55620 #&gt; #&gt; feols(y1 ~ x1 +..4 #&gt; Sample (species) virginica #&gt; Dependent Var.: y1 #&gt; #&gt; Constant 1.052* (0.5139) #&gt; x1 0.9946*** (0.0893) #&gt; x2 0.0071 (0.1795) #&gt; ________________ __________________ #&gt; S.E. type IID #&gt; Observations 50 #&gt; R2 0.74689 #&gt; Adj. R2 0.73612 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 12.4.6.2.4 Standard Errors iid: errors are homoskedastic and independent and identically distributed hetero: errors are heteroskedastic using White correction cluster: errors are correlated within the cluster groups newey_west: (Newey and West 1986) use for time series or panel data. Errors are heteroskedastic and serially correlated. vcov = newey_west ~ id + period where id is the subject id and period is time period of the panel. to specify lag period to consider vcov = newey_west(2) ~ id + period where we’re considering 2 lag periods. driscoll_kraay (Driscoll and Kraay 1998) use for panel data. Errors are cross-sectionally and serially correlated. vcov = discoll_kraay ~ period conley: (Conley 1999) for cross-section data. Errors are spatially correlated vcov = conley ~ latitude + longitude to specify the distance cutoff, vcov = vcov_conley(lat = \"lat\", lon = \"long\", cutoff = 100, distance = \"spherical\"), which will use the conley() helper function. hc: from the sandwich package vcov = function(x) sandwich::vcovHC(x, type = \"HC1\")) To let R know which SE estimation you want to use, insert vcov = vcov_type ~ variables 12.4.6.2.5 Small sample correction To specify that R needs to use small sample correction add ssc = ssc(adj = T, cluster.adj = T) References "],["variable-transformation.html", "Chapter 13 Variable Transformation", " Chapter 13 Variable Transformation trafo vignette "],["continuous-variables.html", "13.1 Continuous Variables", " 13.1 Continuous Variables Purposes: To change the scale of the variables To transform skewed data distribution to normal distribution 13.1.1 Standardization \\[ x_i&#39; = \\frac{x_i - \\bar{x}}{s} \\] when you have a few large numbers 13.1.2 Min-max scaling \\[ x_i&#39; = \\frac{x_i - x_{max}}{x_{max} - x_{min}} \\] dependent on the min and max values, which makes it sensitive to outliers. best to use when you have values in a fixed interval. 13.1.3 Square Root/Cube Root When variables have positive skewness or residuals have positive heteroskasticity. Frequency counts variable Data have many 0 or extremely small values. 13.1.4 Logarithmic Variables have positively skewed distribution Formula In case \\(x_i&#39; = \\log(x_i)\\) cannot work zero because log(0) = -Inf \\(x_i&#39; = \\log(x_i + 1)\\) variables with 0 \\(x_i&#39; = \\log(x_i +c)\\) \\(x_i&#39; = \\frac{x_i}{|x_i|}\\log|x_i|\\) variables with negative values \\(x_i&#39;^\\lambda = \\log(x_i + \\sqrt{x_i^2 + \\lambda})\\) generalized log transformation For the general case of \\(\\log(x_i + c)\\), choosing a constant is rather tricky. The choice of the constant is critically important, especially when you want to do inference. It can dramatically change your model fit (see (Ekwaru and Veugelers 2018) for the independent variable case). However, assuming that you do not have 0s because of Censoring No measurement errors (stemming from measurement tools) We can proceed choosing c (it’s okay if your 0’s are represent really small values). data(cars) cars$speed %&gt;% head() #&gt; [1] 4 4 7 7 8 9 log(cars$speed) %&gt;% head() #&gt; [1] 1.386294 1.386294 1.945910 1.945910 2.079442 2.197225 # log(x+1) log1p(cars$speed) %&gt;% head() #&gt; [1] 1.609438 1.609438 2.079442 2.079442 2.197225 2.302585 13.1.5 Exponential Negatively skewed data Underlying logarithmic trend (e.g., survival, decay) 13.1.6 Power Variables have negatively skewed distribution 13.1.7 Inverse/Reciprocal Variables have platykurtic distribution Data are positively skewed Ratio data data(cars) head(cars$dist) #&gt; [1] 2 10 4 22 16 10 plot(cars$dist) plot(1/(cars$dist)) 13.1.8 Hyperbolic arcsine Variables with positively skewed distribution 13.1.9 Ordered Quantile Norm (Bartlett 1947) \\[ x_i&#39; = \\Phi^{-1} (\\frac{rank(x_i) - 1/2}{length(x)}) \\] ord_dist &lt;- bestNormalize::orderNorm(cars$dist) ord_dist #&gt; orderNorm Transformation with 50 nonmissing obs and ties #&gt; - 35 unique values #&gt; - Original quantiles: #&gt; 0% 25% 50% 75% 100% #&gt; 2 26 36 56 120 ord_dist$x.t %&gt;% hist() 13.1.10 Arcsinh Proportion variable (0-1) cars$dist %&gt;% hist() # cars$dist %&gt;% MASS::truehist() as_dist &lt;- bestNormalize::arcsinh_x(cars$dist) as_dist #&gt; Standardized asinh(x) Transformation with 50 nonmissing obs.: #&gt; Relevant statistics: #&gt; - mean (before standardization) = 4.230843 #&gt; - sd (before standardization) = 0.7710887 as_dist$x.t %&gt;% hist() 13.1.11 Lambert W x F Transformation LambertW package Using moments to normalize data. Usually need to compare with the Box-Cox Transformation and Yeo-Johnson Transformation Can handle skewness, heavy-tailed. data(cars) head(cars$dist) #&gt; [1] 2 10 4 22 16 10 cars$dist %&gt;% hist() l_dist &lt;- LambertW::Gaussianize(cars$dist) # small fix l_dist %&gt;% hist() 13.1.12 Inverse Hyperbolic Sine (IHS) transformation Proposed by (N. L. Johnson 1949) Can be applied to real numbers. \\[ f(x,\\theta) = \\frac{\\sinh^{-1} (\\theta x)}{\\theta} \\\\ = \\frac{\\log(\\theta x + (\\theta^2 x^2 + 1)^{1/2})}{\\theta} \\] 13.1.13 Box-Cox Transformation \\[ y^\\lambda = \\beta x+ \\epsilon \\] to fix non-linearity in the error terms work well between (-3,3) (i.e., small transformation). or with independent variables \\[ x_i&#39;^\\lambda = \\begin{cases} \\frac{x_i^\\lambda-1}{\\lambda} &amp; \\text{if } \\lambda \\neq 0\\\\ \\log(x_i) &amp; \\text{if } \\lambda = 0 \\end{cases} \\] And the two-parameter version is \\[ x_i&#39; (\\lambda_1, \\lambda_2) = \\begin{cases} \\frac{(x_i + \\lambda_2)^{\\lambda_1}-1}{} &amp; \\text{if } \\lambda_1 \\neq 0 \\\\ \\log(x_i + \\lambda_2) &amp; \\text{if } \\lambda_1 = 0 \\end{cases} \\] More advances (Manly 1976) (Bickel and Doksum 1981; Box and Cox 1981) library(MASS) data(cars) mod &lt;- lm(cars$speed ~ cars$dist, data = cars) # check residuals plot(mod) bc &lt;- boxcox(mod, lambda = seq(-3,3)) # best lambda bc$x[which(bc$y == max(bc$y))] #&gt; [1] 1.242424 # model with best lambda mod_lambda = lm(cars$speed ^ (bc$x[which(bc$y == max(bc$y))]) ~ cars$dist, data = cars) plot(mod_lambda) # 2-parameter version two_bc = geoR::boxcoxfit(cars$speed) two_bc #&gt; Fitted parameters: #&gt; lambda beta sigmasq #&gt; 1.028798 15.253008 31.935297 #&gt; #&gt; Convergence code returned by optim: 0 plot(two_bc) # bestNormalize bc_dist &lt;- bestNormalize::boxcox(cars$dist) bc_dist #&gt; Standardized Box Cox Transformation with 50 nonmissing obs.: #&gt; Estimated statistics: #&gt; - lambda = 0.4950628 #&gt; - mean (before standardization) = 10.35636 #&gt; - sd (before standardization) = 3.978036 bc_dist$x.t %&gt;% hist() 13.1.14 Yeo-Johnson Transformation Similar to Box-Cox Transformation (when \\(\\lambda = 1\\)), but allows for negative value \\[ x_i&#39;^\\lambda = \\begin{cases} \\frac{(x_i+1)^\\lambda -1}{\\lambda} &amp; \\text{if } \\lambda \\neq0, x_i \\ge 0 \\\\ \\log(x_i + 1) &amp; \\text{if } \\lambda = 0, x_i \\ge 0 \\\\ \\frac{-[(-x_i+1)^{2-\\lambda}-1]}{2 - \\lambda} &amp; \\text{if } \\lambda \\neq 2, x_i &lt;0 \\\\ -\\log(-x_i + 1) &amp; \\text{if } \\lambda = 2, x_i &lt;0 \\end{cases} \\] data(cars) yj_speed &lt;- bestNormalize::yeojohnson(cars$speed) yj_speed$x.t %&gt;% hist() 13.1.15 RankGauss Turn values into ranks, then ranks to values under normal distribution. 13.1.16 Summary Automatically choose the best method to normalize data (code by bestNormalize) bestdist &lt;- bestNormalize::bestNormalize(cars$dist) bestdist$x.t %&gt;% hist() boxplot(log10(bestdist$oos_preds), yaxt = &quot;n&quot;) # axis(2, at = log10(c(.1, .5, 1, 2, 5, 10)), labels = c(.1, .5, 1, 2, 5, 10)) References "],["categorical-variables.html", "13.2 Categorical Variables", " 13.2 Categorical Variables Purposes To transform to continuous variable (for machine learning models) (e.g., encoding/ embedding in text mining) Approaches: One-hot encoding Label encoding Feature hashing Binary encoding BaseN encoding Frequency encoding Target encoding Ordinal encoding Helmert encoding Mean encoding Weight of evidence encoding Probability ratio encoding Backward difference encoding Leave one out encoding James-Stein encoding M-estimator encoding Thermometer encoding "],["hypothesis-testing.html", "Chapter 14 Hypothesis Testing", " Chapter 14 Hypothesis Testing Error types: Type I Error (False Positive): Reality: nope Diagnosis/Analysis: yes Type II Error (False Negative): Reality: yes Diagnosis/Analysis: nope Power: The probability of rejecting the null hypothesis when it is actually false Note: Always written in terms of the population parameter (\\(\\beta\\)) not the estimator/estimate (\\(\\hat{\\beta}\\)) Sometimes, different disciplines prefer to use \\(\\beta\\) (i.e., standardized coefficient), or \\(\\mathbf{b}\\) (i.e., unstandardized coefficient) \\(\\beta\\) and \\(\\mathbf{b}\\) are similar in interpretation; however, \\(\\beta\\) is scale free. Hence, you can see the relative contribution of \\(\\beta\\) to the dependent variable. On the other hand, \\(\\mathbf{b}\\) can be more easily used in policy decisions. \\[ \\beta_j = \\mathbf{b} \\frac{s_{x_j}}{s_y} \\] Assuming the null hypothesis is true, what is the (asymptotic) distribution of the estimator Two-sided \\[ H_0: \\beta_j = 0 \\\\ H_1: \\beta_j \\neq 0 \\] then under the null, the OLS estimator has the following distribution \\[ A1-A3a, A5: \\sqrt{n} \\hat{\\beta_j} \\sim N(0,Avar(\\sqrt{n}\\hat{\\beta}_j)) \\] For the one-sided test, the null is a set of values, so now you choose the worst case single value that is hardest to prove and derive the distribution under the null One-sided \\[ H_0: \\beta_j\\ge 0 \\\\ H_1: \\beta_j &lt; 0 \\] then the hardest null value to prove is \\(H_0: \\beta_j=0\\). Then under this specific null, the OLS estimator has the following asymptotic distribution \\[ A1-A3a, A5: \\sqrt{n}\\hat{\\beta_j} \\sim N(0,Avar(\\sqrt{n}\\hat{\\beta}_j)) \\] "],["types-of-hypothesis-testing.html", "14.1 Types of hypothesis testing", " 14.1 Types of hypothesis testing \\(H_0 : \\theta = \\theta_0\\) \\(H_1 : \\theta \\neq \\theta_0\\) How far away / extreme \\(\\theta\\) can be if our null hypothesis is true Assume that our likelihood function for q is \\(L(q) = q^{30}(1-q)^{70}\\) Likelihood function q = seq(0,1,length=100) L= function(q){q^30 * (1-q)^70} plot(q,L(q),ylab=&quot;L(q)&quot;,xlab=&quot;q&quot;,type=&quot;l&quot;) Log-Likelihood function q = seq(0,1,length=100) l= function(q){30*log(q) + 70 * log(1-q)} plot(q,l(q)-l(0.3),ylab=&quot;l(q) - l(qhat)&quot;,xlab=&quot;q&quot;,type=&quot;l&quot;) abline(v=0.2) Figure from(Fox 1997) typically, The likelihood ratio test (and Lagrange Multiplier (Score)) performs better with small to moderate sample sizes, but the Wald test only requires one maximization (under the full model). References "],["wald-test.html", "14.2 Wald test", " 14.2 Wald test \\[ W = (\\hat{\\theta}-\\theta_0)&#39;[cov(\\hat{\\theta})]^{-1}(\\hat{\\theta}-\\theta_0) \\\\ W \\sim \\chi_q^2 \\] where \\(cov(\\hat{\\theta})\\) is given by the inverse Fisher Information matrix evaluated at \\(\\hat{\\theta}\\) and q is the rank of \\(cov(\\hat{\\theta})\\), which is the number of non-redundant parameters in \\(\\theta\\) Alternatively, \\[ t_W=\\frac{(\\hat{\\theta}-\\theta_0)^2}{I(\\theta_0)^{-1}} \\sim \\chi^2_{(v)} \\] where v is the degree of freedom. Equivalently, \\[ s_W= \\frac{\\hat{\\theta}-\\theta_0}{\\sqrt{I(\\hat{\\theta})^{-1}}} \\sim Z \\] How far away in the distribution your sample estimate is from the hypothesized population parameter. For a null value, what is the probability you would have obtained a realization “more extreme” or “worse” than the estimate you actually obtained? Significance Level (\\(\\alpha\\)) and Confidence Level (\\(1-\\alpha\\)) The significance level is the benchmark in which the probability is so low that we would have to reject the null The confidence level is the probability that sets the bounds on how far away the realization of the estimator would have to be to reject the null. Test Statistics Standardized (transform) the estimator and null value to a test statistic that always has the same distribution Test Statistic for the OLS estimator for a single hypothesis \\[ T = \\frac{\\sqrt{n}(\\hat{\\beta}_j-\\beta_{j0})}{\\sqrt{n}SE(\\hat{\\beta_j})} \\sim^a N(0,1) \\] Equivalently, \\[ T = \\frac{(\\hat{\\beta}_j-\\beta_{j0})}{SE(\\hat{\\beta_j})} \\sim^a N(0,1) \\] the test statistic is another random variable that is a function of the data and null hypothesis. T denotes the random variable test statistic t denotes the single realization of the test statistic Evaluating Test Statistic: determine whether or not we reject or fail to reject the null hypothesis at a given significance / confidence level Three equivalent ways Critical Value P-value Confidence Interval Critical Value For a given significance level, will determine the critical value (c) * One-sided: \\(H_0: \\beta_j \\ge \\beta_{j0}\\) \\[ P(T&lt;c|H_0)=\\alpha \\] Reject the null if \\(t&lt;c\\) One-sided: \\(H_0: \\beta_j \\le \\beta_{j0}\\) \\[ P(T&gt;c|H_0)=\\alpha \\] Reject the null if \\(t&gt;c\\) TWo-sided: \\(H_0: \\beta_j \\neq \\beta_{j0}\\) \\[ P(|T|&gt;c|H_0)=\\alpha \\] Reject the null if \\(|t|&gt;c\\) p-value Calculate the probability that the test statistic was worse than the realization you have One-sided: \\(H_0: \\beta_j \\ge \\beta_{j0}\\) \\[ \\text{p-value} = P(T&lt;t|H_0) \\] One-sided: \\(H_0: \\beta_j \\le \\beta_{j0}\\) \\[ \\text{p-value} = P(T&gt;t|H_0) \\] Two-sided: \\(H_0: \\beta_j \\neq \\beta_{j0}\\) \\[ \\text{p-value} = P(|T|&lt;t|H_0) \\] reject the null if p-value \\(&lt; \\alpha\\) Confidence Interval Using the critical value associated with a null hypothesis and significance level, create an interval \\[ CI(\\hat{\\beta}_j)_{\\alpha} = [\\hat{\\beta}_j-(c \\times SE(\\hat{\\beta}_j)),\\hat{\\beta}_j+(c \\times SE(\\hat{\\beta}_j))] \\] If the null set lies outside the interval then we reject the null. We are not testing whether the true population value is close to the estimate, we are testing that given a field true population value of the parameter, how like it is that we observed this estimate. Can be interpreted as we believe with \\((1-\\alpha)\\times 100 \\%\\) probability that the confidence interval captures the true parameter value. With stronger assumption (A1-A6), we could consider Finite Sample Properties \\[ T = \\frac{\\hat{\\beta}_j-\\beta_{j0}}{SE(\\hat{\\beta}_j)} \\sim T(n-k) \\] This above distributional derivation is strongly dependent on A4 and A5 T has a student t-distribution because the numerator is normal and the denominator is \\(\\chi^2\\). Critical value and p-values will be calculated from the student t-distribution rather than the standard normal distribution. \\(n \\to \\infty\\), \\(T(n-k)\\) is asymptotically standard normal. Rule of thumb if \\(n-k&gt;120\\): the critical values and p-values from the t-distribution are (almost) the same as the critical values and p-values from the standard normal distribution. if \\(n-k&lt;120\\) if (A1-A6) hold then the t-test is an exact finite distribution test if (A1-A3a, A5) hold, because the t-distribution is asymptotically normal, computing the critical values from a t-distribution is still a valid asymptotic test (i.e., not quite the right critical values and p0values, the difference goes away as \\(n \\to \\infty\\)) 14.2.1 Multiple Hypothesis test multiple parameters as the same time \\(H_0: \\beta_1 = 0\\ \\&amp; \\ \\beta_2 = 0\\) \\(H_0: \\beta_1 = 1\\ \\&amp; \\ \\beta_2 = 0\\) perform a series of simply hypothesis does not answer the question (joint distribution vs. two marginal distributions). The test statistic is based on a restriction written in matrix form. \\[ y=\\beta_0+x_1\\beta_1 + x_2\\beta_2 + x_3\\beta_3 + \\epsilon \\] Null hypothesis is \\(H_0: \\beta_1 = 0\\) &amp; \\(\\beta_2=0\\) can be rewritten as \\(H_0: \\mathbf{R}\\beta -\\mathbf{q}=0\\) where \\(\\mathbf{R}\\) is a m x k matrix where m is the number of restrictions and k is the number of parameters. \\(\\mathbf{q}\\) is a k x 1 vector \\(\\mathbf{R}\\) “picks up” the relevant parameters while \\(\\mathbf{q}\\) is a the null value of the parameter \\[ \\mathbf{R}= \\left( \\begin{array}{cccc} 0 &amp; 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ \\end{array} \\right), \\mathbf{q} = \\left( \\begin{array}{c} 0 \\\\ 0 \\\\ \\end{array} \\right) \\] Test Statistic for OLS estimator for a multiple hypothesis \\[ F = \\frac{(\\mathbf{R\\hat{\\beta}-q})\\hat{\\Sigma}^{-1}(\\mathbf{R\\hat{\\beta}-q})}{m} \\sim^a F(m,n-k) \\] \\(\\hat{\\Sigma}^{-1}\\) is the estimator for the asymptotic variance-covariance matrix if A4 holds, both the homoskedastic and heteroskedastic versions produce valid estimator If A4 does not hold, only the heteroskedastic version produces valid estimators. When m = 1, there is only a single restriction, then the F-statistic is the t-statistic squared. F distribution is strictly positive, check F-Distribution for more details. 14.2.2 Linear Combination Testing multiple parameters as the same time \\[ H_0: \\beta_1 -\\beta_2 = 0 \\\\ H_0: \\beta_1 - \\beta_2 &gt; 0 \\\\ H_0: \\beta_1 - 2*\\beta_2 =0 \\] Each is a single restriction on a function of the parameters. Null hypothesis: \\[ H_0: \\beta_1 -\\beta_2 = 0 \\] can be rewritten as \\[ H_0: \\mathbf{R}\\beta -\\mathbf{q}=0 \\] where \\(\\mathbf{R}\\)=(0 1 -1 0 0) and \\(\\mathbf{q}=0\\) 14.2.3 Estimate Difference in Coefficients There is no package to estimate for the difference between two coefficients and its CI, but a simple function created by Katherine Zee can be used to calculate this difference. Some modifications might be needed if you don’t use standard lm model in R. difftest_lm &lt;- function(x1, x2, model) { diffest &lt;- summary(model)$coef[x1, &quot;Estimate&quot;] - summary(model)$coef[x2, &quot;Estimate&quot;] vardiff &lt;- (summary(model)$coef[x1, &quot;Std. Error&quot;] ^ 2 + summary(model)$coef[x2, &quot;Std. Error&quot;] ^ 2) - (2 * (vcov(model)[x1, x2])) # variance of x1 + variance of x2 - 2*covariance of x1 and x2 diffse &lt;- sqrt(vardiff) tdiff &lt;- (diffest) / (diffse) ptdiff &lt;- 2 * (1 - pt(abs(tdiff), model$df, lower.tail = T)) upr &lt;- diffest + qt(.975, df = model$df) * diffse # will usually be very close to 1.96 lwr &lt;- diffest + qt(.025, df = model$df) * diffse df &lt;- model$df return(list( est = round(diffest, digits = 2), t = round(tdiff, digits = 2), p = round(ptdiff, digits = 4), lwr = round(lwr, digits = 2), upr = round(upr, digits = 2), df = df )) } 14.2.4 Application library(&quot;car&quot;) # Multiple hypothesis mod.davis &lt;- lm(weight ~ repwt, data=Davis) linearHypothesis(mod.davis, c(&quot;(Intercept) = 0&quot;, &quot;repwt = 1&quot;),white.adjust = TRUE) #&gt; Linear hypothesis test #&gt; #&gt; Hypothesis: #&gt; (Intercept) = 0 #&gt; repwt = 1 #&gt; #&gt; Model 1: restricted model #&gt; Model 2: weight ~ repwt #&gt; #&gt; Note: Coefficient covariance matrix supplied. #&gt; #&gt; Res.Df Df F Pr(&gt;F) #&gt; 1 183 #&gt; 2 181 2 3.3896 0.03588 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # Linear Combination mod.duncan &lt;- lm(prestige ~ income + education, data=Duncan) linearHypothesis(mod.duncan, &quot;1*income - 1*education = 0&quot;) #&gt; Linear hypothesis test #&gt; #&gt; Hypothesis: #&gt; income - education = 0 #&gt; #&gt; Model 1: restricted model #&gt; Model 2: prestige ~ income + education #&gt; #&gt; Res.Df RSS Df Sum of Sq F Pr(&gt;F) #&gt; 1 43 7518.9 #&gt; 2 42 7506.7 1 12.195 0.0682 0.7952 14.2.5 Nonlinear Suppose that we have q nonlinear functions of the parameters \\[ \\mathbf{h}(\\theta) = \\{ h_1 (\\theta), ..., h_q (\\theta)\\}&#39; \\] The,n, the Jacobian matrix (\\(\\mathbf{H}(\\theta)\\)), of rank q is \\[ \\mathbf{H}_{q \\times p}(\\theta) = \\left( \\begin{array} {ccc} \\frac{\\partial h_1(\\theta)}{\\partial \\theta_1} &amp; ... &amp; \\frac{\\partial h_1(\\theta)}{\\partial \\theta_p} \\\\ . &amp; . &amp; . \\\\ \\frac{\\partial h_q(\\theta)}{\\partial \\theta_1} &amp; ... &amp; \\frac{\\partial h_q(\\theta)}{\\partial \\theta_p} \\end{array} \\right) \\] where the null hypothesis \\(H_0: \\mathbf{h} (\\theta) = 0\\) can be tested agiasnt the 2-sided alternative with the Wald statistic \\[ W = \\frac{\\mathbf{h(\\hat{\\theta})&#39;\\{H(\\hat{\\theta})[F(\\hat{\\theta})&#39;F(\\hat{\\theta})]^{-1}H(\\hat{\\theta})&#39;\\}^{-1}h(\\hat{\\theta})}}{s^2q} \\sim F_{q,n-p} \\] "],["the-likelihood-ratio-test.html", "14.3 The likelihood ratio test", " 14.3 The likelihood ratio test \\[ t_{LR} = 2[l(\\hat{\\theta})-l(\\theta_0)] \\sim \\chi^2_v \\] where v is the degree of freedom. Compare the height of the log-likelihood of the sample estimate in relation to the height of log-likelihood of the hypothesized population parameter Alternatively, This test considers a ratio of two maximizations, \\[ L_r = \\text{maximized value of the likelihood under $H_0$ (the reduced model)} \\\\ L_f = \\text{maximized value of the likelihood under $H_0 \\cup H_a$ (the full model)} \\] Then, the likelihood ratio is: \\[ \\Lambda = \\frac{L_r}{L_f} \\] which can’t exceed 1 (since \\(L_f\\) is always at least as large as \\(L-r\\) because \\(L_r\\) is the result of a maximization under a restricted set of the parameter values). The likelihood ratio statistic is: \\[ -2ln(\\Lambda) = -2ln(L_r/L_f) = -2(l_r - l_f) \\\\ \\lim_{n \\to \\infty}(-2ln(\\Lambda)) \\sim \\chi^2_v \\] where v is the number of parameters in the full model minus the number of parameters in the reduced model. If \\(L_r\\) is much smaller than \\(L_f\\) (the likelihood ratio exceeds \\(\\chi_{\\alpha,v}^2\\)), then we reject he reduced model and accept the full model at \\(\\alpha \\times 100 \\%\\) significance level "],["lagrange-multiplier-score.html", "14.4 Lagrange Multiplier (Score)", " 14.4 Lagrange Multiplier (Score) \\[ t_S= \\frac{S(\\theta_0)^2}{I(\\theta_0)} \\sim \\chi^2_v \\] where v is the degree of freedom. Compare the slope of the log-likelihood of the sample estimate in relation to the slope of the log-likelihood of the hypothesized population parameter "],["two-one-sided-tests-tost-equivalence-testing.html", "14.5 Two One-Sided Tests (TOST) Equivalence Testing", " 14.5 Two One-Sided Tests (TOST) Equivalence Testing This is a good way to test whether your population effect size is within a range of practical interest (e.g., if the effect size is 0). library(TOSTER) "],["marginal-effects.html", "Chapter 15 Marginal Effects", " Chapter 15 Marginal Effects In cases without polynomials or interactions, it can be easy to interpret the marginal effect. For example, \\[ Y = \\beta_1 X_1 + \\beta_2 X_2 \\] where \\(\\beta\\) are the marginal effects. Numerical derivation is easier than analytical derivation. We need to choose values for all the variables to calculate the marginal effect of \\(X\\) Analytical derivation \\[ f&#39;(x) \\equiv \\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h} \\] E.g., \\(f(x) = X^2\\) \\[ \\begin{aligned} f&#39;(x) &amp;= \\lim_{h \\to 0} \\frac{(x+h)^2 - x^2}{h} \\\\ &amp;= \\frac{x^2 + 2xh + h^2 - x^2}{h} \\\\ &amp;= \\frac{2xh + h^2}{h} \\\\ &amp;= 2x + h \\\\ &amp;= 2x \\end{aligned} \\] For numerically approach, we “just” need to find a small \\(h\\) to plug in our function. However, you also need a large enough \\(h\\) to have numerically accurate computation (Gould, Pitblado, and Poi 2010, chap. 1) Numerically approach One-sided derivative \\[ \\begin{aligned} f&#39;(x) &amp;= \\lim_{h \\to 0} \\frac{(x+h)^2 - x^2}{h} \\\\ &amp; \\approx \\frac{f(x+h) -f(x)}{h} \\end{aligned} \\] Alternatively, two-sided derivative \\[ f&#39;_2(x) \\approx \\frac{f(x+h) - f(x- h)}{2h} \\] Marginal effects for discrete variables (also known as incremental effects) are the change in \\(E[Y|X]\\) for a one unit change in \\(X\\) continuous variables are the change in \\(E[Y|X]\\) for very small changes in \\(X\\) (not unit changes), because it’s a derivative, which is a limit when \\(h \\to 0\\) Analytical derivation Numerical derivation Marginal Effects Rules of expectations Approximate analytical solution Standard Errors Rules of variances Delta method using the asymptotic errors (vcov matrix) References "],["delta-method.html", "15.1 Delta Method", " 15.1 Delta Method approximate the mean and variance of a function of random variables using a first-order Taylor approximation A semi-parametric method Alternative approaches: Analytically derive a probability function for the margin Simulation/Bootstrapping Resources: Advanced: modmarg Intermediate: UCLA stat Simple: Another one Let \\(G(\\beta)\\) be a function of the parameters \\(\\beta\\), then \\[ var(G(\\beta)) \\approx \\nabla G(\\beta) cov (\\beta) \\nabla G(\\beta)&#39; \\] where \\(\\nabla G(\\beta)\\) = the gradient of the partial derivatives of \\(G(\\beta)\\) (also known as the Jacobian) "],["average-marginal-effect-algorithm.html", "15.2 Average Marginal Effect Algorithm", " 15.2 Average Marginal Effect Algorithm For one-sided derivative \\(\\frac{\\partial p(\\mathbf{X},\\beta)}{\\partial X}\\) in the probability scale Estimate your model For each observation \\(i\\) Calculate \\(\\hat{Y}_{i0}\\) which is the prediction in the probability scale using observed values Increase \\(X\\) (variable of interest) by a “small” amount \\(h\\) (\\(X_{new} = X + h\\)) When \\(X\\) is continuous, \\(h = (|\\bar{X}| + 0.001) \\times 0.001\\) where \\(\\bar{X}\\) is the mean value of \\(X\\) When \\(X\\) is discrete, \\(h = 1\\) Calculate \\(\\hat{Y}_{i1}\\) which is the prediction in the probability scale using new \\(X\\) and other variables’ observed vales. Calculate the difference between the two predictions as fraction of \\(h\\): \\(\\frac{\\bar{Y}_{i1} - \\bar{Y}_{i0}}{h}\\) Average numerical derivative is \\(E[\\frac{\\bar{Y}_{i1} - \\bar{Y}_{i0}}{h}] \\approx \\frac{\\partial p (Y|\\mathbf{X}, \\beta)}{\\partial X}\\) Two-sided derivatives Estimate your model For each observation \\(i\\) Calculate \\(\\hat{Y}_{i0}\\) which is the prediction in the probability scale using observed values Increase \\(X\\) (variable of interest) by a “small” amount \\(h\\) (\\(X_{1} = X + h\\)) and decrease \\(X\\) (variable of interest) by a “small” amount \\(h\\) (\\(X_{2} = X - h\\)) When \\(X\\) is continuous, \\(h = (|\\bar{X}| + 0.001) \\times 0.001\\) where \\(\\bar{X}\\) is the mean value of \\(X\\) When \\(X\\) is discrete, \\(h = 1\\) Calculate \\(\\hat{Y}_{i1}\\) which is the prediction in the probability scale using new \\(X_1\\) and other variables’ observed vales. Calculate \\(\\hat{Y}_{i2}\\) which is the prediction in the probability scale using new \\(X_2\\) and other variables’ observed vales. Calculate the difference between the two predictions as fraction of \\(h\\): \\(\\frac{\\bar{Y}_{i1} - \\bar{Y}_{i2}}{2h}\\) Average numerical derivative is \\(E[\\frac{\\bar{Y}_{i1} - \\bar{Y}_{i2}}{2h}] \\approx \\frac{\\partial p (Y|\\mathbf{X}, \\beta)}{\\partial X}\\) library(margins) data(&quot;mtcars&quot;) mod &lt;- lm(mpg ~ cyl * disp * hp, data = mtcars) margins::margins(mod) %&gt;% summary() #&gt; factor AME SE z p lower upper #&gt; cyl -4.0592 3.7614 -1.0792 0.2805 -11.4313 3.3130 #&gt; disp -0.0350 0.0132 -2.6473 0.0081 -0.0610 -0.0091 #&gt; hp -0.0284 0.0185 -1.5348 0.1248 -0.0647 0.0079 # function for variable get_mae &lt;- function(mod, var = &quot;disp&quot;) { data = mod$model pred &lt;- predict(mod) if (class(mod$model[[{{var}}]]) == &quot;numeric&quot;) { h = (abs(mean(mod$model[[var]])) + 0.01) * 0.01 } else { h = 1 } data[[{{var}}]] &lt;- data[[{{var}}]] - h pred_new &lt;- predict(mod, newdata = data) mean(pred - pred_new)/h } get_mae(mod, var = &quot;disp&quot;) #&gt; [1] -0.03504546 "],["packages.html", "15.3 Packages", " 15.3 Packages 15.3.1 MarginalEffects MarginalEffects package is a successor of margins and emtrends (faster, more efficient, more adaptable). Hence, this is advocated to be used. A limitation is that there is no readily function to correct for multiple comparisons. Hence, one can use the p.adjust function to overcome this disadvantage. Definitions from the package: Marginal effects are slopes or derivatives (i.e., effect of changes in a variable on the outcome) margins package defines marginal effects as “partial derivatives of the regression equation with respect to each variable in the model for each unit in the data.” Marginal means are averages or integrals (i.e., marginalizing across rows of a prediction grid) To customize your plot using plot_cme (which is a ggplot class), you can check this post by the author of the MarginalEffects package Causal inference with the parametric g-formula Because the plug-in g estimator is equivalent to the average contrast in the marginaleffects package. To get predicted values library(marginaleffects) library(tidyverse) data(mtcars) mod &lt;- lm(mpg ~ hp * wt * am, data = mtcars) predictions(mod) %&gt;% head() #&gt; #&gt; Estimate Std. Error z Pr(&gt;|z|) S 2.5 % 97.5 % #&gt; 22.5 0.884 25.4 &lt;0.001 471.7 20.8 24.2 #&gt; 20.8 1.194 17.4 &lt;0.001 223.3 18.5 23.1 #&gt; 25.3 0.709 35.7 &lt;0.001 922.7 23.9 26.7 #&gt; 20.3 0.704 28.8 &lt;0.001 601.5 18.9 21.6 #&gt; 17.0 0.712 23.9 &lt;0.001 416.2 15.6 18.4 #&gt; 19.7 0.875 22.5 &lt;0.001 368.8 17.9 21.4 #&gt; #&gt; Columns: rowid, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, mpg, hp, wt, am # for specific reference values predictions(mod, newdata = datagrid(am = 0, wt = c(2, 4))) #&gt; #&gt; Estimate Std. Error z Pr(&gt;|z|) S 2.5 % 97.5 % hp am wt #&gt; 22.0 2.04 10.8 &lt;0.001 87.4 18.0 26.0 147 0 2 #&gt; 16.6 1.08 15.3 &lt;0.001 173.8 14.5 18.7 147 0 4 #&gt; #&gt; Columns: rowid, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, mpg, hp, am, wt plot_cap(mod, condition = c(&quot;hp&quot;,&quot;wt&quot;)) # Average Margianl Effects mfx &lt;- marginaleffects(mod, variables = c(&quot;hp&quot;,&quot;wt&quot;)) summary(mfx) #&gt; #&gt; Term Contrast Estimate Std. Error z Pr(&gt;|z|) 2.5 % 97.5 % #&gt; hp mean(dY/dX) -0.0381 0.0128 -2.98 0.00291 -0.0631 -0.013 #&gt; wt mean(dY/dX) -3.9391 1.0860 -3.63 &lt; 0.001 -6.0675 -1.811 #&gt; #&gt; Columns: term, contrast, estimate, std.error, statistic, p.value, conf.low, conf.high # Group-Average Marginal Effects marginaleffects::marginaleffects(mod, by = &quot;hp&quot;, variables = &quot;am&quot;) #&gt; #&gt; Term Contrast hp Estimate Std. Error z Pr(&gt;|z|) S 2.5 % #&gt; am mean(1) - mean(0) 110 -0.640 1.57 -0.407 0.684 0.5 -3.73 #&gt; am mean(1) - mean(0) 93 1.201 2.35 0.511 0.609 0.7 -3.40 #&gt; am mean(1) - mean(0) 175 -0.416 1.56 -0.266 0.790 0.3 -3.48 #&gt; am mean(1) - mean(0) 105 -2.682 2.37 -1.132 0.258 2.0 -7.32 #&gt; am mean(1) - mean(0) 245 1.115 2.28 0.488 0.625 0.7 -3.36 #&gt; am mean(1) - mean(0) 62 -2.774 2.51 -1.107 0.268 1.9 -7.68 #&gt; am mean(1) - mean(0) 95 -1.832 1.97 -0.931 0.352 1.5 -5.69 #&gt; am mean(1) - mean(0) 123 -2.098 2.10 -0.998 0.318 1.7 -6.22 #&gt; am mean(1) - mean(0) 180 -1.381 2.47 -0.560 0.576 0.8 -6.22 #&gt; am mean(1) - mean(0) 205 -2.873 6.24 -0.460 0.645 0.6 -15.11 #&gt; am mean(1) - mean(0) 215 -2.534 6.95 -0.364 0.716 0.5 -16.16 #&gt; am mean(1) - mean(0) 230 -1.477 7.07 -0.209 0.835 0.3 -15.34 #&gt; am mean(1) - mean(0) 66 2.025 3.48 0.582 0.561 0.8 -4.80 #&gt; am mean(1) - mean(0) 52 3.976 5.20 0.764 0.445 1.2 -6.22 #&gt; am mean(1) - mean(0) 65 2.999 4.13 0.725 0.468 1.1 -5.10 #&gt; am mean(1) - mean(0) 97 0.708 2.04 0.347 0.728 0.5 -3.28 #&gt; am mean(1) - mean(0) 150 -1.429 1.90 -0.753 0.452 1.1 -5.15 #&gt; am mean(1) - mean(0) 91 1.858 2.76 0.674 0.500 1.0 -3.54 #&gt; am mean(1) - mean(0) 113 4.081 3.94 1.037 0.300 1.7 -3.63 #&gt; am mean(1) - mean(0) 264 2.106 2.29 0.920 0.358 1.5 -2.38 #&gt; am mean(1) - mean(0) 335 4.027 3.24 1.243 0.214 2.2 -2.32 #&gt; am mean(1) - mean(0) 109 -0.237 1.59 -0.149 0.881 0.2 -3.35 #&gt; 97.5 % #&gt; 2.45 #&gt; 5.80 #&gt; 2.64 #&gt; 1.96 #&gt; 5.59 #&gt; 2.14 #&gt; 2.02 #&gt; 2.02 #&gt; 3.46 #&gt; 9.36 #&gt; 11.09 #&gt; 12.39 #&gt; 8.85 #&gt; 14.18 #&gt; 11.10 #&gt; 4.70 #&gt; 2.29 #&gt; 7.26 #&gt; 11.79 #&gt; 6.59 #&gt; 10.38 #&gt; 2.87 #&gt; #&gt; Columns: term, contrast, hp, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo # Marginal effects at representative values marginaleffects::marginaleffects(mod, newdata = datagrid(am = 0, wt = c(2,4))) #&gt; #&gt; Term Contrast Estimate Std. Error z Pr(&gt;|z|) S 2.5 % 97.5 % hp am #&gt; hp dY/dX -0.0598 0.0283 -2.116 0.0344 4.9 -0.1153 -0.00441 147 0 #&gt; hp dY/dX -0.0309 0.0187 -1.654 0.0982 3.3 -0.0676 0.00573 147 0 #&gt; wt dY/dX -2.6762 1.4192 -1.886 0.0593 4.1 -5.4578 0.10551 147 0 #&gt; wt dY/dX -2.6762 1.4193 -1.886 0.0594 4.1 -5.4579 0.10556 147 0 #&gt; am 1 - 0 2.5465 2.7860 0.914 0.3607 1.5 -2.9139 8.00694 147 0 #&gt; am 1 - 0 -2.9661 3.0381 -0.976 0.3289 1.6 -8.9207 2.98852 147 0 #&gt; wt #&gt; 2 #&gt; 4 #&gt; 2 #&gt; 4 #&gt; 2 #&gt; 4 #&gt; #&gt; Columns: rowid, term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, mpg, hp, am, wt # Marginal Effects at the Mean marginaleffects::marginaleffects(mod, newdata = &quot;mean&quot;) #&gt; #&gt; Term Contrast Estimate Std. Error z Pr(&gt;|z|) S 2.5 % 97.5 % #&gt; hp dY/dX -0.0323 0.00956 -3.374 &lt; 0.001 10.4 -0.051 -0.0135 #&gt; wt dY/dX -3.7959 1.21438 -3.126 0.00177 9.1 -6.176 -1.4158 #&gt; am 1 - 0 -0.8086 1.52383 -0.531 0.59568 0.7 -3.795 2.1781 #&gt; #&gt; Columns: rowid, term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, predicted, predicted_hi, predicted_lo, mpg, hp, wt, am # counterfactual comparisons(mod, variables = list(am = 0:1)) %&gt;% summary() #&gt; #&gt; Term Contrast Estimate Std. Error z Pr(&gt;|z|) 2.5 % 97.5 % #&gt; am mean(1) - mean(0) -0.0481 1.85 -0.026 0.979 -3.68 3.58 #&gt; #&gt; Columns: term, contrast, estimate, std.error, statistic, p.value, conf.low, conf.high 15.3.2 margins Marginal effects are partial derivative of the regression equation with respect to each variable in the model for each unit in the data Average Partial Effects: the contribution of each variable the outcome scale, conditional on the other variables involved in the link function transformation of the linear predictor Average Marginal Effects: the marginal contribution of each variable on the scale of the linear predictor. Average marginal effects are the mean of these unit-specific partial derivatives over some sample margins package gives the marginal effects of models (a replication of the margins command in Stata). prediction package gives the unit-specific and sample average predictions of models (similar to the predictive margins in Stata). library(margins) # examples by the package&#39;s authors mod &lt;- lm(mpg ~ cyl * hp + wt, data = mtcars) summary(mod) #&gt; #&gt; Call: #&gt; lm(formula = mpg ~ cyl * hp + wt, data = mtcars) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -3.3440 -1.4144 -0.6166 1.2160 4.2815 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 52.017520 4.916935 10.579 4.18e-11 *** #&gt; cyl -2.742125 0.800228 -3.427 0.00197 ** #&gt; hp -0.163594 0.052122 -3.139 0.00408 ** #&gt; wt -3.119815 0.661322 -4.718 6.51e-05 *** #&gt; cyl:hp 0.018954 0.006645 2.852 0.00823 ** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 2.242 on 27 degrees of freedom #&gt; Multiple R-squared: 0.8795, Adjusted R-squared: 0.8616 #&gt; F-statistic: 49.25 on 4 and 27 DF, p-value: 5.065e-12 In cases where you have interaction or polynomial terms, the coefficient estimates cannot be interpreted as the marginal effects of X on Y. Hence, if you want to know the average marginal effects of each variable then summary(margins(mod)) #&gt; factor AME SE z p lower upper #&gt; cyl 0.0381 0.5999 0.0636 0.9493 -1.1376 1.2139 #&gt; hp -0.0463 0.0145 -3.1909 0.0014 -0.0748 -0.0179 #&gt; wt -3.1198 0.6613 -4.7176 0.0000 -4.4160 -1.8236 # equivalently margins_summary(mod) #&gt; factor AME SE z p lower upper #&gt; cyl 0.0381 0.5999 0.0636 0.9493 -1.1376 1.2139 #&gt; hp -0.0463 0.0145 -3.1909 0.0014 -0.0748 -0.0179 #&gt; wt -3.1198 0.6613 -4.7176 0.0000 -4.4160 -1.8236 plot(margins(mod)) Marginal effects at the mean (MEM): Marginal effects at the mean values of the sample For discrete variables, it’s called average discrete change (ADC) Average Marginal Effect (AME) An average of the marginal effects at each value of the sample Marginal Effects at representative values (MER) margins(mod, at = list(hp = 150)) #&gt; at(hp) cyl hp wt #&gt; 150 0.1009 -0.04632 -3.12 margins(mod, at = list(hp = 150)) %&gt;% summary() #&gt; factor hp AME SE z p lower upper #&gt; cyl 150.0000 0.1009 0.6128 0.1647 0.8692 -1.1001 1.3019 #&gt; hp 150.0000 -0.0463 0.0145 -3.1909 0.0014 -0.0748 -0.0179 #&gt; wt 150.0000 -3.1198 0.6613 -4.7175 0.0000 -4.4160 -1.8236 15.3.3 mfx Works well with Generalized Linear Models/glm package For technical details, see the package vignette Model Dependent Variable Syntax Probit Binary probitmfx Logit Binary logitmfx Poisson Count poissonmfx Negative Binomial Count negbinmfx Beta Rate betamfx library(mfx) data(&quot;mtcars&quot;) poissonmfx(formula = vs ~ mpg * cyl * disp, data = mtcars) #&gt; Call: #&gt; poissonmfx(formula = vs ~ mpg * cyl * disp, data = mtcars) #&gt; #&gt; Marginal Effects: #&gt; dF/dx Std. Err. z P&gt;|z| #&gt; mpg 1.4722e-03 8.7531e-03 0.1682 0.8664 #&gt; cyl 6.6420e-03 3.9263e-02 0.1692 0.8657 #&gt; disp 1.5899e-04 9.4555e-04 0.1681 0.8665 #&gt; mpg:cyl -3.4698e-04 2.0564e-03 -0.1687 0.8660 #&gt; mpg:disp -7.6794e-06 4.5545e-05 -0.1686 0.8661 #&gt; cyl:disp -3.3837e-05 1.9919e-04 -0.1699 0.8651 #&gt; mpg:cyl:disp 1.6812e-06 9.8919e-06 0.1700 0.8650 This package can only give the marginal effect for each variable in the glm model, but not the average marginal effect that we might look for. "],["prediction-and-estimation.html", "Chapter 16 Prediction and Estimation", " Chapter 16 Prediction and Estimation Prediction and Estimation (Inference) have been the two fundamental pillars in statistics. You cannot have both. You can either have high prediction or high estimation. In prediction, you minimize the loss function. In estimation, you try to best fit the data. Because the goal of estimation is to best fit the data, you always run the risk of not predicting well. In high dimension, you always have weak to strong collinearity. Hence, your estimation can be undesirable. And you can’t pick which one variable to stay in the model, but all these troubles would not affect your prediction. In Plateau problem If two functions are similar in output space, you can still do prediction, but you can’t do estimation because of exploded standard errors. (SICSS 2018 - Sendhil Mullainathan’s presentation slide) Selective Labels Problem (The Selective Labels Problem: Evaluating Algorithmic Predictions in the Presence of Unobservables) Recall Linear Regression 5 OLS estimates \\[ \\begin{aligned} \\hat{\\beta}_{OLS} &amp;= (\\mathbf{X}&#39;\\mathbf{X})^{-1}(\\mathbf{X}&#39;\\mathbf{Y}) \\\\ &amp;= (\\mathbf{X}&#39;\\mathbf{X})^{-1}(\\mathbf{X}&#39;(\\mathbf{X \\beta}+ \\epsilon)) \\\\ &amp;= (\\mathbf{X}&#39;\\mathbf{X})^{-1} (\\mathbf{X}&#39;\\mathbf{X}) \\beta + (\\mathbf{X}&#39;\\mathbf{X})^{-1}(\\mathbf{X}&#39;\\epsilon) \\\\ \\hat{\\beta}_{OLS} &amp; \\to \\beta + (\\mathbf{X}&#39;\\mathbf{X})^{-1}(\\mathbf{X}&#39;\\epsilon) \\end{aligned} \\] Hence, OLS estimates will be unbiased (i.e., get rid of \\((\\mathbf{X}&#39;\\mathbf{X})^{-1}(\\mathbf{X}&#39;\\epsilon)\\)) if we have the following 2 conditions: \\(E(\\epsilon|\\mathbf{X}) = 0\\) With an intercept, we can usually solve this problem \\(Cov(\\mathbf{X}, \\epsilon) = 0\\) Problem with estimation usually stems from the second condition. Tools to combat this problem can be found in causal inference 18 "],["moderation.html", "Chapter 17 Moderation", " Chapter 17 Moderation Spotlight Analysis: Compare the mean of the dependent of the two groups (treatment and control) at every value (Simple Slopes Analysis) Floodlight Analysis: is spotlight analysis on the whole range of the moderator (Johnson-Neyman intervals) Other Resources: BANOVAL : floodlight analysis on Bayesian ANOVA models cSEM : doFloodlightAnalysis in SEM model (Spiller et al. 2013) Terminology: Main effects (slopes): coefficients that do no involve interaction terms Simple slope: when a continuous independent variable interact with a moderating variable, its slope at a particular level of the moderating variable Simple effect: when a categorical independent variable interacts with a moderating variable, its effect at a particular level of the moderating variable. Example: \\[ Y = \\beta_0 + \\beta_1 X + \\beta_2 M + \\beta_3 X \\times M \\] where \\(\\beta_0\\) = intercept \\(\\beta_1\\) = simple effect (slope) of \\(X\\) (independent variable) \\(\\beta_2\\) = simple effect (slope) of \\(M\\) (moderating variable) \\(\\beta_3\\) = interaction of \\(X\\) and \\(M\\) Three types of interactions: Continuous by continuous Continuous by categorical Categorical by categorical References "],["emmeans-package.html", "17.1 emmeans package", " 17.1 emmeans package install.packages(&quot;emmeans&quot;) library(emmeans) Data set is from UCLA seminar where gender and prog are categorical dat &lt;- readRDS(&quot;data/exercise.rds&quot;) %&gt;% mutate(prog = factor(prog, labels = c(&quot;jog&quot;,&quot;swim&quot;,&quot;read&quot;))) %&gt;% mutate(gender = factor(gender, labels = c(&quot;male&quot;,&quot;female&quot;))) 17.1.1 Continuous by continuous contcont &lt;- lm(loss~hours*effort,data=dat) summary(contcont) #&gt; #&gt; Call: #&gt; lm(formula = loss ~ hours * effort, data = dat) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -29.52 -10.60 -1.78 11.13 34.51 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 7.79864 11.60362 0.672 0.5017 #&gt; hours -9.37568 5.66392 -1.655 0.0982 . #&gt; effort -0.08028 0.38465 -0.209 0.8347 #&gt; hours:effort 0.39335 0.18750 2.098 0.0362 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 13.56 on 896 degrees of freedom #&gt; Multiple R-squared: 0.07818, Adjusted R-squared: 0.07509 #&gt; F-statistic: 25.33 on 3 and 896 DF, p-value: 9.826e-16 Simple slopes for a continuous by continuous model Spotlight analysis (Aiken and West 2005): usually pick 3 values of moderating variable: Mean Moderating Variable + \\(\\sigma \\times\\) (Moderating variable) Mean Moderating Variable Mean Moderating Variable - \\(\\sigma \\times\\) (Moderating variable) effar &lt;- round(mean(dat$effort) + sd(dat$effort), 1) effr &lt;- round(mean(dat$effort), 1) effbr &lt;- round(mean(dat$effort) - sd(dat$effort), 1) # specify list of points mylist &lt;- list(effort=c(effbr,effr,effar)) # get the estimates emtrends(contcont, ~effort, var=&quot;hours&quot;,at=mylist) #&gt; effort hours.trend SE df lower.CL upper.CL #&gt; 24.5 0.261 1.352 896 -2.392 2.91 #&gt; 29.7 2.307 0.915 896 0.511 4.10 #&gt; 34.8 4.313 1.308 896 1.745 6.88 #&gt; #&gt; Confidence level used: 0.95 # plot mylist &lt;- list(hours=seq(0,4,by=0.4),effort=c(effbr,effr,effar)) emmip(contcont,effort~hours,at=mylist, CIs=TRUE) # statistical test for slope difference emtrends(contcont, pairwise ~effort, var=&quot;hours&quot;,at=mylist, adjust=&quot;none&quot;) #&gt; $emtrends #&gt; effort hours.trend SE df lower.CL upper.CL #&gt; 24.5 0.261 1.352 896 -2.392 2.91 #&gt; 29.7 2.307 0.915 896 0.511 4.10 #&gt; 34.8 4.313 1.308 896 1.745 6.88 #&gt; #&gt; Results are averaged over the levels of: hours #&gt; Confidence level used: 0.95 #&gt; #&gt; $contrasts #&gt; contrast estimate SE df t.ratio p.value #&gt; effort24.5 - effort29.7 -2.05 0.975 896 -2.098 0.0362 #&gt; effort24.5 - effort34.8 -4.05 1.931 896 -2.098 0.0362 #&gt; effort29.7 - effort34.8 -2.01 0.956 896 -2.098 0.0362 #&gt; #&gt; Results are averaged over the levels of: hours The 3 p-values are the same as the interaction term. For publication, we use library(ggplot2) # data (mylist &lt;- list(hours=seq(0,4,by=0.4),effort=c(effbr,effr,effar))) #&gt; $hours #&gt; [1] 0.0 0.4 0.8 1.2 1.6 2.0 2.4 2.8 3.2 3.6 4.0 #&gt; #&gt; $effort #&gt; [1] 24.5 29.7 34.8 contcontdat &lt;- emmip(contcont,effort~hours,at=mylist, CIs=TRUE, plotit=FALSE) contcontdat$feffort &lt;- factor(contcontdat$effort) levels(contcontdat$feffort) &lt;- c(&quot;low&quot;,&quot;med&quot;,&quot;high&quot;) # plot p &lt;- ggplot(data = contcontdat, aes(x = hours, y = yvar, color = feffort)) + geom_line() p1 &lt;- p + geom_ribbon(aes(ymax=UCL, ymin=LCL, fill=feffort), alpha=0.4) p1 + labs(x=&quot;Hours&quot;, y=&quot;Weight Loss&quot;, color=&quot;Effort&quot;, fill=&quot;Effort&quot;) 17.1.2 Continuous by categorical # use Female as basline dat$gender &lt;- relevel(dat$gender, ref=&quot;female&quot;) contcat &lt;- lm(loss ~ hours * gender, data = dat) summary(contcat) #&gt; #&gt; Call: #&gt; lm(formula = loss ~ hours * gender, data = dat) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -27.118 -11.350 -1.963 10.001 42.376 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 3.335 2.731 1.221 0.222 #&gt; hours 3.315 1.332 2.489 0.013 * #&gt; gendermale 3.571 3.915 0.912 0.362 #&gt; hours:gendermale -1.724 1.898 -0.908 0.364 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 14.06 on 896 degrees of freedom #&gt; Multiple R-squared: 0.008433, Adjusted R-squared: 0.005113 #&gt; F-statistic: 2.54 on 3 and 896 DF, p-value: 0.05523 Get simple slopes by each level of the categorical moderator emtrends(contcat, ~ gender, var=&quot;hours&quot;) #&gt; gender hours.trend SE df lower.CL upper.CL #&gt; female 3.32 1.33 896 0.702 5.93 #&gt; male 1.59 1.35 896 -1.063 4.25 #&gt; #&gt; Confidence level used: 0.95 # test difference in slopes emtrends(contcat, pairwise ~ gender, var=&quot;hours&quot;) # which is the same as the interaction term #&gt; $emtrends #&gt; gender hours.trend SE df lower.CL upper.CL #&gt; female 3.32 1.33 896 0.702 5.93 #&gt; male 1.59 1.35 896 -1.063 4.25 #&gt; #&gt; Confidence level used: 0.95 #&gt; #&gt; $contrasts #&gt; contrast estimate SE df t.ratio p.value #&gt; female - male 1.72 1.9 896 0.908 0.3639 # plot (mylist &lt;- list(hours=seq(0,4,by=0.4),gender=c(&quot;female&quot;,&quot;male&quot;))) #&gt; $hours #&gt; [1] 0.0 0.4 0.8 1.2 1.6 2.0 2.4 2.8 3.2 3.6 4.0 #&gt; #&gt; $gender #&gt; [1] &quot;female&quot; &quot;male&quot; emmip(contcat, gender ~hours, at=mylist,CIs=TRUE) 17.1.3 Categorical by categorical # relevel baseline dat$prog &lt;- relevel(dat$prog, ref=&quot;read&quot;) dat$gender &lt;- relevel(dat$gender, ref=&quot;female&quot;) catcat &lt;- lm(loss ~ gender * prog, data = dat) summary(catcat) #&gt; #&gt; Call: #&gt; lm(formula = loss ~ gender * prog, data = dat) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -19.1723 -4.1894 -0.0994 3.7506 27.6939 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -3.6201 0.5322 -6.802 1.89e-11 *** #&gt; gendermale -0.3355 0.7527 -0.446 0.656 #&gt; progjog 7.9088 0.7527 10.507 &lt; 2e-16 *** #&gt; progswim 32.7378 0.7527 43.494 &lt; 2e-16 *** #&gt; gendermale:progjog 7.8188 1.0645 7.345 4.63e-13 *** #&gt; gendermale:progswim -6.2599 1.0645 -5.881 5.77e-09 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 6.519 on 894 degrees of freedom #&gt; Multiple R-squared: 0.7875, Adjusted R-squared: 0.7863 #&gt; F-statistic: 662.5 on 5 and 894 DF, p-value: &lt; 2.2e-16 Simple effects emcatcat &lt;- emmeans(catcat, ~ gender*prog) # differences in predicted values contrast(emcatcat, &quot;revpairwise&quot;, by = &quot;prog&quot;, adjust = &quot;bonferroni&quot;) #&gt; prog = read: #&gt; contrast estimate SE df t.ratio p.value #&gt; male - female -0.335 0.753 894 -0.446 0.6559 #&gt; #&gt; prog = jog: #&gt; contrast estimate SE df t.ratio p.value #&gt; male - female 7.483 0.753 894 9.942 &lt;.0001 #&gt; #&gt; prog = swim: #&gt; contrast estimate SE df t.ratio p.value #&gt; male - female -6.595 0.753 894 -8.762 &lt;.0001 Plot emmip(catcat, prog ~ gender,CIs=TRUE) Bar graph catcatdat &lt;- emmip(catcat, gender ~ prog, CIs = TRUE, plotit = FALSE) p &lt;- ggplot(data = catcatdat, aes(x = prog, y = yvar, fill = gender)) + geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;) p1 &lt;- p + geom_errorbar( position = position_dodge(.9), width = .25, aes(ymax = UCL, ymin = LCL), alpha = 0.3 ) p1 + labs(x = &quot;Program&quot;, y = &quot;Weight Loss&quot;, fill = &quot;Gender&quot;) References "],["probmod-package.html", "17.2 probmod package", " 17.2 probmod package Not recommend: package has serious problem with subscript. install.packages(&quot;probemod&quot;) library(probemod) myModel &lt;- lm(loss ~ hours * gender, data = dat %&gt;% select(loss, hours, gender)) jnresults &lt;- jn(myModel, dv=&#39;loss&#39;, iv=&#39;hours&#39;, mod=&#39;gender&#39;) pickapoint(myModel, dv=&#39;loss&#39;, iv=&#39;hours&#39;, mod=&#39;gender&#39;, alpha=.01) plot(jnresults) "],["interactions-package.html", "17.3 interactions package", " 17.3 interactions package Recommend install.packages(&quot;interactions&quot;) 17.3.1 Continuous interaction (at least one of the two variables is continuous) library(interactions) library(jtools) # for summ() states &lt;- as.data.frame(state.x77) fiti &lt;- lm(Income ~ Illiteracy * Murder + `HS Grad`, data = states) summ(fiti) Observations 50 Dependent variable Income Type OLS linear regression F(4,45) 10.65 R² 0.49 Adj. R² 0.44 Est. S.E. t val. p (Intercept) 1414.46 737.84 1.92 0.06 Illiteracy 753.07 385.90 1.95 0.06 Murder 130.60 44.67 2.92 0.01 HS Grad 40.76 10.92 3.73 0.00 Illiteracy:Murder -97.04 35.86 -2.71 0.01 Standard errors: OLS For continuous moderator, the three values chosen are: -1 SD above the mean The mean -1 SD below the mean interact_plot(fiti, pred = Illiteracy, modx = Murder, # centered = &quot;none&quot;, # if you don&#39;t want the plot to mean-center # modx.values = &quot;plus-minus&quot;, # exclude the mean value of the moderator # modx.values = &quot;terciles&quot; # split moderator&#39;s distribution into 3 groups plot.points = T, # overlay data point.shape = T, # different shape for differennt levels of the moderator jitter = 0.1, # if two data points are on top one another, this moves them apart by little # other appearance option x.label = &quot;X label&quot;, y.label = &quot;Y label&quot;, main.title = &quot;Title&quot;, legend.main = &quot;Legend Title&quot;, colors = &quot;blue&quot;, # include confidence band interval = TRUE, int.width = 0.9, robust = TRUE # use robust SE ) To include weights from the regression inn the plot fiti &lt;- lm(Income ~ Illiteracy * Murder, data = states, weights = Population) interact_plot(fiti, pred = Illiteracy, modx = Murder, plot.points = TRUE) Partial Effect Plot library(ggplot2) data(cars) fitc &lt;- lm(cty ~ year + cyl * displ + class + fl + drv, data = mpg) summ(fitc) Observations 234 Dependent variable cty Type OLS linear regression F(16,217) 99.73 R² 0.88 Adj. R² 0.87 Est. S.E. t val. p (Intercept) -200.98 47.01 -4.28 0.00 year 0.12 0.02 5.03 0.00 cyl -1.86 0.28 -6.69 0.00 displ -3.56 0.66 -5.41 0.00 classcompact -2.60 0.93 -2.80 0.01 classmidsize -2.63 0.93 -2.82 0.01 classminivan -4.41 1.04 -4.24 0.00 classpickup -4.37 0.93 -4.68 0.00 classsubcompact -2.38 0.93 -2.56 0.01 classsuv -4.27 0.87 -4.92 0.00 fld 6.34 1.69 3.74 0.00 fle -4.57 1.66 -2.75 0.01 flp -1.92 1.59 -1.21 0.23 flr -0.79 1.57 -0.50 0.61 drvf 1.40 0.40 3.52 0.00 drvr 0.49 0.46 1.06 0.29 cyl:displ 0.36 0.08 4.56 0.00 Standard errors: OLS interact_plot( fitc, pred = displ, modx = cyl, partial.residuals = TRUE, # the observed data is based on displ, cyl, and model error modx.values = c(4, 5, 6, 8) ) Check linearity assumption in the model Plot the lines based on the subsample (red line), and whole sample (black line) x_2 &lt;- runif(n = 200, min = -3, max = 3) w &lt;- rbinom(n = 200, size = 1, prob = 0.5) err &lt;- rnorm(n = 200, mean = 0, sd = 4) y_2 &lt;- 2.5 - x_2 ^ 2 - 5 * w + 2 * w * (x_2 ^ 2) + err data_2 &lt;- as.data.frame(cbind(x_2, y_2, w)) model_2 &lt;- lm(y_2 ~ x_2 * w, data = data_2) summ(model_2) Observations 200 Dependent variable y_2 Type OLS linear regression F(3,196) 0.73 R² 0.01 Adj. R² -0.00 Est. S.E. t val. p (Intercept) -0.66 0.50 -1.31 0.19 x_2 -0.18 0.30 -0.60 0.55 w 0.93 0.72 1.28 0.20 x_2:w 0.24 0.42 0.58 0.56 Standard errors: OLS interact_plot( model_2, pred = x_2, modx = w, linearity.check = TRUE, plot.points = TRUE ) 17.3.1.1 Simple Slopes Analysis continuous by continuous variable interaction (still work for binary) conditional slope of the variable of interest (i.e., the slope of \\(X\\) when we hold \\(M\\) constant at a value) Using sim_slopes it will mean-center all variables except the variable of interest For moderator that is Continuous, it will pick mean, and plus/minus 1 SD Categorical, it will use all factor sim_slopes requires A regression model with an interaction term) Variable of interest (pred =) Moderator: (modx =) sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = FALSE) #&gt; SIMPLE SLOPES ANALYSIS #&gt; #&gt; Slope of Illiteracy when Murder = 5.420973 (- 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; -------- -------- -------- ------ #&gt; -71.59 268.65 -0.27 0.79 #&gt; #&gt; Slope of Illiteracy when Murder = 8.685043 (Mean): #&gt; #&gt; Est. S.E. t val. p #&gt; --------- -------- -------- ------ #&gt; -437.12 175.82 -2.49 0.02 #&gt; #&gt; Slope of Illiteracy when Murder = 11.949113 (+ 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; --------- -------- -------- ------ #&gt; -802.66 145.72 -5.51 0.00 # plot the coefficients ss &lt;- sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0, 5, 10)) plot(ss) # table ss &lt;- sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0, 5, 10)) library(huxtable) as_huxtable(ss) Table 17.1: Value of MurderSlope of Illiteracy Value of Murderslope 0.00535.50 (458.77) 5.00-24.44 (282.48) 10.00-584.38 (152.37)*** 17.3.1.2 Johnson-Neyman intervals To know all the values of the moderator for which the slope of the variable of interest will be statistically significant, we can use the Johnson-Neyman interval (P. O. Johnson and Neyman 1936) Even though we kind of know that the alpha level when implementing the Johnson-Neyman interval is not correct (Bauer and Curran 2005), not until recently that there is a correction for the type I and II errors (Esarey and Sumner 2018). Since Johnson-Neyman inflates the type I error (comparisons across all values of the moderator) sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = TRUE, control.fdr = TRUE, # correction for type I and II # cond.int = TRUE, # include conditional intecepts robust = &quot;HC3&quot;, # rubust SE # centered = &quot;none&quot;, # don&#39;t mean-centered non-focal variables jnalpha = 0.05) #&gt; JOHNSON-NEYMAN INTERVAL #&gt; #&gt; When Murder is OUTSIDE the interval [-11.70, 8.75], the slope of Illiteracy #&gt; is p &lt; .05. #&gt; #&gt; Note: The range of observed values of Murder is [1.40, 15.10] #&gt; #&gt; Interval calculated using false discovery rate adjusted t = 2.33 #&gt; #&gt; SIMPLE SLOPES ANALYSIS #&gt; #&gt; Slope of Illiteracy when Murder = 5.420973 (- 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; -------- -------- -------- ------ #&gt; -71.59 256.60 -0.28 0.78 #&gt; #&gt; Slope of Illiteracy when Murder = 8.685043 (Mean): #&gt; #&gt; Est. S.E. t val. p #&gt; --------- -------- -------- ------ #&gt; -437.12 191.07 -2.29 0.03 #&gt; #&gt; Slope of Illiteracy when Murder = 11.949113 (+ 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; --------- -------- -------- ------ #&gt; -802.66 178.75 -4.49 0.00 For plotting, we can use johnson_neyman johnson_neyman(fiti, pred = Illiteracy, modx = Murder, control.fdr = TRUE, # correction for type I and II alpha = .05) #&gt; JOHNSON-NEYMAN INTERVAL #&gt; #&gt; When Murder is OUTSIDE the interval [-22.57, 8.52], the slope of Illiteracy #&gt; is p &lt; .05. #&gt; #&gt; Note: The range of observed values of Murder is [1.40, 15.10] #&gt; #&gt; Interval calculated using false discovery rate adjusted t = 2.33 Note: y-axis is the conditional slope of the variable of interest 17.3.1.3 3-way interaction # fita3 &lt;- # lm(rating ~ privileges * critical * learning, data = attitude) # # probe_interaction( # fita3, # pred = critical, # modx = learning, # mod2 = privileges, # alpha = .1 # ) mtcars$cyl &lt;- factor(mtcars$cyl, labels = c(&quot;4 cylinder&quot;, &quot;6 cylinder&quot;, &quot;8 cylinder&quot;)) fitc3 &lt;- lm(mpg ~ hp * wt * cyl, data = mtcars) interact_plot(fitc3, pred = hp, modx = wt, mod2 = cyl) + theme_apa(legend.pos = &quot;bottomright&quot;) Johnson-Neyman 3-way interaction library(survey) data(api) dstrat &lt;- svydesign( id = ~ 1, strata = ~ stype, weights = ~ pw, data = apistrat, fpc = ~ fpc ) regmodel3 &lt;- survey::svyglm(api00 ~ avg.ed * growth * enroll, design = dstrat) sim_slopes( regmodel3, pred = growth, modx = avg.ed, mod2 = enroll, jnplot = TRUE ) #&gt; ███████████████ While enroll (2nd moderator) = 153.0518 (- 1 SD) ██████████████ #&gt; #&gt; JOHNSON-NEYMAN INTERVAL #&gt; #&gt; When avg.ed is OUTSIDE the interval [2.75, 3.82], the slope of growth is p #&gt; &lt; .05. #&gt; #&gt; Note: The range of observed values of avg.ed is [1.38, 4.44] #&gt; #&gt; SIMPLE SLOPES ANALYSIS #&gt; #&gt; Slope of growth when avg.ed = 2.085002 (- 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; ------ ------ -------- ------ #&gt; 1.25 0.32 3.86 0.00 #&gt; #&gt; Slope of growth when avg.ed = 2.787381 (Mean): #&gt; #&gt; Est. S.E. t val. p #&gt; ------ ------ -------- ------ #&gt; 0.39 0.22 1.75 0.08 #&gt; #&gt; Slope of growth when avg.ed = 3.489761 (+ 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; ------- ------ -------- ------ #&gt; -0.48 0.35 -1.37 0.17 #&gt; #&gt; ████████████████ While enroll (2nd moderator) = 595.2821 (Mean) ███████████████ #&gt; #&gt; JOHNSON-NEYMAN INTERVAL #&gt; #&gt; When avg.ed is OUTSIDE the interval [2.84, 7.83], the slope of growth is p #&gt; &lt; .05. #&gt; #&gt; Note: The range of observed values of avg.ed is [1.38, 4.44] #&gt; #&gt; SIMPLE SLOPES ANALYSIS #&gt; #&gt; Slope of growth when avg.ed = 2.085002 (- 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; ------ ------ -------- ------ #&gt; 0.72 0.22 3.29 0.00 #&gt; #&gt; Slope of growth when avg.ed = 2.787381 (Mean): #&gt; #&gt; Est. S.E. t val. p #&gt; ------ ------ -------- ------ #&gt; 0.34 0.16 2.16 0.03 #&gt; #&gt; Slope of growth when avg.ed = 3.489761 (+ 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; ------- ------ -------- ------ #&gt; -0.04 0.24 -0.16 0.87 #&gt; #&gt; ███████████████ While enroll (2nd moderator) = 1037.5125 (+ 1 SD) ██████████████ #&gt; #&gt; JOHNSON-NEYMAN INTERVAL #&gt; #&gt; The Johnson-Neyman interval could not be found. Is the p value for your #&gt; interaction term below the specified alpha? #&gt; #&gt; SIMPLE SLOPES ANALYSIS #&gt; #&gt; Slope of growth when avg.ed = 2.085002 (- 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; ------ ------ -------- ------ #&gt; 0.18 0.31 0.58 0.56 #&gt; #&gt; Slope of growth when avg.ed = 2.787381 (Mean): #&gt; #&gt; Est. S.E. t val. p #&gt; ------ ------ -------- ------ #&gt; 0.29 0.20 1.49 0.14 #&gt; #&gt; Slope of growth when avg.ed = 3.489761 (+ 1 SD): #&gt; #&gt; Est. S.E. t val. p #&gt; ------ ------ -------- ------ #&gt; 0.40 0.27 1.49 0.14 Report ss3 &lt;- sim_slopes(regmodel3, pred = growth, modx = avg.ed, mod2 = enroll) plot(ss3) as_huxtable(ss3) Table 17.2: enroll = 153 Value of avg.edSlope of growth Value of avg.edslope 2.091.25 (0.32)*** 2.790.39 (0.22)# enroll = 595.28 Value of avg.edSlope of growth 3.49-0.48 (0.35) 2.090.72 (0.22)** 2.790.34 (0.16)* enroll = 1037.51 Value of avg.edSlope of growth 3.49-0.04 (0.24) 2.090.18 (0.31) 2.790.29 (0.20) 3.490.40 (0.27) 17.3.2 Categorical interaction library(ggplot2) mpg2 &lt;- mpg %&gt;% mutate(cyl = factor(cyl)) mpg2[&quot;auto&quot;] &lt;- &quot;auto&quot; mpg2$auto[mpg2$trans %in% c(&quot;manual(m5)&quot;, &quot;manual(m6)&quot;)] &lt;- &quot;manual&quot; mpg2$auto &lt;- factor(mpg2$auto) mpg2[&quot;fwd&quot;] &lt;- &quot;2wd&quot; mpg2$fwd[mpg2$drv == &quot;4&quot;] &lt;- &quot;4wd&quot; mpg2$fwd &lt;- factor(mpg2$fwd) ## Drop the two cars with 5 cylinders (rest are 4, 6, or 8) mpg2 &lt;- mpg2[mpg2$cyl != &quot;5&quot;,] ## Fit the model fit3 &lt;- lm(cty ~ cyl * fwd * auto, data = mpg2) library(jtools) # for summ() summ(fit3) Observations 230 Dependent variable cty Type OLS linear regression F(11,218) 61.37 R² 0.76 Adj. R² 0.74 Est. S.E. t val. p (Intercept) 21.37 0.39 54.19 0.00 cyl6 -4.37 0.54 -8.07 0.00 cyl8 -8.37 0.67 -12.51 0.00 fwd4wd -2.91 0.76 -3.83 0.00 automanual 1.45 0.57 2.56 0.01 cyl6:fwd4wd 0.59 0.96 0.62 0.54 cyl8:fwd4wd 2.13 0.99 2.15 0.03 cyl6:automanual -0.76 0.90 -0.84 0.40 cyl8:automanual 0.71 1.18 0.60 0.55 fwd4wd:automanual -1.66 1.07 -1.56 0.12 cyl6:fwd4wd:automanual 1.29 1.52 0.85 0.40 cyl8:fwd4wd:automanual -1.39 1.76 -0.79 0.43 Standard errors: OLS cat_plot(fit3, pred = cyl, modx = fwd, plot.points = T) #line plots cat_plot( fit3, pred = cyl, modx = fwd, geom = &quot;line&quot;, point.shape = TRUE, # colors = &quot;Set2&quot;, # choose color vary.lty = TRUE ) # bar plot cat_plot( fit3, pred = cyl, modx = fwd, geom = &quot;bar&quot;, interval = T, plot.points = TRUE ) References "],["interactionr-package.html", "17.4 interactionR package", " 17.4 interactionR package For publication purposes Following (Knol and VanderWeele 2012) for presentation (Hosmer and Lemeshow 1992) for confidence intervals based on the delta method (Zou 2008) for variance recovery “mover” method (Assmann et al. 1996) for bootstrapping install.packages(&quot;interactionR&quot;) References "],["sjplot-package.html", "17.5 sjPlot package", " 17.5 sjPlot package For publication purposes (recommend, but more advanced) link "],["causal-inference.html", "Chapter 18 Causal Inference", " Chapter 18 Causal Inference After all of the mambo jumbo that we have learned so far, I want to now talk about the concept of causality. We usually say that correlation is not causation. Then, what is causation? One of my favorite books has explained this concept beautifully (Pearl and Mackenzie 2018). And I am just going to quickly summarize the gist of it from my understanding. I hope that it can give you an initial grasp on the concept so that later you can continue to read up and develop a deeper understanding. It’s important to have a deep understanding regarding the method research. However, one needs to be aware of its limitation. As mentioned in various sections throughout the book, we see that we need to ask experts for number as our baseline or visit literature to gain insight from past research. Here, we dive in a more conceptual side statistical analysis as a whole, regardless of particular approach. You probably heard scientists say correlation doesn’t mean causation. There are ridiculous spurious correlations that give a firm grip on what the previous phrase means. The pioneer who tried to use regression to infer causation in social science was Yule (1899) (but it was a fatal attempt where he found relief policy increases poverty). To make a causal inference from statistics, the equation (function form) must be stable under intervention (i.e., variables are manipulated). Statistics is used to be a causality-free enterprise in the past. Not until the development of path analysis by Sewall Wright in the 1920s that the discipline started to pay attention to causation. Then, it remained dormant until the Causal Revolution (quoted Judea Pearl’s words). This revolution introduced the calculus of causation which includes (1) causal diagrams), and (2) a symbolic language The world has been using \\(P(Y|X)\\) (statistics use to derive this), but what we want is to compare the difference between \\(P(Y|do(X))\\): treatment group \\(P(Y|do(not-X))\\): control group Hence, we can see a clear difference between \\(P(Y|X) \\neq P(Y|do(X))\\) The conclusion we want to make from data is counterfactuals: What would have happened had we not do X? To teach a robot to make inference, we need inference engine p. 12 (Pearl and Mackenzie 2018) Levels of cognitive ability to be a causal learner: Seeing Doing Imagining Ladder of causation (associated with levels of cognitive ability as well): Association: conditional probability, correlation, regression Intervention Counterfactuals Level Activity Questions Examples Association \\(P(y|x)\\) Seeing What is? How would seeing X change my belief in Y? What does a symptom tell me about a disease? Intervention \\(P(y|do(x),z)\\) Doing Intervening What if? What if I do X? What if I spend more time learning, will my result change? Counterfactuals \\(P(y_x|x&#39;,y&#39;)\\) Imagining Why? was it X that caused Y? What if I had acted differently What if I stopped smoking a year ago? Table by (Pearl 2019, 57) You cannot define causation from probability alone If you say X causes Y if X raises the probability of Y.” On the surface, it might sound intuitively right. But when we translate it to probability notation: \\(P(Y|X) &gt;P(Y)\\) , it can’t be more wrong. Just because you are seeing X (1st level), it doesn’t mean the probability of Y increases. It could be either that (1) X causes Y, or (2) Z affects both X and Y. Hence, people might use control variables, which translate: \\(P(Y|X, Z=z) &gt; P(Y|Z=z)\\), then you can be more confident in your probabilistic observation. However, the question is how can you choose \\(Z\\) With the invention of the do-operator, now you can represent X causes Y as \\[ P(Y|do(X)) &gt; P(Y) \\] and with the help of causal diagram, now you can answer questions at the 2nd level (Intervention) Note: people under econometrics might still use “Granger causality” and “vector autoregression” to use the probability language to represent causality (but it’s not). The 7 tools for Structural Causal Model framework (Pearl 2019): Encoding Causal Assumptions - transparency and testability (with graphical representation) Do-calculus and the control of confounding: “back-door” The algorithmization of Counterfactuals Mediation Analysis and the Assessment of Direct and Indirect Effects Adaptability, External validity and Sample Selection Bias: are still researched under “domain adaptation”, “transfer learning” Recovering from missing data Causal Discovery: d-separation Functional decomposition (Hoyer et al. 2008) Spontaneous local changes (Pearl 2014) List of packages to do causal inference in R Simpson’s Paradox: A statistical association seen in an entire population is reversed in sub-population. Structural Causal Model accompanies graphical causal model to create more efficient language to represent causality Structural Causal Model is the solution to the curse of dimensionality (i.e., large numbers of variable \\(p\\), and small dataset \\(n\\)) thanks to product decomposition. It allows us to solve problems without knowing the function, parameters, or distributions of the error terms. Suppose you have a causal chain \\(X \\to Y \\to Z\\): \\[ P(X=x,Y=y, Z=z) = P(X=x)P(Y=y|X=x)P(Z=z|Y=y) \\] Experimental Design Quasi-experimental Design Experimentalist Observationalist Experimental Data Observational Data Random Assignment (reduce treatment imbalance) Random Sampling (reduce sample selection error) Tools in a hierarchical order Experimental Design: Randomized Control Trials (Gold standard): Tier 1 Quasi-experimental Regression Discontinuity Tier 1A Difference-In-Differences Tier 2 Synthetic Control Tier 2A Event Studies Tier 2B Fixed Effects Estimator 12.4.2.2: Tier 3 Endogenous Treatment: mostly Instrumental Variable: Tier 3A Matching Methods Tier 4 Interrupted Time Series Tier 4A Endogenous Sample Selection 30.2: mostly Heckman’s correction Internal vs. External Validity Internal Validity: Economists and applied scientists mostly care about External Validity: Localness might affect your external validity For many economic policies, there is a difference between treatment and intention to treat. For example, we might have an effective vaccine (i.e., intention to treat), but it does not mean that everybody will take it (i.e., treatment). There are four types of subjects that we deal with: Non-switchers: we don’t care about non-switchers because even if we introduce or don’t introduce the intervention, it won’t affect them. Always takers Never takers Switchers Compliers: defined as those who respect the intervention. We only care about compliers because when we introduce the intervention, they will do something. When we don’t have any interventions, they won’t do it. Tools above are used to identify the causal impact of an intervention on compliers If we have only compliers in our dataset, then intention to treatment = treatment effect. Defiers: those who will go to the opposite direction of your treatment. We typically aren’t interested in defiers because they will do the opposite of what we want them to do. And they are typically a small group; hence, we just assume they don’t exist. Treatment Assignment Control Assignment Compliers Treated No Treated Always-takers Treated Treated Never-takers Not treated No treated Defiers Not treated Treated Directional Bias due to selection into treatment comes from 2 general opposite sources Mitigation-based: select into treatment to combat a problem Preference-based: select into treatment because units like that kind of treatment. References "],["treatment-effect-types.html", "18.1 Treatment effect types", " 18.1 Treatment effect types This section is based on Paul Testa’s note on egap Terminology: Quantities of causal interest (i.e., treatment effect types) Estimands: parameters of interest Estimators: procedures to calculate hesitates for the parameters of interest Sources of bias (according to prof. Luke Keele) \\[ \\begin{aligned} &amp;\\text{Estimator - True Causal Effect} \\\\ &amp;= \\text{Hidden bias + Misspecification bias + Statistical Noise} \\\\ &amp;= \\text{Due to design + Due to modeling + Due to finite sample} \\end{aligned} \\] 18.1.1 Average Treatment Effects Average treatment effect (ATE) is the difference in means of the treated and control groups Randomization under Experimental Design can provide an unbiased estimate of ATE. Let \\(Y_i(1)\\) denote the outcome of individual \\(i\\) under treatment and \\(Y_i(0)\\) denote the outcome of individual \\(i\\) under control Then, the treatment effect for individual \\(i\\) is the difference between her outcome under treatment and control \\[ \\tau_i = Y_i(1) - Y_i(0) \\] Without a time machine or dimension portal, we can only observe one of the two event: either individual \\(i\\) experiences the treatment or she doesn’t. Then, the ATE as a quantity of interest can come in handy since we can observe across all individuals \\[ ATE = \\frac{1}{N} \\sum_{i=1}^N \\tau_i = \\frac{\\sum_1^N Y_i(1)}{N} - \\frac{\\sum_i^N Y_i(0)}{N} \\] With random assignment (i.e., treatment assignment is independent of potential outcome and observables and unobservables), the observed means difference between the two groups is an unbiased estimator of the average treatment effect \\[ E(Y_i (1) |D = 1) = E(Y_i(1)|D=0) = E(Y_i(1)) \\\\ E(Y_i(0) |D = 1) = E(Y_i(0)|D = 0 ) = E(Y_i(0)) \\] \\[ ATE = E(Y_i(1)) - E(Y_i(0)) \\] Alternatively, we can write the potential outcomes model in a regression form \\[ Y_i = Y_i(0) + [Y_i (1) - Y_i(0)] D_i \\] Let \\(\\beta_{0i} = Y_i (0) ; \\beta_{1i} = Y_i(1) - Y_i(0)\\), we have \\[ Y_i = \\beta_{0i} + \\beta_{1i} D_i \\] where \\(\\beta_{0i}\\) = outcome if the unit did not receive any treatment \\(\\beta_{1i}\\) = treatment effect (i.e., random coefficients for each unit \\(i\\)) To understand endogeneity (i.e., nonrandom treatment assignment), we can examine a standard linear model \\[ \\begin{aligned} Y_i &amp;= \\beta_{0i} + \\beta_{1i} D_i \\\\ &amp;= ( \\bar{\\beta}_{0} + \\epsilon_{0i} ) + (\\bar{\\beta}_{1} + \\epsilon_{1i} )D_i \\\\ &amp;= \\bar{\\beta}_{0} + \\epsilon_{0i} + \\bar{\\beta}_{1} D_i + \\epsilon_{1i} D_i \\end{aligned} \\] When you have random assignment, \\(E(\\epsilon_{0i}) = E(\\epsilon_{1i}) = 0\\) No selection bias: \\(D_i \\perp e_{0i}\\) Treatment effect is independent of treatment assignment: \\(D_i \\perp e_{1i}\\) But otherwise, residuals can correlate with \\(D_i\\) For estimation, \\(\\hat{\\beta}_1^{OLS}\\) is identical to difference in means (i.e., \\(Y_i(1) - Y_i(0)\\)) In case of heteroskedasticity (i.e., \\(\\epsilon_{0i} + D_i \\epsilon_{1i} \\neq 0\\) ), this residual’s variance depends on \\(X\\) when you have heterogeneous treatment effects (i.e., \\(\\epsilon_{1i} \\neq 0\\)) Robust SE should still give consistent estimate of \\(\\hat{\\beta}_1\\) in this case Alternatively, one can use two-sample t-test on difference in means with unequal variances. 18.1.2 Conditional Average Treatment Effects Treatment effects can be different for different groups of people. In words, treatment effects can vary across subgroups. To examine the heterogeneity across groups (e.g., men vs. women), we can estimate the conditional average treatment effects (CATE) for each subgroup \\[ CATE = E(Y_i(1) - Y_i(0) |D_i, X_i)) \\] 18.1.3 Intent-to-treat Effects When we encounter non-compliance (either people suppose to receive treatment don’t receive it, or people suppose to be in the control group receive the treatment), treatment receipt is not independent of potential outcomes and confounders. In this case, the difference in observed means between the treatment and control groups is not Average Treatment Effects, but Intent-to-treat Effects (ITT). In words, ITT is the treatment effect on those who receive the treatment 18.1.4 Local Average Treatment Effects Instead of estimating the treatment effects of those who receive the treatment (i.e., Intent-to-treat Effects), you want to estimate the treatment effect of those who actually comply with the treatment. This is the local average treatment effects (LATE) or complier average causal effects (CACE). I assume we don’t use CATE to denote complier average treatment effect because it was reserved for conditional average treatment effects. Using random treatment assignment as an instrument, we can recover the effect of treatment on compliers. As the percent of compliers increases, Intent-to-treat Effects and Local Average Treatment Effects converge Rule of thumb: SE(LATE) = SE(ITT)/(share of compliers) LATE estimate is always greater than the ITT estimate LATE can also be estimated using a pure placebo group (Gerber et al. 2010). Partial compliance is hard to study, and IV/2SLS estimator is biased, we have to use Bayesian (Long, Little, and Lin 2010; Jin and Rubin 2009, 2008). 18.1.4.1 One-sided noncompliance One-sided noncompliance is when in the sample, we only have compliers and never-takers With the exclusion restriction (i.e., excludability), never-takers have the same results in the treatment or control group (i.e., never treated) With random assignment, we can have the same number of never-takers in the treatment and control groups Hence, \\[ LATE = \\frac{ITT}{\\text{share of compliers}} \\] 18.1.4.2 Two-sided noncompliance Two-sided noncompliance is when in the sample, we have compliers, never-takers, and always-takers To estimate LATE, beyond excludability like in the One-sided noncompliance case, we need to assume that there is no defiers (i.e., monotonicity assumption) (this is excusable in practical studies) \\[ LATE = \\frac{ITT}{\\text{share of compliers}} \\] 18.1.5 Population vs. Sample Average Treatment Effects See (Imai, King, and Stuart 2008) for when the sample average treatment effect (SATE) diverges from the population average treatment effect (PATE). To stay consistent, this section uses notations from (Imai, King, and Stuart 2008)’s paper. In a finite population \\(N\\), we observe \\(n\\) observations (\\(N&gt;&gt;n\\)), where half is in the control and half is in the treatment group. With unknown data generating process, we have \\[ I_i = \\begin{cases} 1 \\text{ if unit i is in the sample} \\\\ 0 \\text{ otherwise} \\end{cases} \\] \\[ T_i = \\begin{cases} 1 \\text{ if unit i is in the treatment group} \\\\ 0 \\text{ if unit i is in the control group} \\end{cases} \\] \\[ \\text{potential outcome} = \\begin{cases} Y_i(1) \\text{ if } T_i = 1 \\\\ Y_i(0) \\text{ if } T_i = 0 \\end{cases} \\] Observed outcome is \\[ Y_i | I_i = 1= T_i Y_i(1) + (1-T_i)Y_i(0) \\] Since we can never observed both outcome for the same individual, the treatment effect is always unobserved for unit \\(i\\) \\[ TE_i = Y_i(1) - Y_i(0) \\] Sample average treatment effect is \\[ SATE = \\frac{1}{n}\\sum_{i \\in \\{I_i = 1\\}} TE_i \\] Population average treatment effect is \\[ PATE = \\frac{1}{N}\\sum_{i=1}^N TE_i \\] Let \\(X_i\\) be observables and \\(U_i\\) be unobservables for unit \\(i\\) The baseline estimator for SATE and PATE is \\[ \\begin{aligned} D &amp;= \\frac{1}{n/2} \\sum_{i \\in (I_i = 1, T_i = 1)} Y_i - \\frac{1}{n/2} \\sum_{i \\in (I_i = 1 , T_i = 0)} Y_i \\\\ &amp;= \\text{observed sample mean of the treatment group} \\\\ &amp;- \\text{observed sample mean of the control group} \\end{aligned} \\] Let \\(\\Delta\\) be the estimation error (deviation from the truth), under an additive model \\[ Y_i(t) = g_t(X_i) + h_t(U_i) \\] The decomposition of the estimation error is \\[ \\begin{aligned} PATE - D = \\Delta &amp;= \\Delta_S + \\Delta_T \\\\ &amp;= (PATE - SATE) + (SATE - D)\\\\ &amp;= \\text{sample selection}+ \\text{treatment imbalance} \\\\ &amp;= (\\Delta_{S_X} + \\Delta_{S_U}) + (\\Delta_{T_X} + \\Delta_{T_U}) \\\\ &amp;= \\text{(selection on observed + selection on unobserved)} \\\\ &amp;+ (\\text{treatment imbalance in observed + unobserved}) \\end{aligned} \\] 18.1.5.1 Estimation Error from Sample Selection Also known as sample selection error \\[ \\Delta_S = PATE - SATE = \\frac{N - n}{N}(NATE - SATE) \\] where NATE is the non-sample average treatment effect (i.e., average treatment effect for those in the population but not in your sample: \\[ NATE = \\sum_{i\\in (I_i = 0)} \\frac{TE_i}{N-n} \\] From the equation, to have zero sample selection error (i.e., \\(\\Delta_S = 0\\)), we can either Get \\(N = n\\) by redefining your sample as the population of interest \\(NATE = SATE\\) (e.g., \\(TE_i\\) is constant over \\(i\\) in both your selected sample, and those in the population that you did not select) Note When you have heterogeneous treatment effects, random sampling can only warrant sample selection bias, not sample selection error. Since we can rarely know the true underlying distributions of the observables (\\(X\\)) and unobservables (\\(U\\)), we cannot verify whether the empirical distributions of your observables and unobservables for those in your sample is identical to that of your population (to reduce \\(\\Delta_S\\)). For special case, Say you have census of your population, you can adjust for the observables \\(X\\) to reduce \\(\\Delta_{S_X}\\), but still you cannot adjust your unobservables (\\(U\\)) Say you are willing to assume \\(TE_i\\) is constant over \\(X_i\\), then \\(\\Delta_{S_X} = 0\\) \\(U_i\\), then \\(\\Delta_{U}=0\\) 18.1.5.2 Estimation Error from Treatment Imbalance Also known as treatment imbalance error \\[ \\Delta_T = SATE - D \\] \\(\\Delta_T \\to 0\\) when treatment and control groups are balanced (i.e., identical empirical distributions) for both observables (\\(X\\)) and unobservables (\\(U\\)) However, in reality, we can only readjust for observables, not unobservables. Blocking [Matching]Matching Methods Definition Random assignment within strata based on pre-treatment observables Dropping, repeating or grouping observations to balance covariates between the treatment and control group (Rubin 1973) Time Before randomization of treatments After randomization of treatments What if the set of covariates used to adjust is irrelevant? Nothing happens In the worst case scenario (e.g., these variables are uncorrelated with the treatment assignment, but correlated with the post-treatment variables), matching induces bias that is greater than just using the unadjusted difference in means Benefits \\(\\Delta_{T_X}=0\\) (no imbalance on observables). But we don’t know its effect on unobservables imbalance (might reduce if the unobservables are correlated with the observables) Reduce model dependence, bias, variance, mean-square error 18.1.6 Average Treatment Effects on the Treated and Control Average Effect of treatment on the Treated (ATT) is \\[ \\begin{aligned} ATT &amp;= E(Y_i(1) - Y_i(0)|D_i = 1) \\\\ &amp;= E(Y_i(1)|D_i = 1) - E(Y_i(0) |D_i = 1) \\end{aligned} \\] Average Effect of treatment on the Control (ATC) (i.e., the effect would be for those weren’t treated) is \\[ \\begin{aligned} ATC &amp;= E(Y_i(1) - Y_i (0) |D_i =0) \\\\ &amp;= E(Y_i(1)|D_i = 0) - E(Y_i(0)|D_i = 0) \\end{aligned} \\] Under random assignment and full compliance, \\[ ATE = ATT = ATC \\] Sample average treatment effect on the treated is \\[ SATT = \\frac{1}{n} \\sum_i TE_i \\] where \\(TE_i\\) is the treatment effect for unit \\(i\\) \\(n\\) is the number of treated units in the sample \\(i\\) belongs the subset (i.e., sample) of the population of interest that is treated. Population average treatment effect on the treated is \\[ PATT = \\frac{1}{N} \\sum_i TE_i \\] where \\(TE_i\\) is the treatment effect for unit \\(i\\) \\(N\\) is the number of treated units in the population \\(i\\) belongs to the population of interest that is treated. 18.1.7 Quantile Average Treatment Effects Instead of the middle point estimate (ATE), we can also understand the changes in the distribution the outcome variable due to the treatment. Using quantile regression and more assumptions (Abadie, Angrist, and Imbens 2002; Chernozhukov and Hansen 2005), we can have consistent estimate of quantile treatment effects (QTE), with which we can make inference regarding a given quantile. 18.1.8 Mediation Effects With additional assumptions (i.e., sequential ignorability (Imai, Keele, and Tingley 2010; Bullock and Ha 2011)), we can examine the mechanism of the treatment on the outcome. Under the causal framework, the indirect effect of treatment via a mediator is called average causal mediation effect (ACME) the direct effect of treatment on outcome is the average direct effect (ADE) More in the Mediation Section 32 18.1.9 Log-odds Treatment Effects For binary outcome variable, we might be interested in the log-odds of success. See (Freedman 2008) on how to estimate a consistent causal effect. Alternatively, attributable effects (Rosenbaum 2002) can also be appropriate for binary outcome. References "],["experimental-design.html", "Chapter 19 Experimental Design", " Chapter 19 Experimental Design Randomized Control Trials (RCT) or Experiments have always been and are likely to continue in the future to be the holy grail of causal inference, because of unbiased estimates elimination of confounding factors on average (covariate imbalance is always possible. Hence, you want to do Rerandomization to achieve platinum standard set by (Tukey 1993)) RCT means you have two group treatment (or experimental) gorp and control group. Hence, as you introduce the treatment (your exogenous variable) to the treatment group, the only expected difference in the outcomes of the two group should be due to the treatment. Subjects from the same population will be randomly assigned to either treatment or control group. This random assignment give us the confidence that changes in the outcome variable will be due only the treatment, not any other source (variable). It can be easier for hard science to have RCT because they can introduce the treatment, and have control environments. But it’s hard for social scientists because their subjects are usually human, and some treatment can be hard to introduce, or environments are uncontrollable. Hence, social scientists have to develop different tools (Quasi-experimental) to recover causal inference or to recreate the treatment and control group environment. With RCT, you can easily establish internal validity Even though random assignment is not the same thing as ceteris paribus (i.e., holding everything else constant), it should have the same effect (i.e., under random manipulation, other things equal can be observed, on average, across treatment and control groups). Selection Problem Assume we have binary treatment \\(D_i =(0,1)\\) outcome of interest \\(Y_i\\) for individual \\(i\\) \\(Y_{0i}\\) are those were not treated \\(Y_{1i}\\) are those were treated \\[ \\text{Potential Outcome} = \\begin{cases} Y_{1i} \\text{ if } D_i = 1 \\\\ Y_{0i} \\text{ if } D_i = 0 \\end{cases} \\] Then, what we observe in the outcome variable is \\[ Y_i = Y_{0i} + (Y_{1i} - Y_{0i})D_i \\] It’s likely that \\(Y_{1i}\\) and \\(Y_{0i}\\) both have their own distributions (i.e., different treatment effect for different people). Since we can’t see both outcomes for the same individual (unless we have a time machine), then we can only make inference regarding the average outcome of those who were treated and those who were not. \\[ \\begin{aligned} E[Y_i | D_i = 1] - E[Y_i | D_i = 0] &amp;= (E[Y_{1i} | D_i = 1] - E[Y_{0i}|D_i = 1] ) + (E[Y_{0i} |D_i = 1] - E[Y_{0i} |D_i = 0]) \\\\ &amp;= (E[Y_{1i}-Y_{0i}|D_1 = 1] ) + (E[Y_{0i} |D_i = 1] - E[Y_{0i} |D_i = 0]) \\\\ \\text{Observed difference in treatment} &amp;= \\text{Average treatment effect on the treated} + \\text{Selection bias} \\end{aligned} \\] The average treatment effect is the average between between a person who is treated and the same person (in another parallel universe) who is not treated The selection bias is the difference between those who were treated and those who weren’t treated With random assignment of treatment (\\(D_i\\)) under Experimental Design, we can have \\(D_i\\) independent of potential outcomes \\[ \\begin{aligned} E[Y_i | D_i = 1] - E[Y_i|D_i = 0] &amp;= E[Y_{1i}|D_i = 1]-E[Y_{0i}|D_i = 0)]\\\\ &amp;= E[Y_{1i}|D_i = 1]-E[Y_{0i}|D_i = 0)] &amp;&amp; D_i \\perp Y_i \\\\ &amp;= E[Y_{1i} - Y_{0i}|D_i = 1] \\\\ &amp;= E[Y_{1i} - Y_{0i}] \\end{aligned} \\] Another representation under regression Suppose that you know the effect is \\[ Y_{1i} - Y_{0i} = \\rho \\] The observed outcome variable (for an individual) can be rewritten as \\[ \\begin{aligned} Y_i &amp;= E(Y_{0i}) + (Y_{1i}-Y_{0i})D_i + [Y_{0i} - E(Y_{0i})]\\\\ &amp;= \\alpha + \\rho D_i + \\eta_i \\end{aligned} \\] where \\(\\eta_i\\) = random variation of \\(Y_{0i}\\) Hence, the conditional expectation of an individual outcome on treatment status is \\[ \\begin{aligned} E[Y_i |D_i = 1] &amp;= \\alpha + \\rho &amp;+ E[\\eta_i |D_i = 1] \\\\ E[Y_i |D_i = 0] &amp;= \\alpha &amp;+ E[\\eta_i |D_i = 0] \\end{aligned} \\] Thus, \\[ E[Y_i |D_i = 1] - E[Y_i |D_i = 0] = \\rho + E[\\eta_i |D_i = 1] -E[\\eta_i |D_i = 0] \\] where \\(E[\\eta_i |D_i = 1] -E[\\eta_i |D_i = 0]\\) is the selection bias - correlation between the regression error term (\\(\\eta_i\\)), and the regressor (\\(D_i\\)) Under regression, we have \\[ E[\\eta_i |D_i = 1] -E[\\eta_i |D_i = 0] = E[Y_{0i} |D_i = 1] -E[Y_{0i}|D_i = 0] \\] which is the difference in outcomes between those who weren’t treated get treated and those who weren’t treated stay untreated Say you have control variables (\\(X_i\\)), that is uncorrelated with the treatment (\\(D_i\\)), then you can include in your model, and it won’t (in principle) affect your estimate of the treatment effect (\\(\\rho\\)) with an added benefit of reducing the residual variance, which subsequently reduces the standard error of other estimates. \\[ Y_i = \\alpha + \\rho D_i + X_i&#39;\\gamma + \\eta_i \\] References "],["semi-random-experiment.html", "19.1 Semi-random Experiment", " 19.1 Semi-random Experiment Chicago Open Enrollment Program (Cullen, Jacob, and Levitt 2005) Students can apply to “choice” schools Many schools are oversubscribed (Demand &gt; Supply) Resolve scarcity via random lotteries Non-random enrollment, we only have random lottery which mean the above Let \\[ \\delta_j = E(Y_i | Enroll_{ij} = 1; Apply_{ij} = 1) - E(Y_i | Enroll_{ij} = 0; Apply_{ij} = 1) \\] and \\[ \\theta_j = E(Y_i | Win_{ij} = 1; Apply_{ij} = 1) - E(Y_i | Win_{ij} = 0; Apply_{ij} = 1) \\] Hence, we can clearly see that \\(\\delta_j \\neq \\theta_j\\) because you can only enroll, but you cannot ensure that you will win. Thus, intention to treat is different from treatment effect. Non-random enrollment, we only have random lottery which means we can only estimate \\(\\theta_j\\) To recover the true treatment effect, we can use \\[ \\delta_j = \\frac{E(Y_i|W_{ij} = 1; A_{ij} = 1) - E(Y_i | W_{ij}=0; A_{ij} = 1)}{P(Enroll_{ij} = 1| W_{ij}= 1; A_{ij}=1) - P(Enroll_{ij} = 1| W_{ij}=0; A_{ij}=1)} \\] where \\(\\delta_j\\) = treatment effect \\(W\\) = Whether students win the lottery \\(A\\) = Whether student apply for the lottery i = application j = school Say that we have 10 win Number students Type Selection effect Treatment effect Total effect 1 Always Takers +0.2 +1 +1.2 2 Compliers 0 +1 +1 7 Never Takers -0.1 0 -0.1 10 lose Number students Type Selection effect Treatment effect Total effect 1 Always Takers +0.2 +1 +1.2 2 Compliers 0 0 0 7 Never Takers -0.1 0 -0.1 Intent to treatment = Average effect of who you give option to choose \\[ \\begin{aligned} E(Y_i | W_{ij}=1; A_{ij} = 1) &amp;= \\frac{1*(1.2)+ 2*(1) + 7 * (-0.1)}{10}\\\\ &amp;= 0.25 \\end{aligned} \\] \\[ \\begin{aligned} E(Y_i | W_{ij}=0; A_{ij} = 1) &amp;= \\frac{1*(1.2)+ 2*(0) + 7 * (-0.1)}{10}\\\\ &amp;= 0.05 \\end{aligned} \\] Hence, \\[ \\begin{aligned} \\text{Intent to treatment} &amp;= 0.25 - 0.05 = 0.2 \\\\ \\text{Treatment effect} &amp;= 1 \\end{aligned} \\] \\[ \\begin{aligned} P(Enroll_{ij} = 1 | W_{ij} = 1; A_{ij}=1 ) &amp;= \\frac{1+2}{10} = 0.3 \\\\ P(Enroll_{ij} = 1 | W_{ij} = 0; A_{ij}=1 ) &amp;= \\frac{1}{10} = 0.1 \\end{aligned} \\] \\[ \\text{Treatment effect} = \\frac{0.2}{0.3-0.1} = 1 \\] After knowing how to recover the treatment effect, we turn our attention to the main model \\[ Y_{ia} = \\delta W_{ia} + \\lambda L_{ia} + e_{ia} \\] where \\(W\\) = whether a student wins a lottery \\(L\\) = whether student enrolls in the lottery \\(\\delta\\) = intent to treat Hence, Conditional on lottery, the \\(\\delta\\) is valid But without lottery, your \\(\\delta\\) is not random Winning and losing are only identified within lottery Each lottery has multiple entries. Thus, we can have within estimator We can also include other control variables (\\(X_i \\theta\\)) \\[ Y_{ia} = \\delta_1 W_{ia} + \\lambda_1 L_{ia} + X_i \\theta + u_{ia} \\] \\[ \\begin{aligned} E(\\delta) &amp;= E(\\delta_1) \\\\ E(\\lambda) &amp;\\neq E(\\lambda_1) &amp;&amp; \\text{because choosing a lottery is not random} \\end{aligned} \\] Including \\((X_i \\theta)\\) just shifts around control variables (i.e., reweighting of lottery), which would not affect your treatment effect \\(E(\\delta)\\) References "],["rerandomization.html", "19.2 Rerandomization", " 19.2 Rerandomization Since randomization only balances baseline covariates on average, imbalance in covairates due to random chance can still happen. In case that you have a “bad” randomization (i.e., imbalance for important baseline covariates), (Morgan and Rubin 2012) introduce the idea of rerandomization. Rerandomization is checking balance during the randomization process (before the experiment), to eliminate bad allocation (i.e., those with unacceptable balance). The greater the number of variables, the greater the likelihood that at least one covariate would be imbalanced across treatment groups. Example: For 10 covariates, the probability of a significant difference at \\(\\alpha = .05\\) for at least one covariate is \\(1 - (1-.05)^{10} = 0.4 = 40\\%\\) Rerandomization increase treatment effect estimate precision if the covariates are correlated with the outcome. Improvement in precision for treatment effect estimate depends on (1) improvement in covariate balance and (2) correlation between covariates and the outcome. You also need to take into account rerandomization into your analysis when making inference. Rerandomization is equivalent to increasing our sample size. Alternatives include Stratified randomization (Johansson and Schultzberg 2022) Matched randomization (Greevy et al. 2004; Kapelner and Krieger 2014) Minimization (Pocock and Simon 1975) Rerandomization Criterion Acceptable randomization is based on a function of covariate matrix \\(\\mathbf{X}\\) and vector of treatment assignments \\(\\mathbf{W}\\) \\[ W_i = \\begin{cases} 1 \\text{ if treated} \\\\ 0 \\text{ if control} \\end{cases} \\] Mahalanobis Distance, \\(M\\), can be used as criteria for acceptable balance Let \\(M\\) be the multivariate distance between groups means \\[ M = (\\bar{\\mathbf{X}}_T - \\bar{\\mathbf{X}}_C)&#39; cov(\\bar{\\mathbf{X}}_T - \\bar{\\mathbf{X}}_C)^{-1} (\\bar{\\mathbf{X}}_T - \\bar{\\mathbf{X}}_C) \\\\ = (\\frac{1}{n_T}+ \\frac{1}{n_C})^{-1}(\\bar{\\mathbf{X}}_T - \\bar{\\mathbf{X}}_C)&#39; cov(\\mathbf{X})^{-1}(\\bar{\\mathbf{X}}_T - \\bar{\\mathbf{X}}_C) \\] With large sample size and “pure” randomization \\(M \\sim \\chi^2_k\\) where \\(k\\) is the number of covariates to be balanced Then let \\(p_a\\) be the probability of accepting a randomization. Choosing appropriate \\(p_a\\) is a tradeoff between balance and time. Then the rule of thumb is re-randomize when \\(M &gt; a\\) References "],["sampling.html", "Chapter 20 Sampling ", " Chapter 20 Sampling "],["simple-sampling.html", "20.1 Simple Sampling", " 20.1 Simple Sampling Simple (random) Sampling library(dplyr) iris_df &lt;- iris set.seed(1) sample_n(iris_df, 10) #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species #&gt; 1 5.8 2.7 4.1 1.0 versicolor #&gt; 2 6.4 2.8 5.6 2.1 virginica #&gt; 3 4.4 3.2 1.3 0.2 setosa #&gt; 4 4.3 3.0 1.1 0.1 setosa #&gt; 5 7.0 3.2 4.7 1.4 versicolor #&gt; 6 5.4 3.0 4.5 1.5 versicolor #&gt; 7 5.4 3.4 1.7 0.2 setosa #&gt; 8 7.6 3.0 6.6 2.1 virginica #&gt; 9 6.1 2.8 4.7 1.2 versicolor #&gt; 10 4.6 3.4 1.4 0.3 setosa library(sampling) # set unique id number for each row iris_df$id = 1:nrow(iris_df) # Simple random sampling with replacement srswor(10, length(iris_df$id)) #&gt; [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 #&gt; [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 #&gt; [75] 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 #&gt; [112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #&gt; [149] 0 0 # Simple random sampling without replacement (sequential method) srswor1(10, length(iris_df$id)) #&gt; [1] 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #&gt; [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #&gt; [75] 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #&gt; [112] 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 #&gt; [149] 0 0 # Simple random sampling with replacement srswr(10, length(iris_df$id)) #&gt; [1] 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 0 #&gt; [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 #&gt; [75] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 #&gt; [112] 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 #&gt; [149] 0 0 library(survey) data(&quot;api&quot;) srs_design &lt;- svydesign(data = apistrat, weights = ~pw, fpc = ~fpc, id = ~1) library(sampler) rsamp(albania, n = 260, over = 0.1, # desired oversampling proportion rep = F) Identify missing points between sample and collected data alsample &lt;- rsamp(df = albania, 544) alreceived &lt;- rsamp(df = alsample, 390) rmissing(sampdf = alsample, colldf = alreceived, col_name = qvKod) "],["stratified-sampling.html", "20.2 Stratified Sampling", " 20.2 Stratified Sampling A stratum is a subset of the population that has at least one common characteristic. Steps: Identify relevant stratums and their representation in the population. Randomly sample to select a sufficient number of subjects from each stratum. Stratified sampling reduces sampling error. library(dplyr) # by number of rows sample_iris &lt;- iris %&gt;% group_by(Species) %&gt;% sample_n(5) sample_iris #&gt; # A tibble: 15 × 5 #&gt; # Groups: Species [3] #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; #&gt; 1 4.4 3 1.3 0.2 setosa #&gt; 2 5.2 3.5 1.5 0.2 setosa #&gt; 3 5.1 3.8 1.5 0.3 setosa #&gt; 4 5.2 3.4 1.4 0.2 setosa #&gt; 5 4.5 2.3 1.3 0.3 setosa #&gt; 6 5.5 2.5 4 1.3 versicolor #&gt; 7 7 3.2 4.7 1.4 versicolor #&gt; 8 6.7 3 5 1.7 versicolor #&gt; 9 6.1 2.9 4.7 1.4 versicolor #&gt; 10 5.5 2.4 3.8 1.1 versicolor #&gt; 11 6.4 2.7 5.3 1.9 virginica #&gt; 12 6.4 2.8 5.6 2.1 virginica #&gt; 13 6.4 3.2 5.3 2.3 virginica #&gt; 14 6.8 3.2 5.9 2.3 virginica #&gt; 15 7.2 3.6 6.1 2.5 virginica # by fraction sample_iris &lt;- iris %&gt;% group_by(Species) %&gt;% sample_frac(size = .15) sample_iris #&gt; # A tibble: 24 × 5 #&gt; # Groups: Species [3] #&gt; Sepal.Length Sepal.Width Petal.Length Petal.Width Species #&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;fct&gt; #&gt; 1 5.5 4.2 1.4 0.2 setosa #&gt; 2 5 3 1.6 0.2 setosa #&gt; 3 5.2 4.1 1.5 0.1 setosa #&gt; 4 4.6 3.1 1.5 0.2 setosa #&gt; 5 5.1 3.7 1.5 0.4 setosa #&gt; 6 4.8 3.4 1.9 0.2 setosa #&gt; 7 5.1 3.3 1.7 0.5 setosa #&gt; 8 5.5 3.5 1.3 0.2 setosa #&gt; 9 5 2.3 3.3 1 versicolor #&gt; 10 5.6 2.9 3.6 1.3 versicolor #&gt; # ℹ 14 more rows library(sampler) # Stratified sample using proportional allocation without replacement ssamp(df=albania, n=360, strata=qarku, over=0.1) #&gt; # A tibble: 395 × 45 #&gt; qarku Q_ID bashkia BAS_ID zaz njesiaAdministrative COM_ID qvKod zgjedhes #&gt; &lt;fct&gt; &lt;int&gt; &lt;fct&gt; &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; &lt;fct&gt; &lt;int&gt; #&gt; 1 Berat 1 Berat 11 ZAZ … &quot;Berat &quot; 1101 &quot;\\&quot;3… 558 #&gt; 2 Berat 1 Berat 11 ZAZ … &quot;Berat &quot; 1101 &quot;\\&quot;3… 815 #&gt; 3 Berat 1 Berat 11 ZAZ … &quot;Sinje&quot; 1108 &quot;\\&quot;3… 419 #&gt; 4 Berat 1 Kucove 13 ZAZ … &quot;Lumas&quot; 1104 &quot;\\&quot;3… 237 #&gt; 5 Berat 1 Kucove 13 ZAZ … &quot;Kucove&quot; 1201 &quot;\\&quot;3… 562 #&gt; 6 Berat 1 Skrapar 17 ZAZ … &quot;Corovode&quot; 1303 &quot;\\&quot;3… 829 #&gt; 7 Berat 1 Berat 11 ZAZ … &quot;Roshnik&quot; 1107 &quot;\\&quot;3… 410 #&gt; 8 Berat 1 Ura Vajg… 19 ZAZ … &quot;Ura Vajgurore&quot; 1110 &quot;\\&quot;3… 708 #&gt; 9 Berat 1 Kucove 13 ZAZ … &quot;Perondi&quot; 1203 &quot;\\&quot;3… 835 #&gt; 10 Berat 1 Kucove 13 ZAZ … &quot;Kucove&quot; 1201 &quot;\\&quot;3… 907 #&gt; # ℹ 385 more rows #&gt; # ℹ 36 more variables: meshkuj &lt;int&gt;, femra &lt;int&gt;, totalSeats &lt;int&gt;, #&gt; # vendndodhja &lt;fct&gt;, ambienti &lt;fct&gt;, totalVoters &lt;int&gt;, femVoters &lt;int&gt;, #&gt; # maleVoters &lt;int&gt;, unusedBallots &lt;int&gt;, damagedBallots &lt;int&gt;, #&gt; # ballotsCast &lt;int&gt;, invalidVotes &lt;int&gt;, validVotes &lt;int&gt;, lsi &lt;int&gt;, #&gt; # ps &lt;int&gt;, pkd &lt;int&gt;, sfida &lt;int&gt;, pr &lt;int&gt;, pd &lt;int&gt;, pbdksh &lt;int&gt;, #&gt; # adk &lt;int&gt;, psd &lt;int&gt;, ad &lt;int&gt;, frd &lt;int&gt;, pds &lt;int&gt;, pdiu &lt;int&gt;, … Identify number of missing points by strata between sample and collected data alsample &lt;- rsamp(df = albania, 544) alreceived &lt;- rsamp(df = alsample, 390) smissing( sampdf = alsample, colldf = alreceived, strata = qarku, col_name = qvKod ) "],["unequal-probability-sampling.html", "20.3 Unequal Probability Sampling", " 20.3 Unequal Probability Sampling UPbrewer() UPmaxentropy() UPmidzuno() UPmidzunopi2() UPmultinomial() UPpivotal() UPrandompivotal() UPpoisson() UPsampford() UPsystematic() UPrandomsystematic() UPsystematicpi2() UPtille() UPtillepi2() "],["balanced-sampling.html", "20.4 Balanced Sampling", " 20.4 Balanced Sampling Purpose: to get the same means in the population and the sample for all the auxiliary variables Balanced sampling is different from purposive selection Balancing equations \\[ \\sum_{k \\in S} \\frac{\\mathbf{x}_k}{\\pi_k} = \\sum_{k \\in U} \\mathbf{x}_k \\] where \\(\\mathbf{x}_k\\) is a vector of auxiliary variables 20.4.1 Cube flight phase landing phase samplecube() fastflightcube() landingcube() 20.4.2 Stratification Try to replicate the population based on the original multivariate histogram library(survey) data(&quot;api&quot;) srs_design &lt;- svydesign(data = apistrat, weights = ~pw, fpc = ~fpc, strata = ~stype, id = ~1) balancedstratification() 20.4.3 Cluster library(survey) data(&quot;api&quot;) srs_design &lt;- svydesign(data = apiclus1, weights = ~pw, fpc = ~fpc, id = ~dnum) balancedcluster() 20.4.4 Two-stage library(survey) data(&quot;api&quot;) srs_design &lt;- svydesign(data = apiclus2, fpc = ~fpc1 + fpc2, id = ~ dnum + snum) balancedtwostage() "],["analysis-of-variance-anova.html", "Chapter 21 Analysis of Variance (ANOVA)", " Chapter 21 Analysis of Variance (ANOVA) ANOVA is using the same underlying mechanism as linear regression. However, the angle that ANOVA chooses to look at is slightly different from the traditional linear regression. It can be more useful in the case with qualitative variables and designed experiments. Experimental Design Factor: explanatory or predictor variable to be studied in an investigation Treatment (or Factor Level): “value” of a factor applied to the experimental unit Experimental Unit: person, animal, piece of material, etc. that is subjected to treatment(s) and provides a response Single Factor Experiment: one explanatory variable considered Multifactor Experiment: more than one explanatory variable Classification Factor: A factor that is not under the control of the experimenter (observational data) Experimental Factor: assigned by the experimenter Basics of experimental design: Choices that a statistician has to make: set of treatments set of experimental units treatment assignment (selection bias) measurement (measurement bias, blind experiments) Advancements in experimental design: Factorial Experiments: consider multiple factors at the same time (interaction) Replication: repetition of experiment assess mean squared error control over precision of experiment (power) Randomization Before R.A. Fisher (1900s), treatments were assigned systematically or subjectively randomization: assign treatments to experimental units at random, which averages out systematic effects that cannot be control by the investigator Local control: Blocking or Stratification Reduce experimental errors and increase power by placing restrictions on the randomization of treatments to experimental units. Randomization may also eliminate correlations due to time and space. "],["completely-randomized-design-crd.html", "21.1 Completely Randomized Design (CRD)", " 21.1 Completely Randomized Design (CRD) Treatment factor A with \\(a\\ge2\\) treatments levels. Experimental units are randomly assinged to each treatment. The number of experiemntal units in each group can be equal (balanced): n unequal (unbalanced): \\(n_i\\) for the i-th group (i = 1,…,a). The total sample size is \\(N=\\sum_{i=1}^{a}n_i\\) Possible assignments of units to treatments are \\(k=\\frac{N!}{n_1!n_2!...n_a!}\\) Each has probability 1/k of being selected. Each experimental unit is measured with a response \\(Y_{ij}\\), in which j denotes unit and i denotes treatment. Treatment 1 2 … a \\(Y_{11}\\) \\(Y_{21}\\) … \\(Y_{a1}\\) \\(Y_{12}\\) … … … … … … … Sample Mean \\(\\bar{Y_{1.}}\\) \\(\\bar{Y_{2.}}\\) … \\(\\bar{Y_{a.}}\\) Sample SD \\(s_1\\) \\(s_2\\) … \\(s_a\\) where \\(\\bar{Y_{i.}}=\\frac{1}{n_i}\\sum_{j=1}^{n_i}Y_{ij}\\) \\(s_i^2=\\frac{1}{n_i-1}\\sum_{j=1}^{n_i}(Y_{ij}-\\bar{Y_i})^2\\) And the grand mean is \\(\\bar{Y_{..}}=\\frac{1}{N}\\sum_{i}\\sum_{j}Y_{ij}\\) 21.1.1 Single Factor Fixed Effects Model also known as Single Factor (One-Way) ANOVA or ANOVA Type I model. Partitioning the Variance The total variability of the \\(Y_{ij}\\) observation can be measured as the deviation of \\(Y_{ij}\\) around the overall mean \\(\\bar{Y_{..}}\\): \\(Y_{ij} - \\bar{Y_{..}}\\) This can be rewritten as: \\[ \\begin{split} Y_{ij} - \\bar{Y_{..}}&amp;=Y_{ij} - \\bar{Y_{..}} + \\bar{Y_{i.}} - \\bar{Y_{i.}} \\\\ &amp;= (\\bar{Y_{i.}}-\\bar{Y_{..}})+(Y_{ij}-\\bar{Y_{i.}}) \\end{split} \\] where the first term is the between treatment differences (i.e., the deviation of the treatment mean from the overall mean) the second term is within treatment differences (i.e., the deviation of the observation around its treatment mean) \\[ \\begin{split} \\sum_{i}\\sum_{j}(Y_{ij} - \\bar{Y_{..}})^2 &amp;= \\sum_{i}n_i(\\bar{Y_{i.}}-\\bar{Y_{..}})^2+\\sum_{i}\\sum_{j}(Y_{ij}-\\bar{Y_{i.}})^2 \\\\ SSTO &amp;= SSTR + SSE \\\\ total~SS &amp;= treatment~SS + error~SS \\\\ (N-1)~d.f. &amp;= (a-1)~d.f. + (N - a) ~ d.f. \\end{split} \\] we lose a d.f. for the total corrected SSTO because of the estimation of the mean (\\(\\sum_{i}\\sum_{j}(Y_{ij} - \\bar{Y_{..}})=0\\)) And, for the SSTR \\(\\sum_{i}n_i(\\bar{Y_{i.}}-\\bar{Y_{..}})=0\\) Accordingly, \\(MSTR= \\frac{SST}{a-1}\\) and \\(MSR=\\frac{SSE}{N-a}\\) ANOVA Table Source of Variation SS df MS Between Treatments \\(\\sum_{i}n_i (\\bar{Y_{i.}}-\\bar{Y_{..}})^2\\) a-1 SSTR/(a-1) Error (within treatments) \\(\\sum_{i}\\sum_{j}(Y_{ij}-\\bar{Y_{i.}})^2\\) N-a SSE/(N-a) Total (corrected) \\(\\sum_{i}n_i (\\bar{Y_{i.}}-\\bar{Y_{..}})^2\\) N-1 Linear Model Explanation of ANOVA 21.1.1.1 Cell means model \\[ Y_{ij}=\\mu_i+\\epsilon\\_{ij} \\] where \\(Y_{ij}\\) response variable in j-th subject for the i-th treatment \\(\\mu_i\\): parameters (fixed) representing the unknown population mean for the i-th treatment \\(\\epsilon_{ij}\\) independent \\(N(0,\\sigma^2)\\) errors \\(E(Y_{ij})=\\mu_i\\) \\(var(Y_{ij})=var(\\epsilon_{ij})=\\sigma^2\\) All observations have the same variance Example: a = 3 (3 treatments) \\(n_1=n_2=n_3=2\\) \\[ \\begin{split} \\left(\\begin{array}{c} Y_{11}\\\\ Y_{12}\\\\ Y_{21}\\\\ Y_{22}\\\\ Y_{31}\\\\ Y_{32}\\\\ \\end{array}\\right) &amp;= \\left(\\begin{array}{ccc} 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 \\\\ 0 &amp; 0 &amp; 1 \\\\ \\end{array}\\right) \\left(\\begin{array}{c} \\mu_1 \\\\ \\mu_2 \\\\ \\mu_3 \\\\ \\end{array}\\right) + \\left(\\begin{array}{c} \\epsilon_{11} \\\\ \\epsilon_{12} \\\\ \\epsilon_{21} \\\\ \\epsilon_{22} \\\\ \\epsilon_{31} \\\\ \\epsilon_{32} \\\\ \\end{array}\\right)\\\\ \\mathbf{y} &amp;= \\mathbf{X\\beta} +\\mathbf{\\epsilon} \\end{split} \\] \\(X_{k,ij}=1\\) if the k-th treatment is used \\(X_{k,ij}=0\\) Otherwise Note: no intercept term. \\[\\begin{equation} \\begin{split} \\mathbf{b}= \\left[\\begin{array}{c} \\mu_1 \\\\ \\mu_2 \\\\ \\mu_3 \\\\ \\end{array}\\right] &amp;= (\\mathbf{x}&#39;\\mathbf{x})^{-1}\\mathbf{x}&#39;\\mathbf{y} \\\\ &amp; = \\left[\\begin{array}{ccc} n_1 &amp; 0 &amp; 0\\\\ 0 &amp; n_2 &amp; 0\\\\ 0 &amp; 0 &amp; n_3 \\\\ \\end{array}\\right]^{-1} \\left[\\begin{array}{c} Y_1\\\\ Y_2\\\\ Y_3\\\\ \\end{array}\\right] \\\\ &amp; = \\left[\\begin{array}{c} \\bar{Y_1}\\\\ \\bar{Y_2}\\\\ \\bar{Y_3}\\\\ \\end{array}\\right] \\end{split} \\tag{21.1} \\end{equation}\\] is the BLUE (best linear unbiased estimator) for \\(\\beta=[\\mu_1 \\mu_2\\mu_3]&#39;\\) \\[ E(\\mathbf{b})=\\beta \\] \\[ var(\\mathbf{b})=\\sigma^2(\\mathbf{X&#39;X})^{-1}=\\sigma^2 \\left[\\begin{array}{ccc} 1/n_1 &amp; 0 &amp; 0\\\\ 0 &amp; 1/n_2 &amp; 0\\\\ 0 &amp; 0 &amp; 1/n_3\\\\ \\end{array}\\right] \\] \\(var(b_i)=var(\\hat{\\mu_i})=\\sigma^2/n_i\\) where \\(\\mathbf{b} \\sim N(\\beta,\\sigma^2(\\mathbf{X&#39;X})^{-1})\\) \\[ \\begin{split} MSE &amp;= \\frac{1}{N-a} \\sum_{i}\\sum_{j}(Y_{ij}-\\bar{Y_{i.}})^2 \\\\ &amp;= \\frac{1}{N-a} \\sum_{i}[(n_i-1)\\frac{\\sum_{i}(Y_{ij}-\\bar{Y_{i.}})^2}{n_i-1}] \\\\ &amp;= \\frac{1}{N-a} \\sum_{i}(n_i-1)s_1^2 \\end{split} \\] We have \\(E(s_i^2)=\\sigma^2\\) \\(E(MSE)=\\frac{1}{N-a}\\sum_{i}(n_i-1)\\sigma^2=\\sigma^2\\) Hence, MSE is an unbiased estimator of \\(\\sigma^2\\), regardless of whether the treatment means are equal or not. \\(E(MSTR)=\\sigma^2+\\frac{\\sum_{i}n_i(\\mu_i-\\mu_.)^2}{a-1}\\) where \\(\\mu_.=\\frac{\\sum_{i=1}^{a}n_i\\mu_i}{\\sum_{i=1}^{a}n_i}\\) If all treatment means are equals (=\\(\\mu_.\\)), \\(E(MSTR)=\\sigma^2\\). Then we can use an F-test for the equality of all treatment means: \\[H_0:\\mu_1=\\mu_2=..=\\mu_a\\] \\[H_a: not~al l~ \\mu_i ~ are ~ equal \\] \\(F=\\frac{MSTR}{MSE}\\) where large values of F support \\(H_a\\) (since MSTR will tend to exceed MSE when \\(H_a\\) holds) and F near 1 support \\(H_0\\) (upper tail test) Equivalently, when \\(H_0\\) is true, \\(F \\sim f_{(a-1,N-a)}\\) If \\(F \\leq f_{(a-1,N-a;1-\\alpha)}\\), we cannot reject \\(H_0\\) If \\(F \\geq f_{(a-1,N-a;1-\\alpha)}\\), we reject \\(H_0\\) Note: If a = 2 (2 treatments), F-test = two sample t-test 21.1.1.2 Treatment Effects (Factor Effects) Besides Cell means model, we have another way to formalize one-way ANOVA: \\[Y_{ij} = \\mu + \\tau_i + \\epsilon_{ij}\\] where \\(Y_{ij}\\) is the j-th response for the i-th treatment \\(\\tau_i\\) i-th treatment effect \\(\\mu\\) constant component, common to all observations \\(\\epsilon_{ij}\\) independent random errors ~ \\(N(0,\\sigma^2)\\) For example, a = 3, \\(n_1=n_2=n_3=2\\) \\[\\begin{equation} \\begin{split} \\left(\\begin{array}{c} Y_{11}\\\\ Y_{12}\\\\ Y_{21}\\\\ Y_{22}\\\\ Y_{31}\\\\ Y_{32}\\\\ \\end{array}\\right) &amp;= \\left(\\begin{array}{cccc} 1 &amp; 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 0 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 &amp; 1 \\\\ 1 &amp; 0 &amp; 0 &amp; 1 \\\\ \\end{array}\\right) \\left(\\begin{array}{c} \\mu \\\\ \\tau_1 \\\\ \\tau_2 \\\\ \\tau_3\\\\ \\end{array}\\right) + \\left(\\begin{array}{c} \\epsilon_{11} \\\\ \\epsilon_{12} \\\\ \\epsilon_{21} \\\\ \\epsilon_{22} \\\\ \\epsilon_{31} \\\\ \\epsilon_{32} \\\\ \\end{array}\\right)\\\\ \\mathbf{y} &amp;= \\mathbf{X\\beta} +\\mathbf{\\epsilon} \\end{split} \\tag{21.2} \\end{equation}\\] However, \\[ \\mathbf{X&#39;X} = \\left( \\begin{array} {cccc} \\sum_{i}n_i &amp; n_1 &amp; n_2 &amp; n_3 \\\\ n_1 &amp; n_1 &amp; 0 &amp; 0 \\\\ n_2 &amp; 0 &amp; n_2 &amp; 0 \\\\ n_3 &amp; 0 &amp; 0 &amp; n_3 \\\\ \\end{array} \\right) \\] is singular thus does not exist, \\(\\mathbf{b}\\) is insolvable (infinite solutions) Hence, we have to impose restrictions on the parameters to a model matrix \\(\\mathbf{X}\\) of full rank. Whatever restriction we use, we still have: \\(E(Y_{ij})=\\mu + \\tau_i = \\mu_i = mean ~ response ~ for ~ i-th ~ treatment\\) 21.1.1.2.1 Restriction on sum of tau \\(\\sum_{i=1}^{a}\\tau_i=0\\) implies \\[ \\mu= \\mu +\\frac{1}{a}\\sum_{i=1}^{a}(\\mu+\\tau_i) \\] is the average of the treatment mean (grand mean) (overall mean) \\[ \\begin{split} \\tau_i &amp;=(\\mu+\\tau_i) -\\mu = \\mu_i-\\mu \\\\ &amp;= \\text{treatment mean} - \\text{grand~mean} \\\\ &amp;= \\text{treatment effect} \\end{split} \\] \\[ \\tau_a=-\\tau_1-\\tau_2-...-\\tau_{a-1} \\] Hence, the mean for the a-th treatment is \\[ \\mu_a=\\mu+\\tau_a=\\mu-\\tau_1-\\tau_2-...-\\tau_{a-1} \\] Hence, the model need only “a” parameters: \\[ \\mu,\\tau_1,\\tau_2,..,\\tau_{a-1} \\] Equation (21.2) becomes \\[\\begin{equation} \\begin{split} \\left(\\begin{array}{c} Y_{11}\\\\ Y_{12}\\\\ Y_{21}\\\\ Y_{22}\\\\ Y_{31}\\\\ Y_{32}\\\\ \\end{array}\\right) &amp;= \\left(\\begin{array}{ccc} 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 1 \\\\ 1 &amp; 0 &amp; 1 \\\\ 1 &amp; -1 &amp; -1 \\\\ 1 &amp; -1 &amp; -1 \\\\ \\end{array}\\right) \\left(\\begin{array}{c} \\mu \\\\ \\tau_1 \\\\ \\tau_2 \\\\ \\end{array}\\right) + \\left(\\begin{array}{c} \\epsilon_{11} \\\\ \\epsilon_{12} \\\\ \\epsilon_{21} \\\\ \\epsilon_{22} \\\\ \\epsilon_{31} \\\\ \\epsilon_{32} \\\\ \\end{array}\\right)\\\\ \\mathbf{y} &amp;= \\mathbf{X\\beta} +\\mathbf{\\epsilon} \\end{split} \\end{equation}\\] where \\(\\beta\\equiv[\\mu,\\tau_1,\\tau_2]&#39;\\) Equation (21.1) with \\(\\sum_{i}\\tau_i=0\\) becomes \\[ \\begin{split} \\mathbf{b}= \\left[\\begin{array}{c} \\hat{\\mu} \\\\ \\hat{\\tau_1} \\\\ \\hat{\\tau_2} \\\\ \\end{array}\\right] &amp;= (\\mathbf{x}&#39;\\mathbf{x})^{-1}\\mathbf{x}&#39;\\mathbf{y} \\\\ &amp; = \\left[\\begin{array}{ccc} \\sum_{i}n_i &amp; n_1-n_3 &amp; n_2-n_3\\\\ n_1-n_3 &amp; n_1+n_3 &amp; n_3\\\\ n_2-n_3 &amp; n_3 &amp; n_2-n_3 \\\\ \\end{array}\\right]^{-1} \\left[\\begin{array}{c} Y_{..}\\\\ Y_{1.}-Y_{3.}\\\\ Y_{2.}-Y_{3.}\\\\ \\end{array}\\right] \\\\ &amp; = \\left[\\begin{array}{c} \\frac{1}{3}\\sum_{i=1}^{3}\\bar{Y_{i.}}\\\\ \\bar{Y_{1.}}-\\frac{1}{3}\\sum_{i=1}^{3}\\bar{Y_{i.}}\\\\ \\bar{Y_{2.}}-\\frac{1}{3}\\sum_{i=1}^{3}\\bar{Y_{i.}}\\\\ \\end{array}\\right]\\\\ &amp; = \\left[\\begin{array}{c} \\hat{\\mu}\\\\ \\hat{\\tau_1}\\\\ \\hat{\\tau_2}\\\\ \\end{array}\\right] \\end{split} \\] and \\(\\hat{\\tau_3}=-\\hat{\\tau_1}-\\hat{\\tau_2}=\\bar{Y_3}-\\frac{1}{3} \\sum_{i}\\bar{Y_{i.}}\\) 21.1.1.2.2 Restriction on first tau In R, lm() uses the restriction \\(\\tau_1=0\\) For the previous example, for \\(n_1=n_2=n_3=2\\), and \\(\\tau_1=0\\). Then the treatment means can be written as: \\[ \\mu_1= \\mu + \\tau_1 = \\mu + 0 = \\mu \\\\ \\mu_2= \\mu + \\tau_2 \\\\ \\mu_3 = \\mu + \\tau_3 \\] Hence, \\(\\mu\\) is the mean response for the first treatment In the matrix form, \\[ \\begin{split} \\left(\\begin{array}{c} Y_{11}\\\\ Y_{12}\\\\ Y_{21}\\\\ Y_{22}\\\\ Y_{31}\\\\ Y_{32}\\\\ \\end{array}\\right) &amp;= \\left(\\begin{array}{ccc} 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 1 &amp; 0 \\\\ 1 &amp; 0 &amp; 1 \\\\ 1 &amp; 0 &amp; 1 \\\\ \\end{array}\\right) \\left(\\begin{array}{c} \\mu \\\\ \\tau_2 \\\\ \\tau_3 \\\\ \\end{array}\\right) + \\left(\\begin{array}{c} \\epsilon_{11} \\\\ \\epsilon_{12} \\\\ \\epsilon_{21} \\\\ \\epsilon_{22} \\\\ \\epsilon_{31} \\\\ \\epsilon_{32} \\\\ \\end{array}\\right)\\\\ \\mathbf{y} &amp;= \\mathbf{X\\beta} +\\mathbf{\\epsilon} \\end{split} \\] \\(\\beta = [\\mu,\\tau_2,\\tau_3]&#39;\\) \\[ \\begin{split} \\mathbf{b}= \\left[\\begin{array}{c} \\hat{\\mu} \\\\ \\hat{\\tau_2} \\\\ \\hat{\\tau_3} \\\\ \\end{array}\\right] &amp;= (\\mathbf{x}&#39;\\mathbf{x})^{-1}\\mathbf{x}&#39;\\mathbf{y} \\\\ &amp; = \\left[\\begin{array}{ccc} \\sum_{i}n_i &amp; n_2 &amp; n_3\\\\ n_2 &amp; n_2 &amp; 0\\\\ n_3 &amp; 0 &amp; n_3 \\\\ \\end{array}\\right]^{-1} \\left[\\begin{array}{c} Y_{..}\\\\ Y_{2.}\\\\ Y_{3.}\\\\ \\end{array}\\right] \\\\ &amp; = \\left[ \\begin{array}{c} \\bar{Y_{1.}} \\\\ \\bar{Y_{2.}} - \\bar{Y_{1.}} \\\\ \\bar{Y_{3.}} - \\bar{Y_{1.}}\\\\ \\end{array}\\right] \\end{split} \\] \\[ E(\\mathbf{b})= \\beta = \\left[\\begin{array}{c} {\\mu}\\\\ {\\tau_2}\\\\ {\\tau_3}\\\\ \\end{array}\\right] = \\left[\\begin{array}{c} \\mu_1\\\\ \\mu_2-\\mu_1\\\\ \\mu_3-\\mu_1\\\\ \\end{array}\\right] \\] \\[ var(\\mathbf{b}) = \\sigma^2(\\mathbf{X&#39;X})^{-1} \\\\ var(\\hat{\\mu}) = var(\\bar{Y_{1.}})=\\sigma^2/n_1 \\\\ var(\\hat{\\tau_2}) = var(\\bar{Y_{2.}}-\\bar{Y_{1.}}) = \\sigma^2/n_2 + \\sigma^2/n_1 \\\\ var(\\hat{\\tau_3}) = var(\\bar{Y_{3.}}-\\bar{Y_{1.}}) = \\sigma^2/n_3 + \\sigma^2/n_1 \\] Note For all three parameterization, the ANOVA table is the same Model 1: \\(Y_{ij} = \\mu_i + \\epsilon_{ij}\\) Model 2: \\(Y_{ij} = \\mu + \\tau_i + \\epsilon_{ij}\\) where \\(\\sum_{i} \\tau_i=0\\) Model 3: \\(Y_{ij}= \\mu + \\tau_i + \\epsilon_{ij}\\) where \\(\\tau_1=0\\) All models have the same calculation for \\(\\hat{Y}\\) as \\[ \\mathbf{\\hat{Y} = X(X&#39;X)^{-1}X&#39;Y=PY = Xb} \\] ANOVA Table Source of Variation SS df MS F Between Treatments \\(\\sum_{i} n _ i (\\bar { Y_ {i .} } -\\bar{Y_{..}})^2 = \\mathbf{Y &#39; (P-P_1)Y}\\) a-1 \\(\\frac{SSTR}{a-1}\\) \\(\\frac{MSTR}{MSE}\\) Error (within treatments) \\(\\sum_{i}\\sum_{j}(Y_{ij} -\\bar{Y_{i.}})^2=\\mathbf{e&#39;e}\\) N-a \\(\\frac{SSE}{N-a}\\) Total (corrected) \\(\\sum_{i } n_i(\\bar{Y_{i.}}-\\bar{Y_{..}})^2=\\mathbf{Y&#39;Y - Y&#39;P_1Y}\\) N-1 where \\(\\mathbf{P_1} = \\frac{1}{n}\\mathbf{J}\\) The F-statistic here has (a-1,N-a) degrees of freedom, which gives the same value for all three parameterization, but the hypothesis test is written a bit different: \\[ H_0 : \\mu_1 = \\mu_2 = ... = \\mu_a \\\\ H_0 : \\mu + \\tau_1 = \\mu + tau_2 = ... = \\mu + \\tau_a \\\\ H_0 : \\tau_1 = \\tau_2 = ...= \\tau_a \\] The F-test here serves as a preliminary analysis, to see if there is any difference at different factors. For more in-depth analysis, we consider different testing of treatment effects. 21.1.1.3 Testing of Treatment Effects A Single Treatment Mean \\(\\mu_i\\) A Differences Between Treatment Means A Contrast Among Treatment Means A Linear Combination of Treatment Means 21.1.1.3.1 Single Treatment Mean We have \\(\\hat{\\mu_i}=\\bar{Y_{i.}}\\) where \\(E(\\bar{Y_{i.}})=\\mu_i\\) \\(var(\\bar{Y_{i}})=\\sigma^2/n_i\\) estimated by \\(s^2(\\bar{Y_{i.}})=MSE / n_i\\) Since \\(\\frac{\\bar{Y_{i.}}-\\mu_i}{s(\\bar{Y_{i.}})} \\sim t_{N-a}\\) and the confidence interval for \\(\\mu_i\\) is \\(\\bar{Y_{i.}} \\pm t_{1-\\alpha/2;N-a}s(\\bar{Y_{i.}})\\), then we can do a t-test for the means difference with some constant c \\[ H_0: \\mu_i = c \\\\ H_1: \\mu_i \\neq c \\] where \\[ T =\\frac{\\bar{Y_{i.}}-c}{s(\\bar{Y_{i.}})} \\] follows \\(t_{N-a}\\) when \\(H_0\\) is true. If \\(|T| &gt; t_{1-\\alpha/2;N-a}\\), we can reject \\(H_0\\) 21.1.1.3.2 Differences Between Treatment Means Let \\(D=\\mu_i - \\mu_i&#39;\\), also known as pairwise comparison \\(D\\) can be estimated by \\(\\hat{D}=\\bar{Y_{i}}-\\bar{Y_{i}}&#39;\\) is unbiased (\\(E(\\hat{D})=\\mu_i-\\mu_i&#39;\\)) Since \\(\\bar{Y_{i}}\\) and \\(\\bar{Y_{i}}&#39;\\) are independent, then \\[ var(\\hat{D})=var(\\bar{Y_{i}}) + var(\\bar{Y_{i&#39;}}) = \\sigma^2(1/n_i + 1/n_i&#39;) \\] can be estimated with \\[ s^2(\\hat{D}) = MSE(1/n_i + 1/n_i&#39;) \\] With the single treatment inference, \\[ \\frac{\\hat{D}-D}{s(\\hat{D})} \\sim t_{N-a} \\] hence, \\[ \\hat{D} \\pm t_{(1-\\alpha/2;N-a)}s(\\hat{D}) \\] Hypothesis tests: \\[ H_0: \\mu_i = \\mu_i&#39; \\\\ H_a: \\mu_i \\neq \\mu_i&#39; \\] can be tested by the following statistic \\[ T = \\frac{\\hat{D}}{s(\\hat{D})} \\sim t_{1-\\alpha/2;N-a} \\] reject \\(H_0\\) if \\(|T| &gt; t_{1-\\alpha/2;N-a}\\) 21.1.1.3.3 Contrast Among Treatment Means generalize the comparison of two means, we have contrasts A contrast is a linear combination of treatment means: \\[ L = \\sum_{i=1}^{a}c_i \\mu_i \\] where each \\(c_i\\) is non-random constant and sum to 0: \\[ \\sum_{i=1}^{a} c_i = 0 \\] An unbiased estimator of a contrast L is \\[ \\hat{L} = \\sum_{i=1}^{a}c_i \\bar{Y}_{i.} \\] and \\(E(\\hat{L}) = L\\). Since the \\(\\bar{Y}_{i.}\\), i = 1,…, a are independent. \\[ var(\\hat{L}) = var(\\sum_{i=1}^a c_i \\bar{Y}_{i.}) = \\sum_{i=1}^a var(c_i \\bar{Y}_i) \\\\ = \\sum_{i=1}^a c_i^2 var(\\bar{Y}_i) = \\sum_{i=1}^a c_i^2 \\sigma^2 /n_i \\\\ = \\sigma^2 \\sum_{i=1}^{a} c_i^2 /n_i \\] Estimation of the variance: \\[ s^2(\\hat{L}) = MSE \\sum_{i=1}^{a} \\frac{c_i^2}{n_i} \\] \\(\\hat{L}\\) is normally distributed (since it is a linear combination of independent normal random variables). Then, since \\(SSE/\\sigma^2\\) is \\(\\chi_{N-a}^2\\) \\[ \\frac{\\hat{L}-L}{s(\\hat{L})} \\sim t_{N-a} \\] A \\(1-\\alpha\\) confidence limits are given by \\[ \\hat{L} \\pm t_{1-\\alpha/2; N-a}s(\\hat{L}) \\] Hypothesis testing \\[ H_0: L = 0 \\\\ H_a: L \\neq 0 \\] with \\[ T = \\frac{\\hat{L}}{s(\\hat{L})} \\] reject H_0 if \\(|T| &gt; t_{1-\\alpha/2;N-a}\\) 21.1.1.3.4 Linear Combination of Treatment Means just like contrast \\(L = \\sum_{i=1}^a c_i \\mu_i\\) but no restrictions on the \\(c_i\\) coefficients. Tests og a single treatment mean, two treatment means, and contrasts can all be considered form the same perspective. \\[ H_0: \\sum c_i \\mu_i = c \\\\ H_a: \\sum c_i \\mu_i \\neq c \\] The test statistics (t-stat) can be considered equivalently as F-tests; \\(F = (T)^2\\) where \\(F \\sim F_{1,N-a}\\). Since the numerator degrees of freedom is always 1 in these cases, we refer to them as single-degree-of-freedom tests. Multiple Contrasts To test simultaneously \\(k \\ge 2\\) contrasts, let \\(T_1,...,T_k\\) be the t-stat. The joint distribution of these random variables is a multivariate t-distribution (the tests are dependent since they re based on the same data). Limitations for comparing multiple contrasts: The confidence coefficient \\(1-\\alpha\\) only applies to a particular estimate, not a series of estimates; similarly, the Type I error rate, \\(\\alpha\\), applies to a particular test, not a series of tests. Example: 3 t-tests at \\(\\alpha = 0.05\\), if tests are independent (which they are not), \\(0.95^3 = 0.857\\) (thus \\(\\alpha - 0.143\\) not 0.05) The confidence coefficient \\(1-\\alpha\\) and significance level \\(\\alpha\\) are appropriate only if the test was not suggest by the data. often, the results of an experiment suggest important (ie..g, potential significant) relationships. the process of studying effects suggests by the data is called data snooping Multiple Comparison Procedures: Tukey Scheffe Bonferroni 21.1.1.3.4.1 Tukey All pairwise comparisons of factor level means. All pairs \\(D = \\mu_i - \\mu_i&#39;\\) or all tests of the form: \\[ H_0: \\mu_i -\\mu_i&#39; = 0 \\\\ H_a: \\mu_i - \\mu_i&#39; \\neq 0 \\] When all sample sizes are equal (\\(n_1 = n_2 = ... = n_a\\)) then the Tukey method family confidence coefficient is exactly \\(1-\\alpha\\) and the significance level is exactly \\(\\alpha\\) When the sample sizes are not equal, the family confidence coefficient is greater than \\(1-\\alpha\\) (i.e., the significance level is less than \\(\\alpha\\)) so the test iconservative Tukey considers the studentized range distribution. If we have \\(Y_1,..,Y_r\\), observations from a normal distribution with mean \\(\\alpha\\) and variance \\(\\sigma^2\\). Define: \\[ w = max(Y_i) - min(Y_i) \\] as the range of the observations. Let \\(s^2\\) be an estimate of \\(\\sigma^2\\) with v degrees of freedom. Then, \\[ q(r,v) = \\frac{w}{s} \\] is called the studentized range. The distribution of q uses a special table. Notes when we are not interested in testing all pairwise comparison,s the confidence coefficient for the family of comparisons under consideration will be greater than \\(1-\\alpha\\) (with the significance level less than \\(\\alpha\\)) Tukey can be used for “data snooping” as long as the effects to be studied on the basis of preliminary data analysis are pairwise comparisons. 21.1.1.3.4.2 Scheffe This method applies when the family of interest is the set of possible contrasts among the treatment means: \\[ L = \\sum_{i=1}^a c_i \\mu_i \\] where \\(\\sum_{i=1}^a c_i =0\\) That is, the family of all possible contrasts L or \\[ H_0: L = 0 \\\\ H_a: L \\neq 0 \\] The family confidence level for the Scheffe procedure is exactly \\(1-\\alpha\\) (i.e., significance level = \\(\\alpha\\)) whether the sample sizes are equal or not. For simultaneous confidence intervals, \\[ \\hat{L} \\pm Ss(\\hat{L}) \\] where \\(\\hat{L}=\\sum c_i \\bar{Y}_{i.},s^2(\\hat{L}) = MSE \\sum c_i^2/n_i\\) and \\(S^2 = (a-1)f_{1-\\alpha;a-1,N-a}\\) The Scheffe procedure considers \\[ F = \\frac{\\hat{L}^2}{(a-1)s^2(\\hat{L})} \\] where we reject \\(H_0\\) at the family significance level \\(\\alpha\\) if \\(F &gt; f_{(1-\\alpha;a-1,N-a)}\\) Note Since applications of the Scheffe never involve all conceivable contrasts, the finite family confidence coefficient will be larger than \\(1-\\alpha\\), so \\(1-\\alpha\\) is a lower bound. Thus, people often consider a larger \\(\\alpha\\) (e.g., 90% confidence interval) Scheffe can be used for “data scooping” since the family of statements contains all possible contrasts. If only pairwise comparisons are to be considered, The Tukey procedure gives narrower confidence limits. 21.1.1.3.4.3 Bonferroni Applicable whether the sample sizes are equal or unequal. For the confidence intervals, \\[ \\hat{L} \\pm B s(\\hat{L}) \\] where \\(B= t_{(1-\\alpha/(2g);N-a)}\\) and g is the number of comparisons in the family. Hypothesis testing \\[ H_0: L = 0 \\\\ H_a: L \\neq 0 \\] Let \\(T= \\frac{\\hat{L}}{s(\\hat{L})}\\) and reject \\(H_0\\) if \\(|T|&gt;t_{1-\\alpha/(2g),N-a}\\) Notes If all pairwise comparisons are of interest, the Tukey procedure is superior (narrower confidence intervals). If not, Bonferroni may be better. Bonferroni is better than Scheffe when the number of contrasts is about the same as the treatment levels (or less). Recommendation: compute all threes and pick the smallest. Bonferroni can’t be used for data snooping 21.1.1.3.4.4 Fisher’s LSD does not control for family error rate use t-stat for testing \\[ H_0: \\mu_i = \\mu_j \\] t-stat \\[ t = \\frac{\\bar{y}_i - \\bar{y}_j}{\\sqrt{MSE(\\frac{1}{n_i}+ \\frac{1}{n_j})}} \\] 21.1.1.3.4.5 Newman-Keuls Do not recommend using this test since it has less power than ANOVA. 21.1.1.3.5 Multiple comparisons with a control 21.1.1.3.5.1 Dunnett We have \\(a\\) groups where the last group is the control group, and the \\(a-1\\) treatment groups. Then, we compare treatment groups to the control group. Hence, we have \\(a-1\\) contrasts (i.e., \\(a-1\\) pairwise comparisons) 21.1.1.3.6 Summary When choosing a multiple contrast method: Pairwise Equal groups sizes: Tukey Unequal groups sizes: Tukey, Scheffe Not pairwise with control: Dunnett general: Bonferroni, Scheffe 21.1.2 Single Factor Random Effects Model Also known as ANOVA Type II models. Treatments are chosen at from from larger population. We extend inference to all treatments in the population and not restrict our inference to those treatments that happened to be selected for the study. 21.1.2.1 Random Cell Means \\[ Y_{ij} = \\mu_i + \\epsilon_{ij} \\] where \\(\\mu_i \\sim N(\\mu, \\sigma^2_{\\mu})\\) and independent \\(\\epsilon_{ij} \\sim N(0,\\sigma^2)\\) and independent \\(\\mu_i\\) and \\(\\epsilon_{ij}\\) are mutually independent for \\(i =1,...,a; j = 1,...,n\\) With all treatment sample sizes are equal \\[ E(Y_{ij}) = E(\\mu_i) = \\mu \\\\ var(Y_{ij}) = var(\\mu_i) + var(\\epsilon_i) = \\sigma^2_{\\mu} + \\sigma^2 \\] Since \\(Y_{ij}\\) are not independent \\[ \\begin{aligned} cov(Y_{ij},Y_{ij&#39;}) &amp;= E(Y_{ij}Y_{ij&#39;}) - E(Y_{ij})E(Y_{ij&#39;}) \\\\ &amp;= E(\\mu_i^2 + \\mu_i \\epsilon_{ij&#39;} + \\mu_i \\epsilon_{ij} + \\epsilon_{ij}\\epsilon_{ij&#39;}) - \\mu^2 \\\\ &amp;= \\sigma^2_{\\mu} + \\mu^2 - \\mu^2 &amp; \\text{if} j \\neq j&#39; \\\\ &amp;= \\sigma^2_{\\mu} &amp; \\text{if} j \\neq j&#39; \\end{aligned} \\] \\[ \\begin{aligned} cov(Y_{ij},Y_{i&#39;j&#39;}) &amp;= E(\\mu_i \\mu_{i&#39;} + \\mu_i \\epsilon_{i&#39;j&#39;}+ \\mu_{i&#39;}\\epsilon_{ij}+ \\epsilon_{ij}\\epsilon_{i&#39;j&#39;}) - \\mu^2 \\\\ &amp;= \\mu^2 - \\mu^2 &amp; \\text{if } i \\neq i&#39; \\\\ &amp;= 0 \\\\ \\end{aligned} \\] Hence, all observations have the same variance any two observations from the same treatment have covariance \\(\\sigma^2_{\\mu}\\) The correlation between any two responses from the same treatment: \\[ \\begin{aligned} \\rho(Y_{ij},Y_{ij&#39;}) &amp;= \\frac{\\sigma^2_{\\mu}}{\\sigma^2_{\\mu}+ \\sigma^2} &amp;&amp; \\text{$j \\neq j&#39;$} \\end{aligned} \\] Inference Intraclass Correlation Coefficient \\[ \\frac{\\sigma^2_{\\mu}}{\\sigma^2 + \\sigma^2_{\\mu}} \\] which measures the proportion of total variability of \\(Y_{ij}\\) accounted for by the variance of \\(\\mu_i\\) \\[ H_0: \\sigma_{\\mu}^2 = 0 \\\\ H_a: \\sigma_{\\mu}^2 \\neq 0 \\] \\(H_0\\) implies \\(\\mu_i = \\mu\\) for all i, which can be tested by the F-test in ANOVA. The understandings of the Single Factor Fixed Effects Model and the Single Factor Random Effects Model are different, the ANOVA is same for the one factor model. The difference is in the expected mean squares Random Effects Model Fixed Effects Model \\(E(MSE) = \\sigma^2\\) \\(E(MSE) = \\sigma^2\\) \\(E(M STR) = \\sigma^2 - n \\sigma^2_\\mu\\) \\(E(MSTR) = \\sigma^2 + \\frac{ \\sum_i n_i (\\mu_i - \\mu)^2}{a-1}\\) If \\(\\sigma^2_\\mu\\), then MSE and MSTR have the same expectation (\\(\\sigma^2\\)). Otherwise, \\(E(MSTR) &gt;E(MSE)\\). Large values of the statistic \\[ F = \\frac{MSTR}{MSE} \\] suggest we reject \\(H_0\\). Since \\(F \\sim F_{(a-1,a(n-1))}\\) when \\(H_0\\) holds. If \\(F &gt; f_{(1-\\alpha;a-1,a(n-1))}\\) we reject \\(H_0\\). If sample sizes are not equal, F-test can still be used, but the df are \\(a-1\\) and \\(N-a\\). 21.1.2.1.1 Estimation of \\(\\mu\\) An unbiased estimator of \\(E(Y_{ij})=\\mu\\) is the grand mean: \\(\\hat{\\mu} = \\hat{Y}_{..}\\) The variance of this estimator is \\[ \\begin{aligned} var(\\bar{Y}_{..}) &amp;= var(\\sum_i \\bar{Y}_{i.}/a) \\\\ &amp;= \\frac{1}{a^2}\\sum_ivar(\\bar{Y}_{i.}) \\\\ &amp;= \\frac{1}{a^2}\\sum_i(\\sigma^2_\\mu+\\sigma^2/n) \\\\ &amp;= \\frac{1}{a^2}(\\sigma^2_{\\mu}+\\sigma^2/n) \\\\ &amp;= \\frac{n\\sigma^2_{\\mu}+ \\sigma^2}{an} \\end{aligned} \\] An unbiased estimator of this variance is \\(s^2(\\bar{Y})=\\frac{MSTR}{an}\\). Thus \\(\\frac{\\bar{Y}_{..}-\\mu}{s(\\bar{Y}_{..})} \\sim t_{a-1}\\) A \\(1-\\alpha\\) confidence interval is \\(\\bar{Y}_{..} \\pm t_{(1-\\alpha/2;a-1)}s(\\bar{Y}_{..})\\) 21.1.2.1.2 Estimation of \\(\\sigma^2_\\mu/(\\sigma^2_{\\mu}+\\sigma^2)\\) In the random and fixed effects model, MSTR and MSE are independent. When the sample sizes are equal (\\(n_i = n\\) for all i), \\[ \\frac{\\frac{MSTR}{n\\sigma^2_\\mu+ \\sigma^2}}{\\frac{MSE}{\\sigma^2}} \\sim f_{(a-1,a(n-1))} \\] \\[ P(f_{(\\alpha/2;a-1,a(n-1))}\\le \\frac{\\frac{MSTR}{n\\sigma^2_\\mu+ \\sigma^2}}{\\frac{MSE}{\\sigma^2}} \\le f_{(1-\\alpha/2;a-1,a(n-1))}) = 1-\\alpha \\] \\[ L = \\frac{1}{n}(\\frac{MSTR}{MSE}(\\frac{1}{f_{(1-\\alpha/2;a-1,a(n-1))}})-1) \\\\ U = \\frac{1}{n}(\\frac{MSTR}{MSE}(\\frac{1}{f_{(\\alpha/2;a-1,a(n-1))}})-1) \\] The lower and upper \\((L^*,U^*)\\) confidence limits for \\(\\frac{\\sigma^2_\\mu}{\\sigma^2_\\mu + \\sigma^2}\\) \\[ L^* = \\frac{L}{1+L} \\\\ U^* = \\frac{U}{1+U} \\] If the lower limit for \\(\\frac{\\sigma^2_\\mu}{\\sigma^2}\\) is negative, it is customary to set L = 0. 21.1.2.1.3 Estimation of \\(\\sigma^2\\) \\(a(n-1)MSE/\\sigma^2 \\sim \\chi^2_{a(n-1)}\\), the \\((1-\\alpha)\\) confidence interval for \\(\\sigma^2\\): \\[ \\frac{a(n-1)MSE}{\\chi^2_{1-\\alpha/2;a(n-1)}} \\le \\sigma^2 \\le \\frac{a(n-1)MSE}{\\chi^2_{\\alpha/2;a(n-1)}} \\] can also be used in case sample sizes are not equal - then df is N-a. 21.1.2.1.4 Estimation of \\(\\sigma^2_\\mu\\) \\(E(MSE) = \\sigma^2\\) \\(E(MSTR) = \\sigma^2 + n\\sigma^2_\\mu\\). Hence, \\[ \\sigma^2_{\\mu} = \\frac{E(MSTR)- E(MSE)}{n} \\] An unbiased estimator of \\(\\sigma^2_\\mu\\) is given by \\[ s^2_\\mu =\\frac{MSTR-MSE}{n} \\] if \\(s^2_\\mu &lt; 0\\), set \\(s^2_\\mu = 0\\) If sample sizes are not equal, \\[ s^2_\\mu = \\frac{MSTR - MSE}{n&#39;} \\] where \\(n&#39; = \\frac{1}{a-1}(\\sum_i n_i- \\frac{\\sum_i n^2_i}{\\sum_i n_i})\\) no exact confidence intervals for \\(\\sigma^2_\\mu\\), but we can approximate intervals. Satterthewaite Procedure can be used to construct approximate confidence intervals for linear combination of expected mean squares A linear combination: \\[ \\sigma^2_\\mu = \\frac{1}{n} E(MSTR) + (-\\frac{1}{n}) E(MSE) \\] \\[ S = d_1 E(MS_1) + ..+ d_h E(MS_h) \\] where \\(d_i\\) are coefficients. An unbiased estimator of S is \\[ \\hat{S} = d_1 MS_1 + ...+ d_h MS_h \\] Let \\(df_i\\) be the degrees of freedom associated with the mean square \\(MS_i\\). The Satterthwaite approximation: \\[ \\frac{(df)\\hat{S}}{S} \\sim \\chi^2_{df} \\] where \\[ df = \\frac{(d_1MS_1+...+d_hMS_h)^2}{(d_1MS_1)^2/df_1 + ...+ (d_hMS_h)^2/df_h} \\] An approximate \\(1-\\alpha\\) confidence interval for S: \\[ \\frac{(df)\\hat{S}}{\\chi^2_{1-\\alpha/2;df}} \\le S \\le \\frac{(df)\\hat{S}}{\\chi^2_{\\alpha/2;df}} \\] For the single factor random effects model \\[ \\frac{(df)s^2_\\mu}{\\chi^2_{1-\\alpha/2;df}} \\le \\sigma^2_\\mu \\le \\frac{(df)s^2_\\mu}{\\chi^2_{\\alpha/2;df}} \\] where \\[ df = \\frac{(sn^2_\\mu)^2}{\\frac{(MSTR)^2}{a-1}+ \\frac{(MSE)^2}{a(n-1)}} \\] 21.1.2.2 Random Treatment Effects Model \\[ \\tau_i = \\mu_i - E(\\mu_i) = \\mu_i - \\mu \\] we have \\(\\mu_i = \\mu + \\tau_i\\) and \\[ Y_{ij} = \\mu + \\tau_i + \\epsilon_{ij} \\] where \\(\\mu\\) = constant, common to all observations \\(\\tau_i \\sim N(0,\\sigma^2_\\tau)\\) independent (random variables) \\(\\epsilon_{ij} \\sim N(0,\\sigma^2)\\) independent. \\(\\tau_{i}, \\epsilon_{ij}\\) are independent (i=1,…,a; j =1,..,n) our model is concerned with only balanced single factor ANOVA. Diagnostics Measures Non-constant error variance (plots, Levene test, Hartley test). Non-independence of errors (plots, Durban-Watson test). Outliers (plots, regression methods). Non-normality of error terms (plots, Shapiro-Wilk, Anderson-Darling). Omitted Variable Bias (plots) Remedial Weighted Least Squares Transformations Non-parametric Procedures. Note Fixed effect ANOVA is relatively robust to non-normality unequal variances when sample sizes are approximately equal; at least the F-test and multiple comparisons. However, single comparisons of treatment means are sensitive to unequal variances. Lack of independence can seriously affect both fixed and random effect ANVOA. 21.1.3 Two Factor Fixed Effect ANOVA The multi-factor experiment is more efficient provides more info gives more validity to the findings. 21.1.3.1 Balanced Assumption: All treatment sample sizes are equal All treatment means are of equal importance Assume: Factor A has a levels and Factor B has b levels. All a x b factor levels are considered. The number of treatments for each level is n. \\(N = abn\\) observations in the study. 21.1.3.1.1 Cell Means Model \\[ Y_{ijk} = \\mu_{ij} + \\epsilon_{ijk} \\] where \\(\\mu_{ij}\\) are fixed parameters (cell means) \\(i = 1,...,a\\) = the levels of Factor A \\(j = 1,...,b\\) = the levels of Factor B. \\(\\epsilon_{ijk} \\sim \\text{indep } N(0,\\sigma^2)\\) for \\(i = 1,...,a\\), \\(j = 1,..,b\\) and \\(k = 1,..,n\\) And \\[ E(Y_{ijk}) = \\mu_{ij} \\\\ var(Y_{ijk}) = var(\\epsilon_{ijk}) = \\sigma^2 \\] Hence, \\[ Y_{ijk} \\sim \\text{indep } N(\\mu_{ij},\\sigma^2) \\] And the model is \\[ \\mathbf{Y} = \\mathbf{X} \\beta + \\epsilon \\] Thus, \\[ E(\\mathbf{Y}) = \\mathbf{X}\\beta \\\\ var(\\mathbf{Y}) = \\sigma^2 \\mathbf{I} \\] Interaction \\[ (\\alpha \\beta)_{ij} = \\mu_{ij} - (\\mu_{..}+ \\alpha_i + \\beta_j) \\] where \\(\\mu_{..} = \\sum_i \\sum_j \\mu_{ij}/ab\\) is the grand mean \\(\\alpha_i = \\mu_{i.}-\\mu_{..}\\) is the main effect for factor A at the i-th level \\(\\beta_j = \\mu_{.j} - \\mu_{..}\\) is the main effect for factor B at the j-th level \\((\\alpha \\beta)_{ij}\\) is the interaction effect when factor A is at the i-th level and factor B is at the j-th level. \\((\\alpha \\beta)_{ij} = \\mu_{ij} - \\mu_{i.}-\\mu_{.j}+ \\mu_{..}\\) Examine interactions: Examine whether all \\(\\mu_{ij}\\) can be expressed as the sums \\(\\mu_{..} + \\alpha_i + \\beta_j\\) Examine whether the difference between the mean responses for any two levels of factor B is the same for all levels of factor A. Examine whether the difference between the mean response for any two levels of factor A is the same for all levels of factor B Examine whether the treatment mean curves for the different factor levels in a treatment plot are parallel. For \\(j = 1,...,b\\) \\[ \\begin{aligned} \\sum_i(\\alpha \\beta)_{ij} &amp;= \\sum_i (\\mu_{ij} - \\mu_{..} - \\alpha_i - \\beta_j) \\\\ &amp;= \\sum_i \\mu_{ij} - a \\mu_{..} - \\sum_i \\alpha_i - a \\beta_j \\\\ &amp;= a \\mu_{.j} - a \\mu_{..}- \\sum_i (\\mu_{i.} - \\mu_{..}) - a(\\mu_{.j}-\\mu_{..}) \\\\ &amp;= a \\mu_{.j} - a \\mu_{..} - a \\mu_{..}+ a \\mu_{..} - a (\\mu_{.j} - \\mu_{..}) \\\\ &amp;= 0 \\end{aligned} \\] Similarly, \\(\\sum_j (\\alpha \\beta) = 0, i = 1,...,a\\) and \\(\\sum_i \\sum_j (\\alpha \\beta)_{ij} =0\\), \\(\\sum_i \\alpha_i = 0\\), \\(\\sum_j \\beta_j = 0\\) 21.1.3.1.2 Factor Effects Model \\[ \\mu_{ij} = \\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} \\\\ Y_{ijk} = \\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\epsilon_{ijk} \\] where \\(\\mu_{..}\\) is a constant \\(\\alpha_i\\) are constants subject to the restriction \\(\\sum_i \\alpha_i=0\\) \\(\\beta_j\\) are constants subject to the restriction \\(\\sum_j \\beta_j = 0\\) \\((\\alpha \\beta)_{ij}\\) are constants subject to the restriction \\(\\sum_i(\\alpha \\beta)_{ij} = 0\\) for \\(j=1,...,b\\) and \\(\\sum_j(\\alpha \\beta)_{ij} = 0\\) for \\(i = 1,...,a\\) \\(\\epsilon_{ijk} \\sim \\text{indep } N(0,\\sigma^2)\\) for \\(k = 1,..,n\\) We have \\[ E(Y_{ijk}) = \\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij}\\\\ var(Y_{ijk}) = \\sigma^2 \\\\ Y_{ijk} \\sim N (\\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij}, \\sigma^2) \\] We have \\(1+a+b+ab\\) parameters. But there are \\(ab\\) parameters in the Cell Means Model. In the Factor Effects Model, the restrictions limit the number of parameters that can be estimated: \\[ 1 \\text{ for } \\mu_{..} \\\\ (a-1) \\text{ for } \\alpha_i \\\\ (b-1) \\text{ for } \\beta_j \\\\ (a-1)(b-1) \\text{ for } (\\alpha \\beta)_{ij} \\] Hence, there are \\[ 1 + a - 1 + b - 1 + ab - a- b + 1 = ab \\] parameters in the model. We can have several restrictions when considering the model in the form \\(\\mathbf{Y} = \\mathbf{X} \\beta + \\epsilon\\) One way: \\[ \\alpha_a = \\alpha_1 - \\alpha_2 - ... - \\alpha_{a-1} \\\\ \\beta_b = -\\beta_1 - \\beta_2 - ... - \\beta_{b-1} \\\\ (\\alpha \\beta)_{ib} = -(\\alpha \\beta)_{i1} -(\\alpha \\beta)_{i2} -...-(\\alpha \\beta)_{i,b-1} ; i = 1,..,a \\\\ (\\alpha \\beta)_{aj} = -(\\alpha \\beta)_{1j}-(\\alpha \\beta)_{2j} - ... -(\\alpha \\beta)_{a-1,j}; j = 1,..,b \\] We can fit the model by least squares or maximum likelihood Cell Means Model minimize \\[ Q = \\sum_i \\sum_j \\sum_k (Y_{ijk}-\\mu_{ij})^2 \\] estimators \\[ \\hat{\\mu}_{ij}= \\bar{Y}_{ij} \\\\ \\hat{Y}_{ijk} = \\bar{Y}_{ij} \\\\ e_{ijk} = Y_{ijk} - \\hat{Y}_{ijk} = Y_{ijk} - \\bar{Y}_{ij} \\] Factor Effects Model \\[ Q = \\sum_i \\sum_j \\sum_k (Y_{ijk} - \\mu_{..}-\\alpha_i = \\beta_j - (\\alpha \\beta)_{ij})^2 \\] subject to the restrictions \\[ \\sum_i \\alpha_i = 0 \\\\ \\sum_j \\beta_j = 0 \\\\ \\sum_i (\\alpha \\beta)_{ij} = 0 \\\\ \\sum_j (\\alpha \\beta)_{ij} = 0 \\] estimators \\[ \\hat{\\mu}_{..} = \\bar{Y}_{...} \\\\ \\hat{\\alpha}_i = \\bar{Y}_{i..} - \\bar{Y}_{...} \\\\ \\hat{\\beta}_j = \\bar{Y}_{.j.}-\\bar{Y}_{...} \\\\ (\\hat{\\alpha \\beta})_{ij} = \\bar{Y}_{ij.} - \\bar{Y}_{i..} - \\bar{Y}_{.j.}+ \\bar{Y}_{...} \\] The fitted values \\[ \\hat{Y}_{ijk} = \\bar{Y}_{...}+ (\\bar{Y}_{i..}- \\bar{Y}_{...})+ (\\bar{Y}_{.j.}- \\bar{Y}_{...}) + (\\bar{Y}_{ij.} - \\bar{Y}_{i..}-\\bar{Y}_{.j.}+\\bar{Y}_{...}) = \\bar{Y}_{ij.} \\] where \\[ e_{ijk} = Y_{ijk} - \\bar{Y}_{ij.} \\\\ e_{ijk} \\sim \\text{ indep } (0,\\sigma^2) \\] and \\[ s^2_{\\hat{\\mu}..} = \\frac{MSE}{nab} \\\\ s^2_{\\hat{\\alpha}_i} = MSE(\\frac{1}{nb} - \\frac{1}{nab}) \\\\ s^2_{\\hat{\\beta}_j} = MSE(\\frac{1}{na} - \\frac{1}{nab}) \\\\ s^2_{(\\hat{\\alpha\\beta})_{ij}} = MSE (\\frac{1}{n} - \\frac{1}{na}- \\frac{1}{nb} + \\frac{1}{nab}) \\] 21.1.3.1.2.1 Partitioning the Total Sum of Squares \\[ Y_{ijk} - \\bar{Y}_{...} = \\bar{Y}_{ij.} - \\bar{Y}_{...} + Y_{ijk} - \\bar{Y}_{ij.} \\] \\(Y_{ijk} - \\bar{Y}_{...}\\): Total deviation \\(\\bar{Y}_{ij.} - \\bar{Y}_{...}\\): Deviation of treatment mean from overall mean \\(Y_{ijk} - \\bar{Y}_{ij.}\\): Deviation of observation around treatment mean (residual). \\[ \\begin{aligned} \\sum_i \\sum_j \\sum_k (Y_{ijk} - \\bar{Y}_{...})^2 &amp;= n \\sum_i \\sum_j (\\bar{Y}_{ij.}- \\bar{Y}_{...})^2+ \\sum_i \\sum_j sum_k (Y_{ijk} - \\bar{ij.})^2 \\\\ SSTO &amp;= SSTR + SSE \\end{aligned} \\] (cross product terms are 0) \\[ \\bar{Y}_{ij.}- \\bar{Y}_{...} = \\bar{Y}_{i..}-\\bar{Y}_{...} + \\bar{Y}_{.j.}-\\bar{Y}_{...} + \\bar{Y}_{ij.} - \\bar{Y}_{i..} - \\bar{Y}_{.j.} + \\bar{Y}_{...} \\] squaring and summing: \\[ \\begin{aligned} n\\sum_i \\sum_j (\\bar{Y}_{ij.}-\\bar{Y}_{...})^2 &amp;= nb\\sum_i (\\bar{Y}_{i..}-\\bar{Y}_{...})^2 + na \\sum_j (\\bar{Y}_{.j.}-\\bar{Y}_{...})^2 + n \\sum_i \\sum_j (\\bar{Y}_{ij.}-\\bar{Y}_{i..}- \\bar{Y}_{.j.}+ \\bar{Y}_{...})^2 \\\\ SSTR &amp;= SSA + SSB + SSAB \\end{aligned} \\] The interaction term from \\[ SSAB = SSTO - SSE - SSA - SSB \\\\ SSAB = SSTR - SSA - SSB \\] where SSA is the factor A sum of squares (measures the variability of the estimated factor A level means \\(\\bar{Y}_{i..}\\))- the more variable, the larger SSA SSB is the factor B sum of squares SSAB is the interaction sum of squares, measuring the variability of the estimated interactions. 21.1.3.1.2.2 Partitioning the df \\(N = abn\\) cases and \\(ab\\) treatments. For one-way ANOVA and regression, the partition has df: \\[ SS: SSTO = SSTR + SSE \\\\ df: N-1 = (ab-1) + (N-ab) \\] we must further partition the \\(ab-1\\) df with SSTR \\[ SSTR = SSA + SSB + SSAB \\\\ ab-1 = (a-1) + (b-1) + (a-1)(b-1) \\] \\(df_{SSA} = a-1\\): a treatment deviations but 1 df is lost due to the restriction \\(\\sum (\\bar{Y}_{i..}- \\bar{Y}_{...})=0\\) \\(df_{SSB} = b-1\\): b treatment deviations but 1 df is lost due to the restriction \\(\\sum (\\bar{Y}_{.j.}- \\bar{Y}_{...})=0\\) \\(df_{SSAB} = (a-1)(b-1)= (ab-1)-(a-1)-(b-1)\\): ab interactions, there are (a+b-1) restrictions, so df = ab-a-(b-1)= (a-1)(b-1) 21.1.3.1.2.3 Mean Squares \\[ MSA = \\frac{SSA}{a-1}\\\\ MSB = \\frac{SSB}{b-1}\\\\ MSAB = \\frac{SSAB}{(a-1)(b-1)} \\] The expected mean squares are \\[ E(MSE) = \\sigma^2 \\\\ E(MSA) = \\sigma^2 + nb \\frac{\\sum \\alpha_i^2}{a-1} = \\sigma^2 + nb \\frac{\\sum(\\sum_{i.}-\\mu_{..})^2}{a-1} \\\\ E(MSB) = \\sigma^2 + na \\frac{\\sum \\beta_i^2}{b-1} = \\sigma^2 + na \\frac{\\sum(\\sum_{.j}-\\mu_{..})^2}{b-1} \\\\ E(MSAB) = \\sigma^2 + n \\frac{\\sum \\sum (\\alpha \\beta)_{ij}^2}{(a-1)(b-1)} = \\sigma^2 + n \\frac{\\sum (\\mu_{ij}- \\mu_{i.}- \\mu_{.j}+ \\mu_{..} )^2}{(a-1)(b-1)} \\] If there are no factor A main effects (all \\(\\mu_{i.} = 0\\) or \\(\\alpha_i = 0\\)) the MSA and MSE have the same expectation; otherwise MSA &gt; MSE. Same for factor B, and interaction effects. which case we can examine F-statistics. Interaction \\[ \\begin{aligned} H_0: \\mu_{ij}- \\mu_{i.} - \\mu_{.j} + \\mu_{..} = 0 &amp;&amp; \\text{for all i,j} \\\\ H_a: \\mu_{ij}- \\mu_{i.} - \\mu_{.j} + \\mu_{..} \\neq 0 &amp;&amp; \\text{for some i,j} \\end{aligned} \\] or \\[ H_0: \\text{All}(\\alpha \\beta)_{ij} = 0 \\\\ H_a: \\text{Not all} (\\alpha \\beta) = 0 \\] Let \\(F = \\frac{MSAB}{MSE}\\). When \\(H_0\\) is true \\(F \\sim f_{((a-1)(b-1),ab(n-1))}\\). So reject \\(H_0\\) when \\(F &gt; f_{((a-1)(b-1),ab(n-1))}\\) Factor A main effects: \\[ H_0: \\mu_{1.} = \\mu_{2.} = ... = \\mu_{a.} \\\\ H_a: \\text{Not all $\\mu_{i.}$ are equal} \\] or \\[ H_0: \\alpha_1 = ... = \\alpha_a = 0 \\\\ H_a: \\text{Not all $\\alpha_i$ are equal to 0} \\] \\(F= \\frac{MSA}{MSE}\\) and reject \\(H_0\\) if \\(F&gt;f_{(1-\\alpha;a-1,ab(n-1))}\\) 21.1.3.1.2.4 Two-way ANOVA Source of Variation SS df MS F Factor A SSA a-1 MSA = SSA/(a-1) MSA/MSE Factor B SSB b-1 MSB = SSB/(b-1) MSB/MSE AB interactions SSAB (a-1)(b-1) MSAB = SSAB /MSE Error SSE ab(n-1) MSE = SSE/ab(n-1) Total (corrected) SSTO abn - 1 Doing 2-way ANOVA means you always check interaction first, because if there are significant interactions, checking the significance of the main effects becomes moot. The main effects concern the mean responses for levels of one factor averaged over the levels of the other factor. WHen interaction is present, we can’t conclude that a given factor has no effect, even if these averages are the same. It means that the effect of the factor depends on the level of the other factor. On the other hand, if you can establish that there is no interaction, then you can consider inference on the factor main effects, which are then said to be additive. And we can also compare factor means like the Single Factor Fixed Effects Model using Tukey, Scheffe, Bonferroni. We can also consider contrasts in the 2-way model \\[ L = \\sum c_i \\mu_i \\] where \\(\\sum c_i =0\\) which is estimated by \\[ \\hat{L} = \\sum c_i \\bar{Y}_{i..} \\] with variance \\[ \\sigma^2(\\hat{L}) = \\frac{\\sigma^2}{bn} \\sum c_i^2 \\] and variance estimate \\[ \\frac{MSE}{bn} \\sum c_i^2 \\] Orthogonal Contrasts \\[ L_1 = \\sum c_i \\mu_i, \\sum c_i = 0 \\\\ L_2 = \\sum d_i \\mu_i , \\sum d_i = 0 \\] these contrasts are said to be orthogonal if \\[ \\sum \\frac{c_i d_i}{n_i} = 0 \\] in balanced case \\(\\sum c_i d_i =0\\) \\[ \\begin{aligned} cov(\\hat{L}_1, \\hat{L}_2) &amp;= cov(\\sum_i c_i \\bar{Y}_{i..}, \\sum_l d_l \\bar{Y}_{l..}) \\\\ &amp;= \\sum_i \\sum_l c_i d_l cov(\\bar{Y}_{i..},\\bar{Y}_{l..}) \\\\ &amp;= \\sum_i c_i d_i \\frac{\\sigma^2}{bn} = 0 \\end{aligned} \\] Orthogonal contrasts can be used to further partition the model sum of squares. There are many sets of orthogonal contrasts and thus, many ways to partition the sum of squares. A special set of orthogonal contrasts that are used when the levels of a factor can be assigned values on a metric scale are called orthogonal polynomials Coefficients can be found for the special case of equal spaced levels (e.g., (0 15 30 45 60)) equal sample sizes (\\(n_1 = n_2 = ... = n_{ab}\\)) We can define the SS for a given contrast: \\[ SS_L = \\frac{\\hat{L}^2}{\\sum_{i=1}^a (c^2_i/bn_i)} \\] \\[ T = \\frac{\\hat{L}}{\\sqrt{MSE\\sum_{i=1}^a(c_i^2/bn_i)}} \\sim t \\] Moreover, \\[ t^2_{(1-\\alpha/2;df)}=F_{(1-\\alpha;1,df)} \\] So, \\[ \\frac{SS_L}{MSE} \\sim F_{(1-\\alpha;1,df_{MSE})} \\] all contrasts have d.f = 1 21.1.3.2 Unbalanced We could have unequal numbers of replications for all treatment combinations: observational studies dropouts in designed studies larger sample sizes for inexpensive treatments Sample sizes to match population makeup. Assume that each factor combination has at least 1 observation (no empty cells) Consider the same model as: \\[ Y_{ijk} = \\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\epsilon_{ijk} \\] where sample sizes are: \\(n_{ij}\\): \\[ n_{i.} = \\sum_j n_{ij} \\\\ n_{.j} = \\sum_i n_{ij} \\\\ n_T = \\sum_i \\sum_j n_{ij} \\] Problem here is that \\[ SSTO \\neq SSA + SSB + SSAB + SSE \\] (the design is non-orthogonal) For \\(i = 1,...,a-1,\\) \\begin{equation} u_i = \\begin{cases} +1 &amp; \\text{if the obs is from the i-th level of Factor 1} \\\\ -1 &amp; \\text{if the obs is from the a-th level of Factor 1} \\\\ 0 &amp; \\text{otherwise} \\\\ \\end{cases} \\end{equation} For \\(j=1,...,b-1\\) \\begin{equation} v_i = \\begin{cases} +1 &amp; \\text{if the obs is from the j-th level of Factor 1} \\\\ -1 &amp; \\text{if the obs is from the b-th level of Factor 1} \\\\ 0 &amp; \\text{otherwise} \\\\ \\end{cases} \\end{equation} We can use these indicator variables as predictor variables and \\(\\mu_{..}, \\alpha_i ,\\beta_j, (\\alpha \\beta)_{ij}\\) as unknown parameters. \\[ Y = \\mu_{..} + \\sum_{i=1}^{a-1} \\alpha_i u_i + \\sum_{j=1}^{b-1} \\beta_j v_j + \\sum_{i=1}^{a-1} \\sum_{j=1}^{b-1}(\\alpha \\beta)_{ij} u_i v_j + \\epsilon \\] To test hypotheses, we use the extra sum of squares idea. For interaction effects \\[ H_0: all (\\alpha \\beta)_{ij} = 0 \\\\ H_a: \\text{not all }(\\alpha \\beta)_{ij} =0 \\] Or to test \\[ H_0: \\beta_1 = \\beta_2 = \\beta_3 = 0 \\\\ H_a: \\text{not all } \\beta_j = 0 \\] Analysis of Factor Means (e.g., contrasts) is analogous to the balanced case, with modifications in the formulas for means and standard errors to account for unequal sample sizes. Or , we can fit the cell means model and consider it from a regression perspective If you have empty cells (i.e., some factor combinations have no observation), then the equivalent regression approach can’t be used. But you can still do partial analyses 21.1.4 Two-Way Random Effects ANOVA \\[ Y_{ijk} = \\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\epsilon_{ij} \\] where \\(\\mu_{..}\\): constant \\(\\alpha_i \\sim N(0,\\sigma^2_{\\alpha}), i = 1,..,a\\) (independent) \\(\\beta_j \\sim N(0,\\sigma^2_{\\beta}), j = 1,..,b\\) (independent) \\((\\alpha \\beta)_{ij} \\sim N(0,\\sigma^2_{\\alpha \\beta}),i=1,...,a,j=1,..,b\\) (independent) \\(\\epsilon_{ijk} \\sim N(0,\\sigma^2)\\) (independent) All \\(\\alpha_i, \\beta_j, (\\alpha \\beta)_{ij}\\) are pairwise independent Theoretical means, variances, and covariances are \\[ E(Y_{ijk}) = \\mu_{..} \\\\ var(Y_{ijk}) = \\sigma^2_Y= \\sigma^2_\\alpha + \\sigma^2_\\beta + \\sigma^2_{\\alpha \\beta} + \\sigma^2 \\] So \\(Y_{ijk} \\sim N(\\mu_{..},\\sigma^2_\\alpha + \\sigma^2_\\beta + \\sigma^2_{\\alpha \\beta} + \\sigma^2)\\) \\[ cov(Y_{ijk},Y_{ij&#39;k&#39;}) = \\sigma^2_{\\alpha}, j \\neq j&#39; \\\\ cov(Y_{ijk},Y_{i&#39;jk&#39;}) = \\sigma^2_{\\beta}, i \\neq i&#39;\\\\ cov(Y_{ijk},Y_{ijk&#39;}) = \\sigma^2_\\alpha + \\sigma^2_{\\beta} + \\sigma^2_{\\alpha \\beta}, k \\neq k&#39; \\\\ cov(Y_{ijk},Y_{i&#39;j&#39;k&#39;}) = , i \\neq i&#39;, j \\neq j&#39; \\] 21.1.5 Two-Way Mixed Effects ANOVA 21.1.5.1 Balanced One fixed factor, while other is random treatment levels, we have a mixed effects model or a mixed model Restricted mixed model for 2-way ANOVA: \\[ Y_{ijk} = \\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\epsilon_{ijk} \\] where \\(\\mu_{..}\\): constant \\(\\alpha_i\\): fixed effects with constraints subject to restriction \\(\\sum \\alpha_i = 0\\) \\(\\beta_j \\sim indep N(0,\\sigma^2_\\beta)\\) \\((\\alpha \\beta)_{ij} \\sim N(0,\\frac{a-1}{a}\\sigma^2_{\\alpha \\beta})\\) subject to restriction \\(\\sum_i (\\alpha \\beta)_{ij} = 0\\) for all j, the variance here is written as the proportion for convenience; it makes the expected mean squares simpler (other assumed \\(var((\\alpha \\beta)_{ij}= \\sigma^2_{\\alpha \\beta}\\)) \\(cov((\\alpha \\beta)_{ij},(\\alpha \\beta)_{i&#39;j&#39;}) = - \\frac{1}{a} \\sigma^2_{\\alpha \\beta}, i \\neq i&#39;\\) \\(\\epsilon_{ijk}\\sim indepN(0,\\sigma^2)\\) \\(\\beta_j, (\\alpha \\beta)_{ij}, \\epsilon_{ijk}\\) are pairwise independent Two-way mixed models are written in an “unrestricted” form, with no restrictions on the interaction effects \\((\\alpha \\beta)_{ij}\\), they are pairwise independent. Let \\(\\beta^*, (\\alpha \\beta)^*_{ij}\\) be the unrestricted random effects, and \\((\\bar{\\alpha \\beta})_{ij}^*\\) the means averaged over the fixed factor for each level of random factor B. \\[ \\beta_j = \\beta_j^* + (\\bar{\\alpha \\beta})_{ij}^* \\\\ (\\alpha \\beta)_{ij} = (\\alpha \\beta)_{ij}^* - (\\bar{\\alpha \\beta})_{ij}^* \\] Some consider the restricted model to be more general. but here we consider the restricted form. \\[ E(Y_{ijk}) = \\mu_{..} + \\alpha_i \\\\ var(Y_{ijk}) = \\sigma^2_\\beta + \\frac{a-1}{a} \\sigma^2_{\\alpha \\beta} + \\sigma^2 \\] Responses from the same random factor (B) level are correlated \\[ cov(Y_{ijk},Y_{ijk&#39;}) = E(Y_{ijk}Y_{ijk&#39;}) - E(Y_{ijk})E(Y_{ijk&#39;}) \\\\ = \\sigma^2_\\beta + \\frac{a-1}{a} \\sigma^2_{\\alpha \\beta} , k \\neq k&#39; \\] Similarly, \\[ cov(Y_{ijk},Y_{i&#39;jk&#39;}) = \\sigma^2_\\beta - \\frac{1}{a} \\sigma^2_{\\alpha\\ \\beta}, i \\neq i&#39; \\\\ cov(Y_{ijk},Y_{i&#39;j&#39;k&#39;}) = 0, j \\neq j&#39; \\] Hence, you can see that the only way you don’t have dependence in the Y is when they don’t share the same random effect. An advantage of the restricted mixed model is that 2 observations from the same random factor b level can be positively or negatively correlated. In the unrestricted model, they can only be positively correlated. Mean Square Fixed ANOVA (A, B Fixed) Random ANOVA (A,B random) Mixed ANVOA (A fixed, B random) MSA a - 1 \\(\\sigma ^2+ n b \\frac{\\sum\\alpha_i^2}{a-1}\\) \\(\\sigma^2 + nb\\sigma^ 2_ \\alpha +n \\sigma^ 2_{\\alpha \\beta}\\) MSB b-1 \\(\\sigma^2 + n a \\frac{\\sum\\beta ^2_j}{b-1}\\) \\(\\sigma^ 2 + na\\sigma^2_ \\beta +n \\sigma^ 2_{\\alpha \\beta}\\) MSAB ( a-1)(b-1) \\(\\sigma^2 + n \\frac{\\sum \\sum(\\alpha \\beta )^2_ {ij}} { ( a-1)(b-1)}\\) \\(\\sigma^2+n \\sigma^2_{\\alpha \\beta}\\) MSE (n-1)ab \\(\\sigma^2\\) \\(\\sigma^2\\) For fixed, random, and mixed models (balanced), the ANOVA table sums of squares calculations are identical. (also true for df and mean squares). The only difference is with the expected mean squares, thus the test statistics. In Random ANOVA, we test \\[ H_0: \\sigma^2 = 0 \\\\ H_a: \\sigma^2 &gt; 0 \\] by considering \\(F= \\frac{MSA}{MSAB} \\sim F_{a-1;(a-1)(b-1)}\\) The same test statistic is used for mixed models, but in that case we are testing null hypothesis that all of the \\(\\alpha_i = 0\\) The test statistic different for the same null hypothesis under the fixed effects model. Test for effects of Fixed ANOVA (A&amp;B fixed) Random ANOVA (A&amp;B random) Mixed ANOVA (A fixed, B random) Factor A \\(\\frac{MSA}{MSE}\\) \\(\\frac{MSA}{MSAB}\\) \\(\\frac{MSA}{MSAB}\\) Factor B \\(\\frac{MSB}{MSE}\\) \\(\\frac{MSB}{MSAB}\\) \\(\\frac{MSB}{MSE}\\) AB interactions \\(\\frac{MSAB}{MSE}\\) \\(\\frac{MSAB}{MSE}\\) \\(\\frac{MSAB}{MSE}\\) Estimation Of Variance Components In random and mixed effects models, we are interested in estimating the variance components Variance component \\(\\sigma^2_\\beta\\) in the mixed ANOVA. \\[ E(\\sigma^2_\\beta) = \\frac{E(MSB)-E(MSE)}{na} = \\frac{\\sigma^2 + na \\sigma^2_\\beta - \\sigma^2}{na} = \\sigma^2_\\beta \\] which can be estimated with \\[ \\hat{\\sigma}^2_\\beta = \\frac{MSB - MSE}{na} \\] Confidence intervals for variance components can be constructed (approximately) by using the Satterthwaite procedure or the MLS procedure (like the 1-way random effects) Estimation of Fixed Effects in Mixed Models \\[ \\hat{\\alpha}_i = \\bar{Y}_{i..} - \\bar{Y}_{...} \\\\ \\hat{\\mu}_{i.} = \\bar{Y}_{...} + (\\bar{Y}_{i..}- \\bar{Y}_{...}) = \\bar{Y}_{i..} \\\\ \\sigma^2(\\hat{\\alpha}_i) = \\frac{\\sigma^2 + n \\sigma^2_{\\alpha \\beta}}{bn} = \\frac{E(MSAB)}{bn} \\\\ s^2(\\hat{\\alpha}_i) = \\frac{MSAB}{bn} \\] Contrasts on the Fixed Effects \\[ L = \\sum c_i \\alpha_i \\\\ \\sum c_i = 0 \\\\ \\hat{L} = \\sum c_i \\hat{\\alpha}_i \\\\ \\sigma^2(\\hat{L}) = \\sum c^2_i \\sigma^2 (\\hat{\\alpha}_i) \\\\ s^2(\\hat{L}) = \\frac{MSAB}{bn} \\sum c^2_i \\] Confidence intervals and tests can be constructed as usual 21.1.5.2 Unbalanced For a mixed model with a = 2, b = 4 \\[ Y_{ijk} = \\mu_{..} + \\alpha_i + \\beta_j + (\\alpha \\beta)_{ij} + \\epsilon_{ijk} \\\\ var(\\beta_j)= \\sigma^2_\\beta \\\\ var((\\alpha \\beta)_{ij})= \\frac{2-1}{2}\\sigma^2_{\\alpha \\beta} = \\frac{\\sigma^2_{\\alpha \\beta}}{2} \\\\ var(\\epsilon_{ijk}) = \\sigma^2 \\\\ E(Y_{ijk}) = \\mu_{..} + \\alpha_i \\\\ var(Y_{ijk}) = \\sigma^2_{\\beta} + \\frac{\\sigma^2_{\\alpha \\beta}}{2} + \\sigma^2 \\\\ cov(Y_{ijk},Y_{ijk&#39;}) = \\sigma^2 + \\frac{\\sigma^2_{\\alpha \\beta}}{2}, k \\neq k&#39; \\\\ cov(Y_{ijk},Y_{i&#39;jk&#39;}) = \\sigma^2_{\\beta} - \\frac{\\sigma^2_{\\alpha \\beta}}{2}, i \\neq i&#39; \\\\ cov(Y_{ijk},Y_{i&#39;j&#39;k&#39;}) = 0, j \\neq j&#39; \\] assume \\[ \\mathbf{Y} \\sim N(\\mathbf{X}\\beta, M) \\] where \\(M\\) is block diagonal density function \\[ f(\\mathbf{Y}) = \\frac{1}{(2\\pi)^{N/2}|M|^{1/2}}exp(-\\frac{1}{2}\\mathbf{(Y - X \\beta)&#39; M^{-1}(Y-X\\beta)}) \\] if we knew the variance components, we could use GLS: \\[ \\hat{\\beta}_{GLS} = \\mathbf{(X&#39;M^{-1}X)^{-1}X&#39;M^{-1}Y} \\] but we usually don’t know the variance components \\(\\sigma^2, \\sigma^2_\\beta, \\sigma^2_{\\alpha \\beta}\\) that make up \\(M\\) Another way to get estimates is by Maximum likelihood estimation we try to maximize its log \\[ \\ln L = - \\frac{N}{2} \\ln (2\\pi) - \\frac{1}{2}\\ln|M| - \\frac{1}{2} \\mathbf{(Y-X \\beta)&#39;\\Sigma^{-1}(Y-X\\beta)} \\] "],["nonparametric-anova.html", "21.2 Nonparametric ANOVA", " 21.2 Nonparametric ANOVA 21.2.1 Kruskal-Wallis Generalization of independent samples Wilcoxon Rank sum test for 2 independent samples (like F-test of one-way ANOVA is a generalization to several independent samples of the two sample t-test) Consider the one-way case: We have \\(a\\ge2\\) treatments \\(n_i\\) is the sample size for the ith treatment \\(Y_{ij}\\) is the j-th observation from the ith treatment. we make no assumption of normality We only assume that observations on the ith treatment are a random sample from the continuous CDF \\(F_i\\), i = 1,..,n, and are mutually independent. \\[ H_0: F_1 = F_2 = ... = F_a \\\\ H_a: F_i &lt; F_j \\text{ for some } i \\neq j \\] or if distribution is from the location-scale family, \\(H_0: \\theta_1 = \\theta_2 = ... = \\theta_a\\)) Procedure Rank all \\(N = \\sum_{i=1}^a n_i\\) observations in ascending order. Let \\(r_{ij} = rank(Y_{ij})\\), note \\(\\sum_i \\sum_j r_{ij} = 1 + 2 .. + N = \\frac{N(N+1)}{2}\\) Calculate the rank sums and averages: \\[ r_{i.} = \\sum_{j=1}^{n_i} r_{ij} \\] and \\[ \\bar{r}_{i.} = \\frac{r_{i.}}{n_i}, i = 1,..,a \\] Calculate the test statistic on the ranks: \\[ \\chi_{KW}^2 = \\frac{SSTR}{\\frac{SSTO}{N-1}} \\] where \\(SSTR = \\sum n_i (\\bar{r}_{i.}- \\bar{r}_{..})^2\\) and \\(SSTO = \\sum \\sum (\\bar{r}_{ij}- \\bar{r}_{..})^2\\) FOr large \\(n_i\\) (\\(\\ge 5\\) observations) the Kruskal-Wallis statistic is approximated by a \\(\\chi^2_{a-1}\\) distribution when all the treatment means are equal. Hence, reject \\(H_0\\) if \\(\\chi^2_{KW} &gt; \\chi^2_{(1-\\alpha;a-1)}\\). If sample sizes are small, one can exhaustively work out all possible distinct ways of assigning N ranks to the observations from a treatments and calculate the value of the KW statistic in each case (\\(\\frac{N!}{n_1!..n_a!}\\) possible combinations). Under \\(H_0\\) all of these assignments are equally likely. 21.2.2 Friedman Test When the responses \\(Y_{ij} = 1,..,n, j = 1,..,r\\) in a randomized complete block design are not normally distributed (or do not have constant variance), a nonparametric test is more helpful. A distribution-free rank-based test for comparing the treatments in this setting is the Friedman test. Let \\(F_{ij}\\) be the CDF of random \\(Y_{ij}\\), corresponding to the observed value \\(y_{ij}\\) Under the null hypothesis, \\(F_{ij}\\) are identical for all treatments j separately for each block i. \\[ H_0: F_{i1} = F_{i2} = ... = F_{ir} \\text{ for all i} \\\\ H_a: F_{ij} &lt; F_{ij&#39;} \\text{ for some } j \\neq j&#39; \\text{ for all } i \\] For location parameter distributions, treatment effects can be tested: \\[ H_0: \\tau_1 = \\tau_2 = ... = \\tau_r \\\\ H_a: \\tau_j &gt; \\tau_{j&#39;} \\text{ for some } j \\neq j&#39; \\] Procedure Rank observations from the r treatments separately within each block (in ascending order; if ties, each tied observation is given the mean of ranks involved). Let the ranks be called \\(r_{ij}\\) Calculate the Friedman test statistic \\[ \\chi^2_F = \\frac{SSTR}{\\frac{SSTR + SSE}{n(r-1)}} \\] where \\[ SSTR = n \\sum (\\bar{r}_{.j}-\\bar{r}_{..})^2 \\\\ SSE = \\sum \\sum (r_{ij} - \\bar{r}_{.j})^2 \\\\ \\bar{r}_{.j} = \\frac{\\sum_i r_{ij}}{n}\\\\ \\bar{r}_{..} = \\frac{r+1}{2} \\] If there is no ties, it can be rewritten as \\[ \\chi^2_{F} = [\\frac{12}{nr(n+1)}\\sum_j r_{.j}^2] - 3n(r+1) \\] with large number of blocks, \\(\\chi^2_F\\) is approximately \\(\\chi^2_{r-1}\\) under \\(H_0\\). Hence, we reject \\(H_0\\) if \\(\\chi^2_F &gt; \\chi^2_{(1-\\alpha;r-1)}\\) The exact null distribution for \\(\\chi^2_F\\) can be derived since there are r! possible ways of assigning ranks 1,2,…,r to the r observations within each block. There are n blocks and thus \\((r!)^n\\) possible assignments to the ranks, which are equally likely when \\(H_0\\) is true. "],["sample-size-planning-for-anova.html", "21.3 Sample Size Planning for ANOVA", " 21.3 Sample Size Planning for ANOVA 21.3.1 Balanced Designs 21.3.1.1 Single Factor Studies 21.3.1.1.1 Fixed cell means \\[ P(F&gt;f_{(1-\\alpha;a-1,N-a)}|\\phi) = 1 - \\beta \\] where \\(\\phi\\) is the noncentrality parameter (measures how unequal the treatment means \\(\\mu_i\\) are) \\[ \\phi = \\frac{1}{\\sigma}\\sqrt{\\frac{n}{a}\\sum_i (\\mu_i - \\mu_.)^2} , (n_i \\equiv n) \\] and \\[ \\mu_. = \\frac{\\sum \\mu_i}{a} \\] To decide on the power probabilities we use the noncetral F distribution. We could use the power table directly when effects are fixed and design is balanced by using minimum range of factor level means for your desired differences \\[ \\Delta = \\max(\\mu_i) - \\min(\\mu_i) \\] Hence, we need \\(\\alpha\\) level \\(\\Delta\\) \\(\\sigma\\) \\(\\beta\\) Notes: When \\(\\Delta/\\sigma\\) is small greatly affects sample size, but if \\(\\Delta/\\sigma\\) is large. Reducing \\(\\alpha\\) or \\(\\beta\\) increases the required sample sizes. Error in estimating \\(\\sigma\\) can make a large difference. 21.3.1.2 Multi-factor Studies The same noncentral F tables can be used here For two-factor fixed effect model Test for interactions: \\[ \\phi = \\frac{1}{\\sigma} \\sqrt{\\frac{n \\sum \\sum (\\alpha \\beta_{ij})^2}{(a-1)(b-1)+1}} = \\frac{1}{\\sigma} \\sqrt{\\frac{n \\sum \\sum (\\mu_{ij}- \\mu_{i.} - \\mu_{.j} + \\mu_{..})^2}{(a-1)(b-1)+1}} \\\\ \\upsilon_1 = (a-1)(b-1) \\\\ \\upsilon_2 = ab(n-1) \\] Test for Factor A main effects: \\[ \\phi = \\frac{1}{\\sigma} \\sqrt{\\frac{nb \\sum \\alpha_i^2}{a}} = \\frac{1}{\\sigma}\\sqrt{\\frac{nb \\sum (\\mu_{i.}- \\mu_{..})^2}{a}} \\\\ \\upsilon_1 = a-1 \\\\ \\upsilon_2 = ab(n-1) \\] Test for Factor B main effects: \\[ \\phi = \\frac{1}{\\sigma} \\sqrt{\\frac{na \\sum \\beta_j^2}{b}} = \\frac{1}{\\sigma}\\sqrt{\\frac{na \\sum (\\mu_{.j}- \\mu_{..})^2}{b}} \\\\ \\upsilon_1 = b-1 \\\\ \\upsilon_2 = ab(n-1) \\] Procedure: Specify the minimu range of Factor A means Obtain sample sizes with r = a. The resulting sample size is bn, from which n can be obtained. Repeat the first 2 steps for Factor B minimum range. Choose the greater number of sample size between A and B. 21.3.2 Randomized Block Experiments Analogous to completely randomized designs . The power of the F-test for treatment effects for randomized block design uses the same non-centrality parameter as completely randomized design: \\[ \\phi = \\frac{1}{\\sigma} \\sqrt{\\frac{n}{r} \\sum (\\mu_i - \\mu_.)^2} \\] However, the power level is different from the randomized block design because error variance \\(\\sigma^2\\) is different df(MSE) is different. "],["randomized-block-designs.html", "21.4 Randomized Block Designs", " 21.4 Randomized Block Designs To improve the precision of treatment comparisons, we can reduce variability among the experimental units. We can group experimental units into blocks so that each block contains relatively homogeneous units. Within each block, random assignment treatments to units (separate random assignment for each block) The number of units per block is a multiple of the number of factor combinations. Commonly, use each treatment once in each block. Benefits of Blocking Reduction in variability of estimators for treatment means Improved power for t-tests and F-tests Narrower confidence intervals Smaller MSE Compare treatments under different conditions (related to different blocks). Loss from Blocking (little to lose) If you don’t do blocking well, you waste df on negligible block effects that could have been used to estimate \\(\\sigma^2\\) hence, the df for t-tests and denominator df for F-tests will be reduced without reducing MSE and small loss of power for both tests. Consider \\[ Y_{ij} = \\mu_{..} + \\rho_i + \\tau_j + \\epsilon_{ij} \\\\ i = 1,2,...,n \\\\ j = 1,2,..,r \\] where \\(\\mu_{..}\\): overall mean response, averaging across all blocks and treatments \\(\\rho_i\\): block effect, average difference in response for i-th block (\\(\\sum \\rho_i =0\\)) \\(\\tau_j\\) treatment effect, average across blocks (\\(\\sum \\tau_j = 0\\)) \\(\\epsilon_{ij} \\sim iid N(0,\\sigma^2)\\): random experimental error. Here, we assume that the block and treatment effects are additive. The difference in average response for any pair of treatments i the same within each block \\[ (\\mu_{..} + \\rho_i + \\tau_j) - (\\mu_{..} + \\rho_i + \\tau_j&#39;) = \\tau_j - \\tau_j&#39; \\] for all \\(i=1,..,n\\) blocks \\[ \\hat{\\mu} = \\bar{Y}_{..} \\\\ \\hat{\\rho}_i = \\bar{Y}_{i.} - \\bar{Y}_{..} \\\\ \\hat{\\tau}_j = \\bar{Y}_{.j} - \\bar{Y}_{..} \\] Hence, \\[ \\hat{Y}_{ij} = \\bar{Y}_{..} + (\\bar{Y}_{i.} - \\bar{Y}_{..}) + (\\bar{Y}_{.j}- \\bar{Y}_{..}) = \\bar{Y}_{i.} + \\bar{Y}_{.j} - \\bar{Y}_{..} \\\\ e_{ij} = Y_{ij} - \\hat{Y}_{ij} = Y_{ij}- \\bar{Y}_{i.} - \\bar{Y}_{.j} + \\bar{Y}_{..} \\] ANOVA table Source of Variation SS df Fixed Treatments  E(MS) Random Treatments  E(MS) Blocks \\(r \\sum_i(\\bar{Y}_{i.}-\\bar{Y}_{..})^2\\) n - 1 \\(\\sigma^2 +r \\frac{\\sum \\rho^2_i}{n-1}\\) \\(\\sigma^2 + r \\frac{\\sum \\rho^2_i}{n-1}\\) Treatments \\(n\\sum_ j (\\bar{Y} _ {.j}-\\bar{ Y}_{..})^2\\) r - 1 \\(\\sigma^2 + n \\frac{\\sum \\tau^2_j}{r-1}\\) \\(\\sigma^2 + n \\sigma^2_\\tau\\) Error \\(\\sum_i \\sum _j ( Y_{ ij } - \\bar { Y}_{i.} - \\bar{Y}_{.j} + \\bar{ Y}_{..})^2\\) (n-1)(r-1) \\(\\sigma^2\\) \\(\\sigma^2\\) Total SSTO nr-1 F-tests \\[ \\begin{aligned} H_0: \\tau_1 = \\tau_2 = ... = \\tau_r = 0 &amp;&amp; \\text{Fixed Treatment Effects} \\\\ H_a: \\text{not all } \\tau_j = 0 \\\\ \\\\ H_0: \\sigma^2_{\\tau} = 0 &amp;&amp; \\text{Random Treatment Effects} \\\\ H_a: \\sigma^2_{\\tau} \\neq 0 \\end{aligned} \\] In both cases \\(F = \\frac{MSTR}{MSE}\\), reject \\(H_0\\) if \\(F &gt; f_{(1-\\alpha; r-1,(n-1)(r-1))}\\) we don’t use F-test to compare blocks, because We have a priori that blocs are different Randomization is done “within” block. To estimate the efficiency that was gained by blocking (relative to completely randomized design). \\[ \\begin{aligned} \\hat{\\sigma}^2_{CR} &amp;= \\frac{(n-1)MSBL + n(r-1)MSE}{nr-1} \\\\ \\hat{\\sigma}^2_{RB} &amp;= MSE \\\\ \\frac{\\hat{\\sigma}^2_{CR}}{\\hat{\\sigma}^2_{RB}} &amp;= \\text{above 1} \\\\ \\end{aligned} \\] then a completely randomized experiment would \\[ (\\frac{\\hat{\\sigma}^2_{CR}}{\\hat{\\sigma}^2_{RB}}-1)\\%% \\] more observations than the randomized block design to get the same MSE If batches are randomly selected then they are random effects. That is , if the experiment was repeated, a new sample of i batches would be selected,d yielding new values for \\(\\rho_1, \\rho_2,...,\\rho_i\\) then. \\[ \\rho_1, \\rho_2,...,\\rho_j \\sim N(0,\\sigma^2_\\rho) \\] Then, \\[ Y_{ij} = \\mu_{..} + \\rho_i + \\tau_j + \\epsilon_{ij} \\] where \\(\\mu_{..}\\) fixed \\(\\rho_i\\): random iid \\(N(0,\\sigma^2_p)\\) \\(\\tau_j\\) fixed (or random) \\(\\sum \\tau_j = 0\\) \\(\\epsilon_{ij} \\sim iid N(0,\\sigma^2)\\) **Fixed Treatment&amp;&amp; \\[ E(Y_{ij}) = \\mu_{..} + \\tau_j \\\\ var(Y_{ij}) = \\sigma^2_{\\rho} + \\sigma^2 \\\\ cov(Y_{ij},Y_{ij&#39;}) = \\sigma^2 , j \\neq j&#39; \\text{ treatments within same block are correlated} \\\\ cov(Y_{ij},Y_{i&#39;j&#39;}) = 0 , i \\neq i&#39; , j \\neq j&#39; \\] Correlation between 2 observations in the same block \\[ \\frac{\\sigma^2_{\\rho}}{\\sigma^2 + \\sigma^2_{\\rho}} \\] The expected MS for the additive fixed treatment effect, random block effect is Source SS E(MS) Blocks SSBL \\(\\sigma^2 + r \\sigma^2_\\rho\\) Treatment SSTR \\(\\sigma^2 + n \\frac{\\sum \\tau^2_j}{r-1}\\) Error SSE \\(\\sigma^2\\) Interactions and Blocks without replications within each block for each treatment, we can’t consider interaction between block and treatment when the block effect is fixed. Hence, only in the random block effect, we have \\[ Y_{ij} = \\mu_{..} + \\rho_i + \\tau_j + (\\rho \\tau)_{ij} + \\epsilon_{ij} \\] where \\(\\mu_{..}\\) constant \\(\\rho_i \\sim idd N(0,\\sigma^2_{\\rho})\\) random \\(\\tau_j\\) fixed (\\(\\sum \\tau_j = 0\\)) \\((\\rho \\tau)_{ij} \\sim N(0,\\frac{r-1}{r}\\sigma^2_{\\rho \\tau})\\) with \\(\\sum_j (\\rho \\tau)_{ij}=0\\) for all i \\(cov((\\rho \\tau)_{ij},(\\rho \\tau)_{ij&#39;})= -\\frac{1}{r} \\sigma^2_{\\rho \\tau}\\) for \\(j \\neq j&#39;\\) \\(\\epsilon_{ij} \\sim iid N(0,\\sigma^2)\\) random Note: a special case of mixed 2-factor model with 1 observation per “cell” \\[ E(Y_{ij}) = \\mu_{..} + \\tau_j \\\\ var(Y_{ij}) = \\sigma^2_\\rho + \\frac{r-1}{r} \\sigma^2_{\\rho \\tau} + \\sigma^2 \\\\ cov(Y_{ij},Y_{ij&#39;}) = \\sigma^2_\\rho - \\frac{1}{r} \\sigma^2_{\\rho \\tau}, j \\neq j&#39; \\text{ obs from the same block are correlated} \\\\ cov(Y_{ij},Y_{i&#39;j&#39;}) = 0, i \\neq i&#39;, j \\neq j&#39; \\text{ obs from different blocks are independent} \\] The sum of squares and degrees of freedom for interaction model are the same as those for the additive model. The difference exists only with the expected mean squares Source SS df E(MS) Blocks SSBL n-1 \\(\\sigma^2 + r \\sigma^2_\\rho\\) Treatment SSTR r -1 \\(\\sigma^2 + \\sigma ^2_{\\rho \\tau} + n \\frac{\\sum \\tau_j^2}{r-1}\\) Error SSE (n-1)(r-1) \\(\\sigma^2 + \\sigma ^2_{\\rho \\tau}\\) No exact test is possible for block effects when interaction is present (Not important if blocks are used primarily to reduce experimental error variability) \\(E(MSE) = \\sigma^2 + \\sigma^2_{\\rho \\tau}\\) the error term variance and interaction variance \\(\\sigma^2_{\\rho \\tau}\\). We can’t estimate these components separately with this model. The two are confounded. If more than 1 observation per treatment block combination, one can consider interaction with fixed block effects, which is called generalized randomized block designs (multifactor analysis). 21.4.1 Tukey Test of Additivity (Tukey’s 1 df test for additivity) formal test of interaction effects between blocks and treatments for a randomized block design. can also considered for testing additivity in 2-way analyses when there is only one observation per cell. we consider a less restricted interaction term \\[ (\\rho \\tau)_{ij} = D\\rho_i \\tau_j \\text{(D: Constant)} \\] So, \\[ Y_{ij} = \\mu_{..} + \\rho_i + \\tau_j + D\\rho_i \\tau_j + \\epsilon_{ij} \\] the least square estimate or MLE for D \\[ \\hat{D} = \\frac{\\sum_i \\sum_j \\rho_i \\tau_j Y_{ij}}{\\sum_i \\rho_i^2 \\sum_j \\tau^2_j} \\] replacing the parameters by their estimates \\[ \\hat{D} = \\frac{\\sum_i \\sum_j (\\bar{Y}_{i.}- \\bar{Y}_{..})(\\bar{Y}_{.j}- \\bar{Y}_{..})Y_{ij}}{\\sum_i (\\bar{Y}_{i.}- \\bar{Y}_{..})^2 \\sum_j(\\bar{Y}_{.j}- \\bar{Y}_{..})^2} \\] Thus, the interaction sum of squares \\[ SSint = \\sum_i \\sum_j \\hat{D}^2(\\bar{Y}_{i.}- \\bar{Y}_{..})^2(\\bar{Y}_{.j}- \\bar{Y}_{..})^2 \\] The ANOVA decomposition \\[ SSTO = SSBL + SSTR + SSint + SSRem \\] where \\(SSRem\\): remainder sum of squares \\[ SSRem = SSTO - SSBL - SSTR - SSint \\] if D = 0 (i.e., no interactions of the type \\(D \\rho_i \\tau_j\\)). SSint and SSRem are independent \\(\\chi^2_{1,rn-r-n}\\). If D = 0, \\[ F = \\frac{SSint/1}{SSRem/(rn-r-n)} \\sim f_{(1-\\alpha;rn-r-n)} \\] if \\[ H_0: D = 0 \\text{ no interaction present} \\\\ H_a: D \\neq 0 \\text{ interaction of form $D \\rho_i \\tau_j$ present} \\] we reject \\(H_0\\) if \\(F &gt; f_{(1-\\alpha;1,nr-r-n)}\\) "],["nested-designs.html", "21.5 Nested Designs", " 21.5 Nested Designs Let \\(\\mu_{ij}\\) be the mean response when factor A is at the i-th level and factor B is at the j-th level. If the factors are crossed, the jth level of B is the same for all levels of A. If factor B is nested within A, the j-th level of B when A is at level 1 has nothing in common with the j-th level of B when A is at level 2. Factors that can’t be manipulated are designated as classification factors, as opposed to experimental factors (i.e., you assign to the experimental units). 21.5.1 Two-Factor Nested Designs Consider B is nested within A. both factors are fixed All treatment means are equally important. Mean responses \\[ \\mu_{i.} = \\sum_j \\mu_{ij}/b \\] Main effect factor A \\[ \\alpha_i = \\mu_{i.} - \\mu_{..} \\] where \\(\\mu_{..} = \\frac{\\mu_{ij}}{ab} = \\frac{\\sum_i \\mu_{i.}}{a}\\) and \\(\\sum_i \\alpha_i = 0\\) Individual effects of B is denoted as \\(\\beta_{j(i)}\\) where \\(j(i)\\) indicates the j-th level of factor B is nested within the it-h level of factor A \\[ \\beta_{j(i)} = \\mu_{ij} - \\mu_{i.} \\\\ = \\mu_{ij} - \\alpha_i - \\mu_{..} \\\\ \\sum_j \\beta_{j(i)}=0 , i = 1,...,a \\] \\(\\beta_{j(i)}\\) is the specific effect of the jth level of factor B nested within the ith level of factor A. Hence, \\[ \\mu_{ij} \\equiv \\mu_{..} + \\alpha_i + \\beta_{j(i)} \\equiv \\mu_{..} + (\\mu_{i.} - \\mu_{..}) + (\\mu_{ij} - \\mu_{i.}) \\] Model \\[ Y_{ijk} = \\mu_{..} + \\alpha_i + \\beta_{j(i)} + \\epsilon_{ijk} \\] where \\(Y_{ijk}\\) response for the kth treatment when factor A is at the i-th level and factor B is at hte jth level (i = 1,..,a; j = 1,..,b; k = 1,..n) \\(\\mu_{..}\\) constant \\(\\alpha_i\\) constants subject to restriction \\(\\sum_i \\alpha_i = 0\\) \\(\\beta_{j(i)}\\) constants subject to restriction \\(\\sum_j \\beta_{j(i)} = 0\\) for all i \\(\\epsilon_{ijk} \\sim iid N(0,\\sigma^2)\\) \\[ E(Y_{ijk}) = \\mu_{..} + \\alpha_i + \\beta_{j(i)} \\\\ var(Y_{ijk}) = \\sigma^2 \\] there is no interaction term in a nested model ANOVA for Two-Factor Nested Designs Least Squares and MLE estimates Parameter Estimator \\(\\mu_{..}\\) \\(\\bar{Y}_{...}\\) \\(\\alpha_i\\) \\(\\bar{Y}_{i..} - \\bar{Y}_{...}\\) \\(\\beta_{j(i)}\\) \\(\\bar{Y}_{ij.} - \\bar{Y}_{i..}\\) \\(\\hat{Y}_{ijk}\\) \\(\\bar{Y}_{ij.}\\) residual \\(e_{ijk} = Y_{ijk} - \\bar{Y}_{ijk}\\) \\[ \\begin{aligned} SSTO &amp;= SSA + SSB(A) + SSE \\\\ \\sum_i \\sum_j \\sum_k (Y_{ijk}- \\bar{Y}_{...})^2 &amp;= bn \\sum_i (\\bar{Y}_{i..}- \\bar{Y}_{...})^2 + n \\sum_i \\sum_j (\\bar{Y}_{ij.}- \\bar{Y}_{i..})^2 + \\sum_i \\sum_j \\sum_k (Y_{ijk} -\\bar{Y}_{ij.})^2 \\end{aligned} \\] ANOVA Table Source of Variation SS df MS E(MS) Factor A SSA a-1 MSA \\(\\sigma^2 + bn \\frac{\\sum \\alpha_i^2}{a-1}\\) Factor B SSB(A) a(b-1) MSB(A) \\(\\sigma^2 + n \\frac{\\ | | | | um \\sum e ta_{i)}^ 2}{a(b-1)}\\) Error SSE ab(n-1) MSE \\(\\sigma^2\\) Total SSTO abn -1 Tests For Factor Effects \\[ H_0: \\text{ All } \\alpha_i =0 \\\\ H_a: \\text{ not all } \\alpha_i = 0 \\] \\(F = \\frac{MSA}{MSE} \\sim f_{(1-\\alpha;a-1,(n-1)ab)}\\) reject if \\(F &gt; f\\) \\[ H_0: \\text{ All } \\beta_{j(i)} =0 \\\\ H_a: \\text{ not all } \\beta_{j(i)} = 0 \\] \\(F = \\frac{MSB(A)}{MSE} \\sim f_{(1-\\alpha;a(b-1),(n-1)ab)}\\) reject \\(F&gt;f\\) Testing Factor Effect Contrasts \\(L = \\sum c_i \\mu_i\\) where \\(\\sum c_i =0\\) \\[ \\hat{L} = \\sum c_i \\bar{Y}_{i..} \\\\ \\hat{L} \\pm t_{(1-\\alpha/2;df)}s(\\hat{L}) \\] where \\(s^2(\\hat{L}) = \\sum c_i^2 s^2(\\bar{Y}_{i..})\\), where \\(s^2(\\bar{Y}_{i..}) = \\frac{MSE}{bn}, df = ab(n-1)\\) Testing Treatment Means \\(L = \\sum c_i \\mu_{.j}\\) estimated by \\(\\hat{L} = \\sum c_i \\bar{Y}_{ij}\\) with confidence limits: \\[ \\hat{L} \\pm t_{(1-\\alpha/2;(n-1)ab)}s(\\hat{L}) \\] where \\[ s^2(\\hat{L}) = \\frac{MSE}{n}\\sum c^2_i \\] Unbalanced Nested Two-Factor Designs If there are different number of levels of factor B for different levels of factor A, then the design is called unbalanced The model \\[ Y_{ijk} = \\mu_{..} + \\alpha_i + \\beta_{j(i)} + \\epsilon_{ijk} \\\\ i = 1,2;j =1,..,b_i;k=1,..,n_{ij} \\\\ b_1 = 3, b_2= 2, n_{11} = n_{13} =2, n_{12}=1,n_{21} = n_{22} = 2\\\\ \\sum_{i=1}^2 \\alpha_i =0 \\\\ \\sum_{j=1}^3 \\beta_{j(1)} = 0 \\\\ \\sum_{j=1}^2 \\beta_{j(2)}=0 \\] where \\(\\alpha_1,\\beta_{1(1)}, \\beta_{2(1)}, \\beta_{1(2)}\\) are parameters. And constraints: \\(\\alpha_2 = - \\alpha_1, \\beta_{3(1)}= - \\beta_{1(1)}-\\beta_{2(1)}, \\beta_{2(2)}=-\\beta_{1(2)}\\) 4 indicator variables \\[\\begin{equation} X_1 = \\begin{cases} 1&amp;\\text{if obs from school 1}\\\\ -1&amp;\\text{if obs from school 2}\\\\ \\end{cases} \\end{equation}\\] \\[\\begin{equation} X_2 = \\begin{cases} 1&amp;\\text{if obs from instructor 1 in school 1}\\\\ -1&amp;\\text{if obs from instructor 3 in school 1}\\\\ 0&amp;\\text{otherwise}\\\\ \\end{cases} \\end{equation}\\] \\[\\begin{equation} X_3 = \\begin{cases} 1&amp;\\text{if obs from instructor 2 in school 1}\\\\ -1&amp;\\text{if obs from instructor 3 in school 1}\\\\ 0&amp;\\text{otherwise}\\\\ \\end{cases} \\end{equation}\\] \\[\\begin{equation} X_4 = \\begin{cases} 1&amp;\\text{if obs from instructor 1 in school 1}\\\\ -1&amp;\\text{if obs from instructor 2 in school 1}\\\\ 0&amp;\\text{otherwise}\\\\ \\end{cases} \\end{equation}\\] Regression Full Model \\[ Y_{ijk} = \\mu_{..} + \\alpha_1 X_{ijk1} + \\beta_{1(1)}X_{ijk2} + \\beta_{2(1)}X_{ijk3} + \\beta_{1(2)}X_{ijk4} + \\epsilon_{ijk} \\] Random Factor Effects If \\[ \\alpha_1 \\sim iid N(0,\\sigma^2_\\alpha) \\\\ \\beta_{j(i)} \\sim iid N(0,\\sigma^2_\\beta) \\] Mean Square Expected Mean Squares A fixed, B random Expected Mean Squares A random, B random MSA \\(\\sigma^ 2 + n \\sigma^2_\\beta + bn \\frac{\\sum \\alpha_i^2}{a-1}\\) \\(\\sigma^2 + bn \\sigma^2_{\\alpha} + n \\sigma^2_\\beta\\) MSB(A) \\(\\sigma^2 + n \\sigma^2_\\beta\\) \\(\\sigma^2 + n \\sigma^2_\\beta\\) MSE \\(\\sigma^2\\) \\(\\sigma^2\\) Test Statstics Factor A \\(\\frac{MSA}{MSB(A)}\\) \\(\\frac{MSA}{MSB(A)}\\) Factor B(A) \\(\\frac{MSB(A)}{MSE}\\) \\(\\frac{MSB(A)}{MSE}\\) Another way to increase the precision of treatment comparisons by reducing variability is to use regression models to adjust for differences among experimental units (also known as analysis of covariance). "],["single-factor-covariance-model.html", "21.6 Single Factor Covariance Model", " 21.6 Single Factor Covariance Model \\[ Y_{ij} = \\mu_{.} + \\tau_i + \\gamma(X_{ij} - \\bar{X}_{..}) + \\epsilon_{ij} \\] for \\(i = 1,...,r;j=1,..,n_i\\) where \\(\\mu_.\\) overall mean \\(\\tau_i\\): fixed treatment effects (\\(\\sum \\tau_i =0\\)) \\(\\gamma\\): fixed regression coefficient effect between X and Y \\(X_{ij}\\) covariate (not random) \\(\\epsilon_{ij} \\sim iid N(0,\\sigma^2)\\): random errors If we just use \\(\\gamma X_{ij}\\) as the regression term (rather than \\(\\gamma(X_{ij}-\\bar{X}_{..})\\)), then \\(\\mu_.\\) is no longer the overall mean; thus we need to centered mean. \\[ E(Y_{ij}) = \\mu_. + \\tau_i + \\gamma(X_{ij}-\\bar{X}_{..}) \\\\ var(Y_{ij}) = \\sigma^2 \\] \\(Y_{ij} \\sim N(\\mu_{ij},\\sigma^2)\\), where \\[ \\mu_{ij} = \\mu_. + \\tau_i + \\gamma(X_{ij} - \\bar{X}_{..}) \\\\ \\sum \\tau_i =0 \\] Thus, the mean response (\\(\\mu_{ij}\\)) is a regression line with intercept \\(\\mu_. + \\tau_i\\) and slope \\(\\gamma\\) for each treatment i. Assumption: All treatment regression lines have the same slope when treatment interact with covariate X (non-parallel slopes), covariance analysis is not appropriate. in which case we should use separate regression lines. More complicated regression features (e.g., quadratic, cubic) or additional covariates e.g., \\[ Y_{ij} = \\mu_. + \\tau_i + \\gamma_1(X_{ij1}-\\bar{X}_{..2}) + \\gamma_2(X_{ij2}-\\bar{X}_{..2}) + \\epsilon_{ij} \\] Regression Formulation We can use indicator variables for treatments \\[ l_1 = \\begin{cases} 1 &amp; \\text{if case is from treatment 1}\\\\ -1 &amp; \\text{if case is from treatment r}\\\\ 0 &amp;\\text{otherwise}\\\\ \\end{cases} . \\\\ . \\\\ . \\\\ l_{r-1} = \\begin{cases} 1 &amp; \\text{if case is from treatment r-1}\\\\ -1 &amp; \\text{if case is from treatment r}\\\\ 0 &amp;\\text{otherwise}\\\\ \\end{cases} \\] Let \\(x_{ij} = X_{ij}- \\bar{X}_{..}\\). the regression model is \\[ Y_{ij} = \\mu_. + \\tau_1l_{ij,1} + .. + \\tau_{r-1}l_{ij,r-1} + \\gamma x_{ij}+\\epsilon_{ij} \\] where \\(I_{ij,1}\\) is the indicator variable \\(l_1\\) for the j-th case from treatment i. The treatment effect \\(\\tau_1,..\\tau_{r-1}\\) are just regression coefficients for the indicator variables. We could use the same diagnostic tools for this case. Inference Treatment effects \\[ H_0: \\tau_1 = \\tau_2 = ...= 0 \\\\ H_a: \\text{not all } \\tau_i =0 \\] \\[ \\text{Full Model}: Y_{ij} = \\mu_. + \\tau_i + \\gamma X_{ij} +\\epsilon_{ij} \\\\ \\text{Reduced Model}: Y_{ij} = \\mu_. + \\gamma X_{ij} + \\epsilon_{ij} \\] \\[ F = \\frac{SSE(R) - SSE(F)}{(N-2)-(N-(r+1))} / \\frac{SSE(F)}{N-(r+1)} \\sim F_{(r-1,N-(r+1))} \\] If we are interested in comparisons of treatment effects. For example, r - 3. We estimate \\(\\tau_1,\\tau_2, \\tau_3 = -\\tau_1 - \\tau_2\\) Comparison Estimate Variance of Estimator \\(\\tau_1 - \\tau_2\\) \\(\\hat{\\tau}_1 - \\hat{\\tau}_2\\) \\(var(\\hat {\\tau}_1) + var(\\hat{\\tau}_2) - 2cov(\\hat{ \\tau}_1\\hat{\\tau}_2)\\) \\(\\tau_1 - \\tau_3\\) \\(2 \\hat{\\tau}_1 + \\hat{\\tau}_2\\) \\(4var(\\hat {\\tau}_1) + var(\\hat{\\tau}_2) - 4cov(\\hat{ \\tau}_1\\hat{\\tau}_2)\\) \\(\\tau_2 - \\tau_3\\) \\(\\hat{\\tau}_1 + 2 \\hat{\\tau}_2\\) \\(var(\\hat{\\tau}_1) + 4var(\\hat{\\tau}_2) - 4cov(\\hat{\\tau}_1\\hat{\\tau}_2)\\) Testing for Parallel Slopes Example: r = 3 \\[ Y_{ij} = \\mu_{.} + \\tau_1 I_{ij,1} + \\tau_2 I_{ij,2} + \\gamma X_{ij} + \\beta_1 I_{ij,1}X_{ij} + \\beta_2 I_{ij,2}X_{ij} + \\epsilon_{ij} \\] where \\(\\beta_1,\\beta_2\\): interaction coefficients. \\[ H_0: \\beta_1 = \\beta_2 = 0 \\\\ H_a: \\text{at least one} \\beta \\neq 0 \\] If we can’t reject \\(H_0\\) using F-test then we have evidence that the slopes are parallel Adjusted Means The means in response after adjusting for the covariate effect \\[ Y_{i.}(adj) = \\bar{Y}_{i.} - \\hat{\\gamma}(\\bar{X}_{i.} - \\bar{X}_{..}) \\] "],["multivariate-methods.html", "Chapter 22 Multivariate Methods", " Chapter 22 Multivariate Methods \\(y_1,...,y_p\\) are possibly correlated random variables with means \\(\\mu_1,...,\\mu_p\\) \\[ \\mathbf{y} = \\left( \\begin{array} {c} y_1 \\\\ . \\\\ y_p \\\\ \\end{array} \\right) \\] \\[ E(\\mathbf{y}) = \\left( \\begin{array} {c} \\mu_1 \\\\ . \\\\ \\mu_p \\\\ \\end{array} \\right) \\] Let \\(\\sigma_{ij} = cov(y_i, y_j)\\) for \\(i,j = 1,…,p\\) \\[ \\mathbf{\\Sigma} = (\\sigma_{ij}) = \\left( \\begin{array} {cccc} \\sigma_{11} &amp; \\sigma_{22} &amp; ... &amp; \\sigma_{1p} \\\\ \\sigma_{21} &amp; \\sigma_{22} &amp; ... &amp; \\sigma_{2p} \\\\ . &amp; . &amp; . &amp; . \\\\ \\sigma_{p1} &amp; \\sigma_{p2} &amp; ... &amp; \\sigma_{pp} \\end{array} \\right) \\] where \\(\\mathbf{\\Sigma}\\) (symmetric) is the variance-covariance or dispersion matrix Let \\(\\mathbf{u}_{p \\times 1}\\) and \\(\\mathbf{v}_{q \\times 1}\\) be random vectors with means \\(\\mu_u\\) and \\(\\mu_v\\) . Then \\[ \\mathbf{\\Sigma}_{uv} = cov(\\mathbf{u,v}) = E[(\\mathbf{u} - \\mu_u)(\\mathbf{v} - \\mu_v)&#39;] \\] in which \\(\\mathbf{\\Sigma}_{uv} \\neq \\mathbf{\\Sigma}_{vu}\\) and \\(\\mathbf{\\Sigma}_{uv} = \\mathbf{\\Sigma}_{vu}&#39;\\) Properties of Covariance Matrices Symmetric \\(\\mathbf{\\Sigma}&#39; = \\mathbf{\\Sigma}\\) Non-negative definite \\(\\mathbf{a&#39;\\Sigma a} \\ge 0\\) for any \\(\\mathbf{a} \\in R^p\\), which is equivalent to eigenvalues of \\(\\mathbf{\\Sigma}\\), \\(\\lambda_1 \\ge \\lambda_2 \\ge ... \\ge \\lambda_p \\ge 0\\) \\(|\\mathbf{\\Sigma}| = \\lambda_1 \\lambda_2 ... \\lambda_p \\ge 0\\) (generalized variance) (the bigger this number is, the more variation there is \\(trace(\\mathbf{\\Sigma}) = tr(\\mathbf{\\Sigma}) = \\lambda_1 + ... + \\lambda_p = \\sigma_{11} + ... + \\sigma_{pp} =\\) sum of variance (total variance) Note: \\(\\mathbf{\\Sigma}\\) is typically required to be positive definite, which means all eigenvalues are positive, and \\(\\mathbf{\\Sigma}\\) has an inverse \\(\\mathbf{\\Sigma}^{-1}\\) such that \\(\\mathbf{\\Sigma}^{-1}\\mathbf{\\Sigma} = \\mathbf{I}_{p \\times p} = \\mathbf{\\Sigma \\Sigma}^{-1}\\) Correlation Matrices \\[ \\rho_{ij} = \\frac{\\sigma_{ij}}{\\sqrt{\\sigma_{ii} \\sigma_{jj}}} \\] \\[ \\mathbf{R} = \\left( \\begin{array} {cccc} \\rho_{11} &amp; \\rho_{12} &amp; ... &amp; \\rho_{1p} \\\\ \\rho_{21} &amp; \\rho_{22} &amp; ... &amp; \\rho_{2p} \\\\ . &amp; . &amp; . &amp;. \\\\ \\rho_{p1} &amp; \\rho_{p2} &amp; ... &amp; \\rho_{pp} \\\\ \\end{array} \\right) \\] where \\(\\rho_{ij}\\) is the correlation, and \\(\\rho_{ii} = 1\\) for all i Alternatively, \\[ \\mathbf{R} = [diag(\\mathbf{\\Sigma})]^{-1/2}\\mathbf{\\Sigma}[diag(\\mathbf{\\Sigma})]^{-1/2} \\] where \\(diag(\\mathbf{\\Sigma})\\) is the matrix which has the \\(\\sigma_{ii}\\)’s on the diagonal and 0’s elsewhere and \\(\\mathbf{A}^{1/2}\\) (the square root of a symmetric matrix) is a symmetric matrix such as \\(\\mathbf{A} = \\mathbf{A}^{1/2}\\mathbf{A}^{1/2}\\) Equalities Let \\(\\mathbf{x}\\) and \\(\\mathbf{y}\\) be random vectors with means \\(\\mu_x\\) and \\(\\mu_y\\) and variance -variance matrices \\(\\mathbf{\\Sigma}_x\\) and \\(\\mathbf{\\Sigma}_y\\). \\(\\mathbf{A}\\) and \\(\\mathbf{B}\\) be matrices of constants and \\(\\mathbf{c}\\) and \\(\\mathbf{d}\\) be vectors of constants Then \\(E(\\mathbf{Ay + c} ) = \\mathbf{A} \\mu_y + c\\) \\(var(\\mathbf{Ay + c}) = \\mathbf{A} var(\\mathbf{y})\\mathbf{A}&#39; = \\mathbf{A \\Sigma_y A}&#39;\\) \\(cov(\\mathbf{Ay + c, By+ d}) = \\mathbf{A\\Sigma_y B}&#39;\\) \\(E(\\mathbf{Ay + Bx + c}) = \\mathbf{A \\mu_y + B \\mu_x + c}\\) \\(var(\\mathbf{Ay + Bx + c}) = \\mathbf{A \\Sigma_y A&#39; + B \\Sigma_x B&#39; + A \\Sigma_{yx}B&#39; + B\\Sigma&#39;_{yx}A&#39;}\\) Multivariate Normal Distribution Let \\(\\mathbf{y}\\) be a multivariate normal (MVN) random variable with mean \\(\\mu\\) and variance \\(\\mathbf{\\Sigma}\\). Then the density of \\(\\mathbf{y}\\) is \\[ f(\\mathbf{y}) = \\frac{1}{(2\\pi)^{p/2}|\\mathbf{\\Sigma}|^{1/2}} \\exp(-\\frac{1}{2} \\mathbf{(y-\\mu)&#39;\\Sigma^{-1}(y-\\mu)} ) \\] \\(\\mathbf{y} \\sim N_p(\\mu, \\mathbf{\\Sigma})\\) 22.0.1 Properties of MVN Let \\(\\mathbf{A}_{r \\times p}\\) be a fixed matrix. Then \\(\\mathbf{Ay} \\sim N_r (\\mathbf{A \\mu, A \\Sigma A&#39;})\\) . \\(r \\le p\\) and all rows of \\(\\mathbf{A}\\) must be linearly independent to guarantee that \\(\\mathbf{A \\Sigma A}&#39;\\) is non-singular. Let \\(\\mathbf{G}\\) be a matrix such that \\(\\mathbf{\\Sigma}^{-1} = \\mathbf{GG}&#39;\\). Then \\(\\mathbf{G&#39;y} \\sim N_p(\\mathbf{G&#39; \\mu, I})\\) and \\(\\mathbf{G&#39;(y-\\mu)} \\sim N_p (0,\\mathbf{I})\\) Any fixed linear combination of \\(y_1,...,y_p\\) (say \\(\\mathbf{c&#39;y}\\)) follows \\(\\mathbf{c&#39;y} \\sim N_1 (\\mathbf{c&#39; \\mu, c&#39; \\Sigma c})\\) Define a partition, \\([\\mathbf{y}&#39;_1,\\mathbf{y}_2&#39;]&#39;\\) where \\(\\mathbf{y}_1\\) is \\(p_1 \\times 1\\) \\(\\mathbf{y}_2\\) is \\(p_2 \\times 1\\), \\(p_1 + p_2 = p\\) \\(p_1,p_2 \\ge 1\\) Then \\[ \\left( \\begin{array} {c} \\mathbf{y}_1 \\\\ \\mathbf{y}_2 \\\\ \\end{array} \\right) \\sim N \\left( \\left( \\begin{array} {c} \\mu_1 \\\\ \\mu_2 \\\\ \\end{array} \\right), \\left( \\begin{array} {cc} \\mathbf{\\Sigma}_{11} &amp; \\mathbf{\\Sigma}_{12} \\\\ \\mathbf{\\Sigma}_{21} &amp; \\mathbf{\\Sigma}_{22}\\\\ \\end{array} \\right) \\right) \\] The marginal distributions of \\(\\mathbf{y}_1\\) and \\(\\mathbf{y}_2\\) are \\(\\mathbf{y}_1 \\sim N_{p1}(\\mathbf{\\mu_1, \\Sigma_{11}})\\) and \\(\\mathbf{y}_2 \\sim N_{p2}(\\mathbf{\\mu_2, \\Sigma_{22}})\\) Individual components \\(y_1,...,y_p\\) are all normally distributed \\(y_i \\sim N_1(\\mu_i, \\sigma_{ii})\\) The conditional distribution of \\(\\mathbf{y}_1\\) and \\(\\mathbf{y}_2\\) is normal \\(\\mathbf{y}_1 | \\mathbf{y}_2 \\sim N_{p1}(\\mathbf{\\mu_1 + \\Sigma_{12} \\Sigma_{22}^{-1}(y_2 - \\mu_2),\\Sigma_{11} - \\Sigma_{12} \\Sigma_{22}^{-1} \\sigma_{21}})\\) In this formula, we see if we know (have info about) \\(\\mathbf{y}_2\\), we can re-weight \\(\\mathbf{y}_1\\) ’s mean, and the variance is reduced because we know more about \\(\\mathbf{y}_1\\) because we know \\(\\mathbf{y}_2\\) which is analogous to \\(\\mathbf{y}_2 | \\mathbf{y}_1\\). And \\(\\mathbf{y}_1\\) and \\(\\mathbf{y}_2\\) are independently distrusted only if \\(\\mathbf{\\Sigma}_{12} = 0\\) If \\(\\mathbf{y} \\sim N(\\mathbf{\\mu, \\Sigma})\\) and \\(\\mathbf{\\Sigma}\\) is positive definite, then \\(\\mathbf{(y-\\mu)&#39; \\Sigma^{-1} (y - \\mu)} \\sim \\chi^2_{(p)}\\) If \\(\\mathbf{y}_i\\) are independent \\(N_p (\\mathbf{\\mu}_i , \\mathbf{\\Sigma}_i)\\) random variables, then for fixed matrices \\(\\mathbf{A}_{i(m \\times p)}\\), \\(\\sum_{i=1}^k \\mathbf{A}_i \\mathbf{y}_i \\sim N_m (\\sum_{i=1}^{k} \\mathbf{A}_i \\mathbf{\\mu}_i, \\sum_{i=1}^k \\mathbf{A}_i \\mathbf{\\Sigma}_i \\mathbf{A}_i)\\) Multiple Regression \\[ \\left( \\begin{array} {c} Y \\\\ \\mathbf{x} \\end{array} \\right) \\sim N_{p+1} \\left( \\left[ \\begin{array} {c} \\mu_y \\\\ \\mathbf{\\mu}_x \\end{array} \\right] , \\left[ \\begin{array} {cc} \\sigma^2_Y &amp; \\mathbf{\\Sigma}_{yx} \\\\ \\mathbf{\\Sigma}_{yx} &amp; \\mathbf{\\Sigma}_{xx} \\end{array} \\right] \\right) \\] The conditional distribution of Y given x follows a univariate normal distribution with \\[ \\begin{aligned} E(Y| \\mathbf{x}) &amp;= \\mu_y + \\mathbf{\\Sigma}_{yx} \\Sigma_{xx}^{-1} (\\mathbf{x}- \\mu_x) \\\\ &amp;= \\mu_y - \\Sigma_{yx} \\Sigma_{xx}^{-1}\\mu_x + \\Sigma_{yx} \\Sigma_{xx}^{-1}\\mathbf{x} \\\\ &amp;= \\beta_0 + \\mathbf{\\beta&#39;x} \\end{aligned} \\] where \\(\\beta = (\\beta_1,...,\\beta_p)&#39; = \\mathbf{\\Sigma}_{xx}^{-1} \\mathbf{\\Sigma}_{yx}&#39;\\) (e.g., analogous to \\(\\mathbf{(x&#39;x)^{-1}x&#39;y}\\) but not the same if we consider \\(Y_i\\) and \\(\\mathbf{x}_i\\), \\(i = 1,..,n\\) and use the empirical covariance formula: \\(var(Y|\\mathbf{x}) = \\sigma^2_Y - \\mathbf{\\Sigma_{yx}\\Sigma^{-1}_{xx} \\Sigma&#39;_{yx}}\\)) Samples from Multivariate Normal Populations A random sample of size n, \\(\\mathbf{y}_1,.., \\mathbf{y}_n\\) from \\(N_p (\\mathbf{\\mu}, \\mathbf{\\Sigma})\\). Then Since \\(\\mathbf{y}_1,..., \\mathbf{y}_n\\) are iid, their sample mean, \\(\\bar{\\mathbf{y}} = \\sum_{i=1}^n \\mathbf{y}_i/n \\sim N_p (\\mathbf{\\mu}, \\mathbf{\\Sigma}/n)\\). that is, \\(\\bar{\\mathbf{y}}\\) is an unbiased estimator of \\(\\mathbf{\\mu}\\) The \\(p \\times p\\) sample variance-covariance matrix, \\(\\mathbf{S}\\) is \\(\\mathbf{S} = \\frac{1}{n-1}\\sum_{i=1}^n (\\mathbf{y}_i - \\bar{\\mathbf{y}})(\\mathbf{y}_i - \\bar{\\mathbf{y}})&#39; = \\frac{1}{n-1} (\\sum_{i=1}^n \\mathbf{y}_i \\mathbf{y}_i&#39; - n \\bar{\\mathbf{y}}\\bar{\\mathbf{y}}&#39;)\\) where \\(\\mathbf{S}\\) is symmetric, unbiased estimator of \\(\\mathbf{\\Sigma}\\) and has \\(p(p+1)/2\\) random variables. \\((n-1)\\mathbf{S} \\sim W_p (n-1, \\mathbf{\\Sigma})\\) is a Wishart distribution with n-1 degrees of freedom and expectation \\((n-1) \\mathbf{\\Sigma}\\). The Wishart distribution is a multivariate extension of the Chi-squared distribution. \\(\\bar{\\mathbf{y}}\\) and \\(\\mathbf{S}\\) are independent \\(\\bar{\\mathbf{y}}\\) and \\(\\mathbf{S}\\) are sufficient statistics. (All of the info in the data about \\(\\mathbf{\\mu}\\) and \\(\\mathbf{\\Sigma}\\) is contained in \\(\\bar{\\mathbf{y}}\\) and \\(\\mathbf{S}\\) , regardless of sample size). Large Sample Properties \\(\\mathbf{y}_1,..., \\mathbf{y}_n\\) are a random sample from some population with mean \\(\\mathbf{\\mu}\\) and variance-covariance matrix \\(\\mathbf{\\Sigma}\\) \\(\\bar{\\mathbf{y}}\\) is a consistent estimator for \\(\\mu\\) \\(\\mathbf{S}\\) is a consistent estimator for \\(\\mathbf{\\Sigma}\\) Multivariate Central Limit Theorem: Similar to the univariate case, \\(\\sqrt{n}(\\bar{\\mathbf{y}} - \\mu) \\dot{\\sim} N_p (\\mathbf{0,\\Sigma})\\) where n is large relative to p (\\(n \\ge 25p\\)), which is equivalent to \\(\\bar{\\mathbf{y}} \\dot{\\sim} N_p (\\mu, \\mathbf{\\Sigma}/n)\\) Wald’s Theorem: \\(n(\\bar{\\mathbf{y}} - \\mu)&#39; \\mathbf{S}^{-1} (\\bar{\\mathbf{y}} - \\mu)\\) when n is large relative to p. Maximum Likelihood Estimation for MVN Suppose iid \\(\\mathbf{y}_1 ,... \\mathbf{y}_n \\sim N_p (\\mu, \\mathbf{\\Sigma})\\), the likelihood function for the data is \\[ \\begin{aligned} L(\\mu, \\mathbf{\\Sigma}) &amp;= \\prod_{j=1}^n (\\frac{1}{(2\\pi)^{p/2}|\\mathbf{\\Sigma}|^{1/2}} \\exp(-\\frac{1}{2}(\\mathbf{y}_j -\\mu)&#39;\\mathbf{\\Sigma}^{-1})(\\mathbf{y}_j -\\mu)) \\\\ &amp;= \\frac{1}{(2\\pi)^{np/2}|\\mathbf{\\Sigma}|^{n/2}} \\exp(-\\frac{1}{2} \\sum_{j=1}^n(\\mathbf{y}_j -\\mu)&#39;\\mathbf{\\Sigma}^{-1})(\\mathbf{y}_j -\\mu) \\end{aligned} \\] Then, the MLEs are \\[ \\hat{\\mu} = \\bar{\\mathbf{y}} \\] \\[ \\hat{\\mathbf{\\Sigma}} = \\frac{n-1}{n} \\mathbf{S} \\] using derivatives of the log of the likelihood function with respect to \\(\\mu\\) and \\(\\mathbf{\\Sigma}\\) Properties of MLEs Invariance: If \\(\\hat{\\theta}\\) is the MLE of \\(\\theta\\), then the MLE of \\(h(\\theta)\\) is \\(h(\\hat{\\theta})\\) for any function h(.) Consistency: MLEs are consistent estimators, but they are usually biased Efficiency: MLEs are efficient estimators (no other estimator has a smaller variance for large samples) Asymptotic normality: Suppose that \\(\\hat{\\theta}_n\\) is the MLE for \\(\\theta\\) based upon n independent observations. Then \\(\\hat{\\theta}_n \\dot{\\sim} N(\\theta, \\mathbf{H}^{-1})\\) \\(\\mathbf{H}\\) is the Fisher Information Matrix, which contains the expected values of the second partial derivatives fo the log-likelihood function. the (i,j)th element of \\(\\mathbf{H}\\) is \\(-E(\\frac{\\partial^2 l(\\mathbf{\\theta})}{\\partial \\theta_i \\partial \\theta_j})\\) we can estimate \\(\\mathbf{H}\\) by finding the form determined above, and evaluate it at \\(\\theta = \\hat{\\theta}_n\\) Likelihood ratio testing: for some null hypothesis, \\(H_0\\) we can form a likelihood ratio test The statistic is: \\(\\Lambda = \\frac{\\max_{H_0}l(\\mathbf{\\mu}, \\mathbf{\\Sigma|Y})}{\\max l(\\mu, \\mathbf{\\Sigma | Y})}\\) For large n, \\(-2 \\log \\Lambda \\sim \\chi^2_{(v)}\\) where v is the number of parameters in the unrestricted space minus the number of parameters under \\(H_0\\) Test of Multivariate Normality Check univariate normality for each trait (X) separately Can check \\[Normality Assessment\\] The good thing is that if any of the univariate trait is not normal, then the joint distribution is not normal (see again [m]). If a joint multivariate distribution is normal, then the marginal distribution has to be normal. However, marginal normality of all traits does not imply joint MVN Easily rule out multivariate normality, but not easy to prove it Mardia’s tests for multivariate normality Multivariate skewness is\\[ \\beta_{1,p} = E[(\\mathbf{y}- \\mathbf{\\mu})&#39; \\mathbf{\\Sigma}^{-1} (\\mathbf{x} - \\mathbf{\\mu})]^3 \\] where \\(\\mathbf{x}\\) and \\(\\mathbf{y}\\) are independent, but have the same distribution (note: \\(\\beta\\) here is not regression coefficient) Multivariate kurtosis is defined as \\[ \\beta_{2,p} - E[(\\mathbf{y}- \\mathbf{\\mu})&#39; \\mathbf{\\Sigma}^{-1} (\\mathbf{x} - \\mathbf{\\mu})]^2 \\] For the MVN distribution, we have \\(\\beta_{1,p} = 0\\) and \\(\\beta_{2,p} = p(p+2)\\) For a sample of size n, we can estimate \\[ \\hat{\\beta}_{1,p} = \\frac{1}{n^2}\\sum_{i=1}^n \\sum_{j=1}^n g^2_{ij} \\] \\[ \\hat{\\beta}_{2,p} = \\frac{1}{n} \\sum_{i=1}^n g^2_{ii} \\] where \\(g_{ij} = (\\mathbf{y}_i - \\bar{\\mathbf{y}})&#39; \\mathbf{S}^{-1} (\\mathbf{y}_j - \\bar{\\mathbf{y}})\\). Note: \\(g_{ii} = d^2_i\\) where \\(d^2_i\\) is the Mahalanobis distance (Mardia 1970) shows for large n \\[ \\kappa_1 = \\frac{n \\hat{\\beta}_{1,p}}{6} \\dot{\\sim} \\chi^2_{p(p+1)(p+2)/6} \\] \\[ \\kappa_2 = \\frac{\\hat{\\beta}_{2,p} - p(p+2)}{\\sqrt{8p(p+2)/n}} \\sim N(0,1) \\] Hence, we can use \\(\\kappa_1\\) and \\(\\kappa_2\\) to test the null hypothesis of MVN. When the data are non-normal, normal theory tests on the mean are sensitive to \\(\\beta_{1,p}\\) , while tests on the covariance are sensitive to \\(\\beta_{2,p}\\) Alternatively, Doornik-Hansen test for multivariate normality (Doornik and Hansen 2008) Chi-square Q-Q plot Let \\(\\mathbf{y}_i, i = 1,...,n\\) be a random sample sample from \\(N_p(\\mathbf{\\mu}, \\mathbf{\\Sigma})\\) Then \\(\\mathbf{z}_i = \\mathbf{\\Sigma}^{-1/2}(\\mathbf{y}_i - \\mathbf{\\mu}), i = 1,...,n\\) are iid \\(N_p (\\mathbf{0}, \\mathbf{I})\\). Thus, \\(d_i^2 = \\mathbf{z}_i&#39; \\mathbf{z}_i \\sim \\chi^2_p , i = 1,...,n\\) plot the ordered \\(d_i^2\\) values against the qualities of the \\(\\chi^2_p\\) distribution. When normality holds, the plot should approximately resemble a straight lien passing through the origin at a 45 degree it requires large sample size (i.e., sensitive to sample size). Even if we generate data from a MVN, the tail of the Chi-square Q-Q plot can still be out of line. If the data are not normal, we can ignore it use nonparametric methods use models based upon an approximate distribution (e.g., GLMM) try performing a transformation library(heplots) library(ICSNP) library(MVN) library(tidyverse) trees = read.table(&quot;images/trees.dat&quot;) names(trees) &lt;- c(&quot;Nitrogen&quot;,&quot;Phosphorous&quot;,&quot;Potassium&quot;,&quot;Ash&quot;,&quot;Height&quot;) str(trees) #&gt; &#39;data.frame&#39;: 26 obs. of 5 variables: #&gt; $ Nitrogen : num 2.2 2.1 1.52 2.88 2.18 1.87 1.52 2.37 2.06 1.84 ... #&gt; $ Phosphorous: num 0.417 0.354 0.208 0.335 0.314 0.271 0.164 0.302 0.373 0.265 ... #&gt; $ Potassium : num 1.35 0.9 0.71 0.9 1.26 1.15 0.83 0.89 0.79 0.72 ... #&gt; $ Ash : num 1.79 1.08 0.47 1.48 1.09 0.99 0.85 0.94 0.8 0.77 ... #&gt; $ Height : int 351 249 171 373 321 191 225 291 284 213 ... summary(trees) #&gt; Nitrogen Phosphorous Potassium Ash #&gt; Min. :1.130 Min. :0.1570 Min. :0.3800 Min. :0.4500 #&gt; 1st Qu.:1.532 1st Qu.:0.1963 1st Qu.:0.6050 1st Qu.:0.6375 #&gt; Median :1.855 Median :0.2250 Median :0.7150 Median :0.9300 #&gt; Mean :1.896 Mean :0.2506 Mean :0.7619 Mean :0.8873 #&gt; 3rd Qu.:2.160 3rd Qu.:0.2975 3rd Qu.:0.8975 3rd Qu.:0.9825 #&gt; Max. :2.880 Max. :0.4170 Max. :1.3500 Max. :1.7900 #&gt; Height #&gt; Min. : 65.0 #&gt; 1st Qu.:122.5 #&gt; Median :181.0 #&gt; Mean :196.6 #&gt; 3rd Qu.:276.0 #&gt; Max. :373.0 cor(trees, method = &quot;pearson&quot;) # correlation matrix #&gt; Nitrogen Phosphorous Potassium Ash Height #&gt; Nitrogen 1.0000000 0.6023902 0.5462456 0.6509771 0.8181641 #&gt; Phosphorous 0.6023902 1.0000000 0.7037469 0.6707871 0.7739656 #&gt; Potassium 0.5462456 0.7037469 1.0000000 0.6710548 0.7915683 #&gt; Ash 0.6509771 0.6707871 0.6710548 1.0000000 0.7676771 #&gt; Height 0.8181641 0.7739656 0.7915683 0.7676771 1.0000000 # qq-plot gg &lt;- trees %&gt;% pivot_longer(everything(), names_to = &quot;Var&quot;, values_to = &quot;Value&quot;) %&gt;% ggplot(aes(sample = Value)) + geom_qq() + geom_qq_line() + facet_wrap(&quot;Var&quot;, scales = &quot;free&quot;) gg # Univariate normality sw_tests &lt;- apply(trees, MARGIN = 2, FUN = shapiro.test) sw_tests #&gt; $Nitrogen #&gt; #&gt; Shapiro-Wilk normality test #&gt; #&gt; data: newX[, i] #&gt; W = 0.96829, p-value = 0.5794 #&gt; #&gt; #&gt; $Phosphorous #&gt; #&gt; Shapiro-Wilk normality test #&gt; #&gt; data: newX[, i] #&gt; W = 0.93644, p-value = 0.1104 #&gt; #&gt; #&gt; $Potassium #&gt; #&gt; Shapiro-Wilk normality test #&gt; #&gt; data: newX[, i] #&gt; W = 0.95709, p-value = 0.3375 #&gt; #&gt; #&gt; $Ash #&gt; #&gt; Shapiro-Wilk normality test #&gt; #&gt; data: newX[, i] #&gt; W = 0.92071, p-value = 0.04671 #&gt; #&gt; #&gt; $Height #&gt; #&gt; Shapiro-Wilk normality test #&gt; #&gt; data: newX[, i] #&gt; W = 0.94107, p-value = 0.1424 # Kolmogorov-Smirnov test ks_tests &lt;- map(trees, ~ ks.test(scale(.x),&quot;pnorm&quot;)) ks_tests #&gt; $Nitrogen #&gt; #&gt; Asymptotic one-sample Kolmogorov-Smirnov test #&gt; #&gt; data: scale(.x) #&gt; D = 0.12182, p-value = 0.8351 #&gt; alternative hypothesis: two-sided #&gt; #&gt; #&gt; $Phosphorous #&gt; #&gt; Asymptotic one-sample Kolmogorov-Smirnov test #&gt; #&gt; data: scale(.x) #&gt; D = 0.17627, p-value = 0.3944 #&gt; alternative hypothesis: two-sided #&gt; #&gt; #&gt; $Potassium #&gt; #&gt; Asymptotic one-sample Kolmogorov-Smirnov test #&gt; #&gt; data: scale(.x) #&gt; D = 0.10542, p-value = 0.9348 #&gt; alternative hypothesis: two-sided #&gt; #&gt; #&gt; $Ash #&gt; #&gt; Asymptotic one-sample Kolmogorov-Smirnov test #&gt; #&gt; data: scale(.x) #&gt; D = 0.14503, p-value = 0.6449 #&gt; alternative hypothesis: two-sided #&gt; #&gt; #&gt; $Height #&gt; #&gt; Asymptotic one-sample Kolmogorov-Smirnov test #&gt; #&gt; data: scale(.x) #&gt; D = 0.1107, p-value = 0.9076 #&gt; alternative hypothesis: two-sided # Mardia&#39;s test, need large sample size for power mardia_test &lt;- mvn( trees, mvnTest = &quot;mardia&quot;, covariance = FALSE, multivariatePlot = &quot;qq&quot; ) mardia_test$multivariateNormality #&gt; Test Statistic p value Result #&gt; 1 Mardia Skewness 29.7248528871795 0.72054426745778 YES #&gt; 2 Mardia Kurtosis -1.67743173185383 0.0934580886477281 YES #&gt; 3 MVN &lt;NA&gt; &lt;NA&gt; YES # Doornik-Hansen&#39;s test dh_test &lt;- mvn( trees, mvnTest = &quot;dh&quot;, covariance = FALSE, multivariatePlot = &quot;qq&quot; ) dh_test$multivariateNormality #&gt; Test E df p value MVN #&gt; 1 Doornik-Hansen 161.9446 10 1.285352e-29 NO # Henze-Zirkler&#39;s test hz_test &lt;- mvn( trees, mvnTest = &quot;hz&quot;, covariance = FALSE, multivariatePlot = &quot;qq&quot; ) hz_test$multivariateNormality #&gt; Test HZ p value MVN #&gt; 1 Henze-Zirkler 0.7591525 0.6398905 YES # The last column indicates whether dataset follows a multivariate normality or not (i.e, YES or NO) at significance level 0.05. # Royston&#39;s test # can only apply for 3 &lt; obs &lt; 5000 (because of Shapiro-Wilk&#39;s test) royston_test &lt;- mvn( trees, mvnTest = &quot;royston&quot;, covariance = FALSE, multivariatePlot = &quot;qq&quot; ) royston_test$multivariateNormality #&gt; Test H p value MVN #&gt; 1 Royston 9.064631 0.08199215 YES # E-statistic estat_test &lt;- mvn( trees, mvnTest = &quot;energy&quot;, covariance = FALSE, multivariatePlot = &quot;qq&quot; ) estat_test$multivariateNormality #&gt; Test Statistic p value MVN #&gt; 1 E-statistic 1.091101 0.509 YES 22.0.2 Mean Vector Inference In the univariate normal distribution, we test \\(H_0: \\mu =\\mu_0\\) by using \\[ T = \\frac{\\bar{y}- \\mu_0}{s/\\sqrt{n}} \\sim t_{n-1} \\] under the null hypothesis. And reject the null if \\(|T|\\) is large relative to \\(t_{(1-\\alpha/2,n-1)}\\) because it means that seeing a value as large as what we observed is rare if the null is true Equivalently, \\[ T^2 = \\frac{(\\bar{y}- \\mu_0)^2}{s^2/n} = n(\\bar{y}- \\mu_0)(s^2)^{-1}(\\bar{y}- \\mu_0) \\sim f_{(1,n-1)} \\] 22.0.2.1 Natural Multivariate Generalization \\[ H_0: \\mathbf{\\mu} = \\mathbf{\\mu}_0 \\\\ H_a: \\mathbf{\\mu} \\neq \\mathbf{\\mu}_0 \\] Define Hotelling’s \\(T^2\\) by \\[ T^2 = n(\\bar{\\mathbf{y}} - \\mathbf{\\mu}_0)&#39;\\mathbf{S}^{-1}(\\bar{\\mathbf{y}} - \\mathbf{\\mu}_0) \\] which can be viewed as a generalized distance between \\(\\bar{\\mathbf{y}}\\) and \\(\\mathbf{\\mu}_0\\) Under the assumption of normality, \\[ F = \\frac{n-p}{(n-1)p} T^2 \\sim f_{(p,n-p)} \\] and reject the null hypothesis when \\(F &gt; f_{(1-\\alpha, p, n-p)}\\) The \\(T^2\\) test is invariant to changes in measurement units. If \\(\\mathbf{z = Cy + d}\\) where \\(\\mathbf{C}\\) and \\(\\mathbf{d}\\) do not depend on \\(\\mathbf{y}\\), then \\(T^2(\\mathbf{z}) - T^2(\\mathbf{y})\\) The \\(T^2\\) test can be derived as a likelihood ratio test of \\(H_0: \\mu = \\mu_0\\) 22.0.2.2 Confidence Intervals 22.0.2.2.1 Confidence Region An “exact” \\(100(1-\\alpha)\\%\\) confidence region for \\(\\mathbf{\\mu}\\) is the set of all vectors, \\(\\mathbf{v}\\), which are “close enough” to the observed mean vector, \\(\\bar{\\mathbf{y}}\\) to satisfy \\[ n(\\bar{\\mathbf{y}} - \\mathbf{\\mu}_0)&#39;\\mathbf{S}^{-1}(\\bar{\\mathbf{y}} - \\mathbf{\\mu}_0) \\le \\frac{(n-1)p}{n-p} f_{(1-\\alpha, p, n-p)} \\] \\(\\mathbf{v}\\) are just the mean vectors that are not rejected by the \\(T^2\\) test when \\(\\mathbf{\\bar{y}}\\) is observed. In case that you have 2 parameters, the confidence region is a “hyper-ellipsoid”. In this region, it consists of all \\(\\mathbf{\\mu}_0\\) vectors for which the \\(T^2\\) test would not reject \\(H_0\\) at significance level \\(\\alpha\\) Even though the confidence region better assesses the joint knowledge concerning plausible values of \\(\\mathbf{\\mu}\\) , people typically include confidence statement about the individual component means. We’d like all of the separate confidence statements to hold simultaneously with a specified high probability. Simultaneous confidence intervals: intervals against any statement being incorrect 22.0.2.2.1.1 Simultaneous Confidence Statements Intervals based on a rectangular confidence region by projecting the previous region onto the coordinate axes: \\[ \\bar{y}_{i} \\pm \\sqrt{\\frac{(n-1)p}{n-p}f_{(1-\\alpha, p,n-p)}\\frac{s_{ii}}{n}} \\] for all \\(i = 1,..,p\\) which implied confidence region is conservative; it has at least \\(100(1- \\alpha)\\%\\) Generally, simultaneous \\(100(1-\\alpha) \\%\\) confidence intervals for all linear combinations , \\(\\mathbf{a}\\) of the elements of the mean vector are given by \\[ \\mathbf{a&#39;\\bar{y}} \\pm \\sqrt{\\frac{(n-1)p}{n-p}f_{(1-\\alpha, p,n-p)}\\frac{\\mathbf{a&#39;Sa}}{n}} \\] works for any arbitrary linear combination \\(\\mathbf{a&#39;\\mu} = a_1 \\mu_1 + ... + a_p \\mu_p\\), which is a projection onto the axis in the direction of \\(\\mathbf{a}\\) These intervals have the property that the probability that at least one such interval does not contain the appropriate \\(\\mathbf{a&#39; \\mu}\\) is no more than \\(\\alpha\\) These types of intervals can be used for “data snooping” (like \\[Scheffe\\]) 22.0.2.2.1.2 One \\(\\mu\\) at a time One at a time confidence intervals: \\[ \\bar{y}_i \\pm t_{(1 - \\alpha/2, n-1} \\sqrt{\\frac{s_{ii}}{n}} \\] Each of these intervals has a probability of \\(1-\\alpha\\) of covering the appropriate \\(\\mu_i\\) But they ignore the covariance structure of the \\(p\\) variables If we only care about \\(k\\) simultaneous intervals, we can use “one at a time” method with the \\[Bonferroni\\] correction. This method gets more conservative as the number of intervals \\(k\\) increases. 22.0.3 General Hypothesis Testing 22.0.3.1 One-sample Tests \\[ H_0: \\mathbf{C \\mu= 0} \\] where \\(\\mathbf{C}\\) is a \\(c \\times p\\) matrix of rank c where \\(c \\le p\\) We can test this hypothesis using the following statistic \\[ F = \\frac{n - c}{(n-1)c} T^2 \\] where \\(T^2 = n(\\mathbf{C\\bar{y}})&#39; (\\mathbf{CSC&#39;})^{-1} (\\mathbf{C\\bar{y}})\\) Example: \\[ H_0: \\mu_1 = \\mu_2 = ... = \\mu_p \\] Equivalently, \\[ \\mu_1 - \\mu_2 = 0 \\\\ \\vdots \\\\ \\mu_{p-1} - \\mu_p = 0 \\] a total of \\(p-1\\) tests. Hence, we have \\(\\mathbf{C}\\) as the \\(p - 1 \\times p\\) matrix \\[ \\mathbf{C} = \\left( \\begin{array} {ccccc} 1 &amp; -1 &amp; 0 &amp; \\ldots &amp; 0 \\\\ 0 &amp; 1 &amp; -1 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\ldots &amp; 1 &amp; -1 \\end{array} \\right) \\] number of rows = \\(c = p -1\\) Equivalently, we can also compare all of the other means to the first mean. Then, we test \\(\\mu_1 - \\mu_2 = 0, \\mu_1 - \\mu_3 = 0,..., \\mu_1 - \\mu_p = 0\\), the \\((p-1) \\times p\\) matrix \\(\\mathbf{C}\\) is \\[ \\mathbf{C} = \\left( \\begin{array} {ccccc} -1 &amp; 1 &amp; 0 &amp; \\ldots &amp; 0 \\\\ -1 &amp; 0 &amp; 1 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ -1 &amp; 0 &amp; \\ldots &amp; 0 &amp; 1 \\end{array} \\right) \\] The value of \\(T^2\\) is invariant to these equivalent choices of \\(\\mathbf{C}\\) This is often used for repeated measures designs, where each subject receives each treatment once over successive periods of time (all treatments are administered to each unit). Example: Let \\(y_{ij}\\) be the response from subject i at time j for \\(i = 1,..,n, j = 1,...,T\\). In this case, \\(\\mathbf{y}_i = (y_{i1}, ..., y_{iT})&#39;, i = 1,...,n\\) are a random sample from \\(N_T (\\mathbf{\\mu}, \\mathbf{\\Sigma})\\) Let \\(n=8\\) subjects, \\(T = 6\\). We are interested in \\(\\mu_1, .., \\mu_6\\) \\[ H_0: \\mu_1 = \\mu_2 = ... = \\mu_6 \\] Equivalently, \\[ \\mu_1 - \\mu_2 = 0 \\\\ \\mu_2 - \\mu_3 = 0 \\\\ ... \\\\ \\mu_5 - \\mu_6 = 0 \\] We can test orthogonal polynomials for 4 equally spaced time points. To test for example the null hypothesis that quadratic and cubic effects are jointly equal to 0, we would define \\(\\mathbf{C}\\) \\[ \\mathbf{C} = \\left( \\begin{array} {cccc} 1 &amp; -1 &amp; -1 &amp; 1 \\\\ -1 &amp; 3 &amp; -3 &amp; 1 \\end{array} \\right) \\] 22.0.3.2 Two-Sample Tests Consider the analogous two sample multivariate tests. Example: we have data on two independent random samples, one sample from each of two populations \\[ \\mathbf{y}_{1i} \\sim N_p (\\mathbf{\\mu_1, \\Sigma}) \\\\ \\mathbf{y}_{2j} \\sim N_p (\\mathbf{\\mu_2, \\Sigma}) \\] We assume normality equal variance-covariance matrices independent random samples We can summarize our data using the sufficient statistics \\(\\mathbf{\\bar{y}}_1, \\mathbf{S}_1, \\mathbf{\\bar{y}}_2, \\mathbf{S}_2\\) with respective sample sizes, \\(n_1,n_2\\) Since we assume that \\(\\mathbf{\\Sigma}_1 = \\mathbf{\\Sigma}_2 = \\mathbf{\\Sigma}\\), compute a pooled estimate of the variance-covariance matrix on \\(n_1 + n_2 - 2\\) df \\[ \\mathbf{S} = \\frac{(n_1 - 1)\\mathbf{S}_1 + (n_2-1) \\mathbf{S}_2}{(n_1 -1) + (n_2 - 1)} \\] \\[ H_0: \\mathbf{\\mu}_1 = \\mathbf{\\mu}_2 \\\\ H_a: \\mathbf{\\mu}_1 \\neq \\mathbf{\\mu}_2 \\] At least one element of the mean vectors is different We use \\(\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2\\) to estimate \\(\\mu_1 - \\mu_2\\) \\(\\mathbf{S}\\) to estimate \\(\\mathbf{\\Sigma}\\) Note: because we assume the two populations are independent, there is no covariance \\(cov(\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2) = var(\\mathbf{\\bar{y}}_1) + var(\\mathbf{\\bar{y}}_2) = \\frac{\\mathbf{\\Sigma_1}}{n_1} + \\frac{\\mathbf{\\Sigma_2}}{n_2} = \\mathbf{\\Sigma}(\\frac{1}{n_1} + \\frac{1}{n_2})\\) Reject \\(H_0\\) if \\[ \\begin{aligned} T^2 &amp;= (\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2)&#39;\\{ \\mathbf{S} (\\frac{1}{n_1} + \\frac{1}{n_2})\\}^{-1} (\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2)\\\\ &amp;= \\frac{n_1 n_2}{n_1 +n_2} (\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2)&#39;\\{ \\mathbf{S} \\}^{-1} (\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2)\\\\ &amp; \\ge \\frac{(n_1 + n_2 -2)p}{n_1 + n_2 - p - 1} f_{(1- \\alpha,n_1 + n_2 - p -1)} \\end{aligned} \\] or equivalently, if \\[ F = \\frac{n_1 + n_2 - p -1}{(n_1 + n_2 -2)p} T^2 \\ge f_{(1- \\alpha, p , n_1 + n_2 -p -1)} \\] A \\(100(1-\\alpha) \\%\\) confidence region for \\(\\mu_1 - \\mu_2\\) consists of all vector \\(\\delta\\) which satisfy \\[ \\frac{n_1 n_2}{n_1 + n_2} (\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2 - \\mathbf{\\delta})&#39; \\mathbf{S}^{-1}(\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2 - \\mathbf{\\delta}) \\le \\frac{(n_1 + n_2 - 2)p}{n_1 + n_2 -p - 1}f_{(1-\\alpha, p , n_1 + n_2 - p -1)} \\] The simultaneous confidence intervals for all linear combinations of \\(\\mu_1 - \\mu_2\\) have the form \\[ \\mathbf{a&#39;}(\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2) \\pm \\sqrt{\\frac{(n_1 + n_2 -2)p}{n_1 + n_2 - p -1}}f_{(1-\\alpha, p, n_1 + n_2 -p -1)} \\times \\sqrt{\\mathbf{a&#39;Sa}(\\frac{1}{n_1} + \\frac{1}{n_2})} \\] Bonferroni intervals, for k combinations \\[ (\\bar{y}_{1i} - \\bar{y}_{2i}) \\pm t_{(1-\\alpha/2k, n_1 + n_2 - 2)}\\sqrt{(\\frac{1}{n_1} + \\frac{1}{n_2})s_{ii}} \\] 22.0.3.3 Model Assumptions If model assumption are not met Unequal Covariance Matrices If \\(n_1 = n_2\\) (large samples) there is little effect on the Type I error rate and power fo the two sample test If \\(n_1 &gt; n_2\\) and the eigenvalues of \\(\\mathbf{\\Sigma}_1 \\mathbf{\\Sigma}^{-1}_2\\) are less than 1, the Type I error level is inflated If \\(n_1 &gt; n_2\\) and some eigenvalues of \\(\\mathbf{\\Sigma}_1 \\mathbf{\\Sigma}_2^{-1}\\) are greater than 1, the Type I error rate is too small, leading to a reduction in power Sample Not Normal Type I error level of the two sample \\(T^2\\) test isn’t much affect by moderate departures from normality if the two populations being sampled have similar distributions One sample \\(T^2\\) test is much more sensitive to lack of normality, especially when the distribution is skewed. Intuitively, you can think that in one sample your distribution will be sensitive, but the distribution of the difference between two similar distributions will not be as sensitive. Solutions: Transform to make the data more normal Large large samples, use the \\(\\chi^2\\) (Wald) test, in which populations don’t need to be normal, or equal sample sizes, or equal variance-covariance matrices \\(H_0: \\mu_1 - \\mu_2 =0\\) use \\((\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2)&#39;( \\frac{1}{n_1} \\mathbf{S}_1 + \\frac{1}{n_2}\\mathbf{S}_2)^{-1}(\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2) \\dot{\\sim} \\chi^2_{(p)}\\) 22.0.3.3.1 Equal Covariance Matrices Tests With independent random samples from k populations of p-dimensional vectors. We compute the sample covariance matrix for each, \\(\\mathbf{S}_i\\), where \\(i = 1,...,k\\) \\[ H_0: \\mathbf{\\Sigma}_1 = \\mathbf{\\Sigma}_2 = \\ldots = \\mathbf{\\Sigma}_k = \\mathbf{\\Sigma} \\\\ H_a: \\text{at least 2 are different} \\] Assume \\(H_0\\) is true, we would use a pooled estimate of the common covariance matrix, \\(\\mathbf{\\Sigma}\\) \\[ \\mathbf{S} = \\frac{\\sum_{i=1}^k (n_i -1)\\mathbf{S}_i}{\\sum_{i=1}^k (n_i - 1)} \\] with \\(\\sum_{i=1}^k (n_i -1)\\) 22.0.3.3.1.1 Bartlett’s Test (a modification of the likelihood ratio test). Define \\[ N = \\sum_{i=1}^k n_i \\] and (note: \\(| |\\) are determinants here, not absolute value) \\[ M = (N - k) \\log|\\mathbf{S}| - \\sum_{i=1}^k (n_i - 1) \\log|\\mathbf{S}_i| \\] \\[ C^{-1} = 1 - \\frac{2p^2 + 3p - 1}{6(p+1)(k-1)} \\{\\sum_{i=1}^k (\\frac{1}{n_i - 1}) - \\frac{1}{N-k} \\} \\] Reject \\(H_0\\) when \\(MC^{-1} &gt; \\chi^2_{1- \\alpha, (k-1)p(p+1)/2}\\) If not all samples are from normal populations, \\(MC^{-1}\\) has a distribution which is often shifted to the right of the nominal \\(\\chi^2\\) distribution, which means \\(H_0\\) is often rejected even when it is true (the Type I error level is inflated). Hence, it is better to test individual normality first, or then multivariate normality before you do Bartlett’s test. 22.0.3.4 Two-Sample Repeated Measurements Define \\(\\mathbf{y}_{hi} = (y_{hi1}, ..., y_{hit})&#39;\\) to be the observations from the i-th subject in the h-th group for times 1 through T Assume that \\(\\mathbf{y}_{11}, ..., \\mathbf{y}_{1n_1}\\) are iid \\(N_t(\\mathbf{\\mu}_1, \\mathbf{\\Sigma})\\) and that \\(\\mathbf{y}_{21},...,\\mathbf{y}_{2n_2}\\) are iid \\(N_t(\\mathbf{\\mu}_2, \\mathbf{\\Sigma})\\) \\(H_0: \\mathbf{C}(\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2) = \\mathbf{0}_c\\) where \\(\\mathbf{C}\\) is a \\(c \\times t\\) matrix of rank \\(c\\) where \\(c \\le t\\) The test statistic has the form \\[ T^2 = \\frac{n_1 n_2}{n_1 + n_2} (\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2)&#39; \\mathbf{C}&#39;(\\mathbf{CSC}&#39;)^{-1}\\mathbf{C} (\\mathbf{\\bar{y}}_1 - \\mathbf{\\bar{y}}_2) \\] where \\(\\mathbf{S}\\) is the pooled covariance estimate. Then, \\[ F = \\frac{n_1 + n_2 - c -1}{(n_1 + n_2-2)c} T^2 \\sim f_{(c, n_1 + n_2 - c-1)} \\] when \\(H_0\\) is true If the null hypothesis \\(H_0: \\mu_1 = \\mu_2\\) is rejected. A weaker hypothesis is that the profiles for the two groups are parallel. \\[ \\mu_{11} - \\mu_{21} = \\mu_{12} - \\mu_{22} \\\\ \\vdots \\\\ \\mu_{1t-1} - \\mu_{2t-1} = \\mu_{1t} - \\mu_{2t} \\] The null hypothesis matrix term is then \\(H_0: \\mathbf{C}(\\mu_1 - \\mu_2) = \\mathbf{0}_c\\) , where \\(c = t - 1\\) and \\[ \\mathbf{C} = \\left( \\begin{array} {ccccc} 1 &amp; -1 &amp; 0 &amp; \\ldots &amp; 0 \\\\ 0 &amp; 1 &amp; -1 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; 0 &amp; \\ldots &amp; -1 \\end{array} \\right)_{(t-1) \\times t} \\] # One-sample Hotelling&#39;s T^2 test # Create data frame plants &lt;- data.frame( y1 = c(2.11, 2.36, 2.13, 2.78, 2.17), y2 = c(10.1, 35.0, 2.0, 6.0, 2.0), y3 = c(3.4, 4.1, 1.9, 3.8, 1.7) ) # Center the data with the hypothesized means and make a matrix plants_ctr &lt;- plants %&gt;% transmute(y1_ctr = y1 - 2.85, y2_ctr = y2 - 15.0, y3_ctr = y3 - 6.0) %&gt;% as.matrix() # Use anova.mlm to calculate Wilks&#39; lambda onesamp_fit &lt;- anova(lm(plants_ctr ~ 1), test = &quot;Wilks&quot;) onesamp_fit # can&#39;t reject the null of hypothesized vector of means #&gt; Analysis of Variance Table #&gt; #&gt; Df Wilks approx F num Df den Df Pr(&gt;F) #&gt; (Intercept) 1 0.054219 11.629 3 2 0.08022 . #&gt; Residuals 4 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # Paired-Sample Hotelling&#39;s T^2 test library(ICSNP) # Create data frame waste &lt;- data.frame( case = 1:11, com_y1 = c(6, 6, 18, 8, 11, 34, 28, 71, 43, 33, 20), com_y2 = c(27, 23, 64, 44, 30, 75, 26, 124, 54, 30, 14), state_y1 = c(25, 28, 36, 35, 15, 44, 42, 54, 34, 29, 39), state_y2 = c(15, 13, 22, 29, 31, 64, 30, 64, 56, 20, 21) ) # Calculate the difference between commercial and state labs waste_diff &lt;- waste %&gt;% transmute(y1_diff = com_y1 - state_y1, y2_diff = com_y2 - state_y2) # Run the test paired_fit &lt;- HotellingsT2(waste_diff) paired_fit # value T.2 in the output corresponds to the approximate F-value in the output from anova.mlm #&gt; #&gt; Hotelling&#39;s one sample T2-test #&gt; #&gt; data: waste_diff #&gt; T.2 = 6.1377, df1 = 2, df2 = 9, p-value = 0.02083 #&gt; alternative hypothesis: true location is not equal to c(0,0) # reject the null that the two labs&#39; measurements are equal # Independent-Sample Hotelling&#39;s T^2 test with Bartlett&#39;s test # Read in data steel &lt;- read.table(&quot;images/steel.dat&quot;) names(steel) &lt;- c(&quot;Temp&quot;, &quot;Yield&quot;, &quot;Strength&quot;) str(steel) #&gt; &#39;data.frame&#39;: 12 obs. of 3 variables: #&gt; $ Temp : int 1 1 1 1 1 2 2 2 2 2 ... #&gt; $ Yield : int 33 36 35 38 40 35 36 38 39 41 ... #&gt; $ Strength: int 60 61 64 63 65 57 59 59 61 63 ... # Plot the data ggplot(steel, aes(x = Yield, y = Strength)) + geom_text(aes(label = Temp), size = 5) + geom_segment(aes( x = 33, y = 57.5, xend = 42, yend = 65 ), col = &quot;red&quot;) # Bartlett&#39;s test for equality of covariance matrices # same thing as Box&#39;s M test in the multivariate setting bart_test &lt;- boxM(steel[, -1], steel$Temp) bart_test # fail to reject the null of equal covariances #&gt; #&gt; Box&#39;s M-test for Homogeneity of Covariance Matrices #&gt; #&gt; data: steel[, -1] #&gt; Chi-Sq (approx.) = 0.38077, df = 3, p-value = 0.9442 # anova.mlm twosamp_fit &lt;- anova(lm(cbind(Yield, Strength) ~ factor(Temp), data = steel), test = &quot;Wilks&quot;) twosamp_fit #&gt; Analysis of Variance Table #&gt; #&gt; Df Wilks approx F num Df den Df Pr(&gt;F) #&gt; (Intercept) 1 0.001177 3818.1 2 9 6.589e-14 *** #&gt; factor(Temp) 1 0.294883 10.8 2 9 0.004106 ** #&gt; Residuals 10 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # ICSNP package twosamp_fit2 &lt;- HotellingsT2(cbind(steel$Yield, steel$Strength) ~ factor(steel$Temp)) twosamp_fit2 #&gt; #&gt; Hotelling&#39;s two sample T2-test #&gt; #&gt; data: cbind(steel$Yield, steel$Strength) by factor(steel$Temp) #&gt; T.2 = 10.76, df1 = 2, df2 = 9, p-value = 0.004106 #&gt; alternative hypothesis: true location difference is not equal to c(0,0) # reject null. Hence, there is a difference in the means of the bivariate normal distributions References "],["manova.html", "22.1 MANOVA", " 22.1 MANOVA Multivariate Analysis of Variance One-way MANOVA Compare treatment means for h different populations Population 1: \\(\\mathbf{y}_{11}, \\mathbf{y}_{12}, \\dots, \\mathbf{y}_{1n_1} \\sim idd N_p (\\mathbf{\\mu}_1, \\mathbf{\\Sigma})\\) \\(\\vdots\\) Population h: \\(\\mathbf{y}_{h1}, \\mathbf{y}_{h2}, \\dots, \\mathbf{y}_{hn_h} \\sim idd N_p (\\mathbf{\\mu}_h, \\mathbf{\\Sigma})\\) Assumptions Independent random samples from \\(h\\) different populations Common covariance matrices Each population is multivariate normal Calculate the summary statistics \\(\\mathbf{\\bar{y}}_i, \\mathbf{S}\\) and the pooled estimate of the covariance matrix \\(\\mathbf{S}\\) Similar to the univariate one-way ANVOA, we can use the effects model formulation \\(\\mathbf{\\mu}_i = \\mathbf{\\mu} + \\mathbf{\\tau}_i\\), where \\(\\mathbf{\\mu}_i\\) is the population mean for population i \\(\\mathbf{\\mu}\\) is the overall mean effect \\(\\mathbf{\\tau}_i\\) is the treatment effect of the i-th treatment. For the one-way model: \\(\\mathbf{y}_{ij} = \\mu + \\tau_i + \\epsilon_{ij}\\) for \\(i = 1,..,h; j = 1,..., n_i\\) and \\(\\epsilon_{ij} \\sim N_p(\\mathbf{0, \\Sigma})\\) However, the above model is over-parameterized (i.e., infinite number of ways to define \\(\\mathbf{\\mu}\\) and the \\(\\mathbf{\\tau}_i\\)’s such that they add up to \\(\\mu_i\\). Thus we can constrain by having \\[ \\sum_{i=1}^h n_i \\tau_i = 0 \\] or \\[ \\mathbf{\\tau}_h = 0 \\] The observational equivalent of the effects model is \\[ \\begin{aligned} \\mathbf{y}_{ij} &amp;= \\mathbf{\\bar{y}} + (\\mathbf{\\bar{y}}_i - \\mathbf{\\bar{y}}) + (\\mathbf{y}_{ij} - \\mathbf{\\bar{y}}_i) \\\\ &amp;= \\text{overall sample mean} + \\text{treatement effect} + \\text{residual} \\text{ (under univariate ANOVA)} \\end{aligned} \\] After manipulation \\[ \\sum_{i = 1}^h \\sum_{j = 1}^{n_i} (\\mathbf{\\bar{y}}_{ij} - \\mathbf{\\bar{y}})(\\mathbf{\\bar{y}}_{ij} - \\mathbf{\\bar{y}})&#39; = \\sum_{i = 1}^h n_i (\\mathbf{\\bar{y}}_i - \\mathbf{\\bar{y}})(\\mathbf{\\bar{y}}_i - \\mathbf{\\bar{y}})&#39; + \\sum_{i=1}^h \\sum_{j = 1}^{n_i} (\\mathbf{\\bar{y}}_{ij} - \\mathbf{\\bar{y}})(\\mathbf{\\bar{y}}_{ij} - \\mathbf{\\bar{y}}_i)&#39; \\] LHS = Total corrected sums of squares and cross products (SSCP) matrix RHS = 1st term = Treatment (or between subjects) sum of squares and cross product matrix (denoted H;B) 2nd term = residual (or within subject) SSCP matrix denoted (E;W) Note: \\[ \\mathbf{E} = (n_1 - 1)\\mathbf{S}_1 + ... + (n_h -1) \\mathbf{S}_h = (n-h) \\mathbf{S} \\] MANOVA table MONOVA table Source SSCP df Treatment \\(\\mathbf{H}\\) \\(h -1\\) Residual (error) \\(\\mathbf{E}\\) \\(\\sum_{i= 1}^h n_i - h\\) Total Corrected \\(\\mathbf{H + E}\\) \\(\\sum_{i=1}^h n_i -1\\) \\[ H_0: \\tau_1 = \\tau_2 = \\dots = \\tau_h = \\mathbf{0} \\] We consider the relative “sizes” of \\(\\mathbf{E}\\) and \\(\\mathbf{H+E}\\) Wilk’s Lambda Define Wilk’s Lambda \\[ \\Lambda^* = \\frac{|\\mathbf{E}|}{|\\mathbf{H+E}|} \\] Properties: Wilk’s Lambda is equivalent to the F-statistic in the univariate case The exact distribution of \\(\\Lambda^*\\) can be determined for especial cases. For large sample sizes, reject \\(H_0\\) if \\[ -(\\sum_{i=1}^h n_i - 1 - \\frac{p+h}{2}) \\log(\\Lambda^*) &gt; \\chi^2_{(1-\\alpha, p(h-1))} \\] 22.1.1 Testing General Hypotheses \\(h\\) different treatments with the i-th treatment applied to \\(n_i\\) subjects that are observed for \\(p\\) repeated measures. Consider this a \\(p\\) dimensional obs on a random sample from each of \\(h\\) different treatment populations. \\[ \\mathbf{y}_{ij} = \\mathbf{\\mu} + \\mathbf{\\tau}_i + \\mathbf{\\epsilon}_{ij} \\] for \\(i = 1,..,h\\) and \\(j = 1,..,n_i\\) Equivalently, \\[ \\mathbf{Y} = \\mathbf{XB} + \\mathbf{\\epsilon} \\] where \\(n = \\sum_{i = 1}^h n_i\\) and with restriction \\(\\mathbf{\\tau}_h = 0\\) \\[ \\mathbf{Y}_{(n \\times p)} = \\left[ \\begin{array} {c} \\mathbf{y}_{11}&#39; \\\\ \\vdots \\\\ \\mathbf{y}_{1n_1}&#39; \\\\ \\vdots \\\\ \\mathbf{y}_{hn_h}&#39; \\end{array} \\right], \\mathbf{B}_{(h \\times p)} = \\left[ \\begin{array} {c} \\mathbf{\\mu}&#39; \\\\ \\mathbf{\\tau}_1&#39; \\\\ \\vdots \\\\ \\mathbf{\\tau}_{h-1}&#39; \\end{array} \\right], \\mathbf{\\epsilon}_{(n \\times p)} = \\left[ \\begin{array} {c} \\epsilon_{11}&#39; \\\\ \\vdots \\\\ \\epsilon_{1n_1}&#39; \\\\ \\vdots \\\\ \\epsilon_{hn_h}&#39; \\end{array} \\right] \\] \\[ \\mathbf{X}_{(n \\times h)} = \\left[ \\begin{array} {ccccc} 1 &amp; 1 &amp; 0 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; &amp; \\vdots \\\\ 1 &amp; 1 &amp; 0 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\ldots &amp; \\vdots \\\\ 1 &amp; 0 &amp; 0 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; &amp; \\vdots \\\\ 1 &amp; 0 &amp; 0 &amp; \\ldots &amp; 0 \\end{array} \\right] \\] Estimation \\[ \\mathbf{\\hat{B}} = (\\mathbf{X&#39;X})^{-1} \\mathbf{X&#39;Y} \\] Rows of \\(\\mathbf{Y}\\) are independent (i.e., \\(var(\\mathbf{Y}) = \\mathbf{I}_n \\otimes \\mathbf{\\Sigma}\\) , an \\(np \\times np\\) matrix, where \\(\\otimes\\) is the Kronecker product). \\[ H_0: \\mathbf{LBM} = 0 \\\\ H_a: \\mathbf{LBM} \\neq 0 \\] where \\(\\mathbf{L}\\) is a \\(g \\times h\\) matrix of full row rank (\\(g \\le h\\)) = comparisons across groups \\(\\mathbf{M}\\) is a \\(p \\times u\\) matrix of full column rank (\\(u \\le p\\)) = comparisons across traits The general treatment corrected sums of squares and cross product is \\[ \\mathbf{H} = \\mathbf{M&#39;Y&#39;X(X&#39;X)^{-1}L&#39;[L(X&#39;X)^{-1}L&#39;]^{-1}L(X&#39;X)^{-1}X&#39;YM} \\] or for the null hypothesis \\(H_0: \\mathbf{LBM} = \\mathbf{D}\\) \\[ \\mathbf{H} = (\\mathbf{\\hat{LBM}} - \\mathbf{D})&#39;[\\mathbf{X(X&#39;X)^{-1}L}]^{-1}(\\mathbf{\\hat{LBM}} - \\mathbf{D}) \\] The general matrix of residual sums of squares and cross product \\[ \\mathbf{E} = \\mathbf{M&#39;Y&#39;[I-X(X&#39;X)^{-1}X&#39;]YM} = \\mathbf{M&#39;[Y&#39;Y - \\hat{B}&#39;(X&#39;X)^{-1}\\hat{B}]M} \\] We can compute the following statistic eigenvalues of \\(\\mathbf{HE}^{-1}\\) Wilk’s Criterion: \\(\\Lambda^* = \\frac{|\\mathbf{E}|}{|\\mathbf{H} + \\mathbf{E}|}\\) . The df depend on the rank of \\(\\mathbf{L}, \\mathbf{M}, \\mathbf{X}\\) Lawley-Hotelling Trace: \\(U = tr(\\mathbf{HE}^{-1})\\) Pillai Trace: \\(V = tr(\\mathbf{H}(\\mathbf{H}+ \\mathbf{E}^{-1})\\) Roy’s Maximum Root: largest eigenvalue of \\(\\mathbf{HE}^{-1}\\) If \\(H_0\\) is true and n is large, \\(-(n-1- \\frac{p+h}{2})\\ln \\Lambda^* \\sim \\chi^2_{p(h-1)}\\). Some special values of p and h can give exact F-dist under \\(H_0\\) # One-way MANOVA library(car) library(emmeans) library(profileR) library(tidyverse) ## Read in the data gpagmat &lt;- read.table(&quot;images/gpagmat.dat&quot;) ## Change the variable names names(gpagmat) &lt;- c(&quot;y1&quot;, &quot;y2&quot;, &quot;admit&quot;) ## Check the structure str(gpagmat) #&gt; &#39;data.frame&#39;: 85 obs. of 3 variables: #&gt; $ y1 : num 2.96 3.14 3.22 3.29 3.69 3.46 3.03 3.19 3.63 3.59 ... #&gt; $ y2 : int 596 473 482 527 505 693 626 663 447 588 ... #&gt; $ admit: int 1 1 1 1 1 1 1 1 1 1 ... ## Plot the data gg &lt;- ggplot(gpagmat, aes(x = y1, y = y2)) + geom_text(aes(label = admit, col = as.character(admit))) + scale_color_discrete(name = &quot;Admission&quot;, labels = c(&quot;Admit&quot;, &quot;Do not admit&quot;, &quot;Borderline&quot;)) + scale_x_continuous(name = &quot;GPA&quot;) + scale_y_continuous(name = &quot;GMAT&quot;) ## Fit one-way MANOVA oneway_fit &lt;- manova(cbind(y1, y2) ~ admit, data = gpagmat) summary(oneway_fit, test = &quot;Wilks&quot;) #&gt; Df Wilks approx F num Df den Df Pr(&gt;F) #&gt; admit 1 0.6126 25.927 2 82 1.881e-09 *** #&gt; Residuals 83 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # reject the null of equal multivariate mean vectors between the three admmission groups # Repeated Measures MANOVA ## Create data frame stress &lt;- data.frame( subject = 1:8, begin = c(3, 2, 5, 6, 1, 5, 1, 5), middle = c(3, 4, 3, 7, 4, 7, 1, 2), final = c(6, 7, 4, 7, 6, 7, 3, 5) ) # If independent = time with 3 levels -&gt; univariate ANOVA (require sphericity assumption (i.e., the variances for all differences are equal)) # If each level of indepednet time as a separate variable -&gt; MANOVA (does not require sphericity assumption) ## MANOVA stress_mod &lt;- lm(cbind(begin, middle, final) ~ 1, data = stress) idata &lt;- data.frame(time = factor( c(&quot;begin&quot;, &quot;middle&quot;, &quot;final&quot;), levels = c(&quot;begin&quot;, &quot;middle&quot;, &quot;final&quot;) )) repeat_fit &lt;- Anova( stress_mod, idata = idata, idesign = ~ time, icontrasts = &quot;contr.poly&quot; ) summary(repeat_fit) # can&#39;t reject the null hypothesis of sphericity, hence univariate ANOVA is also appropriate. #&gt; #&gt; Type III Repeated Measures MANOVA Tests: #&gt; #&gt; ------------------------------------------ #&gt; #&gt; Term: (Intercept) #&gt; #&gt; Response transformation matrix: #&gt; (Intercept) #&gt; begin 1 #&gt; middle 1 #&gt; final 1 #&gt; #&gt; Sum of squares and products for the hypothesis: #&gt; (Intercept) #&gt; (Intercept) 1352 #&gt; #&gt; Multivariate Tests: (Intercept) #&gt; Df test stat approx F num Df den Df Pr(&gt;F) #&gt; Pillai 1 0.896552 60.66667 1 7 0.00010808 *** #&gt; Wilks 1 0.103448 60.66667 1 7 0.00010808 *** #&gt; Hotelling-Lawley 1 8.666667 60.66667 1 7 0.00010808 *** #&gt; Roy 1 8.666667 60.66667 1 7 0.00010808 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; ------------------------------------------ #&gt; #&gt; Term: time #&gt; #&gt; Response transformation matrix: #&gt; time.L time.Q #&gt; begin -7.071068e-01 0.4082483 #&gt; middle -7.850462e-17 -0.8164966 #&gt; final 7.071068e-01 0.4082483 #&gt; #&gt; Sum of squares and products for the hypothesis: #&gt; time.L time.Q #&gt; time.L 18.062500 6.747781 #&gt; time.Q 6.747781 2.520833 #&gt; #&gt; Multivariate Tests: time #&gt; Df test stat approx F num Df den Df Pr(&gt;F) #&gt; Pillai 1 0.7080717 7.276498 2 6 0.024879 * #&gt; Wilks 1 0.2919283 7.276498 2 6 0.024879 * #&gt; Hotelling-Lawley 1 2.4254992 7.276498 2 6 0.024879 * #&gt; Roy 1 2.4254992 7.276498 2 6 0.024879 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Univariate Type III Repeated-Measures ANOVA Assuming Sphericity #&gt; #&gt; Sum Sq num Df Error SS den Df F value Pr(&gt;F) #&gt; (Intercept) 450.67 1 52.00 7 60.6667 0.0001081 *** #&gt; time 20.58 2 24.75 14 5.8215 0.0144578 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; #&gt; Mauchly Tests for Sphericity #&gt; #&gt; Test statistic p-value #&gt; time 0.7085 0.35565 #&gt; #&gt; #&gt; Greenhouse-Geisser and Huynh-Feldt Corrections #&gt; for Departure from Sphericity #&gt; #&gt; GG eps Pr(&gt;F[GG]) #&gt; time 0.77429 0.02439 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; HF eps Pr(&gt;F[HF]) #&gt; time 0.9528433 0.01611634 # we also see linear significant time effect, but no quadratic time effect ## Polynomial contrasts # What is the reference for the marginal means? ref_grid(stress_mod, mult.name = &quot;time&quot;) #&gt; &#39;emmGrid&#39; object with variables: #&gt; 1 = 1 #&gt; time = multivariate response levels: begin, middle, final # marginal means for the levels of time contr_means &lt;- emmeans(stress_mod, ~ time, mult.name = &quot;time&quot;) contrast(contr_means, method = &quot;poly&quot;) #&gt; contrast estimate SE df t.ratio p.value #&gt; linear 2.12 0.766 7 2.773 0.0276 #&gt; quadratic 1.38 0.944 7 1.457 0.1885 # MANOVA ## Read in Data heart &lt;- read.table(&quot;images/heart.dat&quot;) names(heart) &lt;- c(&quot;drug&quot;, &quot;y1&quot;, &quot;y2&quot;, &quot;y3&quot;, &quot;y4&quot;) ## Create a subject ID nested within drug heart &lt;- heart %&gt;% group_by(drug) %&gt;% mutate(subject = row_number()) %&gt;% ungroup() str(heart) #&gt; tibble [24 × 6] (S3: tbl_df/tbl/data.frame) #&gt; $ drug : chr [1:24] &quot;ax23&quot; &quot;ax23&quot; &quot;ax23&quot; &quot;ax23&quot; ... #&gt; $ y1 : int [1:24] 72 78 71 72 66 74 62 69 85 82 ... #&gt; $ y2 : int [1:24] 86 83 82 83 79 83 73 75 86 86 ... #&gt; $ y3 : int [1:24] 81 88 81 83 77 84 78 76 83 80 ... #&gt; $ y4 : int [1:24] 77 82 75 69 66 77 70 70 80 84 ... #&gt; $ subject: int [1:24] 1 2 3 4 5 6 7 8 1 2 ... ## Create means summary for profile plot, pivot longer for plotting with ggplot heart_means &lt;- heart %&gt;% group_by(drug) %&gt;% summarize_at(vars(starts_with(&quot;y&quot;)), mean) %&gt;% ungroup() %&gt;% pivot_longer(-drug, names_to = &quot;time&quot;, values_to = &quot;mean&quot;) %&gt;% mutate(time = as.numeric(as.factor(time))) gg_profile &lt;- ggplot(heart_means, aes(x = time, y = mean)) + geom_line(aes(col = drug)) + geom_point(aes(col = drug)) + ggtitle(&quot;Profile Plot&quot;) + scale_y_continuous(name = &quot;Response&quot;) + scale_x_discrete(name = &quot;Time&quot;) gg_profile ## Fit model heart_mod &lt;- lm(cbind(y1, y2, y3, y4) ~ drug, data = heart) man_fit &lt;- car::Anova(heart_mod) summary(man_fit) #&gt; #&gt; Type II MANOVA Tests: #&gt; #&gt; Sum of squares and products for error: #&gt; y1 y2 y3 y4 #&gt; y1 641.00 601.750 535.250 426.00 #&gt; y2 601.75 823.875 615.500 534.25 #&gt; y3 535.25 615.500 655.875 555.25 #&gt; y4 426.00 534.250 555.250 674.50 #&gt; #&gt; ------------------------------------------ #&gt; #&gt; Term: drug #&gt; #&gt; Sum of squares and products for the hypothesis: #&gt; y1 y2 y3 y4 #&gt; y1 567.00 335.2500 42.7500 387.0 #&gt; y2 335.25 569.0833 404.5417 367.5 #&gt; y3 42.75 404.5417 391.0833 171.0 #&gt; y4 387.00 367.5000 171.0000 316.0 #&gt; #&gt; Multivariate Tests: drug #&gt; Df test stat approx F num Df den Df Pr(&gt;F) #&gt; Pillai 2 1.283456 8.508082 8 38 1.5010e-06 *** #&gt; Wilks 2 0.079007 11.509581 8 36 6.3081e-08 *** #&gt; Hotelling-Lawley 2 7.069384 15.022441 8 34 3.9048e-09 *** #&gt; Roy 2 6.346509 30.145916 4 19 5.4493e-08 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # reject the null hypothesis of no difference in means between treatments reject the null hypothesis of no difference in means between treatments ## Contrasts heart$drug &lt;- factor(heart$drug) L &lt;- matrix(c(0, 2, 1, -1,-1, -1), nrow = 3, byrow = T) colnames(L) &lt;- c(&quot;bww9:ctrl&quot;, &quot;ax23:rest&quot;) rownames(L) &lt;- unique(heart$drug) contrasts(heart$drug) &lt;- L contrasts(heart$drug) #&gt; bww9:ctrl ax23:rest #&gt; ax23 0 2 #&gt; bww9 1 -1 #&gt; ctrl -1 -1 # do not set contrast L if you do further analysis (e.g., Anova, lm) # do M matrix instead M &lt;- matrix(c(1, -1, 0, 0, 0, 1, -1, 0, 0, 0, 1, -1), nrow = 4) ## update model to test contrasts heart_mod2 &lt;- update(heart_mod) coef(heart_mod2) #&gt; y1 y2 y3 y4 #&gt; (Intercept) 75.00 78.9583333 77.041667 74.75 #&gt; drugbww9:ctrl 4.50 5.8125000 3.562500 4.25 #&gt; drugax23:rest -2.25 0.7708333 1.979167 -0.75 # Hypothesis test for bww9 vs control after transformation M # same as linearHypothesis(heart_mod, hypothesis.matrix = c(0,1,-1), P = M) bww9vctrl &lt;- car::linearHypothesis(heart_mod2, hypothesis.matrix = c(0, 1, 0), P = M) bww9vctrl #&gt; #&gt; Response transformation matrix: #&gt; [,1] [,2] [,3] #&gt; y1 1 0 0 #&gt; y2 -1 1 0 #&gt; y3 0 -1 1 #&gt; y4 0 0 -1 #&gt; #&gt; Sum of squares and products for the hypothesis: #&gt; [,1] [,2] [,3] #&gt; [1,] 27.5625 -47.25 14.4375 #&gt; [2,] -47.2500 81.00 -24.7500 #&gt; [3,] 14.4375 -24.75 7.5625 #&gt; #&gt; Sum of squares and products for error: #&gt; [,1] [,2] [,3] #&gt; [1,] 261.375 -141.875 28.000 #&gt; [2,] -141.875 248.750 -19.375 #&gt; [3,] 28.000 -19.375 219.875 #&gt; #&gt; Multivariate Tests: #&gt; Df test stat approx F num Df den Df Pr(&gt;F) #&gt; Pillai 1 0.2564306 2.184141 3 19 0.1233 #&gt; Wilks 1 0.7435694 2.184141 3 19 0.1233 #&gt; Hotelling-Lawley 1 0.3448644 2.184141 3 19 0.1233 #&gt; Roy 1 0.3448644 2.184141 3 19 0.1233 bww9vctrl &lt;- car::linearHypothesis(heart_mod, hypothesis.matrix = c(0, 1, -1), P = M) bww9vctrl #&gt; #&gt; Response transformation matrix: #&gt; [,1] [,2] [,3] #&gt; y1 1 0 0 #&gt; y2 -1 1 0 #&gt; y3 0 -1 1 #&gt; y4 0 0 -1 #&gt; #&gt; Sum of squares and products for the hypothesis: #&gt; [,1] [,2] [,3] #&gt; [1,] 27.5625 -47.25 14.4375 #&gt; [2,] -47.2500 81.00 -24.7500 #&gt; [3,] 14.4375 -24.75 7.5625 #&gt; #&gt; Sum of squares and products for error: #&gt; [,1] [,2] [,3] #&gt; [1,] 261.375 -141.875 28.000 #&gt; [2,] -141.875 248.750 -19.375 #&gt; [3,] 28.000 -19.375 219.875 #&gt; #&gt; Multivariate Tests: #&gt; Df test stat approx F num Df den Df Pr(&gt;F) #&gt; Pillai 1 0.2564306 2.184141 3 19 0.1233 #&gt; Wilks 1 0.7435694 2.184141 3 19 0.1233 #&gt; Hotelling-Lawley 1 0.3448644 2.184141 3 19 0.1233 #&gt; Roy 1 0.3448644 2.184141 3 19 0.1233 there is no significant difference in means between the control and bww9 drug # Hypothesis test for ax23 vs rest after transformation M axx23vrest &lt;- car::linearHypothesis(heart_mod2, hypothesis.matrix = c(0, 0, 1), P = M) axx23vrest #&gt; #&gt; Response transformation matrix: #&gt; [,1] [,2] [,3] #&gt; y1 1 0 0 #&gt; y2 -1 1 0 #&gt; y3 0 -1 1 #&gt; y4 0 0 -1 #&gt; #&gt; Sum of squares and products for the hypothesis: #&gt; [,1] [,2] [,3] #&gt; [1,] 438.0208 175.20833 -395.7292 #&gt; [2,] 175.2083 70.08333 -158.2917 #&gt; [3,] -395.7292 -158.29167 357.5208 #&gt; #&gt; Sum of squares and products for error: #&gt; [,1] [,2] [,3] #&gt; [1,] 261.375 -141.875 28.000 #&gt; [2,] -141.875 248.750 -19.375 #&gt; [3,] 28.000 -19.375 219.875 #&gt; #&gt; Multivariate Tests: #&gt; Df test stat approx F num Df den Df Pr(&gt;F) #&gt; Pillai 1 0.855364 37.45483 3 19 3.5484e-08 *** #&gt; Wilks 1 0.144636 37.45483 3 19 3.5484e-08 *** #&gt; Hotelling-Lawley 1 5.913921 37.45483 3 19 3.5484e-08 *** #&gt; Roy 1 5.913921 37.45483 3 19 3.5484e-08 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 axx23vrest &lt;- car::linearHypothesis(heart_mod, hypothesis.matrix = c(2, -1, 1), P = M) axx23vrest #&gt; #&gt; Response transformation matrix: #&gt; [,1] [,2] [,3] #&gt; y1 1 0 0 #&gt; y2 -1 1 0 #&gt; y3 0 -1 1 #&gt; y4 0 0 -1 #&gt; #&gt; Sum of squares and products for the hypothesis: #&gt; [,1] [,2] [,3] #&gt; [1,] 402.5208 127.41667 -390.9375 #&gt; [2,] 127.4167 40.33333 -123.7500 #&gt; [3,] -390.9375 -123.75000 379.6875 #&gt; #&gt; Sum of squares and products for error: #&gt; [,1] [,2] [,3] #&gt; [1,] 261.375 -141.875 28.000 #&gt; [2,] -141.875 248.750 -19.375 #&gt; [3,] 28.000 -19.375 219.875 #&gt; #&gt; Multivariate Tests: #&gt; Df test stat approx F num Df den Df Pr(&gt;F) #&gt; Pillai 1 0.842450 33.86563 3 19 7.9422e-08 *** #&gt; Wilks 1 0.157550 33.86563 3 19 7.9422e-08 *** #&gt; Hotelling-Lawley 1 5.347205 33.86563 3 19 7.9422e-08 *** #&gt; Roy 1 5.347205 33.86563 3 19 7.9422e-08 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 there is a significant difference in means between ax23 drug treatment and the rest of the treatments 22.1.2 Profile Analysis Examine similarities between the treatment effects (between subjects), which is useful for longitudinal analysis. Null is that all treatments have the same average effect. \\[ H_0: \\mu_1 = \\mu_2 = \\dots = \\mu_h \\] Equivalently, \\[ H_0: \\tau_1 = \\tau_2 = \\dots = \\tau_h \\] The exact nature of the similarities and differences between the treatments can be examined under this analysis. Sequential steps in profile analysis: Are the profiles parallel? (i.e., is there no interaction between treatment and time) Are the profiles coincidental? (i.e., are the profiles identical?) Are the profiles horizontal? (i.e., are there no differences between any time points?) If we reject the null hypothesis that the profiles are parallel, we can test Are there differences among groups within some subset of the total time points? Are there differences among time points in a particular group (or groups)? Are there differences within some subset of the total time points in a particular group (or groups)? Example 4 times (p = 4) 3 treatments (h=3) 22.1.2.1 Parallel Profile Are the profiles for each population identical expect for a mean shift? \\[ H_0: \\mu_{11} - \\mu_{21} - \\mu_{12} - \\mu_{22} = \\dots = \\mu_{1t} - \\mu_{2t} \\\\ \\mu_{11} - \\mu_{31} - \\mu_{12} - \\mu_{32} = \\dots = \\mu_{1t} - \\mu_{3t} \\\\ \\dots \\] for \\(h-1\\) equations Equivalently, \\[ H_0: \\mathbf{LBM = 0} \\] \\[ \\mathbf{LBM} = \\left[ \\begin{array} {ccc} 1 &amp; -1 &amp; 0 \\\\ 1 &amp; 0 &amp; -1 \\end{array} \\right] \\left[ \\begin{array} {ccc} \\mu_{11} &amp; \\dots &amp; \\mu_{14} \\\\ \\mu_{21} &amp; \\dots &amp; \\mu_{24} \\\\ \\mu_{31} &amp; \\dots &amp; \\mu_{34} \\end{array} \\right] \\left[ \\begin{array} {ccc} 1 &amp; 1 &amp; 1 \\\\ -1 &amp; 0 &amp; 0 \\\\ 0 &amp; -1 &amp; 0 \\\\ 0 &amp; 0 &amp; -1 \\end{array} \\right] = \\mathbf{0} \\] where this is the cell means parameterization of \\(\\mathbf{B}\\) The multiplication of the first 2 matrices \\(\\mathbf{LB}\\) is \\[ \\left[ \\begin{array} {cccc} \\mu_{11} - \\mu_{21} &amp; \\mu_{12} - \\mu_{22} &amp; \\mu_{13} - \\mu_{23} &amp; \\mu_{14} - \\mu_{24}\\\\ \\mu_{11} - \\mu_{31} &amp; \\mu_{12} - \\mu_{32} &amp; \\mu_{13} - \\mu_{33} &amp; \\mu_{14} - \\mu_{34} \\end{array} \\right] \\] which is the differences in treatment means at the same time Multiplying by \\(\\mathbf{M}\\), we get the comparison across time \\[ \\left[ \\begin{array} {ccc} (\\mu_{11} - \\mu_{21}) - (\\mu_{12} - \\mu_{22}) &amp; (\\mu_{11} - \\mu_{21}) -(\\mu_{13} - \\mu_{23}) &amp; (\\mu_{11} - \\mu_{21}) - (\\mu_{14} - \\mu_{24}) \\\\ (\\mu_{11} - \\mu_{31}) - (\\mu_{12} - \\mu_{32}) &amp; (\\mu_{11} - \\mu_{31}) - (\\mu_{13} - \\mu_{33}) &amp; (\\mu_{11} - \\mu_{31}) -(\\mu_{14} - \\mu_{34}) \\end{array} \\right] \\] Alternatively, we can also use the effects parameterization \\[ \\mathbf{LBM} = \\left[ \\begin{array} {cccc} 0 &amp; 1 &amp; -1 &amp; 0 \\\\ 0 &amp; 1 &amp; 0 &amp; -1 \\end{array} \\right] \\left[ \\begin{array} {c} \\mu&#39; \\\\ \\tau&#39;_1 \\\\ \\tau_2&#39; \\\\ \\tau_3&#39; \\end{array} \\right] \\left[ \\begin{array} {ccc} 1 &amp; 1 &amp; 1 \\\\ -1 &amp; 0 &amp; 0 \\\\ 0 &amp; -1 &amp; 0 \\\\ 0 &amp; 0 &amp; -1 \\end{array} \\right] = \\mathbf{0} \\] In both parameterizations, \\(rank(\\mathbf{L}) = h-1\\) and \\(rank(\\mathbf{M}) = p-1\\) We could also choose \\(\\mathbf{L}\\) and \\(\\mathbf{M}\\) in other forms \\[ \\mathbf{L} = \\left[ \\begin{array} {cccc} 0 &amp; 1 &amp; 0 &amp; -1 \\\\ 0 &amp; 0 &amp; 1 &amp; -1 \\end{array} \\right] \\] and \\[ \\mathbf{M} = \\left[ \\begin{array} {ccc} 1 &amp; 0 &amp; 0 \\\\ -1 &amp; 1 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 \\\\ 0 &amp; 0 &amp; -1 \\end{array} \\right] \\] and still obtain the same result. 22.1.2.2 Coincidental Profiles After we have evidence that the profiles are parallel (i.e., fail to reject the parallel profile test), we can ask whether they are identical? Given profiles are parallel, then if the sums of the components of \\(\\mu_i\\) are identical for all the treatments, then the profiles are identical. \\[ H_0: \\mathbf{1&#39;}_p \\mu_1 = \\mathbf{1&#39;}_p \\mu_2 = \\dots = \\mathbf{1&#39;}_p \\mu_h \\] Equivalently, \\[ H_0: \\mathbf{LBM} = \\mathbf{0} \\] where for the cell means parameterization \\[ \\mathbf{L} = \\left[ \\begin{array} {ccc} 1 &amp; 0 &amp; -1 \\\\ 0 &amp; 1 &amp; -1 \\end{array} \\right] \\] and \\[ \\mathbf{M} = \\left[ \\begin{array} {cccc} 1 &amp; 1 &amp; 1 &amp; 1 \\end{array} \\right]&#39; \\] multiplication yields \\[ \\left[ \\begin{array} {c} (\\mu_{11} + \\mu_{12} + \\mu_{13} + \\mu_{14}) - (\\mu_{31} + \\mu_{32} + \\mu_{33} + \\mu_{34}) \\\\ (\\mu_{21} + \\mu_{22} + \\mu_{23} + \\mu_{24}) - (\\mu_{31} + \\mu_{32} + \\mu_{33} + \\mu_{34}) \\end{array} \\right] = \\left[ \\begin{array} {c} 0 \\\\ 0 \\end{array} \\right] \\] Different choices of \\(\\mathbf{L}\\) and \\(\\mathbf{M}\\) can yield the same result 22.1.2.3 Horizontal Profiles Given that we can’t reject the null hypothesis that all \\(h\\) profiles are the same, we can ask whether all of the elements of the common profile equal? (i.e., horizontal) \\[ H_0: \\mathbf{LBM} = \\mathbf{0} \\] \\[ \\mathbf{L} = \\left[ \\begin{array} {ccc} 1 &amp; 0 &amp; 0 \\end{array} \\right] \\] and \\[ \\mathbf{M} = \\left[ \\begin{array} {ccc} 1 &amp; 0 &amp; 0 \\\\ -1 &amp; 1 &amp; 0 \\\\ 0 &amp; -1 &amp; 1 \\\\ 0 &amp; 0 &amp; -1 \\end{array} \\right] \\] hence, \\[ \\left[ \\begin{array} {ccc} (\\mu_{11} - \\mu_{12}) &amp; (\\mu_{12} - \\mu_{13}) &amp; (\\mu_{13} + \\mu_{14}) \\end{array} \\right] = \\left[ \\begin{array} {ccc} 0 &amp; 0 &amp; 0 \\end{array} \\right] \\] Note: If we fail to reject all 3 hypotheses, then we fail to reject the null hypotheses of both no difference between treatments and no differences between traits. Test Equivalent test for Parallel profile Interaction Coincidental profile main effect of between-subjects factor Horizontal profile main effect of repeated measures factor profile_fit &lt;- pbg( data = as.matrix(heart[, 2:5]), group = as.matrix(heart[, 1]), original.names = TRUE, profile.plot = FALSE ) summary(profile_fit) #&gt; Call: #&gt; pbg(data = as.matrix(heart[, 2:5]), group = as.matrix(heart[, #&gt; 1]), original.names = TRUE, profile.plot = FALSE) #&gt; #&gt; Hypothesis Tests: #&gt; $`Ho: Profiles are parallel` #&gt; Multivariate.Test Statistic Approx.F num.df den.df p.value #&gt; 1 Wilks 0.1102861 12.737599 6 38 7.891497e-08 #&gt; 2 Pillai 1.0891707 7.972007 6 40 1.092397e-05 #&gt; 3 Hotelling-Lawley 6.2587852 18.776356 6 36 9.258571e-10 #&gt; 4 Roy 5.9550887 39.700592 3 20 1.302458e-08 #&gt; #&gt; $`Ho: Profiles have equal levels` #&gt; Df Sum Sq Mean Sq F value Pr(&gt;F) #&gt; group 2 328.7 164.35 5.918 0.00915 ** #&gt; Residuals 21 583.2 27.77 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; $`Ho: Profiles are flat` #&gt; F df1 df2 p-value #&gt; 1 14.30928 3 19 4.096803e-05 # reject null hypothesis of parallel profiles # reject the null hypothesis of coincidental profiles # reject the null hypothesis that the profiles are flat 22.1.3 Summary "],["principal-components.html", "22.2 Principal Components", " 22.2 Principal Components Unsupervised learning find important features reduce the dimensions of the data set “decorrelate” multivariate vectors that have dependence. uses eigenvector/eigvenvalue decomposition of covariance (correlation) matrices. According to the “spectral decomposition theorem”, if \\(\\mathbf{\\Sigma}_{p \\times p}\\) i s a positive semi-definite, symmetric, real matrix, then there exists an orthogonal matrix \\(\\mathbf{A}\\) such that \\(\\mathbf{A&#39;\\Sigma A} = \\Lambda\\) where \\(\\Lambda\\) is a diagonal matrix containing the eigenvalues \\(\\mathbf{\\Sigma}\\) \\[ \\mathbf{\\Lambda} = \\left( \\begin{array} {cccc} \\lambda_1 &amp; 0 &amp; \\ldots &amp; 0 \\\\ 0 &amp; \\lambda_2 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\ldots &amp; \\lambda_p \\end{array} \\right) \\] \\[ \\mathbf{A} = \\left( \\begin{array} {cccc} \\mathbf{a}_1 &amp; \\mathbf{a}_2 &amp; \\ldots &amp; \\mathbf{a}_p \\end{array} \\right) \\] the i-th column of \\(\\mathbf{A}\\) , \\(\\mathbf{a}_i\\), is the i-th \\(p \\times 1\\) eigenvector of \\(\\mathbf{\\Sigma}\\) that corresponds to the eigenvalue, \\(\\lambda_i\\) , where \\(\\lambda_1 \\ge \\lambda_2 \\ge \\ldots \\ge \\lambda_p\\) . Alternatively, express in matrix decomposition: \\[ \\mathbf{\\Sigma} = \\mathbf{A \\Lambda A}&#39; \\] \\[ \\mathbf{\\Sigma} = \\mathbf{A} \\left( \\begin{array} {cccc} \\lambda_1 &amp; 0 &amp; \\ldots &amp; 0 \\\\ 0 &amp; \\lambda_2 &amp; \\ldots &amp; 0 \\\\ \\vdots &amp; \\vdots&amp; \\ddots &amp; \\vdots \\\\ 0 &amp; 0 &amp; \\ldots &amp; \\lambda_p \\end{array} \\right) \\mathbf{A}&#39; = \\sum_{i=1}^p \\lambda_i \\mathbf{a}_i \\mathbf{a}_i&#39; \\] where the outer product \\(\\mathbf{a}_i \\mathbf{a}_i&#39;\\) is a \\(p \\times p\\) matrix of rank 1. For example, \\(\\mathbf{x} \\sim N_2(\\mathbf{\\mu}, \\mathbf{\\Sigma})\\) \\[ \\mathbf{\\mu} = \\left( \\begin{array} {c} 5 \\\\ 12 \\end{array} \\right); \\mathbf{\\Sigma} = \\left( \\begin{array} {cc} 4 &amp; 1 \\\\ 1 &amp; 2 \\end{array} \\right) \\] library(MASS) mu = as.matrix(c(5,12)) Sigma = matrix(c(4,1,1,2),nrow = 2, byrow = T) sim &lt;- mvrnorm(n = 1000, mu = mu, Sigma = Sigma) plot(sim[,1],sim[,2]) Here, \\[ \\mathbf{A} = \\left( \\begin{array} {cc} 0.9239 &amp; -0.3827 \\\\ 0.3827 &amp; 0.9239 \\\\ \\end{array} \\right) \\] Columns of \\(\\mathbf{A}\\) are the eigenvectors for the decomposition Under matrix multiplication (\\(\\mathbf{A&#39;\\Sigma A}\\) or \\(\\mathbf{A&#39;A}\\) ), the off-diagonal elements equal to 0 Multiplying data by this matrix (i.e., projecting the data onto the orthogonal axes); the distriubiton of the resulting data (i.e., “scores”) is \\[ N_2 (\\mathbf{A&#39;\\mu,A&#39;\\Sigma A}) = N_2 (\\mathbf{A&#39;\\mu, \\Lambda}) \\] Equivalently, \\[ \\mathbf{y} = \\mathbf{A&#39;x} \\sim N \\left[ \\left( \\begin{array} {c} 9.2119 \\\\ 9.1733 \\end{array} \\right), \\left( \\begin{array} {cc} 4.4144 &amp; 0 \\\\ 0 &amp; 1.5859 \\end{array} \\right) \\right] \\] A_matrix = matrix(c(0.9239,-0.3827,0.3827,0.9239),nrow = 2, byrow = T) t(A_matrix) %*% A_matrix #&gt; [,1] [,2] #&gt; [1,] 1.000051 0.000000 #&gt; [2,] 0.000000 1.000051 sim1 &lt;- mvrnorm(n = 1000, mu = t(A_matrix) %*% mu, Sigma = t(A_matrix) %*% Sigma %*% A_matrix) plot(sim1[,1],sim1[,2]) No more dependence in the data structure, plot Notes: The i-th eigenvalue is the variance of a linear combination of the elements of \\(\\mathbf{x}\\) ; \\(var(y_i) = var(\\mathbf{a&#39;_i x}) = \\lambda_i\\) The values on the transformed set of axes (i.e., the \\(y_i\\)’s) are called the scores. These are the orthogonal projections of the data onto the “new principal component axes Variances of \\(y_1\\) are greater than those for any other possible projection Covariance matrix decomposition and projection onto orthogonal axes = PCA 22.2.1 Population Principal Components \\(p \\times 1\\) vectors \\(\\mathbf{x}_1, \\dots , \\mathbf{x}_n\\) which are iid with \\(var(\\mathbf{x}_i) = \\mathbf{\\Sigma}\\) The first PC is the linear combination \\(y_1 = \\mathbf{a}_1&#39; \\mathbf{x} = a_{11}x_1 + \\dots + a_{1p}x_p\\) with \\(\\mathbf{a}_1&#39; \\mathbf{a}_1 = 1\\) such that \\(var(y_1)\\) is the maximum of all linear combinations of \\(\\mathbf{x}\\) which have unit length The second PC is the linear combination \\(y_1 = \\mathbf{a}_2&#39; \\mathbf{x} = a_{21}x_1 + \\dots + a_{2p}x_p\\) with \\(\\mathbf{a}_2&#39; \\mathbf{a}_2 = 1\\) such that \\(var(y_1)\\) is the maximum of all linear combinations of \\(\\mathbf{x}\\) which have unit length and uncorrelated with \\(y_1\\) (i.e., \\(cov(\\mathbf{a}_1&#39; \\mathbf{x}, \\mathbf{a}&#39;_2 \\mathbf{x}) =0\\) continues for all \\(y_i\\) to \\(y_p\\) \\(\\mathbf{a}_i\\)’s are those that make up the matrix \\(\\mathbf{A}\\) in the symmetric decomposition \\(\\mathbf{A&#39;\\Sigma A} = \\mathbf{\\Lambda}\\) , where \\(var(y_1) = \\lambda_1, \\dots , var(y_p) = \\lambda_p\\) And the total variance of \\(\\mathbf{x}\\) is \\[ \\begin{aligned} var(x_1) + \\dots + var(x_p) &amp;= tr(\\Sigma) = \\lambda_1 + \\dots + \\lambda_p \\\\ &amp;= var(y_1) + \\dots + var(y_p) \\end{aligned} \\] Data Reduction To reduce the dimension of data from p (original) to k dimensions without much “loss of information”, we can use properties of the population principal components Suppose \\(\\mathbf{\\Sigma} \\approx \\sum_{i=1}^k \\lambda_i \\mathbf{a}_i \\mathbf{a}_i&#39;\\) . Even thought the true variance-covariance matrix has rank \\(p\\) , it can be be well approximate by a matrix of rank k (k &lt;p) New “traits” are linear combinations of the measured traits. We can attempt to make meaningful interpretation fo the combinations (with orthogonality constraints). The proportion of the total variance accounted for by the j-th principal component is \\[ \\frac{var(y_j)}{\\sum_{i=1}^p var(y_i)} = \\frac{\\lambda_j}{\\sum_{i=1}^p \\lambda_i} \\] The proportion of the total variation accounted for by the first k principal components is \\(\\frac{\\sum_{i=1}^k \\lambda_i}{\\sum_{i=1}^p \\lambda_i}\\) Above example , we have \\(4.4144/(4+2) = .735\\) of the total variability can be explained by the first principal component 22.2.2 Sample Principal Components Since \\(\\mathbf{\\Sigma}\\) is unknown, we use \\[ \\mathbf{S} = \\frac{1}{n-1}\\sum_{i=1}^n (\\mathbf{x}_i - \\bar{\\mathbf{x}})(\\mathbf{x}_i - \\bar{\\mathbf{x}})&#39; \\] Let \\(\\hat{\\lambda}_1 \\ge \\hat{\\lambda}_2 \\ge \\dots \\ge \\hat{\\lambda}_p \\ge 0\\) be the eigenvalues of \\(\\mathbf{S}\\) and \\(\\hat{\\mathbf{a}}_1, \\hat{\\mathbf{a}}_2, \\dots, \\hat{\\mathbf{a}}_p\\) denote the eigenvectors of \\(\\mathbf{S}\\) Then, the i-th sample principal component score (or principal component or score) is \\[ \\hat{y}_{ij} = \\sum_{k=1}^p \\hat{a}_{ik}x_{kj} = \\hat{\\mathbf{a}}_i&#39;\\mathbf{x}_j \\] Properties of Sample Principal Components The estimated variance of \\(y_i = \\hat{\\mathbf{a}}_i&#39;\\mathbf{x}_j\\) is \\(\\hat{\\lambda}_i\\) The sample covariance between \\(\\hat{y}_i\\) and \\(\\hat{y}_{i&#39;}\\) is 0 when \\(i \\neq i&#39;\\) The proportion of the total sample variance accounted for by the i-th sample principal component is \\(\\frac{\\hat{\\lambda}_i}{\\sum_{k=1}^p \\hat{\\lambda}_k}\\) The estimated correlation between the \\(i\\)-th principal component score and the \\(l\\)-th attribute of \\(\\mathbf{x}\\) is \\[ r_{x_l , \\hat{y}_i} = \\frac{\\hat{a}_{il}\\sqrt{\\lambda_i}}{\\sqrt{s_{ll}}} \\] The correlation coefficient is typically used to interpret the components (i.e., if this correlation is high then it suggests that the l-th original trait is important in the i-th principle component). According to R. A. Johnson, Wichern, et al. (2002), pp.433-434, \\(r_{x_l, \\hat{y}_i}\\) only measures the univariate contribution of an individual X to a component Y without taking into account the presence of the other X’s. Hence, some prefer \\(\\hat{a}_{il}\\) coefficient to interpret the principal component. \\(r_{x_l, \\hat{y}_i} ; \\hat{a}_{il}\\) are referred to as “loadings” To use k principal components, we must calculate the scores for each data vector in the sample \\[ \\mathbf{y}_j = \\left( \\begin{array} {c} y_{1j} \\\\ y_{2j} \\\\ \\vdots \\\\ y_{kj} \\end{array} \\right) = \\left( \\begin{array} {c} \\hat{\\mathbf{a}}_1&#39; \\mathbf{x}_j \\\\ \\hat{\\mathbf{a}}_2&#39; \\mathbf{x}_j \\\\ \\vdots \\\\ \\hat{\\mathbf{a}}_k&#39; \\mathbf{x}_j \\end{array} \\right) = \\left( \\begin{array} {c} \\hat{\\mathbf{a}}_1&#39; \\\\ \\hat{\\mathbf{a}}_2&#39; \\\\ \\vdots \\\\ \\hat{\\mathbf{a}}_k&#39; \\end{array} \\right) \\mathbf{x}_j \\] Issues: Large sample theory exists for eigenvalues and eigenvectors of sample covariance matrices if inference is necessary. But we do not do inference with PCA, we only use it as exploratory or descriptive analysis. PC is not invariant to changes in scale (Exception: if all trait are resecaled by multiplying by the same constant, such as feet to inches). PCA based on the correlation matrix \\(\\mathbf{R}\\) is different than that based on the covariance matrix \\(\\mathbf{\\Sigma}\\) PCA for the correlation matrix is just rescaling each trait to have unit variance Transform \\(\\mathbf{x}\\) to \\(\\mathbf{z}\\) where \\(z_{ij} = (x_{ij} - \\bar{x}_i)/\\sqrt{s_{ii}}\\) where the denominator affects the PCA After transformation, \\(cov(\\mathbf{z}) = \\mathbf{R}\\) PCA on \\(\\mathbf{R}\\) is calculated in the same way as that on \\(\\mathbf{S}\\) (where \\(\\hat{\\lambda}{}_1 + \\dots + \\hat{\\lambda}{}_p = p\\) ) The use of \\(\\mathbf{R}, \\mathbf{S}\\) depends on the purpose of PCA. If the scale of the observations if different, covariance matrix is more preferable. but if they are dramatically different, analysis can still be dominated by the large variance traits. How many PCs to use can be guided by Scree Graphs: plot the eigenvalues against their indices. Look for the “elbow” where the steep decline in the graph suddenly flattens out; or big gaps. minimum Percent of total variation (e.g., choose enough components to have 50% or 90%). can be used for interpretations. Kaiser’s rule: use only those PC with eigenvalues larger than 1 (applied to PCA on the correlation matrix) - ad hoc Compare to the eigenvalue scree plot of data to the scree plot when the data are randomized. 22.2.3 Application PCA on the covariance matrix is usually not preferred due to the fact that PCA is not invariant to changes in scale. Hence, PCA on the correlation matrix is more preferred This also addresses the problem of multicollinearity The eigvenvectors may differ by a multiplication of -1 for different implementation, but same interpretation. library(tidyverse) ## Read in and check data stock &lt;- read.table(&quot;images/stock.dat&quot;) names(stock) &lt;- c(&quot;allied&quot;, &quot;dupont&quot;, &quot;carbide&quot;, &quot;exxon&quot;, &quot;texaco&quot;) str(stock) #&gt; &#39;data.frame&#39;: 100 obs. of 5 variables: #&gt; $ allied : num 0 0.027 0.1228 0.057 0.0637 ... #&gt; $ dupont : num 0 -0.04485 0.06077 0.02995 -0.00379 ... #&gt; $ carbide: num 0 -0.00303 0.08815 0.06681 -0.03979 ... #&gt; $ exxon : num 0.0395 -0.0145 0.0862 0.0135 -0.0186 ... #&gt; $ texaco : num 0 0.0435 0.0781 0.0195 -0.0242 ... ## Covariance matrix of data cov(stock) #&gt; allied dupont carbide exxon texaco #&gt; allied 0.0016299269 0.0008166676 0.0008100713 0.0004422405 0.0005139715 #&gt; dupont 0.0008166676 0.0012293759 0.0008276330 0.0003868550 0.0003109431 #&gt; carbide 0.0008100713 0.0008276330 0.0015560763 0.0004872816 0.0004624767 #&gt; exxon 0.0004422405 0.0003868550 0.0004872816 0.0008023323 0.0004084734 #&gt; texaco 0.0005139715 0.0003109431 0.0004624767 0.0004084734 0.0007587370 ## Correlation matrix of data cor(stock) #&gt; allied dupont carbide exxon texaco #&gt; allied 1.0000000 0.5769244 0.5086555 0.3867206 0.4621781 #&gt; dupont 0.5769244 1.0000000 0.5983841 0.3895191 0.3219534 #&gt; carbide 0.5086555 0.5983841 1.0000000 0.4361014 0.4256266 #&gt; exxon 0.3867206 0.3895191 0.4361014 1.0000000 0.5235293 #&gt; texaco 0.4621781 0.3219534 0.4256266 0.5235293 1.0000000 # cov(scale(stock)) # give the same result ## PCA with covariance cov_pca &lt;- prcomp(stock) # uses singular value decomposition for calculation and an N -1 divisor # alternatively, princomp can do PCA via spectral decomposition, but it has worse numerical accuracy # eigen values cov_results &lt;- data.frame(eigen_values = cov_pca$sdev ^ 2) cov_results %&gt;% mutate(proportion = eigen_values / sum(eigen_values), cumulative = cumsum(proportion)) # first 2 PCs account for 73% variance in the data #&gt; eigen_values proportion cumulative #&gt; 1 0.0035953867 0.60159252 0.6015925 #&gt; 2 0.0007921798 0.13255027 0.7341428 #&gt; 3 0.0007364426 0.12322412 0.8573669 #&gt; 4 0.0005086686 0.08511218 0.9424791 #&gt; 5 0.0003437707 0.05752091 1.0000000 # eigen vectors cov_pca$rotation # prcomp calls rotation #&gt; PC1 PC2 PC3 PC4 PC5 #&gt; allied 0.5605914 0.73884565 -0.1260222 0.28373183 -0.20846832 #&gt; dupont 0.4698673 -0.09286987 -0.4675066 -0.68793190 0.28069055 #&gt; carbide 0.5473322 -0.65401929 -0.1140581 0.50045312 -0.09603973 #&gt; exxon 0.2908932 -0.11267353 0.6099196 -0.43808002 -0.58203935 #&gt; texaco 0.2842017 0.07103332 0.6168831 0.06227778 0.72784638 # princomp calls loadings. # first PC = overall average # second PC compares Allied to Carbide ## PCA with correlation #same as scale(stock) %&gt;% prcomp cor_pca &lt;- prcomp(stock, scale = T) # eigen values cor_results &lt;- data.frame(eigen_values = cor_pca$sdev ^ 2) cor_results %&gt;% mutate(proportion = eigen_values / sum(eigen_values), cumulative = cumsum(proportion)) #&gt; eigen_values proportion cumulative #&gt; 1 2.8564869 0.57129738 0.5712974 #&gt; 2 0.8091185 0.16182370 0.7331211 #&gt; 3 0.5400440 0.10800880 0.8411299 #&gt; 4 0.4513468 0.09026936 0.9313992 #&gt; 5 0.3430038 0.06860076 1.0000000 # first egiven values corresponds to less variance than PCA based on the covariance matrix # eigen vectors cor_pca$rotation #&gt; PC1 PC2 PC3 PC4 PC5 #&gt; allied 0.4635405 -0.2408499 0.6133570 -0.3813727 0.4532876 #&gt; dupont 0.4570764 -0.5090997 -0.1778996 -0.2113068 -0.6749814 #&gt; carbide 0.4699804 -0.2605774 -0.3370355 0.6640985 0.3957247 #&gt; exxon 0.4216770 0.5252647 -0.5390181 -0.4728036 0.1794482 #&gt; texaco 0.4213291 0.5822416 0.4336029 0.3812273 -0.3874672 # interpretation of PC2 is different from above: it is a comparison of Allied, Dupont and Carbid to Exxon and Texaco Covid Example To reduce collinearity problem in this dataset, we can use principal components as regressors. load(&#39;images/MOcovid.RData&#39;) covidpca &lt;- prcomp(ndat[,-1],scale = T,center = T) covidpca$rotation[,1:2] #&gt; PC1 PC2 #&gt; X..Population.in.Rural.Areas 0.32865838 0.05090955 #&gt; Area..sq..miles. 0.12014444 -0.28579183 #&gt; Population.density..sq..miles. -0.29670124 0.28312922 #&gt; Literacy.rate -0.12517700 -0.08999542 #&gt; Families -0.25856941 0.16485752 #&gt; Area.of.farm.land..sq..miles. 0.02101106 -0.31070363 #&gt; Number.of.farms -0.03814582 -0.44809679 #&gt; Average.value.of.all.property.per.farm..dollars. -0.05410709 0.14404306 #&gt; Estimation.of.rurality.. -0.19040210 0.12089501 #&gt; Male.. 0.02182394 -0.09568768 #&gt; Number.of.Physcians.per.100.000 -0.31451606 0.13598026 #&gt; average.age 0.29414708 0.35593459 #&gt; X0.4.age.proportion -0.11431336 -0.23574057 #&gt; X20.44.age.proportion -0.32802128 -0.22718550 #&gt; X65.and.over.age.proportion 0.30585033 0.32201626 #&gt; prop..White..nonHisp 0.35627561 -0.14142646 #&gt; prop..Hispanic -0.16655381 -0.15105342 #&gt; prop..Black -0.33333359 0.24405802 # Variability of each principal component: pr.var pr.var &lt;- covidpca$sdev ^ 2 # Variance explained by each principal component: pve pve &lt;- pr.var / sum(pr.var) plot( pve, xlab = &quot;Principal Component&quot;, ylab = &quot;Proportion of Variance Explained&quot;, ylim = c(0, 0.5), type = &quot;b&quot; ) plot( cumsum(pve), xlab = &quot;Principal Component&quot;, ylab = &quot;Cumulative Proportion of Variance Explained&quot;, ylim = c(0, 1), type = &quot;b&quot; ) # the first six principe account for around 80% of the variance. #using base lm function for PC regression pcadat &lt;- data.frame(covidpca$x[, 1:6]) pcadat$y &lt;- ndat$Y pcr.man &lt;- lm(log(y) ~ ., pcadat) mean(pcr.man$residuals ^ 2) #&gt; [1] 0.03453371 #comparison to lm w/o prin comps lm.fit &lt;- lm(log(Y) ~ ., data = ndat) mean(lm.fit$residuals ^ 2) #&gt; [1] 0.02335128 MSE for the PC-based model is larger than regular regression, because models with a large degree of collinearity can still perform well. pcr function in pls can be used for fitting PC regression (it will select the optimal number of components in the model). References "],["factor-analysis.html", "22.3 Factor Analysis", " 22.3 Factor Analysis Purpose Using a few linear combinations of underlying unobservable (latent) traits, we try to describe the covariance relationship among a large number of measured traits Similar to PCA, but factor analysis is model based More details can be found on PSU stat or UMN stat Let \\(\\mathbf{y}\\) be the set of \\(p\\) measured variables \\(E(\\mathbf{y}) = \\mathbf{\\mu}\\) \\(var(\\mathbf{y}) = \\mathbf{\\Sigma}\\) We have \\[ \\begin{aligned} \\mathbf{y} - \\mathbf{\\mu} &amp;= \\mathbf{Lf} + \\epsilon \\\\ &amp;= \\left( \\begin{array} {c} l_{11}f_1 + l_{12}f_2 + \\dots + l_{tm}f_m \\\\ \\vdots \\\\ l_{p1}f_1 + l_{p2}f_2 + \\dots + l_{pm} f_m \\end{array} \\right) + \\left( \\begin{array} {c} \\epsilon_1 \\\\ \\vdots \\\\ \\epsilon_p \\end{array} \\right) \\end{aligned} \\] where \\(\\mathbf{y} - \\mathbf{\\mu}\\) = the p centered measurements \\(\\mathbf{L}\\) = \\(p \\times m\\) matrix of factor loadings \\(\\mathbf{f}\\) = unobserved common factors for the population \\(\\mathbf{\\epsilon}\\) = random errors (i.e., variation that is not accounted for by the common factors). We want \\(m\\) (the number of factors) to be much smaller than \\(p\\) (the number of measured attributes) Restrictions on the model \\(E(\\epsilon) = \\mathbf{0}\\) \\(var(\\epsilon) = \\Psi_{p \\times p} = diag( \\psi_1, \\dots, \\psi_p)\\) \\(\\mathbf{\\epsilon}, \\mathbf{f}\\) are independent Additional assumption could be \\(E(\\mathbf{f}) = \\mathbf{0}, var(\\mathbf{f}) = \\mathbf{I}_{m \\times m}\\) (known as the orthogonal factor model) , which imposes the following covariance structure on \\(\\mathbf{y}\\) \\[ \\begin{aligned} var(\\mathbf{y}) = \\mathbf{\\Sigma} &amp;= var(\\mathbf{Lf} + \\mathbf{\\epsilon}) \\\\ &amp;= var(\\mathbf{Lf}) + var(\\epsilon) \\\\ &amp;= \\mathbf{L} var(\\mathbf{f}) \\mathbf{L}&#39; + \\mathbf{\\Psi} \\\\ &amp;= \\mathbf{LIL}&#39; + \\mathbf{\\Psi} \\\\ &amp;= \\mathbf{LL}&#39; + \\mathbf{\\Psi} \\end{aligned} \\] Since \\(\\mathbf{\\Psi}\\) is diagonal, the off-diagonal elements of \\(\\mathbf{LL}&#39;\\) are \\(\\sigma_{ij}\\), the co variances in \\(\\mathbf{\\Sigma}\\), which means \\(cov(y_i, y_j) = \\sum_{k=1}^m l_{ik}l_{jk}\\) and the covariance of \\(\\mathbf{y}\\) is completely determined by the m factors ( \\(m &lt;&lt;p\\)) \\(var(y_i) = \\sum_{k=1}^m l_{ik}^2 + \\psi_i\\) where \\(\\psi_i\\) is the specific variance and the summation term is the i-th communality (i.e., portion of the variance of the i-th variable contributed by the \\(m\\) common factors (\\(h_i^2 = \\sum_{k=1}^m l_{ik}^2\\)) The factor model is only uniquely determined up to an orthogonal transformation of the factors. Let \\(\\mathbf{T}_{m \\times m}\\) be an orthogonal matrix \\(\\mathbf{TT}&#39; = \\mathbf{T&#39;T} = \\mathbf{I}\\) then \\[ \\begin{aligned} \\mathbf{y} - \\mathbf{\\mu} &amp;= \\mathbf{Lf} + \\epsilon \\\\ &amp;= \\mathbf{LTT&#39;f} + \\epsilon \\\\ &amp;= \\mathbf{L}^*(\\mathbf{T&#39;f}) + \\epsilon &amp; \\text{where } \\mathbf{L}^* = \\mathbf{LT} \\end{aligned} \\] and \\[ \\begin{aligned} \\mathbf{\\Sigma} &amp;= \\mathbf{LL}&#39; + \\mathbf{\\Psi} \\\\ &amp;= \\mathbf{LTT&#39;L} + \\mathbf{\\Psi} \\\\ &amp;= (\\mathbf{L}^*)(\\mathbf{L}^*)&#39; + \\mathbf{\\Psi} \\end{aligned} \\] Hence, any orthogonal transformation of the factors is an equally good description of the correlations among the observed traits. Let \\(\\mathbf{y} = \\mathbf{Cx}\\) , where \\(\\mathbf{C}\\) is any diagonal matrix, then \\(\\mathbf{L}_y = \\mathbf{CL}_x\\) and \\(\\mathbf{\\Psi}_y = \\mathbf{C\\Psi}_x\\mathbf{C}\\) Hence, we can see that factor analysis is also invariant to changes in scale 22.3.1 Methods of Estimation To estimate \\(\\mathbf{L}\\) Principal Component Method Principal Factor Method 22.3.1.3 22.3.1.1 Principal Component Method Spectral decomposition \\[ \\begin{aligned} \\mathbf{\\Sigma} &amp;= \\lambda_1 \\mathbf{a}_1 \\mathbf{a}_1&#39; + \\dots + \\lambda_p \\mathbf{a}_p \\mathbf{a}_p&#39; \\\\ &amp;= \\mathbf{A\\Lambda A}&#39; \\\\ &amp;= \\sum_{k=1}^m \\lambda+k \\mathbf{a}_k \\mathbf{a}_k&#39; + \\sum_{k= m+1}^p \\lambda_k \\mathbf{a}_k \\mathbf{a}_k&#39; \\\\ &amp;= \\sum_{k=1}^m l_k l_k&#39; + \\sum_{k=m+1}^p \\lambda_k \\mathbf{a}_k \\mathbf{a}_k&#39; \\end{aligned} \\] where \\(l_k = \\mathbf{a}_k \\sqrt{\\lambda_k}\\) and the second term is not diagonal in general. Assume \\[ \\psi_i = \\sigma_{ii} - \\sum_{k=1}^m l_{ik}^2 = \\sigma_{ii} - \\sum_{k=1}^m \\lambda_i a_{ik}^2 \\] then \\[ \\mathbf{\\Sigma} \\approx \\mathbf{LL}&#39; + \\mathbf{\\Psi} \\] To estimate \\(\\mathbf{L}\\) and \\(\\Psi\\) , we use the expected eigenvalues and eigenvectors from \\(\\mathbf{S}\\) or \\(\\mathbf{R}\\) The estimated factor loadings don’t change as the number of actors increases The diagonal elements of \\(\\hat{\\mathbf{L}}\\hat{\\mathbf{L}}&#39; + \\hat{\\mathbf{\\Psi}}\\) are equal to the diagonal elements of \\(\\mathbf{S}\\) and \\(\\mathbf{R}\\), but the covariances may not be exactly reproduced We select \\(m\\) so that the off-diagonal elements close to the values in \\(\\mathbf{S}\\) (or to make the off-diagonal elements of \\(\\mathbf{S} - \\hat{\\mathbf{L}} \\hat{\\mathbf{L}}&#39; + \\hat{\\mathbf{\\Psi}}\\) small) 22.3.1.2 Principal Factor Method Consider modeling the correlation matrix, \\(\\mathbf{R} = \\mathbf{L} \\mathbf{L}&#39; + \\mathbf{\\Psi}\\) . Then \\[ \\mathbf{L} \\mathbf{L}&#39; = \\mathbf{R} - \\mathbf{\\Psi} = \\left( \\begin{array} {cccc} h_1^2 &amp; r_{12} &amp; \\dots &amp; r_{1p} \\\\ r_{21} &amp; h_2^2 &amp; \\dots &amp; r_{2p} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ r_{p1} &amp; r_{p2} &amp; \\dots &amp; h_p^2 \\end{array} \\right) \\] where \\(h_i^2 = 1- \\psi_i\\) (the communality) Suppose that initial estimates are available for the communalities, \\((h_1^*)^2,(h_2^*)^2, \\dots , (h_p^*)^2\\), then we can regress each trait on all the others, and then use the \\(r^2\\) as \\(h^2\\) The estimate of \\(\\mathbf{R} - \\mathbf{\\Psi}\\) at step k is \\[ (\\mathbf{R} - \\mathbf{\\Psi})_k = \\left( \\begin{array} {cccc} (h_1^*)^2 &amp; r_{12} &amp; \\dots &amp; r_{1p} \\\\ r_{21} &amp; (h_2^*)^2 &amp; \\dots &amp; r_{2p} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ r_{p1} &amp; r_{p2} &amp; \\dots &amp; (h_p^*)^2 \\end{array} \\right) = \\mathbf{L}_k^*(\\mathbf{L}_k^*)&#39; \\] where \\[ \\mathbf{L}_k^* = (\\sqrt{\\hat{\\lambda}_1^*\\hat{\\mathbf{a}}_1^* , \\dots \\hat{\\lambda}_m^*\\hat{\\mathbf{a}}_m^*}) \\] and \\[ \\hat{\\psi}_{i,k}^* = 1 - \\sum_{j=1}^m \\hat{\\lambda}_i^* (\\hat{a}_{ij}^*)^2 \\] we used the spectral decomposition on the estimated matrix \\((\\mathbf{R}- \\mathbf{\\Psi})\\) to calculate the \\(\\hat{\\lambda}_i^* s\\) and the \\(\\mathbf{\\hat{a}}_i^* s\\) After updating the values of \\((\\hat{h}_i^*)^2 = 1 - \\hat{\\psi}_{i,k}^*\\) we will use them to form a new \\(\\mathbf{L}_{k+1}^*\\) via another spectral decomposition. Repeat the process Notes: The matrix \\((\\mathbf{R} - \\mathbf{\\Psi})_k\\) is not necessarily positive definite The principal component method is similar to principal factor if one considers the initial communalities are \\(h^2 = 1\\) if \\(m\\) is too large, some communalities may become larger than 1, causing the iterations to terminate. To combat, we can fix any communality that is greater than 1 at 1 and then continues. continue iterations regardless of the size of the communalities. However, results can be outside fo the parameter space. 22.3.1.3 Maximum Likelihood Method Since we need the likelihood function, we make the additional (critical) assumption that \\(\\mathbf{y}_j \\sim N(\\mathbf{\\mu},\\mathbf{\\Sigma})\\) for \\(j = 1,..,n\\) \\(\\mathbf{f} \\sim N(\\mathbf{0}, \\mathbf{I})\\) \\(\\epsilon_j \\sim N(\\mathbf{0}, \\mathbf{\\Psi})\\) and restriction \\(\\mathbf{L}&#39; \\mathbf{\\Psi}^{-1}\\mathbf{L} = \\mathbf{\\Delta}\\) where \\(\\mathbf{\\Delta}\\) is a diagonal matrix. (since the factor loading matrix is not unique, we need this restriction). Notes: Finding MLE can be computationally expensive we typically use other methods for exploratory data analysis LIkelihood ratio tests could be used for testing hypotheses in this framework (i.e., Confirmatory Factor Analysis) 22.3.2 Factor Rotation \\(\\mathbf{T}_{m \\times m}\\) is an orthogonal matrix that has the property that \\[ \\hat{\\mathbf{L}} \\hat{\\mathbf{L}}&#39; + \\hat{\\mathbf{\\Psi}} = \\hat{\\mathbf{L}}^*(\\hat{\\mathbf{L}}^*)&#39; + \\hat{\\mathbf{\\Psi}} \\] where \\(\\mathbf{L}^* = \\mathbf{LT}\\) This means that estimated specific variances and communalities are not altered by the orthogonal transformation. Since there are an infinite number of choices for \\(\\mathbf{T}\\), some selection criterion is necessary For example, we can find the orthogonal transformation that maximizes the objective function \\[ \\sum_{j = 1}^m [\\frac{1}{p}\\sum_{i=1}^p (\\frac{l_{ij}^{*2}}{h_i})^2 - \\{\\frac{\\gamma}{p} \\sum_{i=1}^p (\\frac{l_{ij}^{*2}}{h_i})^2 \\}^2] \\] where \\(\\frac{l_{ij}^{*2}}{h_i}\\) are “scaled loadings”, which gives variables with small communalities more influence. Different choices of \\(\\gamma\\) in the objective function correspond to different orthogonal rotation found in the literature; Varimax \\(\\gamma = 1\\) (rotate the factors so that each of the \\(p\\) variables should have a high loading on only one factor, but this is not always possible). Quartimax \\(\\gamma = 0\\) Equimax \\(\\gamma = m/2\\) Parsimax \\(\\gamma = \\frac{p(m-1)}{p+m-2}\\) Promax: non-orthogonal or olique transformations Harris-Kaiser (HK): non-orthogonal or oblique transformations 22.3.3 Estimation of Factor Scores Recall \\[ (\\mathbf{y}_j - \\mathbf{\\mu}) = \\mathbf{L}_{p \\times m}\\mathbf{f}_j + \\epsilon_j \\] If the factor model is correct then \\[ var(\\epsilon_j) = \\mathbf{\\Psi} = diag (\\psi_1, \\dots , \\psi_p) \\] Thus we could consider using weighted least squares to estimate \\(\\mathbf{f}_j\\) , the vector of factor scores for the j-th sampled unit by \\[ \\begin{aligned} \\hat{\\mathbf{f}} &amp;= (\\mathbf{L}&#39;\\mathbf{\\Psi}^{-1} \\mathbf{L})^{-1} \\mathbf{L}&#39; \\mathbf{\\Psi}^{-1}(\\mathbf{y}_j - \\mathbf{\\mu}) \\\\ &amp; \\approx (\\mathbf{L}&#39;\\mathbf{\\Psi}^{-1} \\mathbf{L})^{-1} \\mathbf{L}&#39; \\mathbf{\\Psi}^{-1}(\\mathbf{y}_j - \\mathbf{\\bar{y}}) \\end{aligned} \\] 22.3.3.1 The Regression Method Alternatively, we can use the regression method to estimate the factor scores Consider the joint distribution of \\((\\mathbf{y}_j - \\mathbf{\\mu})\\) and \\(\\mathbf{f}_j\\) assuming multivariate normality, as in the maximum likelihood approach. then, \\[ \\left( \\begin{array} {c} \\mathbf{y}_j - \\mathbf{\\mu} \\\\ \\mathbf{f}_j \\end{array} \\right) \\sim N_{p + m} \\left( \\left[ \\begin{array} {cc} \\mathbf{LL}&#39; + \\mathbf{\\Psi} &amp; \\mathbf{L} \\\\ \\mathbf{L}&#39; &amp; \\mathbf{I}_{m\\times m} \\end{array} \\right] \\right) \\] when the \\(m\\) factor model is correct Hence, \\[ E(\\mathbf{f}_j | \\mathbf{y}_j - \\mathbf{\\mu}) = \\mathbf{L}&#39; (\\mathbf{LL}&#39; + \\mathbf{\\Psi})^{-1}(\\mathbf{y}_j - \\mathbf{\\mu}) \\] notice that \\(\\mathbf{L}&#39; (\\mathbf{LL}&#39; + \\mathbf{\\Psi})^{-1}\\) is an \\(m \\times p\\) matrix of regression coefficients Then, we use the estimated conditional mean vector to estimate the factor scores \\[ \\mathbf{\\hat{f}}_j = \\mathbf{\\hat{L}}&#39;(\\mathbf{\\hat{L}}\\mathbf{\\hat{L}}&#39; + \\mathbf{\\hat{\\Psi}})^{-1}(\\mathbf{y}_j - \\mathbf{\\bar{y}}) \\] Alternatively, we could reduce the effect of possible incorrect determination fo the number of factors \\(m\\) by using \\(\\mathbf{S}\\) as a substitute for \\(\\mathbf{\\hat{L}}\\mathbf{\\hat{L}}&#39; + \\mathbf{\\hat{\\Psi}}\\) then \\[ \\mathbf{\\hat{f}}_j = \\mathbf{\\hat{L}}&#39;\\mathbf{S}^{-1}(\\mathbf{y}_j - \\mathbf{\\bar{y}}) \\] where \\(j = 1,\\dots,n\\) 22.3.4 Model Diagnostic Plots Check for outliers (recall that \\(\\mathbf{f}_j \\sim iid N(\\mathbf{0}, \\mathbf{I}_{m \\times m})\\)) Check for multivariate normality assumption Use univariate tests for normality to check the factor scores Confirmatory Factor Analysis: formal testing of hypotheses about loadings, use MLE and full/reduced model testing paradigm and measures of model fit 22.3.5 Application In the psych package, h2 = the communalities u2 = the uniqueness com = the complexity library(psych) library(tidyverse) ## Load the data from the psych package data(Harman.5) Harman.5 #&gt; population schooling employment professional housevalue #&gt; Tract1 5700 12.8 2500 270 25000 #&gt; Tract2 1000 10.9 600 10 10000 #&gt; Tract3 3400 8.8 1000 10 9000 #&gt; Tract4 3800 13.6 1700 140 25000 #&gt; Tract5 4000 12.8 1600 140 25000 #&gt; Tract6 8200 8.3 2600 60 12000 #&gt; Tract7 1200 11.4 400 10 16000 #&gt; Tract8 9100 11.5 3300 60 14000 #&gt; Tract9 9900 12.5 3400 180 18000 #&gt; Tract10 9600 13.7 3600 390 25000 #&gt; Tract11 9600 9.6 3300 80 12000 #&gt; Tract12 9400 11.4 4000 100 13000 # Correlation matrix cor_mat &lt;- cor(Harman.5) cor_mat #&gt; population schooling employment professional housevalue #&gt; population 1.00000000 0.00975059 0.9724483 0.4388708 0.02241157 #&gt; schooling 0.00975059 1.00000000 0.1542838 0.6914082 0.86307009 #&gt; employment 0.97244826 0.15428378 1.0000000 0.5147184 0.12192599 #&gt; professional 0.43887083 0.69140824 0.5147184 1.0000000 0.77765425 #&gt; housevalue 0.02241157 0.86307009 0.1219260 0.7776543 1.00000000 ## Principal Component Method with Correlation cor_pca &lt;- prcomp(Harman.5, scale = T) # eigen values cor_results &lt;- data.frame(eigen_values = cor_pca$sdev ^ 2) cor_results &lt;- cor_results %&gt;% mutate( proportion = eigen_values / sum(eigen_values), cumulative = cumsum(proportion), number = row_number() ) cor_results #&gt; eigen_values proportion cumulative number #&gt; 1 2.87331359 0.574662719 0.5746627 1 #&gt; 2 1.79666009 0.359332019 0.9339947 2 #&gt; 3 0.21483689 0.042967377 0.9769621 3 #&gt; 4 0.09993405 0.019986811 0.9969489 4 #&gt; 5 0.01525537 0.003051075 1.0000000 5 # Scree plot of Eigenvalues scree_gg &lt;- ggplot(cor_results, aes(x = number, y = eigen_values)) + geom_line(alpha = 0.5) + geom_text(aes(label = number)) + scale_x_continuous(name = &quot;Number&quot;) + scale_y_continuous(name = &quot;Eigenvalue&quot;) + theme_bw() scree_gg screeplot(cor_pca, type = &#39;lines&#39;) ## Keep 2 factors based on scree plot and eigenvalues factor_pca &lt;- principal(Harman.5, nfactors = 2, rotate = &quot;none&quot;) factor_pca #&gt; Principal Components Analysis #&gt; Call: principal(r = Harman.5, nfactors = 2, rotate = &quot;none&quot;) #&gt; Standardized loadings (pattern matrix) based upon correlation matrix #&gt; PC1 PC2 h2 u2 com #&gt; population 0.58 0.81 0.99 0.012 1.8 #&gt; schooling 0.77 -0.54 0.89 0.115 1.8 #&gt; employment 0.67 0.73 0.98 0.021 2.0 #&gt; professional 0.93 -0.10 0.88 0.120 1.0 #&gt; housevalue 0.79 -0.56 0.94 0.062 1.8 #&gt; #&gt; PC1 PC2 #&gt; SS loadings 2.87 1.80 #&gt; Proportion Var 0.57 0.36 #&gt; Cumulative Var 0.57 0.93 #&gt; Proportion Explained 0.62 0.38 #&gt; Cumulative Proportion 0.62 1.00 #&gt; #&gt; Mean item complexity = 1.7 #&gt; Test of the hypothesis that 2 components are sufficient. #&gt; #&gt; The root mean square of the residuals (RMSR) is 0.03 #&gt; with the empirical chi square 0.29 with prob &lt; 0.59 #&gt; #&gt; Fit based upon off diagonal values = 1 # factor 1 = overall socioeconomic health # factor 2 = contrast of the population and employment against school and house value ## Ssquared multiple correlation (SMC) prior, no rotation factor_pca_smc &lt;- fa( Harman.5, nfactors = 2, fm = &quot;pa&quot;, rotate = &quot;none&quot;, SMC = TRUE ) factor_pca_smc #&gt; Factor Analysis using method = pa #&gt; Call: fa(r = Harman.5, nfactors = 2, rotate = &quot;none&quot;, SMC = TRUE, fm = &quot;pa&quot;) #&gt; Standardized loadings (pattern matrix) based upon correlation matrix #&gt; PA1 PA2 h2 u2 com #&gt; population 0.62 0.78 1.00 -0.0027 1.9 #&gt; schooling 0.70 -0.53 0.77 0.2277 1.9 #&gt; employment 0.70 0.68 0.96 0.0413 2.0 #&gt; professional 0.88 -0.15 0.80 0.2017 1.1 #&gt; housevalue 0.78 -0.60 0.96 0.0361 1.9 #&gt; #&gt; PA1 PA2 #&gt; SS loadings 2.76 1.74 #&gt; Proportion Var 0.55 0.35 #&gt; Cumulative Var 0.55 0.90 #&gt; Proportion Explained 0.61 0.39 #&gt; Cumulative Proportion 0.61 1.00 #&gt; #&gt; Mean item complexity = 1.7 #&gt; Test of the hypothesis that 2 factors are sufficient. #&gt; #&gt; df null model = 10 with the objective function = 6.38 with Chi Square = 54.25 #&gt; df of the model are 1 and the objective function was 0.34 #&gt; #&gt; The root mean square of the residuals (RMSR) is 0.01 #&gt; The df corrected root mean square of the residuals is 0.03 #&gt; #&gt; The harmonic n.obs is 12 with the empirical chi square 0.02 with prob &lt; 0.88 #&gt; The total n.obs was 12 with Likelihood Chi Square = 2.44 with prob &lt; 0.12 #&gt; #&gt; Tucker Lewis Index of factoring reliability = 0.596 #&gt; RMSEA index = 0.336 and the 90 % confidence intervals are 0 0.967 #&gt; BIC = -0.04 #&gt; Fit based upon off diagonal values = 1 ## SMC prior, Promax rotation factor_pca_smc_pro &lt;- fa( Harman.5, nfactors = 2, fm = &quot;pa&quot;, rotate = &quot;Promax&quot;, SMC = TRUE ) factor_pca_smc_pro #&gt; Factor Analysis using method = pa #&gt; Call: fa(r = Harman.5, nfactors = 2, rotate = &quot;Promax&quot;, SMC = TRUE, #&gt; fm = &quot;pa&quot;) #&gt; Standardized loadings (pattern matrix) based upon correlation matrix #&gt; PA1 PA2 h2 u2 com #&gt; population -0.11 1.02 1.00 -0.0027 1.0 #&gt; schooling 0.90 -0.11 0.77 0.2277 1.0 #&gt; employment 0.02 0.97 0.96 0.0413 1.0 #&gt; professional 0.75 0.33 0.80 0.2017 1.4 #&gt; housevalue 1.01 -0.14 0.96 0.0361 1.0 #&gt; #&gt; PA1 PA2 #&gt; SS loadings 2.38 2.11 #&gt; Proportion Var 0.48 0.42 #&gt; Cumulative Var 0.48 0.90 #&gt; Proportion Explained 0.53 0.47 #&gt; Cumulative Proportion 0.53 1.00 #&gt; #&gt; With factor correlations of #&gt; PA1 PA2 #&gt; PA1 1.00 0.25 #&gt; PA2 0.25 1.00 #&gt; #&gt; Mean item complexity = 1.1 #&gt; Test of the hypothesis that 2 factors are sufficient. #&gt; #&gt; df null model = 10 with the objective function = 6.38 with Chi Square = 54.25 #&gt; df of the model are 1 and the objective function was 0.34 #&gt; #&gt; The root mean square of the residuals (RMSR) is 0.01 #&gt; The df corrected root mean square of the residuals is 0.03 #&gt; #&gt; The harmonic n.obs is 12 with the empirical chi square 0.02 with prob &lt; 0.88 #&gt; The total n.obs was 12 with Likelihood Chi Square = 2.44 with prob &lt; 0.12 #&gt; #&gt; Tucker Lewis Index of factoring reliability = 0.596 #&gt; RMSEA index = 0.336 and the 90 % confidence intervals are 0 0.967 #&gt; BIC = -0.04 #&gt; Fit based upon off diagonal values = 1 ## SMC prior, varimax rotation factor_pca_smc_var &lt;- fa( Harman.5, nfactors = 2, fm = &quot;pa&quot;, rotate = &quot;varimax&quot;, SMC = TRUE ) ## Make a data frame of the loadings for ggplot2 factors_df &lt;- bind_rows( data.frame( y = rownames(factor_pca_smc$loadings), unclass(factor_pca_smc$loadings) ), data.frame( y = rownames(factor_pca_smc_pro$loadings), unclass(factor_pca_smc_pro$loadings) ), data.frame( y = rownames(factor_pca_smc_var$loadings), unclass(factor_pca_smc_var$loadings) ), .id = &quot;Rotation&quot; ) flag_gg &lt;- ggplot(factors_df) + geom_vline(aes(xintercept = 0)) + geom_hline(aes(yintercept = 0)) + geom_point(aes( x = PA2, y = PA1, col = y, shape = y ), size = 2) + scale_x_continuous(name = &quot;Factor 2&quot;, limits = c(-1.1, 1.1)) + scale_y_continuous(name = &quot;Factor1&quot;, limits = c(-1.1, 1.1)) + facet_wrap(&quot;Rotation&quot;, labeller = labeller(Rotation = c( &quot;1&quot; = &quot;Original&quot;, &quot;2&quot; = &quot;Promax&quot;, &quot;3&quot; = &quot;Varimax&quot; ))) + coord_fixed(ratio = 1) # make aspect ratio of each facet 1 flag_gg # promax and varimax did a good job to assign trait to a particular factor factor_mle_1 &lt;- fa( Harman.5, nfactors = 1, fm = &quot;mle&quot;, rotate = &quot;none&quot;, SMC = TRUE ) factor_mle_1 #&gt; Factor Analysis using method = ml #&gt; Call: fa(r = Harman.5, nfactors = 1, rotate = &quot;none&quot;, SMC = TRUE, fm = &quot;mle&quot;) #&gt; Standardized loadings (pattern matrix) based upon correlation matrix #&gt; ML1 h2 u2 com #&gt; population 0.97 0.950 0.0503 1 #&gt; schooling 0.14 0.021 0.9791 1 #&gt; employment 1.00 0.995 0.0049 1 #&gt; professional 0.51 0.261 0.7388 1 #&gt; housevalue 0.12 0.014 0.9864 1 #&gt; #&gt; ML1 #&gt; SS loadings 2.24 #&gt; Proportion Var 0.45 #&gt; #&gt; Mean item complexity = 1 #&gt; Test of the hypothesis that 1 factor is sufficient. #&gt; #&gt; df null model = 10 with the objective function = 6.38 with Chi Square = 54.25 #&gt; df of the model are 5 and the objective function was 3.14 #&gt; #&gt; The root mean square of the residuals (RMSR) is 0.41 #&gt; The df corrected root mean square of the residuals is 0.57 #&gt; #&gt; The harmonic n.obs is 12 with the empirical chi square 39.41 with prob &lt; 2e-07 #&gt; The total n.obs was 12 with Likelihood Chi Square = 24.56 with prob &lt; 0.00017 #&gt; #&gt; Tucker Lewis Index of factoring reliability = 0.022 #&gt; RMSEA index = 0.564 and the 90 % confidence intervals are 0.374 0.841 #&gt; BIC = 12.14 #&gt; Fit based upon off diagonal values = 0.5 #&gt; Measures of factor score adequacy #&gt; ML1 #&gt; Correlation of (regression) scores with factors 1.00 #&gt; Multiple R square of scores with factors 1.00 #&gt; Minimum correlation of possible factor scores 0.99 factor_mle_2 &lt;- fa( Harman.5, nfactors = 2, fm = &quot;mle&quot;, rotate = &quot;none&quot;, SMC = TRUE ) factor_mle_2 #&gt; Factor Analysis using method = ml #&gt; Call: fa(r = Harman.5, nfactors = 2, rotate = &quot;none&quot;, SMC = TRUE, fm = &quot;mle&quot;) #&gt; Standardized loadings (pattern matrix) based upon correlation matrix #&gt; ML2 ML1 h2 u2 com #&gt; population -0.03 1.00 1.00 0.005 1.0 #&gt; schooling 0.90 0.04 0.81 0.193 1.0 #&gt; employment 0.09 0.98 0.96 0.036 1.0 #&gt; professional 0.78 0.46 0.81 0.185 1.6 #&gt; housevalue 0.96 0.05 0.93 0.074 1.0 #&gt; #&gt; ML2 ML1 #&gt; SS loadings 2.34 2.16 #&gt; Proportion Var 0.47 0.43 #&gt; Cumulative Var 0.47 0.90 #&gt; Proportion Explained 0.52 0.48 #&gt; Cumulative Proportion 0.52 1.00 #&gt; #&gt; Mean item complexity = 1.1 #&gt; Test of the hypothesis that 2 factors are sufficient. #&gt; #&gt; df null model = 10 with the objective function = 6.38 with Chi Square = 54.25 #&gt; df of the model are 1 and the objective function was 0.31 #&gt; #&gt; The root mean square of the residuals (RMSR) is 0.01 #&gt; The df corrected root mean square of the residuals is 0.05 #&gt; #&gt; The harmonic n.obs is 12 with the empirical chi square 0.05 with prob &lt; 0.82 #&gt; The total n.obs was 12 with Likelihood Chi Square = 2.22 with prob &lt; 0.14 #&gt; #&gt; Tucker Lewis Index of factoring reliability = 0.658 #&gt; RMSEA index = 0.307 and the 90 % confidence intervals are 0 0.945 #&gt; BIC = -0.26 #&gt; Fit based upon off diagonal values = 1 #&gt; Measures of factor score adequacy #&gt; ML2 ML1 #&gt; Correlation of (regression) scores with factors 0.98 1.00 #&gt; Multiple R square of scores with factors 0.95 1.00 #&gt; Minimum correlation of possible factor scores 0.91 0.99 factor_mle_3 &lt;- fa( Harman.5, nfactors = 3, fm = &quot;mle&quot;, rotate = &quot;none&quot;, SMC = TRUE ) factor_mle_3 #&gt; Factor Analysis using method = ml #&gt; Call: fa(r = Harman.5, nfactors = 3, rotate = &quot;none&quot;, SMC = TRUE, fm = &quot;mle&quot;) #&gt; Standardized loadings (pattern matrix) based upon correlation matrix #&gt; ML2 ML1 ML3 h2 u2 com #&gt; population -0.12 0.98 -0.11 0.98 0.0162 1.1 #&gt; schooling 0.89 0.15 0.29 0.90 0.0991 1.3 #&gt; employment 0.00 1.00 0.04 0.99 0.0052 1.0 #&gt; professional 0.72 0.52 -0.10 0.80 0.1971 1.9 #&gt; housevalue 0.97 0.13 -0.09 0.97 0.0285 1.1 #&gt; #&gt; ML2 ML1 ML3 #&gt; SS loadings 2.28 2.26 0.11 #&gt; Proportion Var 0.46 0.45 0.02 #&gt; Cumulative Var 0.46 0.91 0.93 #&gt; Proportion Explained 0.49 0.49 0.02 #&gt; Cumulative Proportion 0.49 0.98 1.00 #&gt; #&gt; Mean item complexity = 1.2 #&gt; Test of the hypothesis that 3 factors are sufficient. #&gt; #&gt; df null model = 10 with the objective function = 6.38 with Chi Square = 54.25 #&gt; df of the model are -2 and the objective function was 0 #&gt; #&gt; The root mean square of the residuals (RMSR) is 0 #&gt; The df corrected root mean square of the residuals is NA #&gt; #&gt; The harmonic n.obs is 12 with the empirical chi square 0 with prob &lt; NA #&gt; The total n.obs was 12 with Likelihood Chi Square = 0 with prob &lt; NA #&gt; #&gt; Tucker Lewis Index of factoring reliability = 1.318 #&gt; Fit based upon off diagonal values = 1 #&gt; Measures of factor score adequacy #&gt; ML2 ML1 ML3 #&gt; Correlation of (regression) scores with factors 0.99 1.00 0.82 #&gt; Multiple R square of scores with factors 0.98 1.00 0.68 #&gt; Minimum correlation of possible factor scores 0.96 0.99 0.36 The output info for the null hypothesis of no common factors is in the statement “The degrees of freedom for the null model ..” The output info for the null hypothesis that number of factors is sufficient is in the statement “The total number of observations was …” One factor is not enough, two is sufficient, and not enough data for 3 factors (df of -2 and NA for p-value). Hence, we should use 2-factor model. "],["discriminant-analysis.html", "22.4 Discriminant Analysis", " 22.4 Discriminant Analysis Suppose we have two or more different populations from which observations could come from. Discriminant analysis seeks to determine which of the possible population an observation comes from while making as few mistakes as possible This is an alternative to logistic approaches with the following advantages: when there is clear separation between classes, the parameter estimates for the logic regression model can be surprisingly unstable, while discriminant approaches do not suffer If X is normal in each of the classes and the sample size is small, then discriminant approaches can be more accurate Notation SImilar to MANOVA, let \\(\\mathbf{y}_{j1},\\mathbf{y}_{j2},\\dots, \\mathbf{y}_{in_j} \\sim iid f_j (\\mathbf{y})\\) for \\(j = 1,\\dots, h\\) Let \\(f_j(\\mathbf{y})\\) be the density function for population j . Note that each vector \\(\\mathbf{y}\\) contain measurements on all \\(p\\) traits Assume that each observation is from one of \\(h\\) possible populations. We want to form a discriminant rule that will allocate an observation \\(\\mathbf{y}\\) to population j when \\(\\mathbf{y}\\) is in fact from this population 22.4.1 Known Populations The maximum likelihood discriminant rule for assigning an observation \\(\\mathbf{y}\\) to one of the \\(h\\) populations allocates \\(\\mathbf{y}\\) to the population that gives the largest likelihood to \\(\\mathbf{y}\\) Consider the likelihood for a single observation \\(\\mathbf{y}\\), which has the form \\(f_j (\\mathbf{y})\\) where j is the true population. Since \\(j\\) is unknown, to make the likelihood as large as possible, we should choose the value j which causes \\(f_j (\\mathbf{y})\\) to be as large as possible Consider a simple univariate example. Suppose we have data from one of two binomial populations. The first population has \\(n= 10\\) trials with success probability \\(p = .5\\) The second population has \\(n= 10\\) trials with success probability \\(p = .7\\) to which population would we assign an observation of \\(y = 7\\) Note: \\(f(y = 7|n = 10, p = .5) = .117\\) \\(f(y = 7|n = 10, p = .7) = .267\\) where \\(f(.)\\) is the binomial likelihood. Hence, we choose the second population Another example We have 2 populations, where First population: \\(N(\\mu_1, \\sigma^2_1)\\) Second population: \\(N(\\mu_2, \\sigma^2_2)\\) The likelihood for a single observation is \\[ f_j (y) = (2\\pi \\sigma^2_j)^{-1/2} \\exp\\{ -\\frac{1}{2}(\\frac{y - \\mu_j}{\\sigma_j})^2\\} \\] Consider a likelihood ratio rule \\[ \\begin{aligned} \\Lambda &amp;= \\frac{\\text{likelihood of y from pop 1}}{\\text{likelihood of y from pop 2}} \\\\ &amp;= \\frac{f_1(y)}{f_2(y)} \\\\ &amp;= \\frac{\\sigma_2}{\\sigma_1} \\exp\\{-\\frac{1}{2}[(\\frac{y - \\mu_1}{\\sigma_1})^2- (\\frac{y - \\mu_2}{\\sigma_2})^2] \\} \\end{aligned} \\] Hence, we classify into pop 1 if \\(\\Lambda &gt;1\\) pop 2 if \\(\\Lambda &lt;1\\) for ties, flip a coin Another way to think: we classify into population 1 if the “standardized distance” of y from \\(\\mu_1\\) is less than the “standardized distance” of y from \\(\\mu_2\\) which is referred to as a quadratic discriminant rule. (Significant simplification occurs in th special case where \\(\\sigma_1 = \\sigma_2 = \\sigma^2\\)) Thus, we classify into population 1 if \\[ (y - \\mu_2)^2 &gt; (y - \\mu_1)^2 \\] or \\[ |y- \\mu_2| &gt; |y - \\mu_1| \\] and \\[ -2 \\log (\\Lambda) = -2y \\frac{(\\mu_1 - \\mu_2)}{\\sigma^2} + \\frac{(\\mu_1^2 - \\mu_2^2)}{\\sigma^2} = \\beta y + \\alpha \\] Thus, we classify into population 1 if this is less than 0. Discriminant classification rule is linear in y in this case. 22.4.1.1 Multivariate Expansion Suppose that there are 2 populations \\(N_p(\\mathbf{\\mu}_1, \\mathbf{\\Sigma}_1)\\) \\(N_p(\\mathbf{\\mu}_2, \\mathbf{\\Sigma}_2)\\) \\[ \\begin{aligned} -2 \\log(\\frac{f_1 (\\mathbf{x})}{f_2 (\\mathbf{x})}) &amp;= \\log|\\mathbf{\\Sigma}_1| + (\\mathbf{x} - \\mathbf{\\mu}_1)&#39; \\mathbf{\\Sigma}^{-1}_1 (\\mathbf{x} - \\mathbf{\\mu}_1) \\\\ &amp;- [\\log|\\mathbf{\\Sigma}_2|+ (\\mathbf{x} - \\mathbf{\\mu}_2)&#39; \\mathbf{\\Sigma}^{-1}_2 (\\mathbf{x} - \\mathbf{\\mu}_2) ] \\end{aligned} \\] Again, we classify into population 1 if this is less than 0, otherwise, population 2. And like the univariate case with non-equal variances, this is a quadratic discriminant rule. And if the covariance matrices are equal: \\(\\mathbf{\\Sigma}_1 = \\mathbf{\\Sigma}_2 = \\mathbf{\\Sigma}_1\\) classify into population 1 if \\[ (\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2)&#39; \\mathbf{\\Sigma}^{-1}\\mathbf{x} - \\frac{1}{2} (\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2)&#39; \\mathbf{\\Sigma}^{-1} (\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2) \\ge 0 \\] This linear discriminant rule is also referred to as Fisher’s linear discriminant function By assuming the covariance matrices are equal, we assume that the shape and orientation fo the two populations must be the same (which can be a strong restriction) In other words, for each variable, it can have different mean but the same variance. Note: LDA Bayes decision boundary is linear. Hence, quadratic decision boundary might lead to better classification. Moreover, the assumption of same variance/covariance matrix across all classes for Gaussian densities imposes the linear rule, if we allow the predictors in each class to follow MVN distribution with class-specific mean vectors and variance/covariance matrices, then it is Quadratic Discriminant Analysis. But then, you will have more parameters to estimate (which gives more flexibility than LDA) at the cost of more variance (bias -variance tradeoff). When \\(\\mathbf{\\mu}_1, \\mathbf{\\mu}_2, \\mathbf{\\Sigma}\\) are known, the probability of misclassification can be determined: \\[ \\begin{aligned} P(2|1) &amp;= P(\\text{calssify into pop 2| x is from pop 1}) \\\\ &amp;= P((\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2)&#39; \\mathbf{\\Sigma}^{-1} \\mathbf{x} \\le \\frac{1}{2} (\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2)&#39; \\mathbf{\\Sigma}^{-1} (\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2)|\\mathbf{x} \\sim N(\\mu_1, \\mathbf{\\Sigma}) \\\\ &amp;= \\Phi(-\\frac{1}{2} \\delta) \\end{aligned} \\] where \\(\\delta^2 = (\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2)&#39; \\mathbf{\\Sigma}^{-1} (\\mathbf{\\mu}_1 - \\mathbf{\\mu}_2)\\) \\(\\Phi\\) is the standard normal cdf Suppose there are \\(h\\) possible populations, which are distributed as \\(N_p (\\mathbf{\\mu}_p, \\mathbf{\\Sigma})\\). Then, the maximum likelihood (linear) discriminant rule allocates \\(\\mathbf{y}\\) to population j where j minimizes the squared Mahalanobis distance \\[ (\\mathbf{y} - \\mathbf{\\mu}_j)&#39; \\mathbf{\\Sigma}^{-1} (\\mathbf{y} - \\mathbf{\\mu}_j) \\] 22.4.1.2 Bayes Discriminant Rules If we know that population j has prior probabilities \\(\\pi_j\\) (assume \\(\\pi_j &gt;0\\)) we can form the Bayes discriminant rule. This rule allocates an observation \\(\\mathbf{y}\\) to the population for which \\(\\pi_j f_j (\\mathbf{y})\\) is maximized. Note: Maximum likelihood discriminant rule is a special case of the Bayes discriminant rule, where it sets all the \\(\\pi_j = 1/h\\) Optimal Properties of Bayes Discriminant Rules let \\(p_{ii}\\) be the probability of correctly assigning an observation from population i then one rule (with probabilities \\(p_{ii}\\) ) is as good as another rule (with probabilities \\(p_{ii}&#39;\\) ) if \\(p_{ii} \\ge p_{ii}&#39;\\) for all \\(i = 1,\\dots, h\\) The first rule is better than the alternative if \\(p_{ii} &gt; p_{ii}&#39;\\) for at least one i. A rule for which there is no better alternative is called admissible Bayes Discriminant Rules are admissible If we utilized prior probabilities, then we can form the posterior probability of a correct allocation, \\(\\sum_{i=1}^h \\pi_i p_{ii}\\) Bayes Discriminant Rules have the largest possible posterior probability of correct allocation with respect to the prior These properties show that Bayes Discriminant rule is our best approach. Unequal Cost We want to consider the cost misallocation Define \\(c_{ij}\\) to be the cost associated with allocation a member of population j to population i. Assume that \\(c_{ij} &gt;0\\) for all \\(i \\neq j\\) \\(c_{ij} = 0\\) if \\(i = j\\) We could determine the expected amount of loss for an observation allocated to population i as \\(\\sum_j c_{ij} p_{ij}\\) where the \\(p_{ij}s\\) are the probabilities of allocating an observation from population j into population i We want to minimize the amount of loss expected for our rule. Using a Bayes Discrimination, allocate \\(\\mathbf{y}\\) to the population j which minimizes \\(\\sum_{k \\neq j} c_{ij} \\pi_k f_k(\\mathbf{y})\\) We could assign equal probabilities to each group and get a maximum likelihood type rule. here, we would allocate \\(\\mathbf{y}\\) to population j which minimizes \\(\\sum_{k \\neq j}c_{jk} f_k(\\mathbf{y})\\) Example: Two binomial populations, each of size 10, with probabilities \\(p_1 = .5\\) and \\(p_2 = .7\\) And the probability of being in the first population is .9 However, suppose the cost of inappropriately allocating into the first population is 1 and the cost of incorrectly allocating into the second population is 5. In this case, we pick population 1 over population 2 In general, we consider two regions, \\(R_1\\) and \\(R_2\\) associated with population 1 and 2: \\[ R_1: \\frac{f_1 (\\mathbf{x})}{f_2 (\\mathbf{x})} \\ge \\frac{c_{12} \\pi_2}{c_{21} \\pi_1} \\] \\[ R_2: \\frac{f_1 (\\mathbf{x})}{f_2 (\\mathbf{x})} &lt; \\frac{c_{12} \\pi_2}{c_{21} \\pi_1} \\] where \\(c_{12}\\) is the cost of assigning a member of population 2 to population 1. 22.4.1.3 Discrimination Under Estimation Suppose we know the form of the distributions for populations of interests, but we still have to estimate the parameters. Example: we know the distributions are multivariate normal, but we have to estimate the means and variances The maximum likelihood discriminant rule allocates an observation \\(\\mathbf{y}\\) to population j when j maximizes the function \\[ f_j (\\mathbf{y} |\\hat{\\theta}) \\] where \\(\\hat{\\theta}\\) are the maximum likelihood estimates of the unknown parameters For instance, we have 2 multivariate normal populations with distinct means, but common variance covariance matrix MLEs for \\(\\mathbf{\\mu}_1\\) and \\(\\mathbf{\\mu}_2\\) are \\(\\mathbf{\\bar{y}}_1\\) and \\(\\mathbf{\\bar{y}}_2\\)and common \\(\\mathbf{\\Sigma}\\) is \\(\\mathbf{S}\\). Thus, an estimated discriminant rule could be formed by substituting these sample values for the population values 22.4.1.4 Native Bayes The challenge with classification using Bayes’ is that we don’t know the (true) densities, \\(f_k, k = 1, \\dots, K\\), while LDA and QDA make strong multivariate normality assumptions to deal with this. Naive Bayes makes only one assumption: within the k-th class, the p predictors are independent (i.e,, for \\(k = 1,\\dots, K\\) \\[ f_k(x) = f_{k1}(x_1) \\times f_{k2}(x_2) \\times \\dots \\times f_{kp}(x_p) \\] where \\(f_{kj}\\) is the density function of the j-th predictor among observation in the k-th class. This assumption allows the use of joint distribution without the need to account for dependence between observations. However, this (native) assumption can be unrealistic, but still works well in cases where the number of sample (n) is not large relative to the number of features (p). With this assumption, we have \\[ P(Y=k|X=x) = \\frac{\\pi_k \\times f_{k1}(x_1) \\times \\dots \\times f_{kp}(x_p)}{\\sum_{l=1}^K \\pi_l \\times f_{l1}(x_1)\\times \\dots f_{lp}(x_p)} \\] we only need to estimate the one-dimensional density function \\(f_{kj}\\) with either of these approaches: When \\(X_j\\) is quantitative, assume it has a univariate normal distribution (with independence): \\(X_j | Y = k \\sim N(\\mu_{jk}, \\sigma^2_{jk})\\) which is more restrictive than QDA because it assumes predictors are independent (e.g., a diagonal covariance matrix) When \\(X_j\\) is quantitative, use a kernel density estimator Kernel Methods ; which is a smoothed histogram When \\(X_j\\) is qualitative, we count the promotion of training observations for the j-th predictor corresponding to each class. 22.4.1.5 Comparison of Classification Methods Assuming we have K classes and K is the baseline from (James , Witten, Hastie, and Tibshirani book) Comparing the log odds relative to the K class 22.4.1.5.1 Logistic Regression \\[ \\log(\\frac{P(Y=k|X = x)}{P(Y = K| X = x)}) = \\beta_{k0} + \\sum_{j=1}^p \\beta_{kj}x_j \\] 22.4.1.5.2 LDA \\[ \\log(\\frac{P(Y = k | X = x)}{P(Y = K | X = x)} = a_k + \\sum_{j=1}^p b_{kj} x_j \\] where \\(a_k\\) and \\(b_{kj}\\) are functions of \\(\\pi_k, \\pi_K, \\mu_k , \\mu_K, \\mathbf{\\Sigma}\\) Similar to logistic regression, LDA assumes the log odds is linear in \\(x\\) Even though they look like having the same form, the parameters in logistic regression are estimated by MLE, where as LDA linear parameters are specified by the prior and normal distributions We expect LDA to outperform logistic regression when the normality assumption (approximately) holds, and logistic regression to perform better when it does not 22.4.1.5.3 QDA \\[ \\log(\\frac{P(Y=k|X=x}{P(Y=K | X = x}) = a_k + \\sum_{j=1}^{p}b_{kj}x_{j} + \\sum_{j=1}^p \\sum_{l=1}^p c_{kjl}x_j x_l \\] where \\(a_k, b_{kj}, c_{kjl}\\) are functions \\(\\pi_k , \\pi_K, \\mu_k, \\mu_K ,\\mathbf{\\Sigma}_k, \\mathbf{\\Sigma}_K\\) 22.4.1.5.4 Naive Bayes \\[ \\log (\\frac{P(Y = k | X = x)}{P(Y = K | X = x}) = a_k + \\sum_{j=1}^p g_{kj} (x_j) \\] where \\(a_k = \\log (\\pi_k / \\pi_K)\\) and \\(g_{kj}(x_j) = \\log(\\frac{f_{kj}(x_j)}{f_{Kj}(x_j)})\\) which is the form of generalized additive model 22.4.1.5.5 Summary LDA is a special case of QDA LDA is robust when it comes to high dimensions Any classifier with a linear decision boundary is a special case of naive Bayes with \\(g_{kj}(x_j) = b_{kj} x_j\\), which means LDA is a special case of naive Bayes. LDA assumes that the features are normally distributed with a common within-class covariance matrix, and naive Bayes assumes independence of the features. Naive bayes is also a special case of LDA with \\(\\mathbf{\\Sigma}\\) restricted to a diagonal matrix with diagonals, \\(\\sigma^2\\) (another notation \\(diag (\\mathbf{\\Sigma})\\) ) assuming \\(f_{kj}(x_j) = N(\\mu_{kj}, \\sigma^2_j)\\) QDA and naive Bayes are not special case of each other. In principal,e naive Bayes can produce a more flexible fit by the choice of \\(g_{kj}(x_j)\\) , but it’s restricted to only purely additive fit, but QDA includes multiplicative terms of the form \\(c_{kjl}x_j x_l\\) None of these methods uniformly dominates the others: the choice of method depends on the true distribution of the predictors in each of the K classes, n and p (i.e., related to the bias-variance tradeoff). Compare to the non-parametric method (KNN) KNN would outperform both LDA and logistic regression when the decision boundary is highly nonlinear, but can’t say which predictors are most important, and requires many observations KNN is also limited in high-dimensions due to the curse of dimensionality Since QDA is a special type of nonlinear decision boundary (quadratic), it can be considered as a compromise between the linear methods and KNN classification. QDA can have fewer training observations than KNN but not as flexible. From simulation: True decision boundary Best performance Linear LDA + Logistic regression Moderately nonlinear QDA + Naive Bayes Highly nonlinear (many training, p is not large) KNN like linear regression, we can also introduce flexibility by including transformed features \\(\\sqrt{X}, X^2, X^3\\) 22.4.2 Probabilities of Misclassification When the distribution are exactly known, we can determine the misclassification probabilities exactly. however, when we need to estimate the population parameters, we have to estimate the probability of misclassification Naive method Plugging the parameters estimates into the form for the misclassification probabilities results to derive at the estimates of the misclassification probability. But this will tend to be optimistic when the number of samples in one or more populations is small. Resubstitution method Use the proportion of the samples from population i that would be allocated to another population as an estimate of the misclassification probability But also optimistic when the number of samples is small Jack-knife estimates: The above two methods use observation to estimate both parameters and also misclassification probabilities based upon the discriminant rule Alternatively, we determine the discriminant rule based upon all of the data except the k-th observation from the j-th population then, determine if the k-th observation would be misclassified under this rule perform this process for all \\(n_j\\) observation in population j . An estimate fo the misclassification probability would be the fraction of \\(n_j\\) observations which were misclassified repeat the process for other \\(i \\neq j\\) populations This method is more reliable than the others, but also computationally intensive Cross-Validation Summary Consider the group-specific densities \\(f_j (\\mathbf{x})\\) for multivariate vector \\(\\mathbf{x}\\). Assume equal misclassifications costs, the Bayes classification probability of \\(\\mathbf{x}\\) belonging to the j-th population is \\[ p(j |\\mathbf{x}) = \\frac{\\pi_j f_j (\\mathbf{x})}{\\sum_{k=1}^h \\pi_k f_k (\\mathbf{x})} \\] \\(j = 1,\\dots, h\\) where there are \\(h\\) possible groups. We then classify into the group for which this probability of membership is largest Alternatively, we can write this in terms of a generalized squared distance formation \\[ D_j^2 (\\mathbf{x}) = d_j^2 (\\mathbf{x})+ g_1(j) + g_2 (j) \\] where \\(d_j^2(\\mathbf{x}) = (\\mathbf{x} - \\mathbf{\\mu}_j)&#39; \\mathbf{V}_j^{-1} (\\mathbf{x} - \\mathbf{\\mu}_j)\\) is the squared Mahalanobis distance from \\(\\mathbf{x}\\) to the centroid of group j, and \\(\\mathbf{V}_j = \\mathbf{S}_j\\) if the within group covariance matrices are not equal \\(\\mathbf{V}_j = \\mathbf{S}_p\\) if a pooled covariance estimate is appropriate and \\[ g_1(j) = \\begin{cases} \\ln |\\mathbf{S}_j| &amp; \\text{within group covariances are not equal} \\\\ 0 &amp; \\text{pooled covariance} \\end{cases} \\] \\[ g_2(j) = \\begin{cases} -2 \\ln \\pi_j &amp; \\text{prior probabilities are not equal} \\\\ 0 &amp; \\text{prior probabilities are equal} \\end{cases} \\] then, the posterior probability of belonging to group j is \\[ p(j| \\mathbf{x}) = \\frac{\\exp(-.5 D_j^2(\\mathbf{x}))}{\\sum_{k=1}^h \\exp(-.5 D^2_k (\\mathbf{x}))} \\] where \\(j = 1,\\dots , h\\) and \\(\\mathbf{x}\\) is classified into group j if \\(p(j | \\mathbf{x})\\) is largest for \\(j = 1,\\dots,h\\) (or, \\(D_j^2(\\mathbf{x})\\) is smallest). 22.4.2.1 Assessing Classification Performance For binary classification, confusion matrix Predicted class - or Null + or Null Total True Class - or Null True Neg (TN) False Pos (FP) N + or Null False Neg (FN) True Pos (TP) P Total N* P* and table 4.6 from (James et al. 2013) Name Definition Synonyms False Pos rate FP/N Tyep I error, 1 0 SPecificity True Pos. rate TP/P 1 - Type II error, power, sensitivity, recall Pos Pred. value TP/P* Precision, 1 - false discovery promotion Neg. Pred. value TN/N* ROC curve (receiver Operating Characteristics) is a graphical comparison between sensitivity (true positive) and specificity ( = 1 - false positive) y-axis = true positive rate x-axis = false positive rate as we change the threshold rate for classifying an observation as from 0 to 1 AUC (area under the ROC) ideally would equal to 1, a bad classifier would have AUC = 0.5 (pure chance) 22.4.3 Unknown Populations/ Nonparametric Discrimination When your multivariate data are not Gaussian, or known distributional form at all, we can use the following methods 22.4.3.1 Kernel Methods We approximate \\(f_j (\\mathbf{x})\\) by a kernel density estimate \\[ \\hat{f}_j(\\mathbf{x}) = \\frac{1}{n_j} \\sum_{i = 1}^{n_j} K_j (\\mathbf{x} - \\mathbf{x}_i) \\] where \\(K_j (.)\\) is a kernel function satisfying \\(\\int K_j(\\mathbf{z})d\\mathbf{z} =1\\) \\(\\mathbf{x}_i\\) , \\(i = 1,\\dots , n_j\\) is a random sample from the j-th population. Thus, after finding \\(\\hat{f}_j (\\mathbf{x})\\) for each of the \\(h\\) populations, the posterior probability of group membership is \\[ p(j |\\mathbf{x}) = \\frac{\\pi_j \\hat{f}_j (\\mathbf{x})}{\\sum_{k-1}^h \\pi_k \\hat{f}_k (\\mathbf{x})} \\] where \\(j = 1,\\dots, h\\) There are different choices for the kernel function: Uniform Normal Epanechnikov Biweight Triweight We these kernels, we have to pick the “radius” (or variance, width, window width, bandwidth) of the kernel, which is a smoothing parameter (the larger the radius, the more smooth the kernel estimate of the density). To select the smoothness parameter, we can use the following method If we believe the populations were close to multivariate normal, then \\[ R = (\\frac{4/(2p+1)}{n_j})^{1/(p+1} \\] But since we do not know for sure, we might choose several different values and select one that vies the best out of sample or cross-validation discrimination. Moreover, you also have to decide whether to use different kernel smoothness for different populations, which is similar to the individual and pooled covariances in the classical methodology. 22.4.3.2 Nearest Neighbor Methods The nearest neighbor (also known as k-nearest neighbor) method performs the classification of a new observation vector based on the group membership of its nearest neighbors. In practice, we find \\[ d_{ij}^2 (\\mathbf{x}, \\mathbf{x}_i) = (\\mathbf{x}, \\mathbf{x}_i) V_j^{-1}(\\mathbf{x}, \\mathbf{x}_i) \\] which is the distance between the vector \\(\\mathbf{x}\\) and the i-th observation in group j We consider different choices for \\(\\mathbf{V}_j\\) For example, \\[ \\mathbf{V}_j = \\mathbf{S}_p \\\\ \\mathbf{V}_j = \\mathbf{S}_j \\\\ \\mathbf{V}_j = \\mathbf{I} \\\\ \\mathbf{V}_j = diag (\\mathbf{S}_p) \\] We find the \\(k\\) observations that are closest to \\(\\mathbf{x}\\) (where users pick k). Then we classify into the most common population, weighted by the prior. 22.4.3.3 Modern Discriminant Methods Note: Logistic regression (with or without random effects) is a flexible model-based procedure for classification between two populations. The extension of logistic regression to the multi-group setting is polychotomous logistic regression (or, mulinomial regression). The machine learning and pattern recognition are growing with strong focus on nonlinear discriminant analysis methods such as: radial basis function networks support vector machines multiplayer perceptrons (neural networks) The general framework \\[ g_j (\\mathbf{x}) = \\sum_{l = 1}^m w_{jl}\\phi_l (\\mathbf{x}; \\mathbf{\\theta}_l) + w_{j0} \\] where \\(j = 1,\\dots, h\\) \\(m\\) nonlinear basis functions \\(\\phi_l\\), each of which has \\(n_m\\) parameters given by \\(\\theta_l = \\{ \\theta_{lk}: k = 1, \\dots , n_m \\}\\) We assign \\(\\mathbf{x}\\) to the j-th population if \\(g_j(\\mathbf{x})\\) is the maximum for all \\(j = 1,\\dots, h\\) Development usually focuses on the choice and estimation of the basis functions, \\(\\phi_l\\) and the estimation of the weights \\(w_{jl}\\) More details can be found (Webb, Copsey, and Cawley 2011) 22.4.4 Application library(class) library(klaR) library(MASS) library(tidyverse) ## Read in the data crops &lt;- read.table(&quot;images/crops.txt&quot;) names(crops) &lt;- c(&quot;crop&quot;, &quot;y1&quot;, &quot;y2&quot;, &quot;y3&quot;, &quot;y4&quot;) str(crops) #&gt; &#39;data.frame&#39;: 36 obs. of 5 variables: #&gt; $ crop: chr &quot;Corn&quot; &quot;Corn&quot; &quot;Corn&quot; &quot;Corn&quot; ... #&gt; $ y1 : int 16 15 16 18 15 15 12 20 24 21 ... #&gt; $ y2 : int 27 23 27 20 15 32 15 23 24 25 ... #&gt; $ y3 : int 31 30 27 25 31 32 16 23 25 23 ... #&gt; $ y4 : int 33 30 26 23 32 15 73 25 32 24 ... ## Read in test data crops_test &lt;- read.table(&quot;images/crops_test.txt&quot;) names(crops_test) &lt;- c(&quot;crop&quot;, &quot;y1&quot;, &quot;y2&quot;, &quot;y3&quot;, &quot;y4&quot;) str(crops_test) #&gt; &#39;data.frame&#39;: 5 obs. of 5 variables: #&gt; $ crop: chr &quot;Corn&quot; &quot;Soybeans&quot; &quot;Cotton&quot; &quot;Sugarbeets&quot; ... #&gt; $ y1 : int 16 21 29 54 32 #&gt; $ y2 : int 27 25 24 23 32 #&gt; $ y3 : int 31 23 26 21 62 #&gt; $ y4 : int 33 24 28 54 16 22.4.4.1 LDA Default prior is proportional to sample size and lda and qda do not fit a constant or intercept term ## Linear discriminant analysis lda_mod &lt;- lda(crop ~ y1 + y2 + y3 + y4, data = crops) lda_mod #&gt; Call: #&gt; lda(crop ~ y1 + y2 + y3 + y4, data = crops) #&gt; #&gt; Prior probabilities of groups: #&gt; Clover Corn Cotton Soybeans Sugarbeets #&gt; 0.3055556 0.1944444 0.1666667 0.1666667 0.1666667 #&gt; #&gt; Group means: #&gt; y1 y2 y3 y4 #&gt; Clover 46.36364 32.63636 34.18182 36.63636 #&gt; Corn 15.28571 22.71429 27.42857 33.14286 #&gt; Cotton 34.50000 32.66667 35.00000 39.16667 #&gt; Soybeans 21.00000 27.00000 23.50000 29.66667 #&gt; Sugarbeets 31.00000 32.16667 20.00000 40.50000 #&gt; #&gt; Coefficients of linear discriminants: #&gt; LD1 LD2 LD3 LD4 #&gt; y1 -6.147360e-02 0.009215431 -0.02987075 -0.014680566 #&gt; y2 -2.548964e-02 0.042838972 0.04631489 0.054842132 #&gt; y3 1.642126e-02 -0.079471595 0.01971222 0.008938745 #&gt; y4 5.143616e-05 -0.013917423 0.05381787 -0.025717667 #&gt; #&gt; Proportion of trace: #&gt; LD1 LD2 LD3 LD4 #&gt; 0.7364 0.1985 0.0576 0.0075 ## Look at accuracy on the training data lda_fitted &lt;- predict(lda_mod,newdata = crops) # Contingency table lda_table &lt;- table(truth = crops$crop, fitted = lda_fitted$class) lda_table #&gt; fitted #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 6 0 3 0 2 #&gt; Corn 0 6 0 1 0 #&gt; Cotton 3 0 1 2 0 #&gt; Soybeans 0 1 1 3 1 #&gt; Sugarbeets 1 1 0 2 2 # accuracy of 0.5 is just random (not good) ## Posterior probabilities of membership crops_post &lt;- cbind.data.frame(crops, crop_pred = lda_fitted$class, lda_fitted$posterior) crops_post &lt;- crops_post %&gt;% mutate(missed = crop != crop_pred) head(crops_post) #&gt; crop y1 y2 y3 y4 crop_pred Clover Corn Cotton Soybeans #&gt; 1 Corn 16 27 31 33 Corn 0.08935164 0.4054296 0.1763189 0.2391845 #&gt; 2 Corn 15 23 30 30 Corn 0.07690181 0.4558027 0.1420920 0.2530101 #&gt; 3 Corn 16 27 27 26 Corn 0.09817815 0.3422454 0.1365315 0.3073105 #&gt; 4 Corn 18 20 25 23 Corn 0.10521511 0.3633673 0.1078076 0.3281477 #&gt; 5 Corn 15 15 31 32 Corn 0.05879921 0.5753907 0.1173332 0.2086696 #&gt; 6 Corn 15 32 32 15 Soybeans 0.09723648 0.3278382 0.1318370 0.3419924 #&gt; Sugarbeets missed #&gt; 1 0.08971545 FALSE #&gt; 2 0.07219340 FALSE #&gt; 3 0.11573442 FALSE #&gt; 4 0.09546233 FALSE #&gt; 5 0.03980738 FALSE #&gt; 6 0.10109590 TRUE # posterior shows that posterior of corn membershp is much higher than the prior ## LOOCV # leave-one-out cross validation for linear discriminant analysis # cannot run the prdecit function using the object with CV = TRUE because it returns the wihtin sample predictions lda_cv &lt;- lda(crop ~ y1 + y2 + y3 + y4, data = crops, CV = TRUE) # Contingency table lda_table_cv &lt;- table(truth = crops$crop, fitted = lda_cv$class) lda_table_cv #&gt; fitted #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 4 3 1 0 3 #&gt; Corn 0 4 1 2 0 #&gt; Cotton 3 0 0 2 1 #&gt; Soybeans 0 1 1 3 1 #&gt; Sugarbeets 2 1 0 2 1 ## Predict the test data lda_pred &lt;- predict(lda_mod, newdata = crops_test) ## Make a contingency table with truth and most likely class table(truth=crops_test$crop, predict=lda_pred$class) #&gt; predict #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 0 0 1 0 0 #&gt; Corn 0 1 0 0 0 #&gt; Cotton 0 0 0 1 0 #&gt; Soybeans 0 0 0 1 0 #&gt; Sugarbeets 1 0 0 0 0 LDA didn’t do well on both within sample and out-of-sample data. 22.4.4.2 QDA ## Quadratic discriminant analysis qda_mod &lt;- qda(crop ~ y1 + y2 + y3 + y4, data = crops) ## Look at accuracy on the training data qda_fitted &lt;- predict(qda_mod, newdata = crops) # Contingency table qda_table &lt;- table(truth = crops$crop, fitted = qda_fitted$class) qda_table #&gt; fitted #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 9 0 0 0 2 #&gt; Corn 0 7 0 0 0 #&gt; Cotton 0 0 6 0 0 #&gt; Soybeans 0 0 0 6 0 #&gt; Sugarbeets 0 0 1 1 4 ## LOOCV qda_cv &lt;- qda(crop ~ y1 + y2 + y3 + y4, data = crops, CV = TRUE) # Contingency table qda_table_cv &lt;- table(truth = crops$crop, fitted = qda_cv$class) qda_table_cv #&gt; fitted #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 9 0 0 0 2 #&gt; Corn 3 2 0 0 2 #&gt; Cotton 3 0 2 0 1 #&gt; Soybeans 3 0 0 2 1 #&gt; Sugarbeets 3 0 1 1 1 ## Predict the test data qda_pred &lt;- predict(qda_mod, newdata = crops_test) ## Make a contingency table with truth and most likely class table(truth = crops_test$crop, predict = qda_pred$class) #&gt; predict #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 1 0 0 0 0 #&gt; Corn 0 1 0 0 0 #&gt; Cotton 0 0 1 0 0 #&gt; Soybeans 0 0 0 1 0 #&gt; Sugarbeets 0 0 0 0 1 22.4.4.3 KNN knn uses design matrices of the features. ## Design matrices X_train &lt;- crops %&gt;% dplyr::select(-crop) X_test &lt;- crops_test %&gt;% dplyr::select(-crop) Y_train &lt;- crops$crop Y_test &lt;- crops_test$crop ## Nearest neighbors with 2 neighbors knn_2 &lt;- knn(X_train, X_train, Y_train, k = 2) table(truth = Y_train, fitted = knn_2) #&gt; fitted #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 8 0 2 1 0 #&gt; Corn 0 7 0 0 0 #&gt; Cotton 0 0 4 0 2 #&gt; Soybeans 0 0 0 5 1 #&gt; Sugarbeets 1 0 0 2 3 ## Accuracy mean(Y_train==knn_2) #&gt; [1] 0.75 ## Performance on test data knn_2_test &lt;- knn(X_train, X_test, Y_train, k = 2) table(truth = Y_test, predict = knn_2_test) #&gt; predict #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 1 0 0 0 0 #&gt; Corn 0 1 0 0 0 #&gt; Cotton 0 0 0 0 1 #&gt; Soybeans 0 0 0 1 0 #&gt; Sugarbeets 0 0 0 0 1 ## Accuracy mean(Y_test==knn_2_test) #&gt; [1] 0.8 ## Nearest neighbors with 3 neighbors knn_3 &lt;- knn(X_train, X_train, Y_train, k = 3) table(truth = Y_train, fitted = knn_3) #&gt; fitted #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 9 0 1 1 0 #&gt; Corn 0 5 1 1 0 #&gt; Cotton 1 0 4 1 0 #&gt; Soybeans 0 1 1 3 1 #&gt; Sugarbeets 0 1 0 1 4 ## Accuracy mean(Y_train==knn_3) #&gt; [1] 0.6944444 ## Performance on test data knn_3_test &lt;- knn(X_train, X_test, Y_train, k = 3) table(truth = Y_test, predict = knn_3_test) #&gt; predict #&gt; truth Clover Corn Cotton Soybeans Sugarbeets #&gt; Clover 1 0 0 0 0 #&gt; Corn 0 1 0 0 0 #&gt; Cotton 0 0 1 0 0 #&gt; Soybeans 0 0 0 1 0 #&gt; Sugarbeets 0 0 0 0 1 ## Accuracy mean(Y_test==knn_3_test) #&gt; [1] 1 22.4.4.4 Stepwise Stepwise discriminant analysis using the stepclass in function in the klaR package. step &lt;- stepclass( crop ~ y1 + y2 + y3 + y4, data = crops, method = &quot;qda&quot;, improvement = 0.15 ) #&gt; correctness rate: 0.475; in: &quot;y1&quot;; variables (1): y1 #&gt; #&gt; hr.elapsed min.elapsed sec.elapsed #&gt; 0.00 0.00 0.16 step$process #&gt; step var varname result.pm #&gt; 0 start 0 -- 0.000 #&gt; 1 in 1 y1 0.475 step$performance.measure #&gt; [1] &quot;correctness rate&quot; Iris Data library(dplyr) data(&#39;iris&#39;) set.seed(1) samp &lt;- sample.int(nrow(iris), size = floor(0.70 * nrow(iris)), replace = F) train.iris &lt;- iris[samp,] %&gt;% mutate_if(is.numeric,scale) test.iris &lt;- iris[-samp,] %&gt;% mutate_if(is.numeric,scale) library(ggplot2) iris.model &lt;- lda(Species ~ ., data = train.iris) #pred pred.lda &lt;- predict(iris.model, test.iris) table(truth = test.iris$Species, prediction = pred.lda$class) #&gt; prediction #&gt; truth setosa versicolor virginica #&gt; setosa 15 0 0 #&gt; versicolor 0 17 0 #&gt; virginica 0 0 13 plot(iris.model) iris.model.qda &lt;- qda(Species~.,data=train.iris) #pred pred.qda &lt;- predict(iris.model.qda,test.iris) table(truth=test.iris$Species,prediction=pred.qda$class) #&gt; prediction #&gt; truth setosa versicolor virginica #&gt; setosa 15 0 0 #&gt; versicolor 0 16 1 #&gt; virginica 0 0 13 22.4.4.5 PCA with Discriminant Analysis we can use both PCA for dimension reduction in discriminant analysis zeros &lt;- as.matrix(read.table(&quot;images/mnist0_train_b.txt&quot;)) nines &lt;- as.matrix(read.table(&quot;images/mnist9_train_b.txt&quot;)) train &lt;- rbind(zeros[1:1000, ], nines[1:1000, ]) train &lt;- train / 255 #divide by 255 per notes (so ranges from 0 to 1) train &lt;- t(train) #each column is an observation image(matrix(train[, 1], nrow = 28), main = &#39;Example image, unrotated&#39;) test &lt;- rbind(zeros[2501:3000, ], nines[2501:3000, ]) test &lt;- test / 255 test &lt;- t(test) y.train &lt;- c(rep(0, 1000), rep(9, 1000)) y.test &lt;- c(rep(0, 500), rep(9, 500)) library(MASS) pc &lt;- prcomp(t(train)) train.large &lt;- data.frame(cbind(y.train, pc$x[, 1:10])) large &lt;- lda(y.train ~ ., data = train.large) #the test data set needs to be constucted w/ the same 10 princomps test.large &lt;- data.frame(cbind(y.test, predict(pc, t(test))[, 1:10])) pred.lda &lt;- predict(large, test.large) table(truth = test.large$y.test, prediction = pred.lda$class) #&gt; prediction #&gt; truth 0 9 #&gt; 0 491 9 #&gt; 9 5 495 large.qda &lt;- qda(y.train~.,data=train.large) #prediction pred.qda &lt;- predict(large.qda,test.large) table(truth=test.large$y.test,prediction=pred.qda$class) #&gt; prediction #&gt; truth 0 9 #&gt; 0 493 7 #&gt; 9 3 497 References "],["quasi-experimental.html", "Chapter 23 Quasi-experimental", " Chapter 23 Quasi-experimental In most cases, it means that you have pre- and post-intervention data. A great resource for causal inference is Causal Inference Mixtape, especially if you like to read about the history of causal inference as a field as well (codes for Stata, R, and Python). Libraries in R: Econometrics Causal Inference Identification strategy for any quasi-experiment (No ways to prove or formal statistical test, but you can provide plausible argument and evidence) Where the exogenous variation comes from (by argument and institutional knowledge) Exclusion restriction: Evidence that the variation in the exogenous shock and the outcome is due to no other factors The stable unit treatment value assumption (SUTVA) states that the treatment of unit \\(i\\) affect only the outcome of unit \\(i\\) (i.e., no spillover to the control groups) All quasi-experimental methods involve a tradeoff between power and support for the exogeneity assumption (i.e., discard variation in the data that is not exogenous). Consequently, we don’t usually look at \\(R^2\\) (Ebbes, Papies, and Van Heerde 2011). And it can even be misleading to use \\(R^2\\) as the basis for model comparison. Clustering should be based on the design, not the expectations of correlation (Abadie et al. 2023). With a small sample, you should use the wild bootstrap procedure (Cameron, Gelbach, and Miller 2008) to correct for the downward bias (see (Cai et al. 2022)for additional assumptions). Typical robustness check: recommended by (Goldfarb, Tucker, and Wang 2022) Different controls: show models with and without controls. Typically, we want to see the change in the estimate of interest. See (Altonji, Elder, and Taber 2005) for a formal assessment based on Rosenbaum bounds (i.e., changes in the estimate and threat of Omitted variables on the estimate). For specific applications in marketing, see (Manchanda, Packard, and Pattabhiramaiah 2015) (Shin, Sudhir, and Yoon 2012) Different functional forms Different window of time (in longitudinal setting) Different dependent variables (those that are related) or different measures of the dependent variables Different control group size (matched vs. un-matched samples) Placebo tests: see each placebo test for each setting below. Showing the mechanism: Mediation analysis Moderation analysis Estimate the model separately (for different groups) Assess whether the three-way interaction between the source of variation (e.g., under DID, cross-sectional and time series) and group membership is significant. External Validity: Assess how representative your sample is Explain the limitation of the design. Use quasi-experimental results in conjunction with structural models: see (J. E. Anderson, Larch, and Yotov 2015) [Einav, Finkelstein, and Levin (2010)](Chung, Steenburgh, and Sudhir 2014) Limitation What is your identifying assumptions or identification strategy What are threats to the validity of your assumptions? What you do to address it? And maybe how future research can do to address it. References "],["regression-discontinuity.html", "Chapter 24 Regression Discontinuity", " Chapter 24 Regression Discontinuity A regression discontinuity occurs when there is a discrete change (jump) in treatment likelihood in the distribution of a continuous (or roughly continuous) variable (i.e., running/forcing/assignment variable). Running variable can also be time, but the argument for time to be continuous is hard to argue because usually we do not see increment of time (e.g., quarterly or annual data). Unless we have minute or hour data, then we might be able to argue for it. Review paper (G. Imbens and Lemieux 2008, 2008; Lee and Lemieux 2010) Other readings: https://ies.ed.gov/ncee/wwc/Docs/ReferenceResources/wwc_rd.pdf https://ies.ed.gov/ncee/wwc/Docs/ReferenceResources/wwc_rdd_standards_122315.pdf (Thistlethwaite and Campbell 1960): first paper to use RD in the context of merit awards on future academic outcomes. RD is a localized experiment at the cutoff point Hence, we always have to qualify (perfunctory) our statement in research articles that “our research might not generalize to beyond the bandwidth.” In reality, RD and experimental (from random assignment) estimates are very similar ((Chaplin et al. 2018); Mathematica). But still, it’s hard to prove empirically for every context (there might be future study that finds a huge difference between local estimate - causal - and overall estimate - random assignment. Threats: only valid near threshold: inference at threshold is valid on average. Interestingly, random experiment showed the validity already. Tradeoff between efficiency and bias Regression discontinuity is under the framework of Instrumental Variable argued by (Angrist and Lavy 1999) and a special case of the Matching Methods (matching at one point) argued by (James J. Heckman, LaLonde, and Smith 1999). The hard part is to find a setting that can apply, but once you find one, it’s easy to apply We can also have multiple cutoff lines. However, for each cutoff line, there can only be one breakup point RD can have multiple coinciding effects (i.e., joint distribution or bundled treatment), then RD effect in this case would be the joint effect. As the running variable becomes more discrete your framework should be Interrupted Time Series, but for more granular levels you can use RD. When you have infinite data (or substantially large) the two frameworks are identical. RD is always better than Interrupted Time Series Multiple alternative model specifications that produce consistent results are more reliable (parametric - linear regression with polynomials terms, and non-parametric - local linear regression). This is according to (Lee and Lemieux 2010), one straightforward method to ease the linearity assumption is by incorporating polynomial functions of the forcing variable. The choice of polynomial terms can be determined based on the data. . According to (Gelman and Imbens 2019), accounting for global high-order polynomials presents three issues: (1) imprecise estimates due to noise, (2) sensitivity to the polynomial’s degree, and (3) inadequate coverage of confidence intervals. To address this, researchers should instead employ estimators that rely on local linear or quadratic polynomials or other smooth functions. RD should be viewed more as a description of a data generating process, rather than a method or approach (similar to a randomized experiment) RD is close to other quasi-experimental methods in the sense that it’s based on the discontinuity at a threshold randomized experiments in the sense that it’s local randomization. There are several types of Regression Discontinuity: Sharp RD: Change in treatment probability at the cutoff point is 1 Kink design: Instead of a discontinuity in the level of running variable, we have a discontinuity in the slope of the function (while the function/level can remain continuous) (Nielsen, Sørensen, and Taber 2010). See (Böckerman, Kanninen, and Suoniemi 2018) for application, and (Card et al. 2015) for theory. Kink RD Fuzzy RD: Change in treatment probability less than 1 Fuzzy Kink RD RDiT: running variable is time. Others: Multiple cutoff Multiple Scores Geographic RD Dynamic Treatments Continuous Treatments Consider \\[ D_i = 1_{X_i &gt; c} \\] \\[ D_i = \\begin{cases} D_i = 1 \\text{ if } X_i &gt; C \\\\ D_i = 0 \\text{ if } X_i &lt; C \\end{cases} \\] where \\(D_i\\) = treatment effect \\(X_i\\) = score variable (continuous) \\(c\\) = cutoff point Identification (Identifying assumptions) of RD: Average Treatment Effect at the cutoff (Continuity-based) \\[ \\begin{aligned} \\alpha_{SRDD} &amp;= E[Y_{1i} - Y_{0i} | X_i = c] \\\\ &amp;= E[Y_{1i}|X_i = c] - E[Y_{0i}|X_i = c]\\\\ &amp;= \\lim_{x \\to c^+} E[Y_{1i}|X_i = c] - \\lim_{x \\to c^=} E[Y_{0i}|X_i = c] \\end{aligned} \\] Average Treatment Effect in a neighborhood (Local Randomization-based): \\[ \\begin{aligned} \\alpha_{LR} &amp;= E[Y_{1i} - Y_{0i}|X_i \\in W] \\\\ &amp;= \\frac{1}{N_1} \\sum_{X_i \\in W, T_i = 1}Y_i - \\frac{1}{N_0}\\sum_{X_i \\in W, T_i =0} Y_i \\end{aligned} \\] RDD estimates the local average treatment effect (LATE), at the cutoff point which is not at the individual or population levels. Since researchers typically care more about the internal validity, than external validity, localness affects only external validity. Assumptions: Independent assignment Continuity of conditional regression functions \\(E[Y(0)|X=x]\\) and \\(E[Y(1)|X=x]\\) are continuous in x. RD is valid if cutpoint is exogenous (i.e., no endogenous selection) and running variable is not manipulable Only treatment(s) (e.g., could be joint distribution of multiple treatments) cause discontinuity or jump in the outcome variable All other factors are smooth through the cutoff (i.e., threshold) value. (we can also test this assumption by seeing no discontinuity in other factors). If they “jump”, they will bias your causal estimate Threats to RD Variables (other than treatment) change discontinuously at the cutoff We can test for jumps in these variables (including pre-treatment outcome) Multiple discontinuities for the assignment variable Manipulation of the assignment variable At the cutoff point, check for continuity in the density of the assignment variable. References "],["estimation-and-inference.html", "24.1 Estimation and Inference", " 24.1 Estimation and Inference 24.1.1 Local Randomization-based Additional Assumption: Local Randomization approach assumes that inside the chosen window \\(W = [c-w, c+w]\\) are assigned to treatment as good as random: Joint probability distribution of scores for units inside the chosen window \\(W\\) is known Potential outcomes are not affected by value of the score This approach is stronger than the Continuity-based because we assume the regressions are continuously at \\(c\\) and unaffected by the running variable within window \\(W\\) Because we can choose the window \\(W\\) (within which random assignment is plausible), the sample size can typically be small. To choose the window \\(W\\), we can base on either where the pre-treatment covariate-balance is observed independent tests between outcome and score domain knowledge To make inference, we can either use (Fisher) randomization inference (Neyman) design-based 24.1.2 Continuity-based also known as the local polynomial method as the name suggests, global polynomial regression is not recommended (because of lack of robustness, and over-fitting and Runge’s phenomenon) Step to estimate local polynomial regression Choose polynomial order and weighting scheme Choose bandwidth that has optimal MSE or coverage error Estimate the parameter of interest Examine robust bias-correct inference "],["specification-checks.html", "24.2 Specification Checks", " 24.2 Specification Checks Balance Checks Sorting/Bunching/Manipulation Placebo Tests Sensitivity to Bandwidth Choice 24.2.1 Balance Checks Also known as checking for Discontinuities in Average Covariates Null Hypothesis: The average effect of covariates on pseudo outcomes (i.e., those qualitatively cannot be affected by the treatment) is 0. If this hypothesis is rejected, you better have a good reason to why because it can cast serious doubt on your RD design. 24.2.2 Sorting/Bunching/Manipulation Also known as checking for A Discontinuity in the Distribution of the Forcing Variable Also known as clustering or density test Formal test is McCrary sorting test (McCrary 2008) or (Cattaneo, Idrobo, and Titiunik 2019) Since human subjects can manipulate the running variable to be just above or below the cutoff (assuming that the running variable is manipulable), especially when the cutoff point is known in advance for all subjects, this can result in a discontinuity in the distribution of the running variable at the cutoff (i.e., we will see “bunching” behavior right before or after the cutoff)&gt; People would like to sort into treatment if it’s desirable. The density of the running variable would be 0 just below the threshold People would like to be out of treatment if it’s undesirable (McCrary 2008) proposes a density test (i.e., a formal test for manipulation of the assignment variable). \\(H_0\\): The continuity of the density of the running variable (i.e., the covariate that underlies the assignment at the discontinuity point) \\(H_a\\): A jump in the density function at that point Even though it’s not a requirement that the density of the running must be continuous at the cutoff, but a discontinuity can suggest manipulations. (Zhang and Rubin 2003; Lee 2009; Aronow, Baron, and Pinson 2019) offers a guide to know when you should warrant the manipulation Usually it’s better to know your research design inside out so that you can suspect any manipulation attempts. We would suspect the direction of the manipulation. And typically, it’s one-way manipulation. In cases where we might have both ways, theoretically they would cancel each other out. We could also observe partial manipulation in reality (e.g., when subjects can only imperfectly manipulate). But typically, as we treat it like fuzzy RD, we would not have identification problems. But complete manipulation would lead to serious identification issues. Remember: even in cases where we fail to reject the null hypothesis for the density test, we could not rule out completely that identification problem exists (just like any other hypotheses) Bunching happens when people self-select to a specific value in the range of a variable (e.g., key policy thresholds). Review paper (Kleven 2016) This test can only detect manipulation that changes the distribution of the running variable. If you can choose the cutoff point or you have 2-sided manipulation, this test will fail to detect it. Histogram in bunching is similar to a density curve (we want narrower bins, wider bins bias elasticity estimates) We can also use bunching method to study individuals’ or firm’s responsiveness to changes in policy. Under RD, we assume that we don’t have any manipulation in the running variable. However, bunching behavior is a manipulation by firms or individuals. Thus, violating this assumption. Bunching can fix this problem by estimating what densities of individuals would have been without manipulation (i.e., manipulation-free counterfactual). The fraction of persons who manipulated is then calculated by comparing the observed distribution to manipulation-free counterfactual distributions. Under RD, we do not need this step because the observed and manipulation-free counterfactual distributions are assumed to be the same. RD assume there is no manipulation (i.e., assume the manipulation-free counterfactual distribution) When running variable and outcome variable are simultaneously determined, we can use a modified RDD estimator to have consistent estimate. (Bajari et al. 2011) Assumptions: Manipulation is one-sided: People move one way (i.e., either below the threshold to above the threshold or vice versa, but not to or away the threshold), which is similar to the monotonicity assumption under instrumental variable 30.1.3.1 Manipulation is bounded (also known as regularity assumption): so that we can use people far away from this threshold to derive at our counterfactual distribution Bertanha, McCallum, and Seegert (2021) Steps: Identify the window in which the running variable contains bunching behavior. We can do this step empirically based on Bosch, Dekker, and Strohmaier (2020). Additionally robustness test is needed (i.e., varying the manipulation window). Estimate the manipulation-free counterfactual Calculating the standard errors for inference can follow (Chetty, Hendren, and Katz 2016) where we bootstrap re-sampling residuals in the estimation of the counts of individuals within bins (large data can render this step unnecessary). If we pass the bunching test, we can move on to the Placebo Test McCrary (2008) test A jump in the density at the threshold (i.e., discontinuity) hold can serve as evidence for sorting around the cutoff point library(rdd) # you only need the runing variable and the cutoff point # Example by the package&#39;s authors #No discontinuity x&lt;-runif(1000,-1,1) DCdensity(x,0) #&gt; [1] 0.5730284 #Discontinuity x&lt;-runif(1000,-1,1) x&lt;-x+2*(runif(1000,-1,1)&gt;0&amp;x&lt;0) DCdensity(x,0) #&gt; [1] 0.004326087 Cattaneo, Idrobo, and Titiunik (2019) test library(rddensity) # Example by the package&#39;s authors # Continuous Density set.seed(1) x &lt;- rnorm(2000, mean = -0.5) rdd &lt;- rddensity(X = x, vce = &quot;jackknife&quot;) summary(rdd) #&gt; #&gt; Manipulation testing using local polynomial density estimation. #&gt; #&gt; Number of obs = 2000 #&gt; Model = unrestricted #&gt; Kernel = triangular #&gt; BW method = estimated #&gt; VCE method = jackknife #&gt; #&gt; c = 0 Left of c Right of c #&gt; Number of obs 1376 624 #&gt; Eff. Number of obs 354 345 #&gt; Order est. (p) 2 2 #&gt; Order bias (q) 3 3 #&gt; BW est. (h) 0.514 0.609 #&gt; #&gt; Method T P &gt; |T| #&gt; Robust -0.6798 0.4966 #&gt; #&gt; #&gt; P-values of binomial tests (H0: p=0.5). #&gt; #&gt; Window Length / 2 &lt;c &gt;=c P&gt;|T| #&gt; 0.036 28 20 0.3123 #&gt; 0.072 46 39 0.5154 #&gt; 0.107 68 59 0.4779 #&gt; 0.143 94 79 0.2871 #&gt; 0.179 122 103 0.2301 #&gt; 0.215 145 130 0.3986 #&gt; 0.250 163 156 0.7370 #&gt; 0.286 190 176 0.4969 #&gt; 0.322 214 200 0.5229 #&gt; 0.358 249 218 0.1650 # you have to specify your own plot (read package manual) 24.2.3 Placebo Tests Also known as Discontinuities in Average Outcomes at Other Values We should not see any jumps at other values (either \\(X_i &lt;c\\) or \\(X_i \\ge c\\)) Use the same bandwidth you use for the cutoff, and move it along the running variable: testing for a jump in the conditional mean of the outcome at the median of the running variable. Also known as falsification checks Before and after the cutoff point, we can run the placebo test to see whether X’s are different). The placebo test is where you expect your coefficients to be not different from 0. This test can be used for Testing no discontinuity in predetermined variables: Testing other discontinuities Placebo outcomes: we should see any changes in other outcomes that shouldn’t have changed. Inclusion and exclusion of covariates: RDD parameter estimates should not be sensitive to the inclusion or exclusion of other covariates. This is analogous to Experimental Design where we cannot only test whether the observables are similar in both treatment and control groups (if we reject this, then we don’t have random assignment), but we cannot test unobservables. Balance on observable characteristics on both sides \\[ Z_i = \\alpha_0 + \\alpha_1 f(x_i) + [I(x_i \\ge c)] \\alpha_2 + [f(x_i) \\times I(x_i \\ge c)]\\alpha_3 + u_i \\] where \\(x_i\\) is the running variable \\(Z_i\\) is other characteristics of people (e.g., age, etc) Theoretically, \\(Z_i\\) should no be affected by treatment. Hence, \\(E(\\alpha_2) = 0\\) Moreover, when you have multiple \\(Z_i\\), you typically have to simulate joint distribution (to avoid having significant coefficient based on chance). The only way that you don’t need to generate joint distribution is when all \\(Z_i\\)’s are independent (unlikely in reality). Under RD, you shouldn’t have to do any Matching Methods. Because just like when you have random assignment, there is no need to make balanced dataset before and after the cutoff. If you have to do balancing, then your RD assumptions are probably wrong in the first place. 24.2.4 Sensitivity to Bandwidth Choice Methods for bandwidth selection Ad-hoc or substantively driven Data driven: cross validation Conservative approach: (Calonico, Cattaneo, and Farrell 2020) The objective is to minimize the mean squared error between the estimated and actual treatment effects. Then, we need to see how sensitive our results will be dependent on the choice of bandwidth. In some cases, the best bandwidth for testing covariates may not be the best bandwidth for treating them, but it may be close. # find optimal bandwidth by Imbens-Kalyanaraman rdd::IKbandwidth(running_var, outcome_var, cutpoint = &quot;&quot;, kernel = &quot;triangular&quot;) # can also pick other kernels References "],["fuzzy-rd-design.html", "24.3 Fuzzy RD Design", " 24.3 Fuzzy RD Design When you have cutoff that does not perfectly determine treatment, but creates a discontinuity in the likelihood of receiving the treatment, you need another instrument For those that are close to the cutoff, we create an instrument for \\(D_i\\) \\[ Z_i= \\begin{cases} 1 &amp; \\text{if } X_i \\ge c \\\\ 0 &amp; \\text{if } X_c &lt; c \\end{cases} \\] Then, we can estimate the effect of the treatment for compliers only (i.e., those treatment \\(D_i\\) depends on \\(Z_i\\)) The LATE parameter \\[ \\lim_{c - \\epsilon \\le X \\le c + \\epsilon, \\epsilon \\to 0}( \\frac{E(Y |Z = 1) - E(Y |Z=0)}{E(D|Z = 1) - E(D|Z = 0)}) \\] equivalently, the canonical parameter: \\[ \\frac{lim_{x \\downarrow c}E(Y|X = x) - \\lim_{x \\uparrow c} E(Y|X = x)}{\\lim_{x \\downarrow c } E(D |X = x) - \\lim_{x \\uparrow c}E(D |X=x)} \\] Two equivalent ways to estimate First Sharp RDD for \\(Y\\) Sharp RDD for \\(D\\) Take the estimate from step 1 divide by that of step 2 Second: Subset those observations that are close to \\(c\\) and run instrumental variable \\(Z\\) "],["regression-kink-design.html", "24.4 Regression Kink Design", " 24.4 Regression Kink Design If the slope of the treatment intensity changes at the cutoff (instead of the level of treatment assignment), we can have regression kink design Example: unemployment benefits Sharp Kink RD parameter \\[ \\alpha_{KRD} = \\frac{\\lim_{x \\downarrow c} \\frac{d}{dx}E[Y_i |X_i = x]- \\lim_{x \\uparrow c} \\frac{d}{dx}E[Y_i |X_i = x]}{\\lim_{x \\downarrow c} \\frac{d}{dx}b(x) - \\lim_{x \\uparrow c} \\frac{d}{dx}b(x)} \\] where \\(b(x)\\) is a known function inducing “kink” Fuzzy Kink RD parameter \\[ \\alpha_{KRD} = \\frac{\\lim_{x \\downarrow c} \\frac{d}{dx}E[Y_i |X_i = x]- \\lim_{x \\uparrow c} \\frac{d}{dx}E[Y_i |X_i = x]}{\\lim_{x \\downarrow c} \\frac{d}{dx}E[D_i |X_i = x]- \\lim_{x \\uparrow c} \\frac{d}{dx}E[D_i |X_i = x]} \\] "],["multi-cutoff.html", "24.5 Multi-cutoff", " 24.5 Multi-cutoff \\[ \\tau (x,c)= E[Y_{1i} - Y_{0i}|X_i = x, C_i = c] \\] "],["multi-score.html", "24.6 Multi-score", " 24.6 Multi-score Multi-score (in multiple dimensions) (e.g., math and English cutoff for certain honor class): \\[ \\tau (x_1, x_2) = E[Y_{1i} - Y_{0i}|X_{1i} = x_1, X_{2i} = x] \\] "],["steps-for-sharp-rd.html", "24.7 Steps for Sharp RD", " 24.7 Steps for Sharp RD Graph the data by computing the average value of the outcome variable over a set of bins (large enough to see a smooth graph, and small enough to make the jump around the cutoff clear). Run regression on both sides of the cutoff to get the treatment effect Robustness checks: Assess possible jumps in other variables around the cutoff Hypothesis testing for bunching Placebo tests Varying bandwidth "],["steps-for-fuzzy-rd.html", "24.8 Steps for Fuzzy RD", " 24.8 Steps for Fuzzy RD Graph the data by computing the average value of the outcome variable over a set of bins (large enough to see a smooth graph, and small enough to make the jump around the cutoff clear). Graph the probability of treatment Estimate the treatment effect using 2SLS Robustness checks: Assess possible jumps in other variables around the cutoff Hypothesis testing for bunching Placebo tests Varying bandwidth "],["steps-for-rdit-regression-discontinuity-in-time.html", "24.9 Steps for RDiT (Regression Discontinuity in Time)", " 24.9 Steps for RDiT (Regression Discontinuity in Time) Notes: Additional assumption: Time-varying confounders change smoothly across the cutoff date Typically used in policy implementation in the same date for all subjects, but can also be used for cases where implementation dates are different between subjects. In the second case, researchers typically use different RDiT specification for each time series. Sometimes the date of implementation is not randomly assigned by chosen strategically. Hence, RDiT should be thought of as the “discontinuity at a threshold” interpretation of RD (not as “local randomization”). (C. Hausman and Rapson 2018, 8) Normal RD uses variation in the \\(N\\) dimension, while RDiT uses variation in the \\(T\\) dimension Choose polynomials based on BIC typically. And can have either global polynomial or pre-period and post-period polynomial for each time series (but usually the global one will perform better) Could use augmented local linear outlined by (C. Hausman and Rapson 2018, 12), where estimate the model with all the control first then take the residuals to include in the model with the RDiT treatment (remember to use bootstrapping method to account for the first-stage variance in the second stage). Pros: can overcome cases where there is no cross-sectional variation in treatment implementation (dif-n-dif is not feasible) There are papers that use both RDiT and DiD to (1) see the differential treatment effects across individuals/ space (Auffhammer and Kellogg 2011) or (2) compare the 2 estimates where the control group’s validity is questionable (Gallego, Montero, and Salas 2013). Better than pre/post comparison because it can include flexible controls Better than event studies because it can use long-time horizons (may not be too relevant now since the development long-time horizon event studies), and it can use higher-order polynomials time control variables. Cons: Taking observation for from the threshold (in time) can bias your estimates because of unobservables and time-series properties of the data generating process. (McCrary 2008) test is not possible (see Sorting/Bunching/Manipulation) because when the density of the running (time) is uniform, you can’t use the test. Time-varying unobservables may impact the dependent variable discontinuously Error terms are likely to include persistence (serially correlated errors) Researchers cannot model time-varying treatment under RDiT In a small enough window, the local linear specification is fine, but the global polynomials can either be too big or too small (C. Hausman and Rapson 2018) Biases Time-Varying treatment Effects increase sample size either by more granular data (greater frequency): will not increase power because of the problem of serial correlation increasing time window: increases bias from other confounders 2 additional assumption: Model is correctly specified (with all confoudners or global polynomial approximation) Treatment effect is correctly specified (whether it’s smooth and constant, or varies) These 2 assumptions do not interact ( we don’t want them to interact - i.e., we don’t want the polynomial correlated with the unobserved variation in the treatment effect) There usually a difference between short-run and long-run treatment effects, but it’s also possibly that the bias can stem from the over-fitting problem of the polynomial specification. (C. Hausman and Rapson 2018, 544) Autoregression (serial dependence) Need to use clustered standard errors to account for serial dependence in the residuals In the case of serial dependence in \\(\\epsilon_{it}\\), we don’t have a solution, including a lagged dependent variable would misspecify the model (probably find another research project) In the case of serial dependence in \\(y_{it}\\), with long window, it becomes fuzzy to what you try to recover. You can include the lagged dependent variable (bias can still come from the time-varying treatment or over-fitting of the global polynomial) Sorting and Anticipation Effects Cannot run the (McCrary 2008) because the density of the time running variable is uniform Can still run tests to check discontinuities in other covariates (you want no discontinuities) and discontinuities in the outcome variable at other placebo thresholds ( you don’t want discontinuities) Hence, it’s hard to argue for the causal effect here because it could be the total effect of the causal treatment and the unobserved sorting/anticipation/adaptation/avoidance effects. You can only argue that there is no such behavior Recommendations for robustness check following (C. Hausman and Rapson 2018, 549) Plot the raw data and residuals (after removing confounders or trend). With varying polynomial and local linear controls, inconsistent results can be a sign of time-varying treatment effects. Using global polynomial, you could overfit, then show polynomial with different order and alternative local linear bandwidths. If the results are consistent, you’re ok Placebo Tests: estimate another RD (1) on another location or subject (that did not receive the treatment) or (2) use another date. Plot RD discontinuity on continuous controls Donut RD to see if avoiding the selection close to the cutoff would yield better results (Barreca et al. 2011) Test for auto-regression (using only pre-treatment data). If there is evidence for autoregression, include the lagged dependentvariable Augmented local linear (no need to use global polynomial and avoid over-fitting) Use full sample to exclude the effect of important predictors Estimate the conditioned second stage on a smaller sample bandwidth Examples from (C. Hausman and Rapson 2018, 534) in econ (Davis 2008): Air quality (Auffhammer and Kellogg 2011): Air quality (H. Chen et al. 2018): Air quality (De Paola, Scoppa, and Falcone 2013): car accidents (Gallego, Montero, and Salas 2013): air quality (Bento et al. 2014): Traffic (M. L. Anderson 2014): Traffic (Burger, Kaffine, and Yu 2014): Car accidents (Brodeur et al. 2021): Covid19 lock-downs on well-being marketing M. R. Busse et al. (2013): Vehicle prices (X. Chen et al. 2009): Customer Satisfaction (M. R. Busse, Simester, and Zettelmeyer 2010): Vehicle prices (Davis and Kahn 2010): vehicle prices References "],["evaluation-of-an-rd.html", "24.10 Evaluation of an RD", " 24.10 Evaluation of an RD Evidence for (either formal tests or graphs) Treatment and outcomes change discontinuously at the cutoff, while other variables and pre-treatment outcomes do not. No manipulation of the assignment variable. Results are robust to various functional forms of the forcing variable Is there any other (unobserved) confound that could cause the discontinuous change at the cutoff (i.e., multiple forcing variables / bundling of institutions)? External Validity: How likely the result at the cutoff will generalize? General Model \\[ Y_i = \\beta_0 + f(x_i) \\beta_1 + [I(x_i \\ge c)]\\beta_2 + \\epsilon_i \\] where \\(f(x_i)\\) is any functional form of \\(x_i\\) Simple case When \\(f(x_i) = x_i\\) (linear function) \\[ Y_i = \\beta_0 + x_i \\beta_1 + [I(x_i \\ge c)]\\beta_2 + \\epsilon_i \\] RD gives you \\(\\beta_2\\) (causal effect) of \\(X\\) on \\(Y\\) at the cutoff point In practice, everyone does \\[ Y_i = \\alpha_0 + f(x) \\alpha _1 + [I(x_i \\ge c)]\\alpha_2 + [f(x_i)\\times [I(x_i \\ge c)]\\alpha_3 + u_i \\] where we estimate different slope on different sides of the line and if you estimate \\(\\alpha_3\\) to be no different from 0 then we return to the simple case Notes: Sparse data can make \\(\\alpha_3\\) large differential effect People are very skeptical when you have complex \\(f(x_i)\\), usual simple function forms (e.g., linear, squared term, etc.) should be good. However, if you still insist, then non-parametric estimation can be your best bet. Bandwidth of \\(c\\) (window) Closer to \\(c\\) can give you lower bias, but also efficiency Wider \\(c\\) can increase bias, but higher efficiency. Optimal bandwidth is very controversial, but usually we have to do it in the appendix for research article anyway. We can either drop observations outside of bandwidth or weight depends on how far and close to \\(c\\) "],["applications.html", "24.11 Applications", " 24.11 Applications Examples in marketing: (Narayanan and Kalyanam 2015) (Hartmann, Nair, and Narayanan 2011): nonparametric estimation and guide to identifying causal marketing mix effects Packages in R (see (Thoemmes, Liao, and Jin 2017) for detailed comparisons): all can handle both sharp and fuzzy RD rdd rdrobust estimation, inference and plot rddensity discontinuity in density tests (Sorting/Bunching/Manipulation) using local polynomials and binomial test rdlocrand covariate balance, binomial tests, window selection rdmulti multiple cutoffs and multiple scores rdpower power, sample selection rddtools Package rdd rdrobust rddtools Coefficient estimator Local linear regression local polynomial regression local polynomial regression bandwidth selectors (G. Imbens and Kalyanaraman 2012) (Calonico, Cattaneo, and Farrell 2020) (G. Imbens and Kalyanaraman 2012) (Calonico, Cattaneo, and Titiunik 2014) (G. Imbens and Kalyanaraman 2012) Kernel functions Triangular Rectangular Epanechnikov Gaussian Epanechnikov Gaussian Bias Correction Local polynomial regression Covariate options Include Include Include Residuals Assumptions testing McCrary sorting McCrary sorting Equality of covariates distribution and mean based on table 1 (Thoemmes, Liao, and Jin 2017) (p. 347) 24.11.1 Example 1 Example by Leihua Ye \\[ Y_i = \\beta_0 + \\beta_1 X_i + \\beta_2 W_i + u_i \\] \\[ X_i = \\begin{cases} 1, W_i \\ge c \\\\ 0, W_i &lt; c \\end{cases} \\] #cutoff point = 3.5 GPA &lt;- runif(1000, 0, 4) future_success &lt;- 10 + 2 * GPA + 10 * (GPA &gt;= 3.5) + rnorm(1000) #install and load the package ‘rddtools’ #install.packages(“rddtools”) library(rddtools) data &lt;- rdd_data(future_success, GPA, cutpoint = 3.5) # plot the dataset plot( data, col = &quot;red&quot;, cex = 0.1, xlab = &quot;GPA&quot;, ylab = &quot;future_success&quot; ) # estimate the sharp RDD model rdd_mod &lt;- rdd_reg_lm(rdd_object = data, slope = &quot;same&quot;) summary(rdd_mod) #&gt; #&gt; Call: #&gt; lm(formula = y ~ ., data = dat_step1, weights = weights) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.93235 -0.66786 -0.00799 0.69991 3.01768 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 17.08582 0.07178 238.03 &lt;2e-16 *** #&gt; D 9.95513 0.11848 84.03 &lt;2e-16 *** #&gt; x 2.01615 0.03546 56.85 &lt;2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 1.046 on 997 degrees of freedom #&gt; Multiple R-squared: 0.9617, Adjusted R-squared: 0.9616 #&gt; F-statistic: 1.253e+04 on 2 and 997 DF, p-value: &lt; 2.2e-16 # plot the RDD model along with binned observations plot( rdd_mod, cex = 0.1, col = &quot;red&quot;, xlab = &quot;GPA&quot;, ylab = &quot;future_success&quot; ) 24.11.2 Example 2 Bowblis and Smith (2021) Occupational licensing can either increase or decrease market efficiency: More information means more efficiency Increased entry barriers (i.e., friction) increase efficiency Components of RD Running variable Cutoff: 120 beds or above Treatment: you have to have the treatment before the cutoff point. Under OLS \\[ Y_i = \\alpha_0 + X_i \\alpha_1 + LW_i \\alpha_2 + \\epsilon_i \\] where \\(LW_i\\) Licensed/certified workers (in fraction format for each center). \\(Y_i\\) = Quality of service Bias in \\(\\alpha_2\\) Mitigation-based: terrible quality can lead to more hiring, which negatively bias \\(\\alpha_2\\) Preference-based: places that have higher quality staff want to keep high quality staffs. Under RD \\[ Y_{ist} = \\beta_0 + [I(Bed \\ge121)_{ist}]\\beta_1 + f(Size_{ist}) \\beta_2 + [f(Size_{ist}) \\times I(Bed \\ge 121)_{ist}] \\beta_3 \\\\ + X_{it} \\delta + \\gamma_s + \\theta_t + \\epsilon_{ist} \\] where \\(s\\) = state \\(t\\) = year \\(i\\) = hospital This RD is fuzzy If right near the threshold (bandwidth), we have states with different sorting (i.e., non-random), then we need the fixed-effect for state \\(s\\). But then your RD assumption wrong anyway, then you won’t do it in the first place Technically, we could also run the fixed-effect regression, but because it’s lower in the causal inference hierarchy. Hence, we don’t do it. Moreover, in the RD framework, we don’t include \\(t\\) before treatment (but in the FE we have to include before and after) If we include \\(\\pi_i\\) for each hospital, then we don’t have variation in the causal estimates (because hardly any hospital changes their bed size in the panel) When you have \\(\\beta_1\\) as the intent to treat (because the treatment effect does not coincide with the intent to treat) You cannot take those fuzzy cases out, because it will introduce the selection bias. Note that we cannot drop cases based on behavioral choice (because we will exclude non-compliers), but we can drop when we have particular behaviors ((e.g., people like round numbers). Thus, we have to use Instrument variable 30.1.3.1 Stage 1: \\[ QSW_{ist} = \\alpha_0 + [I(Bed \\ge121)_{ist}]\\alpha_1 + f(Size_{ist}) \\alpha_2 + [f(Size_{ist}) \\times I(Bed \\ge 121)_{ist}] \\alpha_3 \\\\ + X_{it} \\delta + \\gamma_s + \\theta_t + \\epsilon_{ist} \\] (Note: you should have different fixed effects and error term - \\(\\delta, \\gamma_s, \\theta_t, \\epsilon_{ist}\\) from the first equation, but I ran out of Greek letters) Stage 2: \\[ Y_{ist} = \\gamma_0 + \\gamma_1 \\hat{QWS}_{ist} + f(Size_{ist}) \\delta_2 + [f(Size_{ist}) \\times I(Bed \\ge 121)] \\delta_3 \\\\ + X_{it} \\lambda + \\eta_s + \\tau_t + u_{ist} \\] The bigger the jump (discontinuity), the more similar the 2 coefficients (\\(\\gamma_1 \\approx \\beta_1\\)) where \\(\\gamma_1\\) is the average treatment effect (of exposing to the policy) \\(\\beta_1\\) will always be closer to 0 than \\(\\gamma_1\\) Figure 1 shows bunching at every 5 units cutoff, but 120 is still out there. If we have manipulable bunching, there should be decrease at 130 Since we have limited number of mass points (at the round numbers), we should clustered standard errors by the mass point 24.11.3 Example 3 Replication of (Carpenter and Dobkin 2009) by Philipp Leppert, dataset from here 24.11.4 Example 4 For a detailed application, see (Thoemmes, Liao, and Jin 2017) where they use rdd, rdrobust, rddtools References "],["difference-in-differences.html", "Chapter 25 Difference-in-differences", " Chapter 25 Difference-in-differences List of packages Examples in marketing (Liaukonyte, Teixeira, and Wilbur 2015): TV ad on online shopping (Akca and Rao 2020): aggregators for airlines business effect (Pattabhiramaiah, Sriram, and Manchanda 2019): paywall affects readership (Wang, Lewis, and Schweidel 2018): political ad source and message tone on vote shares and turnout using discontinuities in the level of political ads at the borders (Datta, Knox, and Bronnenberg 2018): streaming service on total music consumption using timing of users adoption of a music streaming service (Janakiraman, Lim, and Rishika 2018): data breach announcement affect customer spending using timing of data breach and variation whether customer info was breached in that event (Lim et al. 2020): nutritional labels on nutritional quality for other brands in a category using variation in timing of adoption of nutritional labels across categories (Guo, Sriram, and Manchanda 2020): payment disclosure laws effect on physician prescription behavior using Timing of the Massachusetts open payment law as the exogenous shock (Israeli 2018): digital monitoring and enforcement on violations using enforcement of min ad price policies (Ramani and Srinivasan 2019): firms respond to foreign direct investment liberalization using India’s reform in 1991. (He, Hollenbeck, and Proserpio 2022): using Amazon policy change to examine the causal impact of fake reviews on sales, average ratings. (Peukert et al. 2022): using European General data protection Regulation, examine the impact of policy change on website usage. Show the mechanism via Mediation analysis: see (Habel, Alavi, and Linsenmayer 2021) Moderation analysis: see (Goldfarb and Tucker 2011) References "],["simple-dif-n-dif.html", "25.1 Simple Dif-n-dif", " 25.1 Simple Dif-n-dif A tool developed intuitively to study “natural experiment”, but its uses are much broader. Fixed Effects Estimator is the foundation for DID Why is dif-in-dif attractive? Identification strategy: Inter-temporal variation between groups Cross-sectional estimator helps avoid omitted (unobserved) common trends Time-series estimator helps overcome omitted (unobserved) cross-sectional differences Consider \\(D_i = 1\\) treatment group \\(D_i = 0\\) control group \\(T= 1\\) After the treatment \\(T =0\\) Before the treatment After (T = 1) Before (T = 0) Treated \\(D_i =1\\) \\(E[Y_{1i}(1)|D_i = 1]\\) \\(E[Y_{0i}(0)|D)i=1]\\) Control \\(D_i = 0\\) \\(E[Y_{0i}(1) |D_i =0]\\) \\(E[Y_{0i}(0)|D_i=0]\\) missing \\(E[Y_{0i}(1)|D=1]\\) The Average Treatment Effect on Treated (ATT) \\[ E[Y_1(1) - Y_0(1)|D=1] \\\\ = \\{E[Y(1)|D=1] - E[Y(1)|D=0] \\} - \\{E[Y(0)|D=1] - E[Y(0)|D=0] \\} \\] More elaboration: For the treatment group, we isolate the difference between being treated and not being treated. If the untreated group would have been affected in a different way, the DiD design and estimate would tell us nothing. Alternatively, because we can’t observe treatment variation in the control group, we can’t say anything about the treatment effect on this group. Extension More than 2 groups (multiple treatments and multiple controls), and more than 2 period (pre and post) \\[ Y_{igt} = \\alpha_g + \\gamma_t + \\beta I_{gt} + \\delta X_{igt} + \\epsilon_{igt} \\] where \\(\\alpha_g\\) is the group-specific fixed effect \\(\\gamma_t\\) = time specific fixed effect \\(\\beta\\) = dif-in-dif effect \\(I_{gt}\\) = interaction terms (n treatment indicators x n post-treatment dummies) (capture effect heterogeneity over time) This specification is the “two-way fixed effects DiD” - TWFE (i.e., 2 sets of fixed effects: group + time). However, if you have Staggered Dif-n-dif (i.e., treatment is applied at different times to different groups). TWFE is really bad. Long-term Effects To examine the dynamic treatment effects (that are not under rollout/staggered design), we can create a centered time variable, Centered Time Variable Period … \\(t = -1\\) 2 periods before treatment period \\(t = 0\\) Last period right before treatment period Remember to use this period as reference group \\(t = 1\\) Treatment period … By interacting this factor variable, we can examine the dynamic effect of treatment (i.e., whether it’s fading or intensifying) \\[ \\begin{aligned} Y &amp;= \\alpha_0 + \\alpha_1 Group + \\alpha_2 Time \\\\ &amp;+ \\beta_{-T_1} Treatment+ \\beta_{-(T_1 -1)} Treatment + \\dots + \\beta_{-1} Treatment \\\\ &amp;+ \\beta_1 + \\dots + \\beta_{T_2} Treatment \\end{aligned} \\] where \\(\\beta_0\\) is used as the reference group (i.e., drop from the model) \\(T_1\\) is the pre-treatment period \\(T_2\\) is the post-treatment period With more variables (i.e., interaction terms), coefficients estimates can be less precise (i.e., higher SE). DiD on the relationship, not levels. Technically, we can apply DiD research design not only on variables, but also on coefficients estimates of some other regression models with before and after a policy is implemented. Goal: Pre-treatment coefficients should be non-significant \\(\\beta_{-T_1}, \\dots, \\beta_{-1} = 0\\) (similar to the Placebo Test) Post-treatment coefficients are expected to be significant \\(\\beta_1, \\dots, \\beta_{T_2} \\neq0\\) You can now examine the trend in post-treatment coefficients (i.e., increasing or decreasing) library(tidyverse) library(fixest) od &lt;- causaldata::organ_donations %&gt;% # Treatment variable mutate(California = State == &#39;California&#39;) %&gt;% # centered time variable mutate(center_time = as.factor(Quarter_Num - 3)) # where 3 is the reference period (that is preceding the treatment period) class(od$California) #&gt; [1] &quot;logical&quot; class(od$State) #&gt; [1] &quot;character&quot; cali &lt;- feols(Rate ~ i(center_time, California, ref = 0) | State + center_time, data = od) etable(cali) #&gt; cali #&gt; Dependent Var.: Rate #&gt; #&gt; California x center_time = -2 -0.0029 (0.0051) #&gt; California x center_time = -1 0.0063** (0.0023) #&gt; California x center_time = 1 -0.0216*** (0.0050) #&gt; California x center_time = 2 -0.0203*** (0.0045) #&gt; California x center_time = 3 -0.0222* (0.0100) #&gt; Fixed-Effects: ------------------- #&gt; State Yes #&gt; center_time Yes #&gt; _____________________________ ___________________ #&gt; S.E.: Clustered by: State #&gt; Observations 162 #&gt; R2 0.97934 #&gt; Within R2 0.00979 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 iplot(cali, pt.join = T) coefplot(cali) Notes: Matching Methods Match treatment and control based on pre-treatment observables Modify SEs appropriately (James J. Heckman, Ichimura, and Todd 1997). It’s might be easier to just use the Doubly Robust DiD (Sant’Anna and Zhao 2020) where you just need either matching or regression to work in order to identify your treatment effect Whereas the group fixed effects control for the group time-invariant effects, it does not control for selection bias (i.e., certain groups are more likely to be treated than others). Hence, with these backdoor open (i.e., selection bias) between (1) propensity to be treated and (2) dynamics evolution of the outcome post-treatment, matching can potential close these backdoor. Be careful when matching time-varying covariates because you might encounter “regression to the mean” problem, where pre-treatment periods can have an unusually bad or good time (that is out of the ordinary), then the post-treatment period outcome can just be an artifact of the regression to the mean (Daw and Hatfield 2018). This problem is not of concern to time-invariant variables. Matching and DiD can use pre-treatment outcomes to correct for selection bias. From real world data and simulation, (Chabé-Ferret 2015) found that matching generally underestiamtes the average causal effect and gets closer to the true effect with more number of pre-treatment outcomes. When selection bias is symmetric around the treatment date, DID is still consistent when implemented symmetrically (i.e., the same number of period before and after treatment). In cases where selection bias is asymmetric, the MC simulations show that Symmetric DiD still performs better than Matching. It’s always good to show results with and without controls because If the controls are fixed within group or within time, then those should be absorbed under those fixed effects If the controls are dynamic across group and across, then your parallel trends assumption is not plausible. SEs are typically clustered within groups, but this approach can make our SEs too small, that leads to overconfidence in our estimates. Hence, Bertrand, Duflo, and Mullainathan (2004) suggest either aggregating data to just one pre-treatment and one post-treatment period per group using cluster bootstrapped SEs. 25.1.1 Examples 25.1.1.1 Example from Princeton library(foreign) mydata = read.dta(&quot;http://dss.princeton.edu/training/Panel101.dta&quot;) %&gt;% # create a dummy variable to indicate the time when the treatment started mutate(time = ifelse(year &gt;= 1994, 1, 0)) %&gt;% # create a dummy variable to identify the treatment group mutate(treated = ifelse(country == &quot;E&quot; | country == &quot;F&quot; | country == &quot;G&quot; , 1, 0)) %&gt;% # create an interaction between time and treated mutate(did = time * treated) estimate the DID estimator didreg = lm(y ~ treated + time + did, data = mydata) summary(didreg) #&gt; #&gt; Call: #&gt; lm(formula = y ~ treated + time + did, data = mydata) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -9.768e+09 -1.623e+09 1.167e+08 1.393e+09 6.807e+09 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 3.581e+08 7.382e+08 0.485 0.6292 #&gt; treated 1.776e+09 1.128e+09 1.575 0.1200 #&gt; time 2.289e+09 9.530e+08 2.402 0.0191 * #&gt; did -2.520e+09 1.456e+09 -1.731 0.0882 . #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 2.953e+09 on 66 degrees of freedom #&gt; Multiple R-squared: 0.08273, Adjusted R-squared: 0.04104 #&gt; F-statistic: 1.984 on 3 and 66 DF, p-value: 0.1249 The did coefficient is the differences-in-differences estimator. Treat has a negative effect 25.1.1.2 Example by Card and Krueger (1993) found that increase in minimum wage increases employment Experimental Setting: New Jersey (treatment) increased minimum wage Penn (control) did not increase minimum wage After Before Treatment NJ A B A - B Control PA C D C - D A - C B - D (A - B) - (C - D) where A - B = treatment effect + effect of time (additive) C - D = effect of time (A - B) - (C - D) = dif-n-dif The identifying assumptions: Can’t have switchers PA is the control group is a good counter factual is what NJ would look like if they hadn’t had the treatment \\[ Y_{jt} = \\beta_0 + NJ_j \\beta_1 + POST_t \\beta_2 + (NJ_j \\times POST_t)\\beta_3+ X_{jt}\\beta_4 + \\epsilon_{jt} \\] where \\(j\\) = restaurant \\(NJ\\) = dummy where 1 = NJ, and 0 = PA \\(POST\\) = dummy where 1 = post, and 0 = pre Notes: We don’t need \\(\\beta_4\\) in our model to have unbiased \\(\\beta_3\\), but including it would give our coefficients efficiency If we use \\(\\Delta Y_{jt}\\) as the dependent variable, we don’t need \\(POST_t \\beta_2\\) anymore Alternative model specification is that the authors use NJ high wage restaurant as control group (still choose those that are close to the border) The reason why they can’t control for everything (PA + NJ high wage) is because it’s hard to interpret the causal treatment Dif-n-dif utilizes similarity in pretrend of the dependent variables. However, this is neither a necessary nor sufficient for the identifying assumption. It’s not sufficient because they can have multiple treatments (technically, you could include more control, but your treatment can’t interact) It’s not necessary because trends can be parallel after treatment However, we can’t never be certain; we just try to find evidence consistent with our theory so that dif-n-dif can work. Notice that we don’t need before treatment the levels of the dependent variable to be the same (e.g., same wage average in both NJ and PA), dif-n-dif only needs pre-trend (i.e., slope) to be the same for the two groups. 25.1.1.3 Example by Butcher, McEwan, and Weerapana (2014) Theory: Highest achieving students are usually in hard science. Why? Hard to give students students the benefit of doubt for hard science How unpleasant and how easy to get a job. Degrees with lower market value typically want to make you feel more pleasant Under OLS \\[ E_{ij} = \\beta_0 + X_i \\beta_1 + G_j \\beta_2 + \\epsilon_{ij} \\] where \\(X_i\\) = student attributes \\(\\beta_2\\) = causal estimate (from grade change) \\(E_{ij}\\) = Did you choose to enroll in major \\(j\\) \\(G_j\\) = grade given in major \\(j\\) Examine \\(\\hat{\\beta}_2\\) Negative bias: Endogenous response because department with lower enrollment rate will give better grade Positive bias: hard science is already having best students (i.e., ability), so if they don’t their grades can be even lower Under dif-n-dif \\[ Y_{idt} = \\beta_0 + POST_t \\beta_1 + Treat_d \\beta_2 + (POST_t \\times Treat_d)\\beta_3 + X_{idt} + \\epsilon_{idt} \\] where \\(Y_{idt}\\) = grade average Intercept Treat Post Treat*Post Treat Pre 1 1 0 0 Treat Post 1 1 1 1 Control Pre 1 0 0 0 Control Post 1 0 1 0 Average for pre-control \\(\\beta_0\\) A more general specification of the dif-n-dif is that \\[ Y_{idt} = \\alpha_0 + (POST_t \\times Treat_d) \\alpha_1 + \\theta_d + \\delta_t + X_{idt} + u_{idt} \\] where \\((\\theta_d + \\delta_t)\\) richer , more df than \\(Treat_d \\beta_2 + Post_t \\beta_1\\) (because fixed effects subsume Post and treat) \\(\\alpha_1\\) should be equivalent to \\(\\beta_3\\) (if your model assumptions are correct) Under causal inference, \\(R^2\\) is not so important. 25.1.2 Doubly Robust DiD Also known as the locally efficient doubly robust DiD (Sant’Anna and Zhao 2020) Code example by the authors The package (not method) is rather limited application: Use OLS (cannot handle glm) Canonical DiD only (cannot handle DDD). library(DRDID) data(&quot;nsw_long&quot;) eval_lalonde_cps &lt;- subset(nsw_long, nsw_long$treated == 0 | nsw_long$sample == 2) head(eval_lalonde_cps) #&gt; id year treated age educ black married nodegree dwincl re74 hisp #&gt; 1 1 1975 NA 42 16 0 1 0 NA 0.000 0 #&gt; 2 1 1978 NA 42 16 0 1 0 NA 0.000 0 #&gt; 3 2 1975 NA 20 13 0 0 0 NA 2366.794 0 #&gt; 4 2 1978 NA 20 13 0 0 0 NA 2366.794 0 #&gt; 5 3 1975 NA 37 12 0 1 0 NA 25862.322 0 #&gt; 6 3 1978 NA 37 12 0 1 0 NA 25862.322 0 #&gt; early_ra sample experimental re #&gt; 1 NA 2 0 0.0000 #&gt; 2 NA 2 0 100.4854 #&gt; 3 NA 2 0 3317.4678 #&gt; 4 NA 2 0 4793.7451 #&gt; 5 NA 2 0 22781.8555 #&gt; 6 NA 2 0 25564.6699 # locally efficient doubly robust DiD Estimators for the ATT out &lt;- drdid( yname = &quot;re&quot;, tname = &quot;year&quot;, idname = &quot;id&quot;, dname = &quot;experimental&quot;, xformla = ~ age + educ + black + married + nodegree + hisp + re74, data = eval_lalonde_cps, panel = TRUE ) summary(out) #&gt; Call: #&gt; drdid(yname = &quot;re&quot;, tname = &quot;year&quot;, idname = &quot;id&quot;, dname = &quot;experimental&quot;, #&gt; xformla = ~age + educ + black + married + nodegree + hisp + #&gt; re74, data = eval_lalonde_cps, panel = TRUE) #&gt; ------------------------------------------------------------------ #&gt; Further improved locally efficient DR DID estimator for the ATT: #&gt; #&gt; ATT Std. Error t value Pr(&gt;|t|) [95% Conf. Interval] #&gt; -901.2703 393.6247 -2.2897 0.022 -1672.7747 -129.766 #&gt; ------------------------------------------------------------------ #&gt; Estimator based on panel data. #&gt; Outcome regression est. method: weighted least squares. #&gt; Propensity score est. method: inverse prob. tilting. #&gt; Analytical standard error. #&gt; ------------------------------------------------------------------ #&gt; See Sant&#39;Anna and Zhao (2020) for details. # Improved locally efficient doubly robust DiD estimator for the ATT, with panel data # drdid_imp_panel() # Locally efficient doubly robust DiD estimator for the ATT, with panel data # drdid_panel() # Locally efficient doubly robust DiD estimator for the ATT, with repeated cross-section data # drdid_rc() # Improved locally efficient doubly robust DiD estimator for the ATT, with repeated cross-section data # drdid_imp_rc() References "],["two-way-fixed-effects.html", "25.2 Two-way Fixed-effects", " 25.2 Two-way Fixed-effects A generalization of the dif-n-dif model is the two-way fixed-effects models where you have multiple groups and time effects. But this is not a designed-based, non-parametric causal estimator (Imai and Kim 2021) When applying TWFE to multiple groups and multiple periods, the supposedly causal coefficient is the weighted average of all two-group/two-period DiD estimators in the data where some of the weights can be negative. More specifically, the weights are proportional to group sizes and treatment indicator’s variation in each pair, where units in the middle of the panel have the highest weight. The canonical/standard TWFE only works when Effects are homogeneous across units and across time periods (i.e., no dynamic changes in the effects of treatment). See (Goodman-Bacon 2021; De Chaisemartin and d’Haultfoeuille 2020; L. Sun and Abraham 2021; Borusyak, Jaravel, and Spiess 2021) for details. Have to argue why treatment heterogeneity is not a problem (e.g., plot treatment timing and decompose treatment coefficient using Goodman-Bacon Decomposition) know the percentage of observation are never treated (because as the never-treated group increases, the bias of TWFE decreases, with 80% sample to be never-treated, bias is negligible). The problem is worsen when you have long-run effects. Need to manually drop two relative time periods if everyone is eventually treated (to avoid multicollinearity). Programs might do this randomly and if it chooses to drop a post-treatment period, it will create biases. The choice usually -1, and -2 periods. Treatment heterogeneity can come in because (1) it might take some time for a treatment to have measurable changes in outcomes or (2) for each period after treatment, the effect can be different (phase in or increasing effects). 2 time periods. Within this setting, TWFE works because, using the baseline (e.g., control units where their treatment status is unchanged across time periods), the comparison can be Good for Newly treated units vs. control Newly treated units vs not-yet treated Bad for Newly treated vs. already treated (because already treated cannot serve as the potential outcome for the newly treated). Note: Notation for this section is consistent with (2020) \\[ Y_{it} = \\alpha_i + \\lambda_t + \\tau W_{it} + \\beta X_{it} + \\epsilon_{it} \\] where \\(Y_{it}\\) is the outcome \\(\\alpha_i\\) is the unit FE \\(\\lambda_t\\) is the time FE \\(\\tau\\) is the causal effect of treatment \\(W_{it}\\) is the treatment indicator \\(X_{it}\\) are covariates When \\(T = 2\\), the TWFE is the traditional DiD model Under the following assumption, \\(\\hat{\\tau}_{OLS}\\) is unbiased: homogeneous treatment effect parallel trends assumptions linear additive effects (Imai and Kim 2021) Remedies for TWFE’s shortcomings (Goodman-Bacon 2021): diagnostic robustness tests of the TWFE DiD and identify influential observations to the DiD estimate (Goodman-Bacon Decomposition) (Callaway and Sant’Anna 2021): 2-step estimation with a bootstrap procedure that can account for autocorrelation and clustering, the parameters of interest are the group-time average treatment effects, where each group is defined by when it was first treated (Multiple periods and variation in treatment timing) Comparing post-treatment outcomes fo groups treated in a period against a similar group that is never treated (using matching). Treatment status cannot switch (once treated, stay treated for the rest of the panel) Package: did (L. Sun and Abraham 2021): a specialization of (Callaway and Sant’Anna 2021) in the event-study context. They include lags and leads in their design have cohort-specific estimates (similar to group-time estimates in (Callaway and Sant’Anna 2021) They propose the “interaction-weighted” estimator. Package: fixest (Imai and Kim 2021) Different from (Callaway and Sant’Anna 2021) because they allow units to switch in and out of treatment. Based on matching methods, to have weighted TWFE Package: wfe and PanelMatch (Gardner 2022): two-stage DiD did2s (2020): see below To be robust against time- and unit-varying effects We can use the reshaped inverse probability weighting (RIPW)- TWFE estimator With the following assumptions: SUTVA Binary treatment: \\(\\mathbf{W}_i = (W_{i1}, \\dots, W_{it})\\) where \\(\\mathbf{W}_i \\sim \\mathbf{\\pi}_i\\) generalized propensity score (i.e., each person treatment likelihood follow \\(\\pi\\) regardless of the period) Then, the unit-time specific effect is \\(\\tau_{it} = Y_{it}(1) - Y_{it}(0)\\) Then the Doubly Average Treatment Effect (DATE) is \\[ \\tau(\\xi) = \\sum_{T=1}^T \\xi_t \\left(\\frac{1}{n} \\sum_{i = 1}^n \\tau_{it} \\right) \\] where \\(\\frac{1}{n} \\sum_{i = 1}^n \\tau_{it}\\) is the unweighted effect of treatment across units (i.e., time-specific ATE). \\(\\xi = (\\xi_1, \\dots, \\xi_t)\\) are user-specific weights for each time period. This estimand is called DATE because it’s weighted (averaged) across both time and units. A special case of DATE is when both time and unit-weights are equal \\[ \\tau_{eq} = \\frac{1}{nT} \\sum_{t=1}^T \\sum_{i = 1}^n \\tau_{it} \\] Borrowing the idea of inverse propensity-weighted least squares estimator in the cross-sectional case that we reweight the objective function via the treatment assignment mechanism: \\[ \\hat{\\tau} \\triangleq \\arg \\min_{\\tau} \\sum_{i = 1}^n (Y_i -\\mu - W_i \\tau)^2 \\frac{1}{\\pi_i (W_i)} \\] where the first term is the least squares objective the second term is the propensity score In the panel data case, the IPW estimator will be \\[ \\hat{\\tau}_{IPW} \\triangleq \\arg \\min_{\\tau} \\sum_{i = 1}^n \\sum_{t =1}^T (Y_{i t}-\\alpha_i - \\lambda_t - W_{it} \\tau)^2 \\frac{1}{\\pi_i (W_i)} \\] Then, to have DATE that users can specify the structure of time weight, we use reshaped IPW estimator (2020) \\[ \\hat{\\tau}_{RIPW} (\\Pi) \\triangleq \\arg \\min_{\\tau} \\sum_{i = 1}^n \\sum_{t =1}^T (Y_{i t}-\\alpha_i - \\lambda_t - W_{it} \\tau)^2 \\frac{\\Pi(W_i)}{\\pi_i (W_i)} \\] where it’s a function of a data-independent distribution \\(\\Pi\\) that depends on the support of the treatment path \\(\\mathbb{S} = \\cup_i Supp(W_i)\\) This generalization can transform to IPW-TWFE estimator when \\(\\Pi \\sim Unif(\\mathbb{S})\\) randomized experiment when \\(\\Pi = \\pi_i\\) To choose \\(\\Pi\\), we don’t need to data, we just need possible assignments in your setting. For most practical problems (DiD, staggered, transient), we have closed form solutions For generic solver, we can use nonlinear programming (e..g, BFGS algorithm) As argued in (Imai and Kim 2021) that TWFE is not a non-parametric approach, it can be subjected to incorrect model assumption (i.e., model dependence). Hence, they advocate for matching methods for time-series cross-sectional data (Imai and Kim 2021) Use wfe and PanelMatch to apply their paper. This package is based on (Somaini and Wolak 2016) # dataset library(bacondecomp) df &lt;- bacondecomp::castle # devtools::install_github(&quot;paulosomaini/xtreg2way&quot;) library(xtreg2way) # output &lt;- xtreg2way(y, # data.frame(x1, x2), # iid, # tid, # w, # noise = &quot;1&quot;, # se = &quot;1&quot;) # equilvalently output &lt;- xtreg2way(l_homicide ~ post, df, iid = df$state, # group id tid = df$year, # time id # w, # vector of weight se = &quot;1&quot;) output$betaHat #&gt; [,1] #&gt; l_homicide 0.08181162 output$aVarHat #&gt; [,1] #&gt; [1,] 0.003396724 # to save time, you can use your structure in the last output for a new set of variables # output2 &lt;- xtreg2way(y, x1, struc=output$struc) Standard errors estimation options Set Estimation se = \"0\" Assume homoskedasticity and no within group correlation or serial correlation se = \"1\" (default) robust to heteroskadasticity and serial correlation (Arellano 1987) se = \"2\" robust to heteroskedasticity, but assumes no correlation within group or serial correlation se = \"11\" Aerllano SE with df correction performed by Stata xtreg (Somaini and Wolak 2021) Alternatively, you can also do it manually or with the plm package, but you have to be careful with how the SEs are estimated library(multiwayvcov) # get vcov matrix library(lmtest) # robust SEs estimation # manual output3 &lt;- lm(l_homicide ~ post + factor(state) + factor(year), data = df) # get variance-covariance matrix vcov_tw &lt;- multiwayvcov::cluster.vcov(output3, cbind(df$state, df$year), use_white = F, df_correction = F) # get coefficients coeftest(output3, vcov_tw)[2,] #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; 0.08181162 0.05671410 1.44252696 0.14979397 # using the plm package library(plm) output4 &lt;- plm(l_homicide ~ post, data = df, index = c(&quot;state&quot;, &quot;year&quot;), model = &quot;within&quot;, effect = &quot;twoways&quot;) # get coefficients coeftest(output4, vcov = vcovHC, type = &quot;HC1&quot;) #&gt; #&gt; t test of coefficients: #&gt; #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; post 0.081812 0.057748 1.4167 0.1572 As you can see, differences stem from SE estimation, not the coefficient estimate. 25.2.1 Multiple periods and variation in treatment timing This is an extension of the DiD framework to settings where you have more than 2 time periods different treatment timing When treatment effects are heterogeneous across time or units, the standard Two-way Fixed-effects is inappropriate. Notation is consistent with did package (Callaway and Sant’Anna 2021) \\(Y_{it}(0)\\) is the potential outcome for unit \\(i\\) \\(Y_{it}(g)\\) is the potential outcome for unit \\(i\\) in time period \\(t\\) if it’s treated in period \\(g\\) \\(Y_{it}\\) is the observed outcome for unit \\(i\\) in time period \\(t\\) \\[ Y_{it} = \\begin{cases} Y_{it} = Y_{it}(0) &amp; \\forall i \\in \\text{never-treated group} \\\\ Y_{it} = 1\\{G_i &gt; t\\} Y_{it}(0) + 1\\{G_i \\le t \\}Y_{it}(G_i) &amp; \\forall i \\in \\text{other groups} \\end{cases} \\] \\(G_i\\) is the time period when \\(i\\) is treated \\(C_i\\) is a dummy when \\(i\\) belongs to the never-treated group \\(D_{it}\\) is a dummy for whether \\(i\\) is treated in period \\(t\\) Assumptions: Staggered treatment adoption: once treated, a unit cannot be untreated (revert) Parallel trends assumptions (conditional on covariates): Based on never-treated units: \\(E[Y_t(0)- Y_{t-1}(0)|G= g] = E[Y_t(0) - Y_{t-1}(0)|C=1]\\) Without treatment, the average potential outcomes for group \\(g\\) equals the average potential outcomes for the never-treated group (i.e., control group), which means that we have (1) enough data on the never-treated group (2) the control group is similar to the eventually treated group. Based on not-yet treated units: \\(E[Y_t(0) - Y_{t-1}(0)|G = g] = E[Y_t(0) - Y_{t-1}(0)|D_s = 0, G \\neq g]\\) Not-yet treated units by time \\(s\\) ( \\(s \\ge t\\)) can be used as comparison groups to calculate the average treatment effects for the group first treated in time \\(g\\) Additional assumption: pre-treatment trends across groups (Marcus and Sant’Anna 2021) Random sampling Irreversibility of treatment (once treated, cannot be untreated) Overlap (the treatment propensity \\(e \\in [0,1]\\)) Group-Time ATE This is the equivalent of the average treatment effect in the standard case (2 groups, 2 periods) under multiple time periods. \\[ ATT(g,t) = E[Y_t(g) - Y_t(0) |G = g] \\] which is the average treatment effect for group \\(g\\) in period \\(t\\) Identification: When the parallel trends assumption based on Never-treated units: \\(ATT(g,t) = E[Y_t - Y_{g-1} |G = g] - E[Y_t - Y_{g-1}|C=1] \\forall t \\ge g\\) Not-yet-treated units: \\(ATT(g,t) = E[Y_t - Y_{g-1}|G= g] - E[Y_t - Y_{g-1}|D_t = 0, G \\neq g] \\forall t \\ge g\\) Identification: when the parallel trends assumption only holds conditional on covariates and based on Never-treated units: \\(ATT(g,t) = E[Y_t - Y_{g-1} |X, G = g] - E[Y_t - Y_{g-1}|X, C=1] \\forall t \\ge g\\) Not-yet-treated units: \\(ATT(g,t) = E[Y_t - Y_{g-1}|X, G= g] - E[Y_t - Y_{g-1}|X, D_t = 0, G \\neq g] \\forall t \\ge g\\) This is plausible when you have suspected selection bias that can be corrected by using covariates (i.e., very much similar to matching methods to have plausible parallel trends). Possible parameters of interest are: Average treatment effect per group \\[ \\theta_S(g) = \\frac{1}{\\tau - g + 1} \\sum_{t = 2}^\\tau \\mathbb{1} \\{ \\le t \\} ATT(g,t) \\] Average treatment effect across groups (that were treated) (similar to average treatment effect on the treated in the canonical case) \\[ \\theta_S^O := \\sum_{g=2}^\\tau \\theta_S(g) P(G=g) \\] Average treatment effect dynamics (i.e., average treatment effect for groups that have been exposed to the treatment for \\(e\\) time periods): \\[ \\theta_D(e) := \\sum_{g=2}^\\tau \\mathbb{1} \\{g + e \\le \\tau \\}ATT(g,g + e) P(G = g|G + e \\le \\tau) \\] Average treatment effect in period \\(t\\) for all groups that have treated by period \\(t\\)) \\[ \\theta_C(t) = \\sum_{g=2}^\\tau \\mathbb{1}\\{g \\le t\\} ATT(g,t) P(G = g|g \\le t) \\] Average treatment effect by calendar time \\[ \\theta_C = \\frac{1}{\\tau-1}\\sum_{t=2}^\\tau \\theta_C(t) \\] 25.2.2 Staggered Dif-n-dif When subjects are treated at different point in time (variation in treatment timing across units), we have to use staggered DiD (also known as DiD event study or dynamic DiD). For design where a treatment is applied and units are exposed to this treatment at all time afterward, see (Athey and Imbens 2022) Basic design (Stevenson and Wolfers 2006) \\[ Y_{it} = \\sum_k \\beta_k Treatment_{it}^k + \\sum_i \\eta_i State_i \\\\ + \\sum_t \\lambda_t Year_t + Controls_{it} + \\epsilon_{it} \\] where \\(Treatment_{it}^k\\) is a series of dummy variables equal to 1 if state \\(i\\) is treated \\(k\\) years ago in period \\(t\\) SE is usually clustered at the group level (occasionally time level). To avoid collinearity, the period right before treatment is usually chosen to drop. In this setting, we try to show that the treatment and control groups are not statistically different (i.e., the coefficient estimates before treatment are not different from 0) to show pre-treatment parallel trends. However, this two-way fixed effects design has been criticized by (L. Sun and Abraham 2021; Callaway and Sant’Anna 2021; Goodman-Bacon 2021). When researchers include leads and lags of the treatment to see the long-term effects of the treatment, these leads and lags can be biased by effects from other periods, and pre-trends can falsely arise due to treatment effects heterogeneity. Applying the new proposed method, finance and accounting researchers find that in many cases, the causal estimates turn out to be null (Baker, Larcker, and Wang 2022). Robustness Check The triple-difference strategy involves examining the interaction between the treatment variable and the probability of being affected by the program, and the group-level participation rate. The identification assumption is that there are no differential trends between high and low participation groups in early versus late implementing countries. Assumptions Rollout Exogeneity (i.e., exogeneity of treatment adoption): if the treatment is randomly implemented over time (i.e., unrelated to variables that could also affect our dependent variables) Evidence: Regress adoption on pre-treatment variables. And if you find evidence of correlation, include lienar trends interacted with pre-treatment variables (Hoynes and Schanzenbach 2009) No confounding events Exclusion restrictions No-anticipation assumption: future treatment time do not affect current outcomes Invariance-to-history assumption: the time a unit under treatment does not affect the outcome (i.e., the time exposed does not matter, just whether exposed or not). This presents causal effect of early or late adoption on the outcome. And all the assumptions in listed in the Multiple periods and variation in treatment timing Auxiliary assumptions: Constant treatment effects across units Constant treatment effect over time Random sampling Effect Additivity Remedies for staggered DiD: Each treated cohort is compared to appropriate controls (not-yet-treated, never-treated) (Goodman-Bacon 2021) (Callaway and Sant’Anna 2021) consistent for average ATT. more complicated but also more flexible than (L. Sun and Abraham 2021) (L. Sun and Abraham 2021) (a special case of (Callaway and Sant’Anna 2021)) (De Chaisemartin and d’Haultfoeuille 2020) (Borusyak and Jaravel 2017) Stacked Regression (biased but simple): (Gormley and Matsa 2011) (Cengiz et al. 2019) (Deshpande and Li 2019) 25.2.2.1 Stacked DID Notations following these slides \\[ Y_{it} = \\beta_{FE} D_{it} + A_i + B_t + \\epsilon_{it} \\] where \\(A_i\\) is the group fixed effects \\(B_t\\) is the period fixed effects Steps Choose Event Window Enumerate Sub-experiments Define Inclusion Criteria Stack Data Specify Estimating Equation 25.2.2.1.1 Event Window Let \\(\\kappa_a\\) be the length of the pre-event window \\(\\kappa_b\\) be the length of the post-event window By setting a common event window for the analysis, we essentially exclude all those events that do not meet this criteria. 25.2.2.1.2 Sub-experiments Let \\(T_1\\) be the earliest period in the dataset \\(T_T\\) be the last period in the dataset Then, the collection of all policy adoption periods that are under our event window is \\[ \\Omega_A = \\{ A_i |T_1 + \\kappa_a \\le A_i \\le T_T - \\kappa_b\\} \\] where these events exist at least \\(\\kappa_a\\) periods after the earliest period at least \\(\\kappa_b\\) periods before the last period Let \\(d = 1, \\dots, D\\) be the index column of the sub-experiments in \\(\\Omega_A\\) and \\(\\omega_d\\) be the event date of the d-th sub-experiment (e.g., \\(\\omega_1\\) = adoption date of the 1st experiment) 25.2.2.1.3 Inclusion Criteria Valid treated Units Within sub-experiment \\(d\\), all treated units have the same adoption date This makes sure a unit can only serve as a treated unit in only 1 sub-experiment Clean controls Only units satisfying \\(A_i &gt;\\omega_d + \\kappa_b\\) are included as controls in sub-experiment d This ensures controls are only never treated units units that are treated in far future But a unit can be control unit in multiple sub-experiments (need to correct SE) Valid Time Periods All observations within sub-experiment d are from time periods within the sub-experiment’s event window This ensures in sub-experiment d, only observations satisfying \\(\\omega_d - \\kappa_a \\le t \\le \\omega_d + \\kappa_b\\) are included library(did) library(tidyverse) library(fixest) data(base_stagg) # first make the stacked datasets # get the treatment cohorts cohorts &lt;- base_stagg %&gt;% select(year_treated) %&gt;% # exclude never-treated group filter(year_treated != 10000) %&gt;% unique() %&gt;% pull() # make formula to create the sub-datasets getdata &lt;- function(j, window) { #keep what we need base_stagg %&gt;% # keep treated units and all units not treated within -5 to 5 # keep treated units and all units not treated within -window to window filter(year_treated == j | year_treated &gt; j + window) %&gt;% # keep just year -window to window filter(year &gt;= j - window &amp; year &lt;= j + window) %&gt;% # create an indicator for the dataset mutate(df = j) } # get data stacked stacked_data &lt;- map_df(cohorts, ~getdata(., window = 5)) %&gt;% mutate(rel_year = if_else(df == year_treated, time_to_treatment, NA_real_)) %&gt;% fastDummies::dummy_cols(&quot;rel_year&quot;, ignore_na = TRUE) %&gt;% mutate(across(starts_with(&quot;rel_year_&quot;), ~ replace_na(., 0))) # get stacked value stacked &lt;- feols( y ~ `rel_year_-5` + `rel_year_-4` + `rel_year_-3` + `rel_year_-2` + rel_year_0 + rel_year_1 + rel_year_2 + rel_year_3 + rel_year_4 + rel_year_5 | id ^ df + year ^ df, data = stacked_data )$coefficients stacked_se = feols( y ~ `rel_year_-5` + `rel_year_-4` + `rel_year_-3` + `rel_year_-2` + rel_year_0 + rel_year_1 + rel_year_2 + rel_year_3 + rel_year_4 + rel_year_5 | id ^ df + year ^ df, data = stacked_data )$se # add in 0 for omitted -1 stacked &lt;- c(stacked[1:4], 0, stacked[5:10]) stacked_se &lt;- c(stacked_se[1:4], 0, stacked_se[5:10]) cs_out &lt;- att_gt(yname = &quot;y&quot;, data = base_stagg, gname = &quot;year_treated&quot;, idname = &quot;id&quot;, # xformla = &quot;~x1&quot;, tname = &quot;year&quot; ) cs &lt;- aggte(cs_out, type = &quot;dynamic&quot;, min_e = -5, max_e = 5, bstrap = FALSE, cband = FALSE) res_sa20 = feols(y ~ sunab(year_treated, year) | id + year, base_stagg) sa = tidy(res_sa20)[5:14, ] %&gt;% pull(estimate) sa = c(sa[1:4], 0, sa[5:10]) sa_se = tidy(res_sa20)[6:15, ] %&gt;% pull(std.error) sa_se = c(sa_se[1:4], 0, sa_se[5:10]) compare_df_est = data.frame( period = -5:5, cs = cs$att.egt, sa = sa, stacked = stacked ) compare_df_se = data.frame( period = -5:5, cs = cs$se.egt, sa = sa_se, stacked = stacked_se ) compare_df_longer &lt;- compare_df_est %&gt;% pivot_longer(!period, names_to = &quot;estimator&quot;, values_to = &quot;est&quot;) %&gt;% full_join(compare_df_se %&gt;% pivot_longer(!period, names_to = &quot;estimator&quot;, values_to = &quot;se&quot;) ) %&gt;% mutate(upper = est + 1.96 * se, lower = est - 1.96 * se) ggplot(compare_df_longer) + geom_ribbon(aes( x = period, ymin = lower, ymax = upper, group = estimator )) + geom_line(aes( x = period, y = est, group = estimator, col = estimator ), linewidth = 1) 25.2.2.1.4 Stack Data 25.2.2.1.5 Estimating Equation \\[ Y_{itd} = \\beta_0 + \\beta_1 + T_{id} + \\beta_2 + P_{td} + \\beta_3 (T_{id} \\times P_{td}) + \\epsilon_{itd} \\] where \\(T_{id}\\) = 1 if unit \\(i\\) is treated in sub-experiment d, 0 if control \\(P_{td}\\) = 1 if it’s the period after the treatment in sub-experiment d Equivalently, \\[ Y_{itd} = \\beta_3 (T_{id} \\times P_{td}) + \\theta_{id} + \\gamma_{td} + \\epsilon_{itd} \\] \\(\\beta_3\\) averages all the time-varying effects into a single number (can’t see the time-varying effects) 25.2.2.1.6 Stacked Event Study Let \\(YSE_{td} = t - \\omega_d\\) be the “time since event” variable in sub-experiment d Then, \\(YSE_{td} = -\\kappa_a, \\dots, 0, \\dots, \\kappa_b\\) in every sub-experiment In each sub-experiment, we can fit \\[ Y_{it}^d = \\sum_{j = -\\kappa_a}^{\\kappa_b} \\beta_j^d \\times 1(TSE_{td} = j) + \\sum_{m = -\\kappa_a}^{\\kappa_b} \\delta_j^d (T_{id} \\times 1 (TSE_{td} = j)) + \\theta_i^d + \\epsilon_{it}^d \\] Different set of event study coefficients in each sub-experiment \\[ Y_{itd} = \\sum_{j = -\\kappa_a}^{\\kappa_b} \\beta_j \\times 1(TSE_{td} = j) + \\sum_{m = -\\kappa_a}^{\\kappa_b} \\delta_j (T_{id} \\times 1 (TSE_{td} = j)) + \\theta_{id} + \\epsilon_{itd} \\] 25.2.2.1.7 Clustering Clustered at the unit x sub-experiment level (Cengiz et al. 2019) Clustered at the unit level (Deshpande and Li 2019) 25.2.2.2 Example by Doleac and Hansen (2020) The purpose of banning a checking box for ex-criminal was banned because we thought that it gives more access to felons Even if we ban the box, employers wouldn’t just change their behaviors. But then the unintended consequence is that employers statistically discriminate based on race 3 types of ban the box Public employer only Private employer with government contract All employers Main identification strategy If any county in the Metropolitan Statistical Area (MSA) adopts ban the box, it means the whole MSA is treated. Or if the state adopts “ban the ban,” every county is treated Under Simple Dif-n-dif \\[ Y_{it} = \\beta_0 + \\beta_1 Post_t + \\beta_2 treat_i + \\beta_2 (Post_t \\times Treat_i) + \\epsilon_{it} \\] But if there is no common post time, then we should use Staggered Dif-n-dif \\[ E_{imrt} = \\alpha + \\beta_1 BTB_{imt} W_{imt} + \\beta_2 BTB_{mt} + \\beta_3 BTB_{mt} H_{imt}+\\\\ \\delta_m + D_{imt} \\beta_5 + \\lambda_{rt} + \\delta_m\\times f(t) \\beta_7 + e_{imrt} \\] where \\(i\\) = person; \\(m\\) = MSA; \\(r\\) = region (US regions e.g., Midwest) ; \\(r\\) = region; \\(t\\) = year \\(W\\) = White; \\(B\\) = Black; \\(H\\) = Hispanic \\(\\beta_1 BTB_{imt} W_{imt} + \\beta_2 BTB_{mt} + \\beta_3 BTB_{mt} H_{imt}\\) are the 3 dif-n-dif variables (\\(BTB\\) = “ban the box”) \\(\\delta_m\\) = dummy for MSI \\(D_{imt}\\) = control for people \\(\\lambda_{rt}\\) = region by time fixed effect \\(\\delta_m \\times f(t)\\) = linear time trend within MSA (but we should not need this if we have good pre-trend) If we put \\(\\lambda_r - \\lambda_t\\) (separately) we will more broad fixed effect, while \\(\\lambda_{rt}\\) will give us deeper and narrower fixed effect. Before running this model, we have to drop all other races. And \\(\\beta_1, \\beta_2, \\beta_3\\) are not collinear because there are all interaction terms with \\(BTB_{mt}\\) If we just want to estimate the model for black men, we will modify it to be \\[ E_{imrt} = \\alpha + BTB_{mt} \\beta_1 + \\delta_m + D_{imt} \\beta_5 + \\lambda_{rt} + (\\delta_m \\times f(t)) \\beta_7 + e_{imrt} \\] \\[ E_{imrt} = \\alpha + BTB_{m (t - 3t)} \\theta_1 + BTB_{m(t-2)} \\theta_2 + BTB_{mt} \\theta_4 \\\\ + BTB_{m(t+1)}\\theta_5 + BTB_{m(t+2)}\\theta_6 + BTB_{m(t+3t)}\\theta_7 \\\\ + [\\delta_m + D_{imt}\\beta_5 + \\lambda_r + (\\delta_m \\times (f(t))\\beta_7 + e_{imrt}] \\] We have to leave \\(BTB_{m(t-1)}\\theta_3\\) out for the category would not be perfect collinearity So the year before BTB (\\(\\theta_1, \\theta_2, \\theta_3\\)) should be similar to each other (i.e., same pre-trend). Remember, we only run for places with BTB. If \\(\\theta_2\\) is statistically different from \\(\\theta_3\\) (baseline), then there could be a problem, but it could also make sense if we have pre-trend announcement. Example by Philipp Leppert replicating Card and Krueger (1994) Example by Anthony Schmidt 25.2.2.3 Goodman-Bacon Decomposition Paper: (Goodman-Bacon 2021) For an excellent explanation slides by the author, see Takeaways: A pairwise DID (\\(\\tau\\)) gets more weight if the change is close to the middle of the study window A pairwise DID (\\(\\tau\\)) gets more weight if it includes more observations. Code from bacondecomp vignette library(bacondecomp) library(tidyverse) data(&quot;castle&quot;) castle &lt;- castle %&gt;% select(l_homicide, post, state, year) head(castle) #&gt; l_homicide post state year #&gt; 1 2.027356 0 Alabama 2000 #&gt; 2 2.164867 0 Alabama 2001 #&gt; 3 1.936334 0 Alabama 2002 #&gt; 4 1.919567 0 Alabama 2003 #&gt; 5 1.749841 0 Alabama 2004 #&gt; 6 2.130440 0 Alabama 2005 df_bacon &lt;- bacon( l_homicide ~ post, data = castle, id_var = &quot;state&quot;, time_var = &quot;year&quot; ) #&gt; type weight avg_est #&gt; 1 Earlier vs Later Treated 0.05976 -0.00554 #&gt; 2 Later vs Earlier Treated 0.03190 0.07032 #&gt; 3 Treated vs Untreated 0.90834 0.08796 # weighted average of the decomposition sum(df_bacon$estimate * df_bacon$weight) #&gt; [1] 0.08181162 Two-way Fixed effect estimate library(broom) fit_tw &lt;- lm(l_homicide ~ post + factor(state) + factor(year), data = bacondecomp::castle) head(tidy(fit_tw)) #&gt; # A tibble: 6 × 5 #&gt; term estimate std.error statistic p.value #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 (Intercept) 1.95 0.0624 31.2 2.84e-118 #&gt; 2 post 0.0818 0.0317 2.58 1.02e- 2 #&gt; 3 factor(state)Alaska -0.373 0.0797 -4.68 3.77e- 6 #&gt; 4 factor(state)Arizona 0.0158 0.0797 0.198 8.43e- 1 #&gt; 5 factor(state)Arkansas -0.118 0.0810 -1.46 1.44e- 1 #&gt; 6 factor(state)California -0.108 0.0810 -1.34 1.82e- 1 Hence, naive TWFE fixed effect equals the weighted average of the Bacon decomposition (= 0.08). library(ggplot2) ggplot(df_bacon) + aes( x = weight, y = estimate, # shape = factor(type), color = type ) + labs(x = &quot;Weight&quot;, y = &quot;Estimate&quot;, shape = &quot;Type&quot;) + geom_point() With time-varying controls that can identify variation within-treatment timing group, the”early vs. late” and “late vs. early” estimates collapse to just one estimate (i.e., both treated). 25.2.2.4 Chaisemartin-d’Haultfoeuille use twowayfeweights from GitHub (De Chaisemartin and d’Haultfoeuille 2020) 25.2.2.5 didimputation use didimputation from GitHub 25.2.2.6 staggered staggered package 25.2.2.7 Wooldridge’s Solution use etwfe(Extended two-way Fixed Effects) (Wooldridge 2022) 25.2.3 Two-stage DiD Example from CRAN 25.2.4 Multiple Treatment groups When you have 2 treatments in a setting, you should always try to model both of them under one regression to see whether they are significantly different. Never use one treated groups as control for the other, and run separate regression. Could check this answer \\[ Y_{it} = \\alpha + \\gamma_1 Treat1_{i} + \\gamma_2 Treat2_{i} + \\lambda Post_t \\\\ + \\delta_1(Treat1_i \\times Post_t) + \\delta_2(Treat2_i \\times Post_t) + \\epsilon_{it} \\] (Fricke 2017) 25.2.5 Multiple Treatments (De Chaisemartin and d’Haultfoeuille 2022) video code References "],["assumption-violation.html", "25.3 Assumption Violation", " 25.3 Assumption Violation 25.3.1 Endogenous Timing If the timing of units can be influenced by strategic decisions in a DID analysis, an instrumental variable approach with a control function can be used to control for endogeneity in timing. 25.3.2 Questionable Counterfactuals In situations where the control units may not serve as a reliable counterfactual for the treated units, matching methods such as propensity score matching or generalized random forest can be utilized. Additional methods can be found in Matching Methods. "],["mediation-under-did.html", "25.4 Mediation Under DiD", " 25.4 Mediation Under DiD Check this post "],["assumptions-2.html", "25.5 Assumptions", " 25.5 Assumptions Parallel Trends: Difference between the treatment and control groups remain constant if there were no treatment. should be used in cases where you observe before and after an event you have treatment and control groups not in cases where treatment is not random confounders. To support we use Placebo test Prior Parallel Trends Test Linear additive effects (of group/unit specific and time-specific): If they are not additively interact, we have to use the weighted 2FE estimator (Imai and Kim 2021) Typically seen in the Staggered Dif-n-dif No anticipation: There is no causal effect of the treatment before its implementation. Possible issues Estimate dependent on functional form: When the size of the response depends (nonlinearly) on the size of the intervention, we might want to look at the the difference in the group with high intensity vs. low. Selection on (time–varying) unobservables Can use the overall sensitivity of coefficient estimates to hidden bias using Rosenbaum Bounds Long-term effects Parallel trends are more likely to be observed over shorter period (window of observation) Heterogeneous effects Different intensity (e.g., doses) for different groups. Ashenfelter dip (Ashenfelter and Card 1985) (job training program participant are more likely to experience an earning drop prior enrolling in these programs) Participants are systemically different from nonparticipants before the treatment, leading to the question of permanent or transitory changes. A fix to this transient endogeneity is to calculate long-run differences (exclude a number of periods symmetrically around the adoption/ implementation date). If we see a sustained impact, then we have strong evidence for the causal impact of a policy. (Proserpio and Zervas 2017b) (James J. Heckman and Smith 1999) (Jepsen, Troske, and Coomes 2014) (X. Li, Gan, and Hu 2011) Response to event might not be immediate (can’t be observed right away in the dependent variable) Using lagged dependent variable \\(Y_{it-1}\\) might be more appropriate (Blundell and Bond 1998) Other factors that affect the difference in trends between the two groups (i.e., treatment and control) will bias your estimation. Correlated observations within a group or time Incidental parameters problems (Lancaster 2000): it’s always better to use individual and time fixed effect. When examining the effects of variation in treatment timing, we have to be careful because negative weights (per group) can be negative if there is a heterogeneity in the treatment effects over time. Example: [Athey and Imbens (2022)](Borusyak, Jaravel, and Spiess 2021)(Goodman-Bacon 2021). In this case you should use new estimands proposed by [Callaway and Sant’Anna (2021)](De Chaisemartin and d’Haultfoeuille 2020), in the did package. If you expect lags and leads, see (L. Sun and Abraham 2021) (Gibbons, Suárez Serrato, and Urbancic 2018) caution when we suspect the treatment effect and treatment variance vary across groups 25.5.1 Prior Parallel Trends Test Plot the average outcomes over time for both treatment and control group before and after the treatment in time. Statistical test for difference in trends (using data from before the treatment period) \\[ Y = \\alpha_g + \\beta_1 T + \\beta_2 T\\times G + \\epsilon \\] where \\(Y\\) = the outcome variable \\(\\alpha_g\\) = group fixed effects \\(T\\) = time (e.g., specific year, or month) \\(\\beta_2\\) = different time trends for each group Hence, if \\(\\beta_2 =0\\) provides evidence that there are no differences in the trend for the two groups prior the time treatment. You can also use different functional forms (e..g, polynomial or nonlinear). If \\(\\beta_2 \\neq 0\\) statistically, possible reasons can be: Statistical significance can be driven by large sample Or the trends are so consistent, and just one period deviation can throw off the trends. Hence, statistical statistical significance. Technically, we can still salvage the research by including time fixed effects, instead of just the before-and-after time fixed effect (actually, most researchers do this mechanically anyway nowadays). However, a side effect can be that the time fixed effects can also absorb some part your treatment effect as well, especially in cases where the treatment effects vary with time (i.e., stronger or weaker over time) (Wolfers 2003). Debate: (Kahn-Lang and Lang 2020) argue that DiD will be more plausible when the treatment and control groups are similar not only in trends, but also in levels. Because when we observe dissimilar in levels prior to the treatment, why is it okay to think that this will not affect future trends? Show a plot of the dependent variable’s time series for treated and control groups and also a similar plot with matched sample. (Ryan et al. 2019) show evidence of matched DiD did well in the setting of non-parallel trends (at least in health care setting). In the case that we don’t have similar levels ex ante between treatment and control groups, functional form assumptions matter and we need justification for our choice. Pre-trend statistical tests: (Roth 2022) provides evidence that these test are usually underpowered. See PretrendsPower and pretrends packages for correcting this. library(tidyverse) library(fixest) od &lt;- causaldata::organ_donations %&gt;% # Use only pre-treatment data filter(Quarter_Num &lt;= 3) %&gt;% # Treatment variable mutate(California = State == &#39;California&#39;) # always good but plot the dependent out od |&gt; # group by treatment status and time group_by(California, Quarter) |&gt; summarize_all(mean) |&gt; ungroup() |&gt; # view() ggplot(aes(x = Quarter_Num, y = Rate, color = California)) + geom_line() # but it&#39;s also important to use statistical test prior_trend &lt;- feols(Rate ~ i(Quarter_Num, California) | State + Quarter, data = od) coefplot(prior_trend) iplot(prior_trend) This is alarming since one of the periods is significantly different from 0, which means that our parallel trends assumption is not plausible. In cases where you might have violations of parallel trends assumption, check (Rambachan and Roth 2023) Impose restrictions on how different the post-treatment violations of parallel trends can be from the pre-trends. Partial identification of causal parameter A type of sensitivity analysis # https://github.com/asheshrambachan/HonestDiD # install.packages(&quot;HonestDiD&quot;) Alternatively, Ban and Kedagni (2022) propose a method that with an information set (i.e., pre-treatment covariates), and an assumption on the selection bias in the post-treatment period (i.e., lies within the convex hull of all selection biases), they can still identify a set of ATT, and with stricter assumption on selection bias from the policymakers perspective, they can also have a point estimate. Alternatively, we can use the pretrends package to examine our assumptions (Roth 2022) 25.5.2 Placebo Test Procedure: Sample data only in the period before the treatment in time. Consider different fake cutoff in time, either Try the whole sequence in time Generate random treatment period, and use randomization inference to account for sampling distribution of the fake effect. Estimate the DiD model but with the post-time = 1 with the fake cutoff A significant DiD coefficient means that you violate the parallel trends! You have a big problem. Alternatively, When data have multiple control groups, drop the treated group, and assign another control group as a “fake” treated group. But even if it fails (i.e., you find a significant DiD effect) among the control groups, it can still be fine. However, this method is used under Synthetic Control Code by theeffectbook.net library(tidyverse) library(fixest) od &lt;- causaldata::organ_donations %&gt;% # Use only pre-treatment data filter(Quarter_Num &lt;= 3) %&gt;% # Create fake treatment variables mutate( FakeTreat1 = State == &#39;California&#39; &amp; Quarter %in% c(&#39;Q12011&#39;, &#39;Q22011&#39;), FakeTreat2 = State == &#39;California&#39; &amp; Quarter == &#39;Q22011&#39; ) clfe1 &lt;- feols(Rate ~ FakeTreat1 | State + Quarter, data = od) clfe2 &lt;- feols(Rate ~ FakeTreat2 | State + Quarter, data = od) etable(clfe1,clfe2) #&gt; clfe1 clfe2 #&gt; Dependent Var.: Rate Rate #&gt; #&gt; FakeTreat1TRUE 0.0061 (0.0051) #&gt; FakeTreat2TRUE -0.0017 (0.0028) #&gt; Fixed-Effects: --------------- ---------------- #&gt; State Yes Yes #&gt; Quarter Yes Yes #&gt; _______________ _______________ ________________ #&gt; S.E.: Clustered by: State by: State #&gt; Observations 81 81 #&gt; R2 0.99377 0.99376 #&gt; Within R2 0.00192 0.00015 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 We would like the “supposed” DiD to be insignificant. Robustness Check Placebo DiD (if the DiD estimate \\(\\neq 0\\), parallel trend is violated, and original DiD is biased): Group: Use fake treatment groups: A population that was not affect by the treatment Time: Redo the DiD analysis for period before the treatment (expected treatment effect is 0) (e..g, for previous year or period). Possible alternative control group: Expected results should be similar Try different windows (further away from the treatment point, other factors can creep in and nullify your effect). Treatment Reversal (what if we don’t see the treatment event) Higher-order polynomial time trend (to relax linearity assumption) Test whether other dependent variables that should be affected by the event are indeed unaffected. Use the same control and treatment period (DiD \\(\\neq0\\), there is a problem) 25.5.3 Rosenbaum Bounds Rosenbaum Bounds assess the overall sensitivity of coefficient estimates to hidden bias (Rosenbaum and Rosenbaum 2002) without having knowledge (e.g., direction) of the bias. This method is also known as worst case analyses (DiPrete and Gangl 2004). Consider the treatment assignment is based in a way that the odds of treatment of a unit and its control is different by a multiplier \\(\\Gamma\\) (where \\(\\Gamma = 1\\) mean that the odds of assignment is identical, which mean random treatment assignment). This bias is the product of an unobservable that influences both treatment selection and outcome by a factor \\(\\Gamma\\) (omitted variable bias) Using this technique, we may estimate the upper limit of the p-value for the treatment effect while assuming selection on unobservables of magnitude \\(\\Gamma\\). Usually, we would create a table of different levels of \\(\\Gamma\\) to assess how the magnitude of biases can affect our evidence of the treatment effect (estimate). If we have treatment assignment is clustered (e.g., within school, within state) we need to adjust the bounds for clustered treatment assignment (Hansen, Rosenbaum, and Small 2014) (similar to clustered standard errors) Then, we can report the minimum value of \\(\\Gamma\\) at which the treatment treat is nullified (i.e., become insignificant). And the literature’s rules of thumb is that if \\(\\Gamma &gt; 2\\), then we have strong evidence for our treatment effect is robust to large biases (Proserpio and Zervas 2017a) Packages rbounds (Keele 2010) sensitivitymv (Rosenbaum 2015) sensitivitymw (Rosenbaum 2015) References "],["synthetic-control.html", "Chapter 26 Synthetic Control", " Chapter 26 Synthetic Control Examples in marketing: (Tirunillai and Tellis 2017): offline TV ad on Online Chatter (Guo, Sriram, and Manchanda 2020): payment disclosure laws effect on physician prescription behavior using Timing of the Massachusetts open payment law as the exogenous shock (Wang, Wu, and Zhu 2019): mobile hailing technology adoption on drivers’ hourly earnings Notes Synthetic control method (SCM) is a generalization of the Difference-in-differences model SCM is superior than Matching Methods because it not only matches on covariates (i.e., pre-treatment variables), but also outcomes. For a review of the method, see (Abadie 2021) SCMs can also be used under the Bayesian framework where we do not have to impose any restrictive priori (S. Kim, Lee, and Gupta 2020) Different from Matching Methods because SCMs match on the pre-treatment outcomes in each period while Matching Methods match on the number of covariates. A data driven procedure to construct more comparable control groups (i.e., black box). To do causal inference with control and treatment group using Matching Methods, you typically have to have similar covariates in the control and the treated groups. However, if you don’t methods like Propensity Scores and DID can perform rather poorly (i.e., large bias). Advantages over Difference-in-differences Maximization of the observable similarity between control and treatment (maybe also unobservables) Can also be used in cases where no untreated case with similar on matching dimensions with treated cases Objective selection of controls. Advantages over linear regression Regression weights for the estimator will be outside of [0,1] (because regression allows extrapolation), and it will not be sparse (i.e., can be less than 0). No extrapalation under SCMs Explicitly state the fit (i.e., the weight) Can be estimated without the post-treatment outcomes for the control group (can’t p-hack) Advantages: From the selection criteria, researchers can understand the relative importance of each candidate Post-intervention outcomes are not used in synthetic. Hence, you can’t retro-fit. Observable similarity between control and treatment cases is maximized Disadvantages: It’s hard to argue for the weights you use to create the “synthetic control” SCM is recommended when Social events to evaluate large-scale program or policy Only one treated case with several control candidates. Assumptions Donor subject is a good match for the synthetic control (i.e., gap between the dependent of the donor subject and that of the synthetic control should be 0 before treatment) Only the treated subject undergoes the treatment and not any of the subjects in the donor pool. No other changes to the subjects during the whole window. The counterfactual outcome of the treatment group can be imputed in a linear combination of control groups. Identification: The exclusion restriction is met conditional on the pre-treatment outcomes. Synth provides an algorithm that finds weighted combination of the comparison units where the weights are chosen such that it best resembles the values of predictors of the outcome variable for the affected units before the intervention Setting (notation followed professor Alberto Abadie) \\(J + 1\\) units in periods \\(1, \\dots, T\\) The first unit is the treated one during \\(T_0 + 1, \\dots, T\\) \\(J\\) units are called a donor pool \\(Y_{it}^I\\) is the outcome for unit \\(i\\) if it’s exposed to the treatment during \\(T_0 + 1 , \\dots T\\) \\(Y_{it}^N\\) is the outcome for unit \\(i\\) if it’s not exposed to the treatment We try to estimate the effect of treatment on the treated unit \\[ \\tau_{1t} = Y_{1t}^I - Y_{1t}^N \\] where we observe the first treated unit already \\(Y_{1t}^I = Y_{1t}\\) To construct the synthetic control unit, we have to find appropriate weight for each donor in the donor pool by finding \\(\\mathbf{W} = (w_2, \\dots, w_{J=1})&#39;\\) where \\(w_j \\ge 0\\) for \\(j = 2, \\dots, J+1\\) \\(w_2 + \\dots + w_{J+1} = 1\\) The “appropriate” vector \\(\\mathbf{W}\\) here is constrained to \\[ \\min||\\mathbf{X}_1 - \\mathbf{X}_0 \\mathbf{W}|| \\] where \\(\\mathbf{X}_1\\) is the \\(k \\times 1\\) vector of pre-treatment characteristics for the treated unit \\(\\mathbf{X}_0\\) is the \\(k \\times J\\) matrix of pre-treatment characteristics for the untreated units For simplicity, researchers usually use \\[ \\min||\\mathbf{X}_1 - \\mathbf{X}_0 \\mathbf{W}|| \\\\ = (\\sum_{h=1}^k v_h(X_{h1}- w_2 X-{h2} - \\dots - w_{J+1} X_{hJ +1})^{1/2} \\] where \\(v_1, \\dots, v_k\\) is a vector positive constants that represent the predictive power of the \\(k\\) predictors on \\(Y_{1t}^N\\) (i.e., the potential outcome of the treated without treatment) and it can be chosen either explicitly by the researcher or by data-driven methods For penalized synthetic control (Abadie and L’hour 2021), the minimization problem becomes \\[ \\min_{\\mathbf{W}} ||\\mathbf{X}_1 - \\sum_{j=2}^{J + 1}W_j \\mathbf{X}_j ||^2 + \\lambda \\sum_{j=2}^{J+1} W_j ||\\mathbf{X}_1 - \\mathbf{X}_j||^2 \\] where \\(W_j \\ge 0\\) and \\(\\sum_{j=2}^{J+1} W_j = 1\\) \\(\\lambda &gt;0\\) balances over-fitting of the treated and minimize the sum of pairwise distances \\(\\lambda \\to 0\\): pure synthetic control (i.e solution for the unpernalized esitmator) \\(\\lambda \\to \\infty\\): nearest neighbor matching Advantages: For \\(\\lambda &gt;0\\), you have unique and sparse solution Reduces the interpolation bias when averaging dissimilar units Penalized SC never uses dissimilar units Then the synthetic control estimator is \\[ \\hat{\\tau}_{1t} = Y_{1t} - \\sum_{j=2}^{J+1} w_j^* Y_{jt} \\] where \\(Y_{jt}\\) is the outcome for unit \\(j\\) at time \\(t\\) Consideration Under the factor model (Abadie, Diamond, and Hainmueller 2010) \\[ Y_{it}^N = \\mathbf{\\theta}_t \\mathbf{Z}_i + \\mathbf{\\lambda}_t \\mathbf{\\mu}_i + \\epsilon_{it} \\] where \\(Z_i\\) = observables \\(\\mu_i\\) = unobservables \\(\\epsilon_{it}\\) = unit-level transitory shock (i.e., random noise) with assumptions of \\(\\mathbf{W}^*\\) such that \\[ \\begin{aligned} \\sum_{j=2}^{J+1} w_j^* \\mathbf{Z}_j &amp;= \\mathbf{Z}_1 \\\\ \\dots \\\\ \\sum_{j=2}^{J+1} w_j^* Y_{j1} &amp;= Y_{11} \\\\ \\sum_{j=2}^{J+1} w_j^* Y_{jT_0} &amp;= Y_{1T_0} \\end{aligned} \\] Basically, we assume that the synthetic control is a good counterfactual when the treated unit is not exposed to the treatment. Then, the bias bound depends on close fit, which is controlled by the ratio between \\(\\epsilon_{it}\\) (transitory shock) and \\(T_0\\) (the number of pre-treatment periods). In other words, you should have good fit for \\(Y_{1t}\\) for pre-treatment period (i.e., \\(T_0\\) should be large while small variance in \\(\\epsilon_{it}\\)) When you have poor fit, you have to use bias correction version of the synthetic control. See Ben-Michael, Feller, and Rothstein (2020) Overfitting can be the result of small \\(T_0\\) (the number of pre-treatment periods), large \\(J\\) (the number of units in the donor pool), and large \\(\\epsilon_{it}\\) (noise) Mitigation: put only similar units (to the treated one) in the donor pool To make inference, we have to create a permutation distribution (by iteratively reassigning the treatment to the units in the donor pool and estimate the placebo effects in each iteration). We say there is an effect of the treatment when the magnitude of value of the treatment effect on the treated unit is extreme relative to the permutation distribution. It’s recommended to use one-sided inference. And the permutation distribution is superior to the p-values alone (because sampling-based inference is hard under SCMs either because of undefined sampling mechanism or the sample is the population). For benchmark (permutation) distribution (e.g., uniform), see (Firpo and Possebom 2018) References "],["applications-1.html", "26.1 Applications", " 26.1 Applications 26.1.1 Example 1 by Danilo Freire # install.packages(&quot;Synth&quot;) # install.packages(&quot;gsynth&quot;) library(&quot;Synth&quot;) library(&quot;gsynth&quot;) simulate data for 10 states and 30 years. State A receives the treatment T = 20 after year 15. set.seed(1) year &lt;- rep(1:30, 10) state &lt;- rep(LETTERS[1:10], each = 30) X1 &lt;- round(rnorm(300, mean = 2, sd = 1), 2) X2 &lt;- round(rbinom(300, 1, 0.5) + rnorm(300), 2) Y &lt;- round(1 + 2 * X1 + rnorm(300), 2) df &lt;- as.data.frame(cbind(Y, X1, X2, state, year)) df$Y &lt;- as.numeric(as.character(df$Y)) df$X1 &lt;- as.numeric(as.character(df$X1)) df$X2 &lt;- as.numeric(as.character(df$X2)) df$year &lt;- as.numeric(as.character(df$year)) df$state.num &lt;- rep(1:10, each = 30) df$state &lt;- as.character(df$state) df$`T` &lt;- ifelse(df$state == &quot;A&quot; &amp; df$year &gt;= 15, 1, 0) df$Y &lt;- ifelse(df$state == &quot;A&quot; &amp; df$year &gt;= 15, df$Y + 20, df$Y) str(df) #&gt; &#39;data.frame&#39;: 300 obs. of 7 variables: #&gt; $ Y : num 2.29 4.51 2.07 8.87 4.37 1.32 8 7.49 6.98 3.72 ... #&gt; $ X1 : num 1.37 2.18 1.16 3.6 2.33 1.18 2.49 2.74 2.58 1.69 ... #&gt; $ X2 : num 1.96 0.4 -0.75 -0.56 -0.45 1.06 0.51 -2.1 0 0.54 ... #&gt; $ state : chr &quot;A&quot; &quot;A&quot; &quot;A&quot; &quot;A&quot; ... #&gt; $ year : num 1 2 3 4 5 6 7 8 9 10 ... #&gt; $ state.num: int 1 1 1 1 1 1 1 1 1 1 ... #&gt; $ T : num 0 0 0 0 0 0 0 0 0 0 ... dataprep.out &lt;- dataprep( df, predictors = c(&quot;X1&quot;, &quot;X2&quot;), dependent = &quot;Y&quot;, unit.variable = &quot;state.num&quot;, time.variable = &quot;year&quot;, unit.names.variable = &quot;state&quot;, treatment.identifier = 1, controls.identifier = c(2:10), time.predictors.prior = c(1:14), time.optimize.ssr = c(1:14), time.plot = c(1:30) ) synth.out &lt;- synth(dataprep.out) #&gt; #&gt; X1, X0, Z1, Z0 all come directly from dataprep object. #&gt; #&gt; #&gt; **************** #&gt; searching for synthetic control unit #&gt; #&gt; #&gt; **************** #&gt; **************** #&gt; **************** #&gt; #&gt; MSPE (LOSS V): 9.831789 #&gt; #&gt; solution.v: #&gt; 0.3888387 0.6111613 #&gt; #&gt; solution.w: #&gt; 0.1115941 0.1832781 0.1027237 0.312091 0.06096758 0.03509706 0.05893735 0.05746256 0.07784853 print(synth.tables &lt;- synth.tab( dataprep.res = dataprep.out, synth.res = synth.out) ) #&gt; $tab.pred #&gt; Treated Synthetic Sample Mean #&gt; X1 2.028 2.028 2.017 #&gt; X2 0.513 0.513 0.394 #&gt; #&gt; $tab.v #&gt; v.weights #&gt; X1 0.389 #&gt; X2 0.611 #&gt; #&gt; $tab.w #&gt; w.weights unit.names unit.numbers #&gt; 2 0.112 B 2 #&gt; 3 0.183 C 3 #&gt; 4 0.103 D 4 #&gt; 5 0.312 E 5 #&gt; 6 0.061 F 6 #&gt; 7 0.035 G 7 #&gt; 8 0.059 H 8 #&gt; 9 0.057 I 9 #&gt; 10 0.078 J 10 #&gt; #&gt; $tab.loss #&gt; Loss W Loss V #&gt; [1,] 9.761708e-12 9.831789 path.plot(synth.res = synth.out, dataprep.res = dataprep.out, Ylab = c(&quot;Y&quot;), Xlab = c(&quot;Year&quot;), Legend = c(&quot;State A&quot;,&quot;Synthetic State A&quot;), Legend.position = c(&quot;topleft&quot;) ) abline(v = 15, lty = 2) Gaps plot: gaps.plot(synth.res = synth.out, dataprep.res = dataprep.out, Ylab = c(&quot;Gap&quot;), Xlab = c(&quot;Year&quot;), Ylim = c(-30, 30), Main = &quot;&quot; ) abline(v = 15, lty = 2) Alternatively, gsynth provides options to estimate iterative fixed effects, and handle multiple treated units at tat time. Here, we use two=way fixed effects and bootstrapped standard errors gsynth.out &lt;- gsynth( Y ~ `T` + X1 + X2, data = df, index = c(&quot;state&quot;, &quot;year&quot;), force = &quot;two-way&quot;, CV = TRUE, r = c(0, 5), se = TRUE, inference = &quot;parametric&quot;, nboots = 1000, parallel = F # TRUE ) #&gt; Cross-validating ... #&gt; r = 0; sigma2 = 1.13533; IC = 0.95632; PC = 0.96713; MSPE = 1.65502 #&gt; r = 1; sigma2 = 0.96885; IC = 1.54420; PC = 4.30644; MSPE = 1.33375 #&gt; r = 2; sigma2 = 0.81855; IC = 2.08062; PC = 6.58556; MSPE = 1.27341* #&gt; r = 3; sigma2 = 0.71670; IC = 2.61125; PC = 8.35187; MSPE = 1.79319 #&gt; r = 4; sigma2 = 0.62823; IC = 3.10156; PC = 9.59221; MSPE = 2.02301 #&gt; r = 5; sigma2 = 0.55497; IC = 3.55814; PC = 10.48406; MSPE = 2.79596 #&gt; #&gt; r* = 2 #&gt; #&gt; Simulating errors ............. Bootstrapping ... #&gt; .......... plot(gsynth.out) plot(gsynth.out, type = &quot;counterfactual&quot;) plot(gsynth.out, type = &quot;counterfactual&quot;, raw = &quot;all&quot;) # shows estimations for the control cases 26.1.2 Example 2 by Leihua Ye library(Synth) data(&quot;basque&quot;) dim(basque) #774*17 #&gt; [1] 774 17 head(basque) #&gt; regionno regionname year gdpcap sec.agriculture sec.energy sec.industry #&gt; 1 1 Spain (Espana) 1955 2.354542 NA NA NA #&gt; 2 1 Spain (Espana) 1956 2.480149 NA NA NA #&gt; 3 1 Spain (Espana) 1957 2.603613 NA NA NA #&gt; 4 1 Spain (Espana) 1958 2.637104 NA NA NA #&gt; 5 1 Spain (Espana) 1959 2.669880 NA NA NA #&gt; 6 1 Spain (Espana) 1960 2.869966 NA NA NA #&gt; sec.construction sec.services.venta sec.services.nonventa school.illit #&gt; 1 NA NA NA NA #&gt; 2 NA NA NA NA #&gt; 3 NA NA NA NA #&gt; 4 NA NA NA NA #&gt; 5 NA NA NA NA #&gt; 6 NA NA NA NA #&gt; school.prim school.med school.high school.post.high popdens invest #&gt; 1 NA NA NA NA NA NA #&gt; 2 NA NA NA NA NA NA #&gt; 3 NA NA NA NA NA NA #&gt; 4 NA NA NA NA NA NA #&gt; 5 NA NA NA NA NA NA #&gt; 6 NA NA NA NA NA NA transform data to be used in synth() dataprep.out &lt;- dataprep( foo = basque, predictors = c( &quot;school.illit&quot;, &quot;school.prim&quot;, &quot;school.med&quot;, &quot;school.high&quot;, &quot;school.post.high&quot;, &quot;invest&quot; ), predictors.op = &quot;mean&quot;, # the operator time.predictors.prior = 1964:1969, #the entire time frame from the #beginning to the end special.predictors = list( list(&quot;gdpcap&quot;, 1960:1969, &quot;mean&quot;), list(&quot;sec.agriculture&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.energy&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.industry&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.construction&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.services.venta&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.services.nonventa&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;popdens&quot;, 1969, &quot;mean&quot;) ), dependent = &quot;gdpcap&quot;, # dv unit.variable = &quot;regionno&quot;, #identifying unit numbers unit.names.variable = &quot;regionname&quot;, #identifying unit names time.variable = &quot;year&quot;, #time-periods treatment.identifier = 17, #the treated case controls.identifier = c(2:16, 18), #the control cases; all others #except number 17 time.optimize.ssr = 1960:1969, #the time-period over which to optimize time.plot = 1955:1997 )#the entire time period before/after the treatment where X1 = the control case before the treatment X0 = the control cases after the treatment Z1: the treatment case before the treatment Z0: the treatment case after the treatment synth.out = synth(data.prep.obj = dataprep.out, method = &quot;BFGS&quot;) #&gt; #&gt; X1, X0, Z1, Z0 all come directly from dataprep object. #&gt; #&gt; #&gt; **************** #&gt; searching for synthetic control unit #&gt; #&gt; #&gt; **************** #&gt; **************** #&gt; **************** #&gt; #&gt; MSPE (LOSS V): 0.008864606 #&gt; #&gt; solution.v: #&gt; 0.02773094 1.194e-07 1.60609e-05 0.0007163836 1.486e-07 0.002423908 0.0587055 0.2651997 0.02851006 0.291276 0.007994382 0.004053188 0.009398579 0.303975 #&gt; #&gt; solution.w: #&gt; 2.53e-08 4.63e-08 6.44e-08 2.81e-08 3.37e-08 4.844e-07 4.2e-08 4.69e-08 0.8508145 9.75e-08 3.2e-08 5.54e-08 0.1491843 4.86e-08 9.89e-08 1.162e-07 Calculate the difference between the real basque region and the synthetic control gaps = dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w) gaps[1:3,1] #&gt; 1955 1956 1957 #&gt; 0.15023473 0.09168035 0.03716475 synth.tables = synth.tab(dataprep.res = dataprep.out, synth.res = synth.out) names(synth.tables) #&gt; [1] &quot;tab.pred&quot; &quot;tab.v&quot; &quot;tab.w&quot; &quot;tab.loss&quot; synth.tables$tab.pred[1:13,] #&gt; Treated Synthetic Sample Mean #&gt; school.illit 39.888 256.337 170.786 #&gt; school.prim 1031.742 2730.104 1127.186 #&gt; school.med 90.359 223.340 76.260 #&gt; school.high 25.728 63.437 24.235 #&gt; school.post.high 13.480 36.153 13.478 #&gt; invest 24.647 21.583 21.424 #&gt; special.gdpcap.1960.1969 5.285 5.271 3.581 #&gt; special.sec.agriculture.1961.1969 6.844 6.179 21.353 #&gt; special.sec.energy.1961.1969 4.106 2.760 5.310 #&gt; special.sec.industry.1961.1969 45.082 37.636 22.425 #&gt; special.sec.construction.1961.1969 6.150 6.952 7.276 #&gt; special.sec.services.venta.1961.1969 33.754 41.104 36.528 #&gt; special.sec.services.nonventa.1961.1969 4.072 5.371 7.111 Relative importance of each unit synth.tables$tab.w[8:14, ] #&gt; w.weights unit.names unit.numbers #&gt; 9 0.000 Castilla-La Mancha 9 #&gt; 10 0.851 Cataluna 10 #&gt; 11 0.000 Comunidad Valenciana 11 #&gt; 12 0.000 Extremadura 12 #&gt; 13 0.000 Galicia 13 #&gt; 14 0.149 Madrid (Comunidad De) 14 #&gt; 15 0.000 Murcia (Region de) 15 # plot the changes before and after the treatment path.plot( synth.res = synth.out, dataprep.res = dataprep.out, Ylab = &quot;real per-capita gdp (1986 USD, thousand)&quot;, Xlab = &quot;year&quot;, Ylim = c(0, 12), Legend = c(&quot;Basque country&quot;, &quot;synthetic Basque country&quot;), Legend.position = &quot;bottomright&quot; ) gaps.plot( synth.res = synth.out, dataprep.res = dataprep.out, Ylab = &quot;gap in real per - capita GDP (1986 USD, thousand)&quot;, Xlab = &quot;year&quot;, Ylim = c(-1.5, 1.5), Main = NA ) Doubly Robust Difference-in-Differences Example from DRDID package library(DRDID) data(nsw_long) # Form the Lalonde sample with CPS comparison group eval_lalonde_cps &lt;- subset(nsw_long, nsw_long$treated == 0 | nsw_long$sample == 2) Estimate Average Treatment Effect on Treated using Improved Locally Efficient Doubly Robust DID estimator out &lt;- drdid( yname = &quot;re&quot;, tname = &quot;year&quot;, idname = &quot;id&quot;, dname = &quot;experimental&quot;, xformla = ~ age + educ + black + married + nodegree + hisp + re74, data = eval_lalonde_cps, panel = TRUE ) summary(out) #&gt; Call: #&gt; drdid(yname = &quot;re&quot;, tname = &quot;year&quot;, idname = &quot;id&quot;, dname = &quot;experimental&quot;, #&gt; xformla = ~age + educ + black + married + nodegree + hisp + #&gt; re74, data = eval_lalonde_cps, panel = TRUE) #&gt; ------------------------------------------------------------------ #&gt; Further improved locally efficient DR DID estimator for the ATT: #&gt; #&gt; ATT Std. Error t value Pr(&gt;|t|) [95% Conf. Interval] #&gt; -901.2703 393.6247 -2.2897 0.022 -1672.7747 -129.766 #&gt; ------------------------------------------------------------------ #&gt; Estimator based on panel data. #&gt; Outcome regression est. method: weighted least squares. #&gt; Propensity score est. method: inverse prob. tilting. #&gt; Analytical standard error. #&gt; ------------------------------------------------------------------ #&gt; See Sant&#39;Anna and Zhao (2020) for details. 26.1.3 Example 3 by Synth package’s authors library(Synth) data(&quot;basque&quot;) synth() requires \\(X_1\\) vector of treatment predictors \\(X_0\\) matrix of same variables for control group \\(Z_1\\) vector of outcome variable for treatment group \\(Z_0\\) matrix of outcome variable for control group use dataprep() to prepare data in the format that can be used throughout the Synth package dataprep.out &lt;- dataprep( foo = basque, predictors = c( &quot;school.illit&quot;, &quot;school.prim&quot;, &quot;school.med&quot;, &quot;school.high&quot;, &quot;school.post.high&quot;, &quot;invest&quot; ), predictors.op = &quot;mean&quot;, time.predictors.prior = 1964:1969, special.predictors = list( list(&quot;gdpcap&quot;, 1960:1969 , &quot;mean&quot;), list(&quot;sec.agriculture&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.energy&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.industry&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.construction&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.services.venta&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;sec.services.nonventa&quot;, seq(1961, 1969, 2), &quot;mean&quot;), list(&quot;popdens&quot;, 1969, &quot;mean&quot;) ), dependent = &quot;gdpcap&quot;, unit.variable = &quot;regionno&quot;, unit.names.variable = &quot;regionname&quot;, time.variable = &quot;year&quot;, treatment.identifier = 17, controls.identifier = c(2:16, 18), time.optimize.ssr = 1960:1969, time.plot = 1955:1997 ) find optimal weights that identifies the synthetic control for the treatment group synth.out &lt;- synth(data.prep.obj = dataprep.out, method = &quot;BFGS&quot;) #&gt; #&gt; X1, X0, Z1, Z0 all come directly from dataprep object. #&gt; #&gt; #&gt; **************** #&gt; searching for synthetic control unit #&gt; #&gt; #&gt; **************** #&gt; **************** #&gt; **************** #&gt; #&gt; MSPE (LOSS V): 0.008864606 #&gt; #&gt; solution.v: #&gt; 0.02773094 1.194e-07 1.60609e-05 0.0007163836 1.486e-07 0.002423908 0.0587055 0.2651997 0.02851006 0.291276 0.007994382 0.004053188 0.009398579 0.303975 #&gt; #&gt; solution.w: #&gt; 2.53e-08 4.63e-08 6.44e-08 2.81e-08 3.37e-08 4.844e-07 4.2e-08 4.69e-08 0.8508145 9.75e-08 3.2e-08 5.54e-08 0.1491843 4.86e-08 9.89e-08 1.162e-07 gaps &lt;- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w) gaps[1:3, 1] #&gt; 1955 1956 1957 #&gt; 0.15023473 0.09168035 0.03716475 synth.tables &lt;- synth.tab(dataprep.res = dataprep.out, synth.res = synth.out) names(synth.tables) # you can pick tables to see #&gt; [1] &quot;tab.pred&quot; &quot;tab.v&quot; &quot;tab.w&quot; &quot;tab.loss&quot; path.plot( synth.res = synth.out, dataprep.res = dataprep.out, Ylab = &quot;real per-capita GDP (1986 USD, thousand)&quot;, Xlab = &quot;year&quot;, Ylim = c(0, 12), Legend = c(&quot;Basque country&quot;, &quot;synthetic Basque country&quot;), Legend.position = &quot;bottomright&quot; ) gaps.plot( synth.res = synth.out, dataprep.res = dataprep.out, Ylab = &quot;gap in real per-capita GDP (1986 USD, thousand)&quot;, Xlab = &quot;year&quot;, Ylim = c(-1.5, 1.5), Main = NA ) You could also run placebo tests 26.1.4 Example 4 by Michael Robbins and Steven Davenport who are authors of MicroSynth with the following improvements: Standardization use.survey = TRUE and permutation ( perm = 250 and jack = TRUE ) for placebo tests Omnibus statistic (set to omnibus.var ) for multiple outcome variables incorporate multiple follow-up periods end.post Notes: Both predictors and outcome will be used to match units before intervention Outcome variable has to be time-variant Predictors are time-invariant # right now the package is not availabe for R version 4.2 library(microsynth) data(&quot;seattledmi&quot;) cov.var &lt;- c(&quot;TotalPop&quot;, &quot;BLACK&quot;, &quot;HISPANIC&quot;, &quot;Males_1521&quot;, &quot;HOUSEHOLDS&quot;, &quot;FAMILYHOUS&quot;, &quot;FEMALE_HOU&quot;, &quot;RENTER_HOU&quot;, &quot;VACANT_HOU&quot;) match.out &lt;- c(&quot;i_felony&quot;, &quot;i_misdemea&quot;, &quot;i_drugs&quot;, &quot;any_crime&quot;) sea1 &lt;- microsynth( seattledmi, idvar = &quot;ID&quot;, timevar = &quot;time&quot;, intvar = &quot;Intervention&quot;, start.pre = 1, end.pre = 12, end.post = 16, match.out = match.out, # outcome variable will be matched on exactly match.covar = cov.var, # specify covariates will be matched on exactly result.var = match.out, # used to report results omnibus.var = match.out, # feature in the omnibus p-value test = &quot;lower&quot;, n.cores = min(parallel::detectCores(), 2) ) sea1 summary(sea1) plot_microsynth(sea1) sea2 &lt;- microsynth(seattledmi, idvar=&quot;ID&quot;, timevar=&quot;time&quot;, intvar=&quot;Intervention&quot;, start.pre=1, end.pre=12, end.post=c(14, 16), match.out=match.out, match.covar=cov.var, result.var=match.out, omnibus.var=match.out, test=&quot;lower&quot;, perm=250, jack=TRUE, n.cores = min(parallel::detectCores(), 2)) "],["synthetic-difference-in-differences.html", "26.2 Synthetic Difference-in-differences", " 26.2 Synthetic Difference-in-differences reference: (Arkhangelsky et al. 2021) References "],["event-studies.html", "Chapter 27 Event Studies", " Chapter 27 Event Studies The earliest paper that used event study was (Dolley 1933) (Campbell et al. 1998) introduced this method, which based on the efficient markets theory by (Fama 1970) Review: (McWilliams and Siegel 1997): in management (A. Sorescu, Warren, and Ertekin 2017): in marketing Previous marketing studies: Firm-initiated activities (Horsky and Swyngedouw 1987): name change (Chaney, Devinney, and Winer 1991) new product announcements (Agrawal and Kamakura 1995): celebrity endorsement (Lane and Jacobson 1995): brand extensions (Houston and Johnson 2000): joint venture (Geyskens, Gielens, and Dekimpe 2002): Internet channel (for newspapers) (Cornwell, Pruitt, and Clark 2005): sponsorship announcements (Elberse 2007): casting announcements (A. B. Sorescu, Chandy, and Prabhu 2007): M&amp;A (Sood and Tellis 2009): innovation payoff (Wiles and Danielova 2009): product placements in movies (Joshi and Hanssens 2009): movie releases (Wiles et al. 2010): Regulatory Reports of Deceptive Advertising (Boyd, Chandy, and Cunha Jr 2010): new CMO appointments (Karniouchina, Uslay, and Erenburg 2011): product placement (Wiles, Morgan, and Rego 2012): Brand Acquisition and Disposal (Kalaignanam and Bahadir 2013): corporate brand name change (Raassens, Wuyts, and Geyskens 2012): new product development outsourcing (Mazodier and Rezaee 2013): sports announcements (Borah and Tellis 2014): make, buy or ally for innovations (Homburg, Vollmayr, and Hahn 2014): channel expansions (Fang, Lee, and Yang 2015): Co-development agreements (Wu et al. 2015): horizontal collaboration in new product development (Fama et al. 1969): stock split Non-firm-initiated activities (A. B. Sorescu, Chandy, and Prabhu 2003): FDA approvals (Pandey, Shanahan, and Hansen 2005): diversity elite list (Balasubramanian, Mathur, and Thakur 2005): high-quality achievements (Tellis and Johnson 2007): quality reviews by Walter Mossberg (Fornell et al. 2006): customer satisfaction (Gielens et al. 2008): Walmart’s entry into the UK market (Boyd and Spekman 2008): indirect ties (R. S. Rao, Chandy, and Prabhu 2008): FDA approvals (Ittner, Larcker, and Taylor 2009): customer satisfaction (Tipton, Bharadwaj, and Robertson 2009): Deceptive advertising (Y. Chen, Ganesan, and Liu 2009): product recalls (Jacobson and Mizik 2009): satisfaction score release (Karniouchina, Moore, and Cooney 2009): Mad money with Jim Cramer (Wiles et al. 2010): deceptive advertising (Y. Chen, Liu, and Zhang 2012): third-party movie reviews (Xiong and Bharadwaj 2013): positive and negative news (Gao et al. 2015): product recall (Malhotra and Kubowicz Malhotra 2011): data breach (Bhagat, Bizjak, and Coles 1998): litigation Potential avenues: Ad campaigns Market entry product failure/recalls Patents Pros: Better than accounting based measures (e.g., profits) because managers can manipulate profits (Benston 1985) Easy to do Fun fact: (Dubow and Monteiro 2006) came up with a way to gauge how ‘clean’ a market is. They based their measure on how much prices seemed to move in a way that suggested insider knowledge, before the release of important regulatory announcements that could affect the stock prices. Such price shifts might suggest that insider trading was occurring. Essentially, they were watching for any unusual price changes before the day of the announcement. Events can be Internal (e.g., stock repurchase) External (e.g., macroeconomic variables) Assumptions: Efficient market theory Shareholders are the most important group among stakeholders The event sharply affects share price Expected return is calculated appropriately Steps: Event Identification: (e.g., dividends, M&amp;A, stock buyback, laws or regulation, privatization vs. nationalization, celebrity endorsements, name changes, or brand extensions etc. To see the list of events in US and international, see WRDS S&amp;P Capital IQ Key Developments). Events must affect either cash flows or on the discount rate of firms (A. Sorescu, Warren, and Ertekin 2017, 191) Estimation window: Normal return expected return (\\(T_0 \\to T_1\\)) (sometimes include days before to capture leakages). Recommendation by (Johnston 2007) is to use 250 days before the event (and 45-day between the estimation window and the event window). (Wiles, Morgan, and Rego 2012) used an 90-trading-day estimation window ending 6 days before the event (this is consistent with the finance literature). (Gielens et al. 2008) 260 to 10 days before or 300 to 46 days before (Tirunillai and Tellis 2012) estimation window of 255 days and ends 46 days before the event. Similarly, (McWilliams and Siegel 1997) and (Fornell et al. 2006) 255 days ending 46 days before the event date (A. Sorescu, Warren, and Ertekin 2017, 194) suggest 100 days before the event date Leakage: try to cover as broad news sources as possible (LexisNexis, Factiva, and RavenPack). Event window: contain the event date (\\(T_1 \\to T_2\\)) (have to argue for the event window and can’t do it empirically) One day: (Balasubramanian, Mathur, and Thakur 2005; Boyd, Chandy, and Cunha Jr 2010; Fornell et al. 2006) Two days: (Raassens, Wuyts, and Geyskens 2012; Sood and Tellis 2009) Up to 10 days: (Cornwell, Pruitt, and Clark 2005; Kalaignanam and Bahadir 2013; A. B. Sorescu, Chandy, and Prabhu 2007) Post Event window: \\(T_2 \\to T_3\\) Normal vs. Abnormal returns \\[ \\epsilon_{it}^* = \\frac{P_{it} - E(P_{it})}{P_{it-1}} = R_{it} - E(R_{it}|X_t) \\] where \\(\\epsilon_{it}^*\\) = abnormal return \\(R_{it}\\) = realized (actual) return \\(P\\) = dividend-adjusted price of the stock \\(E(R_{it}|X_t)\\) normal expected return There are several model to calculate the expected return A. Statistical Models: assumes jointly multivariate normal and iid over time (need distributional assumptions for valid finite-sample estimation) rather robust (hence, recommended) Constant Mean Return Model Market Model Adjusted Market Return Model Factor Model B. Economic Model (strong assumption regarding investor behavior) Capital Asset Pricing Model (CAPM) Arbitrage Pricing Theory (APT) References "],["other-issues.html", "27.1 Other Issues", " 27.1 Other Issues 27.1.1 Event Studies in marketing (Skiera, Bayer, and Schöler 2017) What should be the dependent variable in marketing-related event studies? Based on valuation theory, Shareholder value = the value of the operating business + non-operating asset - debt (Schulze, Skiera, and Wiesel 2012) Many marketing events only affect the operating business value, but not non-operating assets and debt Ignoring the differences in firm-specific leverage effects has dual effects: inflates the impact of observation pertaining to firms with large debt deflates those pertaining to firms with large non-operating asset. It’s recommended that marketing papers should report both \\(CAR^{OB}\\) and \\(CAR^{SHV}\\) and argue for whichever one more appropriate. Up until this paper, only two previous event studies control for financial structure: (Gielens et al. 2008) (Chaney, Devinney, and Winer 1991) Definitions: Cumulative abnormal percentage return on shareholder value (\\(CAR^{SHV}\\)) Shareholder value refers to a firm’s market capitalization = share price x # of shares. Cumulative abnormal percentage return on the value of the operating business (\\(CAR^{OB}\\)) \\(CAR^{OB} = CAR^{SHV}/\\text{leverage effect}_{before}\\) Leverage effect = Operating business value / Shareholder value (LE describes how a 1% change in operating business translates into a percentage change in shareholder value). Value of operating business = shareholder value - non-operating assets + debt Leverage effect \\(\\neq\\) leverage ratio, where leverage ratio is debt / firm size debt = long-term + short-term debt; long-term debt firm size = book value of equity; market cap; total assets; debt + equity Operating assets are those used by firm in their core business operations (e..g, property, plant, equipment, natural resources, intangible asset) Non–operating assets (redundant assets), do not play a role in a firm’s operations, but still generate some form of return (e.g., excess cash , marketable securities - commercial papers, market instruments) Marketing events usually influence the value of a firm’s operating assets (more specifically intangible assets). Then, changes in the value of the operating business can impact shareholder value. Three rare instances where marketing events can affect non-operating assets and debt (Hall, Hutchinson, and Michaelas 2004): excess pre-orderings can influence short-term debt (Berger, Ofek, and Yermack 1997) Firing CMO increase debt as the manager’s tenure is negatively associated with the firm’s debt (Bhaduri 2002) production of unique products. A marketing-related event can either influence value components of a firm’s value (= firm’s operating business, non-operating assets and its debt) only the operating business. Replication of the leverage effect \\[ \\begin{aligned} \\text{leverage effect} &amp;= \\frac{\\text{operating business}}{\\text{shareholder value}} \\\\ &amp;= \\frac{\\text{(shareholder value - non-operating assets + debt)}}{\\text{shareholder value}} \\\\ &amp;= \\frac{prcc_f \\times csho - ivst + dd1 + dltt + pstk}{prcc_f \\times csho} \\end{aligned} \\] Compustat Data Item Label Variable prcc_f Share price csho Common shares outstanding ivst short-term investments (Non-operating assets) dd1 long-term debt due in one year dltt long-term debt pstk preferred stock Since WRDS no longer maintains the S&amp;P 500 list as of the time of this writing, I can’t replicate the list used in (Skiera, Bayer, and Schöler 2017) paper. library(tidyverse) df_leverage_effect &lt;- read.csv(&quot;data/leverage_effect.csv.gz&quot;) %&gt;% # get active firms only filter(costat == &quot;A&quot;) %&gt;% # drop missing values drop_na() %&gt;% # create the leverage effect variable mutate(le = (prcc_f * csho - ivst + dd1 + dltt + pstk)/ (prcc_f * csho)) %&gt;% # get shareholder value mutate(shv = prcc_f * csho) %&gt;% # remove Infinity value for leverage effect (i.e., shareholder value = 0) filter_all(all_vars(!is.infinite(.))) %&gt;% # positive values only filter_all(all_vars(. &gt; 0)) %&gt;% # get the within coefficient of variation group_by(gvkey) %&gt;% mutate(within_var_mean_le = mean(le), within_var_sd_le = sd(le)) %&gt;% ungroup() # get the mean and standard deviation mean(df_leverage_effect$le) #&gt; [1] 150.1087 max(df_leverage_effect$le) #&gt; [1] 183629.6 hist(df_leverage_effect$le) # coefficient of variation sd(df_leverage_effect$le) / mean(df_leverage_effect$le) * 100 #&gt; [1] 2749.084 # Within-firm variation (similar to fig 3a) df_leverage_effect %&gt;% group_by(gvkey) %&gt;% slice(1) %&gt;% ungroup() %&gt;% dplyr::select(within_var_mean_le, within_var_sd_le) %&gt;% dplyr::mutate(cv = within_var_sd_le/ within_var_mean_le) %&gt;% dplyr::select(cv) %&gt;% pull() %&gt;% hist() 27.1.2 Economic significance Total wealth gain (loss) from the event \\[ \\Delta W_t = CAR_t \\times MKTVAL_0 \\] where \\(\\Delta W_t\\) = gain (loss) \\(CAR_t\\) = cumulative residuals to date \\(t\\) \\(MKTVAL_0\\) market value of the firm before the event window 27.1.3 Statistical Power increases with more firms less days in the event window (avoiding potential contamination from confounds) References "],["testing.html", "27.2 Testing", " 27.2 Testing 27.2.1 Parametric Test (Brown and Warner 1985) provide evidence that even in the presence of non-normality, the parametric tests still perform well. Since the proportion of positive and negative abnormal returns tends to be equal in the sample (of at least 5 securities). The excess returns will coverage to normality as the sample size increases. Hence, parametric test is advocated than non-parametric one. Low power to detect significance (Kothari and Warner 1997) Power = f(sample, size, the actual size of abnormal returns, the variance of abnormal returns across firms) 27.2.1.1 T-test Applying CLT \\[ t_{CAR} = \\frac{\\bar{CAR_{it}}}{\\sigma (CAR_{it})/\\sqrt{n}} \\\\ t_{BHAR} = \\frac{\\bar{BHAR_{it}}}{\\sigma (BHAR_{it})/\\sqrt{n}} \\] Assume Abnormal returns are normally distributed Var(abnormal returns) are equal across firms No cross-correlation in abnormal returns. Hence, it will be misspecified if you suspected Heteroskedasticity Cross-sectional dependence Technically, abnormal returns could follow non-normal distribution (but because of the design of abnormal returns calculation, it typically forces the distribution to be normal) To address these concerns, Patell Standardized Residual (PSR) can sometimes help. 27.2.1.2 Patell Standardized Residual (PSR) (Patell 1976) Since market model uses observations outside the event window, abnormal returns contain prediction errors on top of the true residuals , and should be standardized: \\[ AR_{it} = \\frac{\\hat{u}_{it}}{s_i \\sqrt{C_{it}}} \\] where \\(\\hat{u}_{it}\\) = estimated residual \\(s_i\\) = standard deviation estimate of residuals (from the estimation period) \\(C_{it}\\) = a correction to account for the prediction’s increased variation outside of the estimation period (Strong 1992) \\[ C_{it} = 1 + \\frac{1}{T} + \\frac{(R_{mt} - \\bar{R}_m)^2}{\\sum_t (R_{mt} - \\bar{R}_m)^2} \\] where \\(T\\) = number of observations (from estimation period) \\(R_{mt}\\) = average rate of return of all stocks trading the the stock market at time \\(t\\) \\(\\bar{R}_m = \\frac{1}{T} \\sum_{t=1}^T R_{mt}\\) 27.2.2 Non-parametric Test No assumptions about return distribution Sign Test (assumes symmetry in returns) binom.test() Wilcoxon Signed-Rank Test (allows for non-symmetry in returns) Use wilcox.test(sample) Gen SIgn Test Corrado Rank Test References "],["sample.html", "27.3 Sample", " 27.3 Sample Sample can be relative small (Wiles, Morgan, and Rego 2012) 572 acquisition announcements, 308 disposal announcements Can range from 71 (Markovitch and Golder 2008) to 3552 (Borah and Tellis 2014) 27.3.1 Confounders Avoid confounding events: earnings announcements, key executive changes, unexpected stock buybacks, changes in dividends within the two-trading day window surrounding the event, mergers and acquisitions, spin-offers, stock splits, management changes, joint ventures, unexpected dividend, IPO, debt defaults, dividend cancellations (McWilliams and Siegel 1997) According to (Fornell et al. 2006), need to control: one-day event period = day when Wall Street Journal publish ACSI announcement. 5 days before and after event to rule out other news (PR Newswires, Dow Jones, Business Wires) M&amp;A, Spin-offs, stock splits CEO or CFO changes, Layoffs, restructurings, earnings announcements, lawsuits Capital IQ - Key Developments: covers almost all important events so you don’t have to search on news. (A. Sorescu, Warren, and Ertekin 2017) examine confounding events in the short-term windows: From RavenPack, 3982 US publicly traded firms, with all the press releases (2000-2013) 3-day window around event dates The difference between a sample with full observations and a sample without confounded events is negligible (non-significant). Conclusion: excluding confounded observations may be unnecessary for short-term event studies. Biases can stem from researchers pick and choose events to exclude As time progresses, more and more events you need to exclude which can be infeasible. To further illustrate this point, let’s do a quick simulation exercise In this example, we will explore three types of events: Focal events Correlated events (i.e., events correlated with the focal events; the presence of correlated events can follow the presence of the focal event) Uncorrelated events (i.e., events with dates that might randomly coincide with the focal events, but are not correlated with them). We have the ability to control the strength of correlation between focal and correlated events in this study, as well as the number of unrelated events we wish to examine. Let’s examine the implications of including and excluding correlated and uncorrelated events on the estimates of our focal events. # Load required libraries library(dplyr) library(ggplot2) library(tidyr) library(tidyverse) # Parameters n &lt;- 100000 # Number of observations n_focal &lt;- round(n * 0.2) # Number of focal events overlap_correlated &lt;- 0.5 # Overlapping percentage between focal and correlated events # Function to compute mean and confidence interval mean_ci &lt;- function(x) { m &lt;- mean(x) ci &lt;- qt(0.975, length(x)-1) * sd(x) / sqrt(length(x)) # 95% confidence interval list(mean = m, lower = m - ci, upper = m + ci) } # Simulate data set.seed(42) data &lt;- tibble( date = seq.Date(from = as.Date(&quot;2010-01-01&quot;), by = &quot;day&quot;, length.out = n), # Date sequence focal = rep(0, n), correlated = rep(0, n), ab_ret = rnorm(n) ) # Define focal events focal_idx &lt;- sample(1:n, n_focal) data$focal[focal_idx] &lt;- 1 true_effect &lt;- 0.25 # Adjust the ab_ret for the focal events to have a mean of true_effect data$ab_ret[focal_idx] &lt;- data$ab_ret[focal_idx] - mean(data$ab_ret[focal_idx]) + true_effect # Determine the number of correlated events that overlap with focal and those that don&#39;t n_correlated_overlap &lt;- round(length(focal_idx) * overlap_correlated) n_correlated_non_overlap &lt;- n_correlated_overlap # Sample the overlapping correlated events from the focal indices correlated_idx &lt;- sample(focal_idx, size = n_correlated_overlap) # Get the remaining indices that are not part of focal remaining_idx &lt;- setdiff(1:n, focal_idx) # Check to ensure that we&#39;re not attempting to sample more than the available remaining indices if (length(remaining_idx) &lt; n_correlated_non_overlap) { stop(&quot;Not enough remaining indices for non-overlapping correlated events&quot;) } # Sample the non-overlapping correlated events from the remaining indices correlated_non_focal_idx &lt;- sample(remaining_idx, size = n_correlated_non_overlap) # Combine the two to get all correlated indices all_correlated_idx &lt;- c(correlated_idx, correlated_non_focal_idx) # Set the correlated events in the data data$correlated[all_correlated_idx] &lt;- 1 # Inflate the effect for correlated events to have a mean of correlated_non_focal_idx &lt;- setdiff(all_correlated_idx, focal_idx) # Fixing the selection of non-focal correlated events data$ab_ret[correlated_non_focal_idx] &lt;- data$ab_ret[correlated_non_focal_idx] - mean(data$ab_ret[correlated_non_focal_idx]) + 1 # Define the numbers of uncorrelated events for each scenario num_uncorrelated &lt;- c(5, 10, 20, 30, 40) # Define uncorrelated events for (num in num_uncorrelated) { for (i in 1:num) { data[paste0(&quot;uncorrelated_&quot;, i)] &lt;- 0 uncorrelated_idx &lt;- sample(1:n, round(n * 0.1)) data[uncorrelated_idx, paste0(&quot;uncorrelated_&quot;, i)] &lt;- 1 } } # Define uncorrelated columns and scenarios unc_cols &lt;- paste0(&quot;uncorrelated_&quot;, 1:num_uncorrelated) results &lt;- tibble( Scenario = c(&quot;Include Correlated&quot;, &quot;Correlated Effects&quot;, &quot;Exclude Correlated&quot;, &quot;Exclude Correlated and All Uncorrelated&quot;), MeanEffect = c( mean_ci(data$ab_ret[data$focal == 1])$mean, mean_ci(data$ab_ret[data$focal == 0 | data$correlated == 1])$mean, mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0])$mean, mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0 &amp; rowSums(data[, paste0(&quot;uncorrelated_&quot;, 1:num_uncorrelated)]) == 0])$mean ), LowerCI = c( mean_ci(data$ab_ret[data$focal == 1])$lower, mean_ci(data$ab_ret[data$focal == 0 | data$correlated == 1])$lower, mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0])$lower, mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0 &amp; rowSums(data[, paste0(&quot;uncorrelated_&quot;, 1:num_uncorrelated)]) == 0])$lower ), UpperCI = c( mean_ci(data$ab_ret[data$focal == 1])$upper, mean_ci(data$ab_ret[data$focal == 0 | data$correlated == 1])$upper, mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0])$upper, mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0 &amp; rowSums(data[, paste0(&quot;uncorrelated_&quot;, 1:num_uncorrelated)]) == 0])$upper ) ) # Add the scenarios for excluding 5, 10, 20, and 50 uncorrelated for (num in num_uncorrelated) { unc_cols &lt;- paste0(&quot;uncorrelated_&quot;, 1:num) results &lt;- results %&gt;% add_row( Scenario = paste(&quot;Exclude&quot;, num, &quot;Uncorrelated&quot;), MeanEffect = mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0 &amp; rowSums(data[, unc_cols]) == 0])$mean, LowerCI = mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0 &amp; rowSums(data[, unc_cols]) == 0])$lower, UpperCI = mean_ci(data$ab_ret[data$focal == 1 &amp; data$correlated == 0 &amp; rowSums(data[, unc_cols]) == 0])$upper ) } ggplot(results, aes( x = factor(Scenario, levels = Scenario), y = MeanEffect, ymin = LowerCI, ymax = UpperCI )) + geom_pointrange() + coord_flip() + ylab(&quot;Mean Effect&quot;) + xlab(&quot;Scenario&quot;) + ggtitle(&quot;Mean Effect of Focal Events under Different Scenarios&quot;) + geom_hline(yintercept = true_effect, linetype = &quot;dashed&quot;, color = &quot;red&quot;) As depicted in the plot, the inclusion of correlated events demonstrates minimal impact on the estimation of our focal events. Conversely, excluding these correlated events can diminish our statistical power. This is true in cases of pronounced correlation. However, the consequences of excluding unrelated events are notably more significant. It becomes evident that by omitting around 40 unrelated events from our study, we lose the ability to accurately identify the true effects of the focal events. In reality and within research, we often rely on the Key Developments database, excluding over 150 events, a practice that can substantially impair our capacity to ascertain the authentic impact of the focal events. This little experiment really drives home the point – you better have a darn good reason to exclude an event from your study (make it super convincing)! References "],["biases.html", "27.4 Biases", " 27.4 Biases Different closing time obscure estimation of the abnormal returns, check (Campbell et al. 1998) Upward bias in aggregating CAR + transaction prices (bid and ask) Cross-sectional dependence in the returns bias the standard deviation estimates downward, which inflates the test statistics when events share common dates (MacKinlay 1997). Hence, (Jaffe 1974) Calendar-time Portfolio Abnormal Returns (CTARs) should be used to correct for this bias. (Wiles, Morgan, and Rego 2012): For events confined to relatively few industries, cross-sectional dependence in the returns can bias the SD estimate downward, inflating the associated test statistics” (p. 47). To control for potential cross-sectional correlation in the abnormal returns, you can use time-series standard deviation test statistic (Brown and Warner 1980) Sample selection bias (self-selection of firms into the event treatment) similar to omitted variable bias where the omitted variable is the private info that leads a firm to take the action. See Endogenous Sample Selection for more methods to correct this bias. Use Heckman model (Acharya 1993) But hard to find an instrument that meets the exclusion requirements (and strong, because weak instruments can lead to multicollinearity in the second equation) Can estimate the private information unknown to investors (which is Mills ratio \\(\\lambda\\) itself). Testing \\(\\lambda\\) significance is to see whether private info can explain outcomes (e.g., magnitude of the CARs to the announcement). Examples: (Y. Chen, Ganesan, and Liu 2009) (Wiles, Morgan, and Rego 2012) (Fang, Lee, and Yang 2015) Counterfactual observations Propensity score matching: Finance: Doan and Iskandar-Datta (2021) (Masulis and Nahata 2011) Marketing: (Warren and Sorescu 2017) (Borah and Tellis 2014) (Cao and Sorescu 2013) Switching regression: comparison between 2 specific outcomes (also account for selection on unobservables - using instruments) (Cao and Sorescu 2013) References "],["long-run-event-studies.html", "27.5 Long-run event studies", " 27.5 Long-run event studies Usually make an assumption that the distribution of the abnormal returns to these events has a mean of 0 (A. Sorescu, Warren, and Ertekin 2017, 192). And (A. Sorescu, Warren, and Ertekin 2017) provide evidence that for all events they examine the results from samples with and without confounding events do not differ. Long-horizon event studies face challenges due to systematic errors over time and sensitivity to model choice. Two main approaches are used to measure long-term abnormal stock returns Buy and Hold Abnormal Returns (BHAR) Long-term Cumulative Abnormal Returns (LCARs) Calendar-time Portfolio Abnormal Returns (CTARs) (Jensen’s Alpha): manages cross-sectional dependence better and is less sensitive to (asset pricing) model misspecification Two types: Unexpected changes in firm specific variables (typically not announced, may not be immediately visible to all investors, impact on firm value is not straightforward): customer satisfaction scores effect on firm value (Jacobson and Mizik 2009) or unexpected changes in marketing expenditures (M. Kim and McAlister 2011) to determine mispricing. Complex consequences (investors take time to learn and incorporate info): acquisition depends on integration (A. B. Sorescu, Chandy, and Prabhu 2007) 12 - 60 months event window: (Loughran and Ritter 1995) (Brav and Gompers 1997) Example: (Dutta et al. 2018) library(crseEventStudy) # example by the package&#39;s author data(demo_returns) SAR &lt;- sar(event = demo_returns$EON, control = demo_returns$RWE, logret = FALSE) mean(SAR) #&gt; [1] 0.006870196 27.5.1 Buy and Hold Abnormal Returns (BHAR) Classic references: (Loughran and Ritter 1995) (Barber and Lyon 1997) (Lyon, Barber, and Tsai 1999) Use a portfolio of stocks that are close matches of the current firm over the same period as benchmark, and see the difference between the firm return and that of the portfolio. More technical note is that it measures returns from buying stocks in event-experiencing firms and shorting stocks in similar non-event firms within the same time. Because of high cross-sectional correlations, BHARs’ t-stat can be inflated, but its rank order is not affected (Markovitch and Golder 2008; A. B. Sorescu, Chandy, and Prabhu 2007) To construct the portfolio, use similar size book-to-market momentum Matching Procedure (Barber and Lyon 1997): Each year from July to June, all common stocks in the CRSP database are categorized into ten groups (deciles) based on their market capitalization from the previous June. Within these deciles, firms are further sorted into five groups (quintiles) based on their book-to-market ratios as of December of the previous year or earlier, considering possible delays in financial statement reporting. Benchmark portfolios are designed to exclude firms with specific events but include all firms that can be classified into the characteristic-based portfolios. Similarly, Wiles et al. (2010) uses the following matching procedure: All firms in the same two-digit SIC code with market values of 50% to 150% of the focal firms are selected From this list, the 10 firms with the most comparable book-to-market ratios are chosen to serve as the matched portfolio (the matched portfolio can have less than 10 firms). Calculations: \\[ AR_{it} = R_{it} - E(R_{it}|X_t) \\] Cumulative Abnormal Return (CAR): \\[ CAR_{it} = \\sum_{t=1}^T (R_{it} - E(R_{it})) \\] Buy-and-Hold Abnormal Return (BHAR) \\[ BHAR_{t = 1}^T = \\Pi_{t=1}^T(1 + R_{it}) - \\Pi_{t = 1}^T (1 + E(R_{it})) \\] where as CAR is the arithmetic sum, BHAR is the geometric sum. In short-term event studies, differences between CAR and BHAR are often minimal. However, in long-term studies, this difference could significantly skew results. (Barber and Lyon 1997) shows that while BHAR is usually slightly lower than annual CAR, but it dramatically surpasses CAR when annual BHAR exceeds 28%. To calculate the long-run return (\\(\\Pi_{t=1}^T (1 + E(R_{it}))\\)) of the benchmark portfolio, we can: With annual rebalance: In each period, each portfolio is re-balanced and then compound mean stock returns in a portfolio over a given period: \\[ \\Pi_{t = 1}^T (1 + E(R_{it})) = \\Pi_{t}^T (1 + \\sum_{i = s}^{n_t}w_{it} R_{it}) \\] where \\(n_t\\) is the number of firms in period \\(t\\), and \\(w_{it}\\) is (1) \\(1/n_t\\) or (2) value-weight of firm \\(i\\) in period \\(t\\). To avoid favoring recent events, in cross-sectional event studies, researchers usually treat all events equally when studying their impact on the stock market over time. This approach helps identify any abnormal changes in stock prices, especially when dealing with a series of unplanned events. Potential problems: Solution first: Form benchmark portfolios that will never change constituent firms (Mitchell and Stafford 2000), because of these problems: Newly public companies often perform worse than a balanced market index (Ritter 1991), and this, over time, might distort long-term return expectations due to the inclusion of these new companies (a phenomenon called “new listing bias” identified by Barber and Lyon (1997)). Regularly rebalancing an equal-weight portfolio can lead to overestimated long-term returns and potentially skew buy-and-hold abnormal returns (BHARs) negatively due to constant selling of winning stocks and buying of underperformers (i.e., “rebalancing bias” (Barber and Lyon 1997)). Value-weight portfolios, which favor larger market cap stocks, can be viewed as an active investment strategy that keeps buying winning stocks and selling underperformers. Over time, this approach tends to positively distort BHARs. Without annual rebalance: Compounding the returns of the securities comprising the portfolio, followed by calculating the average across all securities \\[ \\Pi_{t = s}^{T} (1 + E(R_{it})) = \\sum_{i=s}^{n_t} (w_{is} \\Pi_{t=1}^T (1 + R_{it})) \\] where \\(t\\) is the investment period, \\(R_{it}\\) is the return on security \\(i\\), \\(n_i\\) is the number of securities, \\(w_{it}\\) is either \\(1/n_s\\) or value-weight factor of security \\(i\\) at initial period \\(s\\). This portfolio’s profits come from a simple investment where all the included stocks are given equal importance, or weighted according to their market value, as they were in a specific past period (period s). This means that it doesn’t consider any stocks that were listed after this period, nor does it adjust the portfolio each month. However, one problem with this method is that the value assigned to each stock, based on its market size, needs to be corrected. This is to make sure that recent stocks don’t end up having too much influence. Fortunately, on WRDS, it will give you all types of BHAR (2x2) (equal-weighted vs. value-weighted and with annual rebalance and without annual rebalance) “MINWIN” is the smallest number of months a company trades after an event to be included in the study. “MAXWIN” is the most months that the study considers in its calculations. Companies aren’t excluded if they have less than MAXWIN months, unless they also have fewer than MINWIN months. The term “MONTH” signifies chosen months (typically 12, 24, or 36) used to work out BHAR. If monthly returns are missing during the set period, matching portfolio returns fill in the gaps. 27.5.2 Long-term Cumulative Abnormal Returns (LCARs) Formula for LCARs during the \\((1,T)\\) postevent horizon (A. B. Sorescu, Chandy, and Prabhu 2007) \\[ LCAR_{pT} = \\sum_{t = 1}^{t = T} (R_{it} - R_{pt}) \\] where \\(R_{it}\\) is the rate of return of stock \\(i\\) in month \\(t\\) \\(R_{pt}\\) is the rate of return on the counterfactual portfolio in month \\(t\\) 27.5.3 Calendar-time Portfolio Abnormal Returns (CTARs) This section follows strictly the procedure in (Wiles et al. 2010) A portfolio for every day in calendar time (including all securities which experience an event that time). For each portfolio, the securities and their returns are equally weighted For all portfolios, the average abnormal return are calculated as \\[ AAR_{Pt} = \\frac{\\sum_{i=1}^S AR_i}{S} \\] where \\(S\\) is the number of securities in portfolio \\(P\\) \\(AR_i\\) is the abnormal return for the stock \\(i\\) in the portfolio For every portfolio \\(P\\), a time series estimate of \\(\\sigma(AAR_{Pt})\\) is calculated for the preceding \\(k\\) days, assuming that the \\(AAR_{Pt}\\) are independent over time. Each portfolio’s average abnormal return is standardized \\[ SAAR_{Pt} = \\frac{AAR_{Pt}}{SD(AAR_{Pt})} \\] Average standardized residual across all portfolio’s in calendar time \\[ ASAAR = \\frac{1}{n}\\sum_{i=1}^{255} SAAR_{Pt} \\times D_t \\] where \\(D_t = 1\\) when there is at least one security in portfolio \\(t\\) \\(D_t = 0\\) when there are no security in portfolio \\(t\\) \\(n\\) is the number of days in which the portfolio have at least one security \\(n = \\sum_{i = 1}^{255}D_t\\) The cumulative average standardized average abnormal returns is \\[ CASSAR_{S_1, S_2} = \\sum_{i=S_1}^{S_2} ASAAR \\] If the ASAAR are independent over time, then standard deviation for the above estimate is \\(\\sqrt{S_2 - S_1 + 1}\\) then, the test statistics is \\[ t = \\frac{CASAAR_{S_1,S_2}}{\\sqrt{S_2 - S_1 + 1}} \\] Limitations Cannot examine individual stock difference, can only see the difference at the portfolio level. One can construct multiple portfolios (based on the metrics of interest) so that firms in the same portfolio shares that same characteristics. Then, one can compare the intercepts in each portfolio. Low power (Loughran and Ritter 2000), type II error is likely. References "],["aggregation.html", "27.6 Aggregation", " 27.6 Aggregation 27.6.1 Over Time We calculate the cumulative abnormal (CAR) for the event windows \\(H_0\\): Standardized cumulative abnormal return for stock \\(i\\) is 0 (no effect of events on stock performance) \\(H_1\\): SCAR is not 0 (there is an effect of events on stock performance) 27.6.2 Across Firms + Over Time Additional assumptions: Abnormal returns of different socks are uncorrelated (rather strong), but it’s very valid if event windows for different stocks do not overlap. If the windows for different overlap, follow (Bernard 1987) and Schipper and Smith (1983) \\(H_0\\): The mean of the abnormal returns across all firms is 0 (no effect) \\(H_1\\): The mean of the abnormal returns across all firms is different form 0 (there is an effect) Parametric (empirically either one works fine) (assume abnormal returns is normally distributed) : Aggregate the CAR of all stocks (Use this if the true abnormal variance is greater for stocks with higher variance) Aggregate the SCAR of all stocks (Use this if the true abnormal return is constant across all stocks) Non-parametric (no parametric assumptions): Sign test: Assume both the abnormal returns and CAR to be independent across stocks Assume 50% with positive abnormal returns and 50% with negative abnormal return The null will be that there is a positive abnormal return correlated with the event (if you want the alternative to be there is a negative relationship) With skewed distribution (likely in daily stock data), the size test is not trustworthy. Hence, rank test might be better Rank test Null: there is no abnormal return during the event window References "],["heterogeneity-in-the-event-effect.html", "27.7 Heterogeneity in the event effect", " 27.7 Heterogeneity in the event effect \\[ y = X \\theta + \\eta \\] where \\(y\\) = CAR \\(X\\) = Characteristics that lead to heterogeneity in the event effect (i.e., abnormal returns) (e.g., firm or event specific) \\(\\eta\\) = error term Note: In cases with selection bias (firm characteristics and investor anticipation of the event: larger firms might enjoy great positive effect of an event, and investors endogenously anticipate this effect and overvalue the stock), we have to use the White’s \\(t\\)-statistics to have the lower bounds of the true significance of the estimates. This technique should be employed even if the average CAR is not significantly different from 0, especially when the CAR variance is high (Boyd, Chandy, and Cunha Jr 2010) 27.7.1 Common variables in marketing (A. Sorescu, Warren, and Ertekin 2017) Table 4 Firm size is negatively correlated with abnormal return in finance (A. Sorescu, Warren, and Ertekin 2017), but mixed results in marketing. # of event occurrences R&amp;D expenditure Advertising expense Marketing investment (SG&amp;A) Industry concentration (HHI, # of competitors) Financial leverage Market share Market size (total sales volume within the firm’s SIC code) marketing capability Book to market value ROA Free cash flow Sales growth Firm age References "],["expected-return-calculation.html", "27.8 Expected Return Calculation", " 27.8 Expected Return Calculation 27.8.1 Statistical Models based on statistical assumptions about the behavior of returns (e..g, multivariate normality) we only need to assume stable distributions (Owen and Rabinovitch 1983) 27.8.1.1 Constant Mean Return Model The expected normal return is the mean of the real returns \\[ Ra_{it} = R_{it} - \\bar{R}_i \\] Assumption: returns revert to its mean (very questionable) The basic mean returns model generally delivers similar findings to more complex models since the variance of abnormal returns is not decreased considerably (Brown and Warner 1985) 27.8.1.2 Market Model \\[ R_{it} = \\alpha_i + \\beta R_{mt} + \\epsilon_{it} \\] where \\(R_{it}\\) = stock return \\(i\\) in period \\(t\\) \\(R_{mt}\\) = market return \\(\\epsilon_{it}\\) = zero mean (\\(E(e_{it}) = 0\\)) error term with its own variance \\(\\sigma^2\\) Notes: People typically use S&amp;P 500, CRSP value-weighed or equal-weighted index as the market portfolio. When \\(\\beta =0\\), the Market Model is the Constant Mean Return Model better fit of the market-model, the less variance in abnormal return, and the more easy to detect the event’s effect recommend generalized method of moments to be robust against auto-correlation and heteroskedasticity 27.8.1.3 Fama-French Model Please note that there is a difference between between just taking the return versus taking the excess return as the dependent variable. The correct way is to use the excess return for firm and for market (Fama and French 2010, 1917). \\(\\alpha_i\\) “is the average return left unexplained by the benchmark model” (i.e., abnormal return) 27.8.1.3.1 FF3 (Fama and French 1993) \\[ E(R_{it}|X_t) - r_{ft} = \\alpha_i + \\beta_{1i} (E(R_{mt}|X_t )- r_{ft}) \\\\ + b_{2i} SML_t + b_{3i} HML_t \\] where \\(r_{ft}\\) risk-free rate (e.g., 3-month Treasury bill) \\(R_{mt}\\) is the market-rate (e.g., S&amp;P 500) SML: returns on small (size) portfolio minus returns on big portfolio HML: returns on high (B/M) portfolio minus returns on low portfolio. 27.8.1.3.2 FF4 (A. Sorescu, Warren, and Ertekin 2017, 195) suggest the use of Market Model in marketing for short-term window and Fama-French Model for the long-term window (the statistical properties of this model have not been examined the the daily setting). (Carhart 1997) \\[ E(R_{it}|X_t) - r_{ft} = \\alpha_i + \\beta_{1i} (E(R_{mt}|X_t )- r_{ft}) \\\\ + b_{2i} SML_t + b_{3i} HML_t + b_{4i} UMD_t \\] where \\(UMD_t\\) is the momentum factor (difference between high and low prior return stock portfolios) in day \\(t\\). 27.8.2 Economic Model The only difference between CAPM and APT is that APT has multiple factors (including factors beyond the focal company) Economic models put limits on a statistical model that come from assumed behavior that is derived from theory. 27.8.2.1 Capital Asset Pricing Model (CAPM) \\[ E(R_i) = R_f + \\beta_i (E(R_m) - R_f) \\] where \\(E(R_i)\\) = expected firm return \\(R_f\\) = risk free rate \\(E(R_m - R_f)\\) = market risk premium \\(\\beta_i\\) = firm sensitivity 27.8.2.2 Arbitrage Pricing Theory (APT) \\[ R = R_f + \\Lambda f + \\epsilon \\] where \\(\\epsilon \\sim N(0, \\Psi)\\) \\(\\Lambda\\) = factor loadings \\(f \\sim N(\\mu, \\Omega)\\) = general factor model \\(\\mu\\) = expected risk premium vector \\(\\Omega\\) = factor covariance matrix References "],["application-13.html", "27.9 Application", " 27.9 Application Packages: eventstudies erer EventStudy AbnormalReturns Event Study Tools estudy2 PerformanceAnalytics In practice, people usually sort portfolio because they are not sure whether the FF model is specified correctly. Steps: Sort all returns in CRSP into 10 deciles based on size. In each decile, sort returns into 10 decides based on BM Get the average return of the 100 portfolios for each period (i.e., expected returns of stocks given decile - characteristics) For each stock in the event study: Compare the return of the stock to the corresponding portfolio based on size and BM. Notes: Sorting produces outcomes that are often more conservative (e.g., FF abnormal returns can be greater than those that used sorting). If the results change when we do B/M first then size or vice versa, then the results are not robust (this extends to more than just two characteristics - e.g., momentum). Examples: Forestry: (Mei and Sun 2008) M&amp;A on financial performance (forest product) (C. Sun and Liao 2011) litigation on firm values library(erer) # example by the package&#39;s author data(daEsa) hh &lt;- evReturn( y = daEsa, # dataset firm = &quot;wpp&quot;, # firm name y.date = &quot;date&quot;, # date in y index = &quot;sp500&quot;, # index est.win = 250, # estimation window wedith in days digits = 3, event.date = 19990505, # firm event dates event.win = 5 # one-side event window wdith in days (default = 3, where 3 before + 1 event date + 3 days after = 7 days) ) hh; plot(hh) #&gt; #&gt; === Regression coefficients by firm ========= #&gt; N firm event.date alpha.c alpha.e alpha.t alpha.p alpha.s beta.c beta.e #&gt; 1 1 wpp 19990505 -0.135 0.170 -0.795 0.428 0.665 0.123 #&gt; beta.t beta.p beta.s #&gt; 1 5.419 0.000 *** #&gt; #&gt; === Abnormal returns by date ================ #&gt; day Ait.wpp HNt #&gt; 1 -5 4.564 4.564 #&gt; 2 -4 0.534 5.098 #&gt; 3 -3 -1.707 3.391 #&gt; 4 -2 2.582 5.973 #&gt; 5 -1 -0.942 5.031 #&gt; 6 0 -3.247 1.784 #&gt; 7 1 -0.646 1.138 #&gt; 8 2 -2.071 -0.933 #&gt; 9 3 0.368 -0.565 #&gt; 10 4 4.141 3.576 #&gt; 11 5 0.861 4.437 #&gt; #&gt; === Average abnormal returns across firms === #&gt; name estimate error t.value p.value sig #&gt; 1 CiT.wpp 4.437 8.888 0.499 0.618 #&gt; 2 GNT 4.437 8.888 0.499 0.618 Example by Ana Julia Akaishi Padula, Pedro Albuquerque (posted on LAMFO) Example in AbnormalReturns package 27.9.1 Eventus 2 types of output: Using different estimation methods (e.g., market model to calendar-time approach) Does not include event-specific returns. Hence, no regression later to determine variables that can affect abnormal stock returns. Cross-sectional Analysis of Eventus: Event-specific abnormal returns (using monthly or data data) for cross-sectional analysis (under Cross-Sectional Analysis section) Since it has the stock-specific abnormal returns, we can do regression on CARs later. But it only gives market-adjusted model. However, according to (A. Sorescu, Warren, and Ertekin 2017), they advocate for the use of market-adjusted model for the short-term only, and reserve the FF4 for the longer-term event studies using monthly daily. 27.9.1.1 Basic Event Study Input a text file contains a firm identifier (e.g., PERMNO, CUSIP) and the event date Choose market indices: equally weighted and the value weighted index (i.e., weighted by their market capitalization). And check Fama-French and Carhart factors. Estimation options Estimation period: ESTLEN = 100 is the convention so that the estimation is not impacted by outliers. Use “autodate” options: the first trading after the event date is used if the event falls on a weekend or holiday Abnormal returns window: depends on the specific event Choose test: either parametric (including Patell Standardized Residual (PSR)) or non-parametric 27.9.1.2 Cross-sectional Analysis of Eventus Similar to the Basic Event Study, but now you can have event-specific abnormal returns. 27.9.2 Evenstudies This package does not use the Fama-French model, only the market models. This example is by the author of the package library(eventstudies) # firm and date data data(&quot;SplitDates&quot;) head(SplitDates) # stock price data data(&quot;StockPriceReturns&quot;) head(StockPriceReturns) class(StockPriceReturns) es &lt;- eventstudy( firm.returns = StockPriceReturns, event.list = SplitDates, event.window = 5, type = &quot;None&quot;, to.remap = TRUE, remap = &quot;cumsum&quot;, inference = TRUE, inference.strategy = &quot;bootstrap&quot; ) plot(es) 27.9.3 EventStudy You have to pay for the API key. (It’s $10/month). library(EventStudy) Example by the authors of the package Data Prep library(tidyquant) library(tidyverse) library(readr) library(&quot;Quandl&quot;) library(&quot;quantmod&quot;) Quandl.auth(&quot;LDqWhYXzVd2omw4zipN2&quot;) TWTR &lt;- Quandl(&quot;NSE/OIL&quot;,type =&quot;xts&quot;) candleChart(TWTR) addSMA(col=&quot;red&quot;) #Adding a Simple Moving Average addEMA() #Adding an Exponential Moving Average Reference market in Germany is DAX # Index Data # indexName &lt;- c(&quot;DAX&quot;) indexData &lt;- tq_get(&quot;^GDAXI&quot;, from = &quot;2014-05-01&quot;, to = &quot;2015-12-31&quot;) %&gt;% mutate(date = format(date, &quot;%d.%m.%Y&quot;)) %&gt;% mutate(symbol = &quot;DAX&quot;) head(indexData) Create files 01_RequestFile.csv 02_FirmData.csv 03_MarketData.csv Calculating abnormal returns # get &amp; set parameters for abnormal return Event Study # we use a garch model and csv as return # Attention: fitting a GARCH(1, 1) model is compute intensive esaParams &lt;- EventStudy::ARCApplicationInput$new() esaParams$setResultFileType(&quot;csv&quot;) esaParams$setBenchmarkModel(&quot;garch&quot;) dataFiles &lt;- c( &quot;request_file&quot; = file.path(getwd(), &quot;data&quot;, &quot;EventStudy&quot;, &quot;01_requestFile.csv&quot;), &quot;firm_data&quot; = file.path(getwd(), &quot;data&quot;, &quot;EventStudy&quot;, &quot;02_firmDataPrice.csv&quot;), &quot;market_data&quot; = file.path(getwd(), &quot;data&quot;, &quot;EventStudy&quot;, &quot;03_marketDataPrice.csv&quot;) ) # check data files, you can do it also in our R6 class EventStudy::checkFiles(dataFiles) arEventStudy &lt;- estSetup$performEventStudy(estParams = esaParams, dataFiles = dataFiles, downloadFiles = T) library(EventStudy) apiUrl &lt;- &quot;https://api.eventstudytools.com&quot; Sys.setenv(EventStudyapiKey = &quot;&quot;) # The URL is already set by default options(EventStudy.URL = apiUrl) options(EventStudy.KEY = Sys.getenv(&quot;EventStudyapiKey&quot;)) # use EventStudy estAPIKey function estAPIKey(Sys.getenv(&quot;EventStudyapiKey&quot;)) # initialize object estSetup &lt;- EventStudyAPI$new() estSetup$authentication(apiKey = Sys.getenv(&quot;EventStudyapiKey&quot;)) References "],["matching-methods.html", "Chapter 28 Matching Methods", " Chapter 28 Matching Methods Matching is a process that aims to close back doors - potential sources of bias - by constructing comparison groups that are similar according to a set of matching variables. This helps to ensure that any observed differences in outcomes between the treatment and comparison groups can be more confidently attributed to the treatment itself, rather than other factors that may differ between the groups. Matching and DiD can use pre-treatment outcomes to correct for selection bias. From real world data and simulation, (Chabé-Ferret 2015) found that matching generally underestimates the average causal effect and gets closer to the true effect with more number of pre-treatment outcomes. When selection bias is symmetric around the treatment date, DID is still consistent when implemented symmetrically (i.e., the same number of period before and after treatment). In cases where selection bias is asymmetric, the MC simulations show that Symmetric DID still performs better than Matching. Assumption: Observables can identify the selection into the treatment and control groups Identification: The exclusion restriction can be met conditional on the observables Motivation Effect of college quality on earnings They ultimately estimate the treatment effect on the treated of attending a top (high ACT) versus bottom (low ACT) quartile college Example Aaronson, Barrow, and Sander (2007) Do teachers qualifications (causally) affect student test scores? Step 1: \\[ Y_{ijt} = \\delta_0 + Y_{ij(t-1)} \\delta_1 + X_{it} \\delta_2 + Z_{jt} \\delta_3 + \\epsilon_{ijt} \\] There can always be another variable Any observable sorting is imperfect Step 2: \\[ Y_{ijst} = \\alpha_0 + Y_{ij(t-1)}\\alpha_1 + X_{it} \\alpha_2 + Z_{jt} \\alpha_3 + \\gamma_s + u_{isjt} \\] \\(\\delta_3 &gt;0\\) \\(\\delta_3 &gt; \\alpha_3\\) \\(\\gamma_s\\) = school fixed effect Sorting is less within school. Hence, we can introduce the school fixed effect Step 3: Find schools that look like they are putting students in class randomly (or as good as random) + we run step 2 \\[ Y_{isjt} = Y_{isj(t-1)} \\lambda + X_{it} \\alpha_1 +Z_{jt} \\alpha_{21}+ (Z_{jt} \\times D_i)\\alpha_{22}+ \\gamma_5 + u_{isjt} \\] \\(D_{it}\\) is an element of \\(X_{it}\\) \\(Z_{it}\\) = teacher experience \\[ D_{it}= \\begin{cases} 1 &amp; \\text{ if high poverty} \\\\ 0 &amp; \\text{otherwise} \\end{cases} \\] \\(H_0:\\) \\(\\alpha_{22} = 0\\) test for effect heterogeneity whether the effect of teacher experience (\\(Z_{jt}\\)) is different For low poverty is \\(\\alpha_{21}\\) For high poverty effect is \\(\\alpha_{21} + \\alpha_{22}\\) Matching is selection on observables and only works if you have good observables. Sufficient identification assumption under Selection on observable/ back-door criterion (based on Bernard Koch’s presentation) Strong conditional ignorability \\(Y(0),Y(1) \\perp T|X\\) No hidden confounders Overlap \\(\\forall x \\in X, t \\in \\{0, 1\\}: p (T = t | X = x&gt; 0\\) All treatments have non-zero probability of being observed SUTVA/ Consistency Treatment and outcomes of different subjects are independent Relative to OLS Matching makes the common support explicit (and changes default from “ignore” to “enforce”) Relaxes linear function form. Thus, less parametric. It also helps if you have high ratio of controls to treatments. For detail summary (Stuart 2010) Matching is defined as “any method that aims to equate (or”balance”) the distribution of covariates in the treated and control groups.” (Stuart 2010, 1) Equivalently, matching is a selection on observables identifications strategy. If you think your OLS estimate is biased, a matching estimate (almost surely) is too. Unconditionally, consider \\[ E(Y_i^T | T) - E(Y_i^C |C) + E(Y_i^C | T) - E(Y_i^C | T) \\\\ = E(Y_i^T - Y_i^C | T) + [E(Y_i^C | T) - E(Y_i^C |C)] \\\\ = E(Y_i^T - Y_i^C | T) + \\text{selection bias} \\] where \\(E(Y_i^T - Y_i^C | T)\\) is the causal inference that we want to know. Randomization eliminates the selection bias. If we don’t have randomization, then \\(E(Y_i^C | T) \\neq E(Y_i^C |C)\\) Matching tries to do selection on observables \\(E(Y_i^C | X, T) = E(Y_i^C|X, C)\\) Propensity Scores basically do \\(E(Y_i^C| P(X) , T) = E(Y_i^C | P(X), C)\\) Matching standard errors will exceed OLS standard errors The treatment should have larger predictive power than the control because you use treatment to pick control (not control to pick treatment). The average treatment effect (ATE) is \\[ \\frac{1}{N_T} \\sum_{i=1}^{N_T} (Y_i^T - \\frac{1}{N_{C_T}} \\sum_{i=1}^{N_{C_T}} Y_i^C) \\] Since there is no closed-form solution for the standard error of the average treatment effect, we have to use bootstrapping to get standard error. Professor Gary King advocates instead of using the word “matching”, we should use “pruning” (i.e., deleting observations). It is a preprocessing step where it prunes nonmatches to make control variables less important in your analysis. Without Matching Imbalance data leads to model dependence lead to a lot of researcher discretion leads to bias With Matching We have balance data which essentially erase human discretion Table @ref(tab:Gary King - International Methods Colloquium talk 2015) Balance Covariates Complete Randomization Fully Exact Observed On average Exact Unobserved On average On average Fully blocked is superior on imbalance model dependence power efficiency bias research costs robustness Matching is used when Outcomes are not available to select subjects for follow-up Outcomes are available to improve precision of the estimate (i.e., reduce bias) Hence, we can only observe one outcome of a unit (either treated or control), we can think of this problem as missing data as well. Thus, this section is closely related to Imputation (Missing Data) In observational studies, we cannot randomize the treatment effect. Subjects select their own treatments, which could introduce selection bias (i.e., systematic differences between group differences that confound the effects of response variable differences). Matching is used to reduce model dependence diagnose balance in the dataset Assumptions of matching: treatment assignment is independent of potential outcomes given the covariates \\(T \\perp (Y(0),Y(1))|X\\) known as ignorability, or ignorable, no hidden bias, or unconfounded. You typically satisfy this assumption when unobserved covariates correlated with observed covariates. But when unobserved covariates are unrelated to the observed covariates, you can use sensitivity analysis to check your result, or use “design sensitivity” (Heller, Rosenbaum, and Small 2009) positive probability of receiving treatment for all X \\(0 &lt; P(T=1|X)&lt;1 \\forall X\\) Stable Unit Treatment value Assumption (SUTVA) Outcomes of A are not affected by treatment of B. Very hard in cases where there is “spillover” effects (interactions between control and treatment). To combat, we need to reduce interactions. Generalization \\(P_t\\): treated population -&gt; \\(N_t\\): random sample from treated \\(P_c\\): control population -&gt; \\(N_c\\): random sample from control \\(\\mu_i\\) = means ; \\(\\Sigma_i\\) = variance covariance matrix of the \\(p\\) covariates in group i (\\(i = t,c\\)) \\(X_j\\) = \\(p\\) covariates of individual \\(j\\) \\(T_j\\) = treatment assignment \\(Y_j\\) = observed outcome Assume: \\(N_t &lt; N_c\\) Treatment effect is \\(\\tau(x) = R_1(x) - R_0(x)\\) where \\(R_1(x) = E(Y(1)|X)\\) \\(R_0(x) = E(Y(0)|X)\\) Assume: parallel trends hence \\(\\tau(x) = \\tau \\forall x\\) If the parallel trends are not assumed, an average effect can be estimated. Common estimands: Average effect of the treatment on the treated (ATT): effects on treatment group Average treatment effect (ATE): effect on both treatment and control Steps: Define “closeness”: decide distance measure to be used Which variables to include: Ignorability (no unobserved differences between treatment and control) Since cost of including unrelated variables is small, you should include as many as possible (unless sample size/power doesn’t allow you to because of increased variance) Do not include variables that were affected by the treatment. Note: if a matching variable (i.e., heavy drug users) is highly correlated to the outcome variable (i.e., heavy drinkers) , you will be better to exclude it in the matching set. Which distance measures: more below Matching methods Nearest neighbor matching Simple (greedy) matching: performs poorly when there is competition for controls. Optimal matching: considers global distance measure Ratio matching: to combat increase bias and reduced variation when you have k:1 matching, one can use approximations by Rubin and Thomas (1996). With or without replacement: with replacement is typically better, but one needs to account for dependent in the matched sample when doing later analysis (can use frequency weights to combat). Subclassification, Full Matching and Weighting Nearest neighbor matching assign is 0 (control) or 1 (treated), while these methods use weights between 0 and 1. Subclassification: distribution into multiple subclass (e.g., 5-10) Full matching: optimal ly minimize the average of the distances between each treated unit and each control unit within each matched set. Weighting adjustments: weighting technique uses propensity scores to estimate ATE. If the weights are extreme, the variance can be large not due to the underlying probabilities, but due to the estimation procure. To combat this, use (1) weight trimming, or (2) doubly -robust methods when propensity scores are used for weighing or matching. Inverse probability of treatment weighting (IPTW) \\(w_i = \\frac{T_i}{\\hat{e}_i} + \\frac{1 - T_i}{1 - \\hat{e}_i}\\) Odds \\(w_i = T_i + (1-T_i) \\frac{\\hat{e}_i}{1-\\hat{e}_i}\\) Kernel weighting (e.g., in economics) averages over multiple units in the control group. Assessing Common Support common support means overlapping of the propensity score distributions in the treatment and control groups. Propensity score is used to discard control units from the common support. Alternatively, convex hull of the covariates in the multi-dimensional space. Assessing the quality of matched samples (Diagnose) Balance = similarity of the empirical distribution of the full set of covariates in the matched treated and control groups. Equivalently, treatment is unrelated to the covariates \\(\\tilde{p}(X|T=1) = \\tilde{p}(X|T=0)\\) where \\(\\tilde{p}\\) is the empirical distribution. Numerical Diagnostics standardized difference in means of each covariate (most common), also known as”standardized bias”, “standardized difference in means”. standardized difference of means of the propensity score (should be &lt; 0.25) (Rubin 2001) ratio of the variances of the propensity score in the treated and control groups (should be between 0.5 and 2). (Rubin 2001) For each covariate, the ratio fo the variance of the residuals orthogonal to the propensity score in the treated and control groups. Note: can’t use hypothesis tests or p-values because of (1) in-sample property (not population), (2) conflation of changes in balance with changes in statistical power. Graphical Diagnostics QQ plots Empirical Distribution Plot Estimate the treatment effect After k:1 Need to account for weights when use matching with replacement. After Subclassification and Full Matching Weighting the subclass estimates by the number of treated units in each subclass for ATT Weighting by the overall number of individual in each subclass for ATE. Variance estimation: should incorporate uncertainties in both the matching procedure (step 3) and the estimation procedure (step 4) Notes: With missing data, use generalized boosted models, or multiple imputation (Qu and Lipkovich 2009) Violation of ignorable treatment assignment (i.e., unobservables affect treatment and outcome). control by measure pre-treatment measure of the outcome variable find the difference in outcomes between multiple control groups. If there is a significant difference, there is evidence for violation. find the range of correlations between unobservables and both treatment assignment and outcome to nullify the significant effect. Choosing between methods smallest standardized difference of mean across the largest number of covariates minimize the standardized difference of means of a few particularly prognostic covariates fest number of large standardized difference of means (&gt; 0.25) (Diamond and Sekhon 2013) automates the process In practice If ATE, ask if there is enough overlap of the treated and control groups’ propensity score to estimate ATE, if not use ATT instead If ATT, ask if there are controls across the full range of the treated group Choose matching method If ATE, use IPTW or full matching If ATT, and more controls than treated (at least 3 times), k:1 nearest neighbor without replacement If ATT, and few controls , use subclassification, full matching, and weighting by the odds Diagnostic If balance, use regression on matched samples If imbalance on few covariates, treat them with Mahalanobis If imbalance on many covariates, try k:1 matching with replacement Ways to define the distance \\(D_{ij}\\) Exact \\[ D_{ij} = \\begin{cases} 0, \\text{ if } X_i = X_j, \\\\ \\infty, \\text{ if } X_i \\neq X_j \\end{cases} \\] An advanced is Coarsened Exact Matching Mahalanobis \\[ D_{ij} = (X_i - X_j)&#39;\\Sigma^{-1} (X_i - X_j) \\] where \\(\\Sigma\\) = variance covariance matrix of X in the control group if ATT is interested polled treatment and control groups if ATE is interested Propensity score: \\[ D_{ij} = |e_i - e_j| \\] where \\(e_k\\) = the propensity score for individual k An advanced is Prognosis score (Hansen 2008), but you have to know (i.e., specify) the relationship between the covariates and outcome. Linear propensity score \\[ D_{ij} = |logit(e_i) - logit(e_j)| \\] The exact and Mahalanobis are not good in high dimensional or non normally distributed X’s cases. We can combine Mahalanobis matching with propensity score calipers (Rubin and Thomas 2000) Other advanced methods for longitudinal settings marginal structural models (Robins, Hernan, and Brumback 2000) balanced risk set matching (Y. P. Li, Propert, and Rosenbaum 2001) Most matching methods are based on (ex-post) propensity score distance metric covariates Packages cem Coarsened exact matching Matching Multivariate and propensity score matching with balance optimization MatchIt Nonparametric preprocessing for parametric causal inference. Have nearest neighbor, Mahalanobis, caliper, exact, full, optimal, subclassification MatchingFrontier optimize balance and sample size (G. King, Lucas, and Nielsen 2017) optmatchoptimal matching with variable ratio, optimal and full matching PSAgraphics Propensity score graphics rbounds sensitivity analysis with matched data, examine ignorable treatment assignment assumption twang weighting and analysis of non-equivalent groups CBPS covariate balancing propensity score. Can also be used in the longitudinal setting with marginal structural models. PanelMatch based on Imai, Kim, and Wang (2018) Matching Regression Not as sensitive to the functional form of the covariates can estimate the effect of a continuous treatment Easier to asses whether it’s working Easier to explain allows a nice visualization of an evaluation estimate the effect of all the variables (not just the treatment) If you treatment is fairly rare, you may have a lot of control observations that are obviously no comparable can estimate interactions of treatment with covariates Less parametric More parametric Enforces common support (i.e., space where treatment and control have the same characteristics) However, the problem of omitted variables (i.e., those that affect both the outcome and whether observation was treated) - unobserved confounders is still present in matching methods. Difference between matching and regression following Jorn-Ste§en Pischke’s lecture Suppose we want to estimate the effect of treatment on the treated \\[ \\begin{aligned} \\delta_{TOT} &amp;= E[ Y_{1i} - Y_{0i} | D_i = 1 ] \\\\ &amp;= E\\{E[Y_{1i} | X_i, D_i = 1] - E[Y_{0i}|X_i, D_i = 1]|D_i = 1\\} &amp;&amp; \\text{law of itereated expectations} \\end{aligned} \\] Under conditional independence \\[ E[Y_{0i} |X_i , D_i = 0 ] = E[Y_{0i} | X_i, D_i = 1] \\] then \\[ \\begin{aligned} \\delta_{TOT} &amp;= E \\{ E[ Y_{1i} | X_i, D_i = 1] - E[ Y_{0i}|X_i, D_i = 0 ]|D_i = 1\\} \\\\ &amp;= E\\{E[y_i | X_i, D_i = 1] - E[y_i |X_i, D_i = 0 ] | D_i = 1\\} \\\\ &amp;= E[\\delta_X |D_i = 1] \\end{aligned} \\] where \\(\\delta_X\\) is an X-specific difference in means at covariate value \\(X_i\\) When \\(X_i\\) is discrete, the matching estimand is \\[ \\delta_M = \\sum_x \\delta_x P(X_i = x |D_i = 1) \\] where \\(P(X_i = x |D_i = 1)\\) is the probability mass function for \\(X_i\\) given \\(D_i = 1\\) According to Bayes rule, \\[ P(X_i = x | D_i = 1) = \\frac{P(D_i = 1 | X_i = x) \\times P(X_i = x)}{P(D_i = 1)} \\] hence, \\[ \\begin{aligned} \\delta_M &amp;= \\frac{\\sum_x \\delta_x P (D_i = 1 | X_i = x) P (X_i = x)}{\\sum_x P(D_i = 1 |X_i = x)P(X_i = x)} \\\\ &amp;= \\sum_x \\delta_x \\frac{ P (D_i = 1 | X_i = x) P (X_i = x)}{\\sum_x P(D_i = 1 |X_i = x)P(X_i = x)} \\end{aligned} \\] On the other hand, suppose we have regression \\[ y_i = \\sum_x d_{ix} \\beta_x + \\delta_R D_i + \\epsilon_i \\] where \\(d_{ix}\\) = dummy that indicates \\(X_i = x\\) \\(\\beta_x\\) = regression-effect for \\(X_i = x\\) \\(\\delta_R\\) = regression estimand where \\[ \\begin{aligned} \\delta_R &amp;= \\frac{\\sum_x \\delta_x [P(D_i = 1 | X_i = x) (1 - P(D_i = 1 | X_i = x))]P(X_i = x)}{\\sum_x [P(D_i = 1| X_i = x)(1 - P(D_i = 1 | X_i = x))]P(X_i = x)} \\\\ &amp;= \\sum_x \\delta_x \\frac{[P(D_i = 1 | X_i = x) (1 - P(D_i = 1 | X_i = x))]P(X_i = x)}{\\sum_x [P(D_i = 1| X_i = x)(1 - P(D_i = 1 | X_i = x))]P(X_i = x)} \\end{aligned} \\] the difference between the regression and matching estimand is the weights they use to combine the covariate specific treatment effect \\(\\delta_x\\) Type uses weights which depend on interpretation makes sense because Matching \\(P(D_i = 1|X_i = x)\\) the fraction of treated observations in a covariate cell (i.e., or the mean of \\(D_i\\)) This is larger in cells with many treated observations. we want the effect of treatment on the treated Regression \\(P(D_i = 1 |X_i = x)(1 - P(D_i = 1| X_i ))\\) the variance of \\(D_i\\) in the covariate cell This weight is largest in cells where there are half treated and half untreated observations. (this is the reason why we want to treat our sample so it is balanced, before running regular regression model, as mentioned above). these cells will produce the lowest variance estimates of \\(\\delta_x\\). If all the \\(\\delta_x\\) are the same, the most efficient estimand uses the lowest variance cells most heavily. The goal of matching is to produce covariate balance (i.e., distributions of covariates in treatment and control groups are approximately similar as they would be in a successful randomized experiment). References "],["matchit.html", "28.1 MatchIt", " 28.1 MatchIt Procedure typically involves (proposed by Noah Freifer using MatchIt) planning matching checking (balance) estimating the treatment effect library(MatchIt) data(&quot;lalonde&quot;) examine treat on re78 Planning select type of effect to be estimated (e.g., mediation effect, conditional effect, marginal effect) select the target population select variables to match/balance (Austin 2011) (VanderWeele 2019) Check Initial Imbalance # No matching; constructing a pre-match matchit object m.out0 &lt;- matchit( formula(treat ~ age + educ + race + married + nodegree + re74 + re75, env = lalonde), data = data.frame(lalonde), method = NULL, # assess balance before matching distance = &quot;glm&quot; # logistic regression ) # Checking balance prior to matching summary(m.out0) Matching # 1:1 NN PS matching w/o replacement m.out1 &lt;- matchit( treat ~ age + educ, #+ race + married + nodegree + re74 + re75, data = lalonde, method = &quot;nearest&quot;, distance = &quot;glm&quot; ) m.out1 #&gt; A matchit object #&gt; - method: 1:1 nearest neighbor matching without replacement #&gt; - distance: Propensity score #&gt; - estimated with logistic regression #&gt; - number of obs.: 614 (original), 370 (matched) #&gt; - target estimand: ATT #&gt; - covariates: age, educ Check balance Sometimes you have to make trade-off between balance and sample size. # Checking balance after NN matching summary(m.out1, un = FALSE) #&gt; #&gt; Call: #&gt; matchit(formula = treat ~ age + educ, data = lalonde, method = &quot;nearest&quot;, #&gt; distance = &quot;glm&quot;) #&gt; #&gt; Summary of Balance for Matched Data: #&gt; Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean #&gt; distance 0.3080 0.3077 0.0094 0.9963 0.0033 #&gt; age 25.8162 25.8649 -0.0068 1.0300 0.0050 #&gt; educ 10.3459 10.2865 0.0296 0.5886 0.0253 #&gt; eCDF Max Std. Pair Dist. #&gt; distance 0.0432 0.0146 #&gt; age 0.0162 0.0597 #&gt; educ 0.1189 0.8146 #&gt; #&gt; Sample Sizes: #&gt; Control Treated #&gt; All 429 185 #&gt; Matched 185 185 #&gt; Unmatched 244 0 #&gt; Discarded 0 0 # examine visually plot(m.out1, type = &quot;jitter&quot;, interactive = FALSE) plot( m.out1, type = &quot;qq&quot;, interactive = FALSE, which.xs = c(&quot;age&quot;)#, &quot;married&quot;, &quot;re75&quot;) ) Try Full Match (i.e., every treated matches with one control, and every control with one treated). # Full matching on a probit PS m.out2 &lt;- matchit(treat ~ age + educ, # + race + married + nodegree + re74 + re75, data = lalonde, method = &quot;full&quot;, distance = &quot;glm&quot;, link = &quot;probit&quot;) m.out2 #&gt; A matchit object #&gt; - method: Optimal full matching #&gt; - distance: Propensity score #&gt; - estimated with probit regression #&gt; - number of obs.: 614 (original), 614 (matched) #&gt; - target estimand: ATT #&gt; - covariates: age, educ Checking balance again # Checking balance after full matching summary(m.out2, un = FALSE) #&gt; #&gt; Call: #&gt; matchit(formula = treat ~ age + educ, data = lalonde, method = &quot;full&quot;, #&gt; distance = &quot;glm&quot;, link = &quot;probit&quot;) #&gt; #&gt; Summary of Balance for Matched Data: #&gt; Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean #&gt; distance 0.3082 0.3081 0.0023 0.9815 0.0028 #&gt; age 25.8162 25.8035 0.0018 0.9825 0.0062 #&gt; educ 10.3459 10.2315 0.0569 0.4390 0.0481 #&gt; eCDF Max Std. Pair Dist. #&gt; distance 0.0270 0.0382 #&gt; age 0.0249 0.1110 #&gt; educ 0.1300 0.9805 #&gt; #&gt; Sample Sizes: #&gt; Control Treated #&gt; All 429. 185 #&gt; Matched (ESS) 145.23 185 #&gt; Matched 429. 185 #&gt; Unmatched 0. 0 #&gt; Discarded 0. 0 plot(summary(m.out2)) Exact Matching # Full matching on a probit PS m.out3 &lt;- matchit( treat ~ age + educ, # + race + married + nodegree + re74 + re75, data = lalonde, method = &quot;exact&quot; ) m.out3 #&gt; A matchit object #&gt; - method: Exact matching #&gt; - number of obs.: 614 (original), 332 (matched) #&gt; - target estimand: ATT #&gt; - covariates: age, educ Subclassfication m.out4 &lt;- matchit( treat ~ age + educ, # + race + married + nodegree + re74 + re75, data = lalonde, method = &quot;subclass&quot; ) m.out4 #&gt; A matchit object #&gt; - method: Subclassification (6 subclasses) #&gt; - distance: Propensity score #&gt; - estimated with logistic regression #&gt; - number of obs.: 614 (original), 614 (matched) #&gt; - target estimand: ATT #&gt; - covariates: age, educ # Or you can use in conjunction with &quot;nearest&quot; m.out4 &lt;- matchit( treat ~ age + educ, # + race + married + nodegree + re74 + re75, data = lalonde, method = &quot;nearest&quot;, option = &quot;subclass&quot; ) m.out4 #&gt; A matchit object #&gt; - method: 1:1 nearest neighbor matching without replacement #&gt; - distance: Propensity score #&gt; - estimated with logistic regression #&gt; - number of obs.: 614 (original), 370 (matched) #&gt; - target estimand: ATT #&gt; - covariates: age, educ Optimal Matching m.out5 &lt;- matchit( treat ~ age + educ, # + race + married + nodegree + re74 + re75, data = lalonde, method = &quot;optimal&quot;, ratio = 2 ) m.out5 #&gt; A matchit object #&gt; - method: 2:1 optimal pair matching #&gt; - distance: Propensity score #&gt; - estimated with logistic regression #&gt; - number of obs.: 614 (original), 555 (matched) #&gt; - target estimand: ATT #&gt; - covariates: age, educ Genetic Matching m.out6 &lt;- matchit( treat ~ age + educ, # + race + married + nodegree + re74 + re75, data = lalonde, method = &quot;genetic&quot; ) m.out6 #&gt; A matchit object #&gt; - method: 1:1 genetic matching without replacement #&gt; - distance: Propensity score #&gt; - estimated with logistic regression #&gt; - number of obs.: 614 (original), 370 (matched) #&gt; - target estimand: ATT #&gt; - covariates: age, educ Estimating the Treatment Effect # get matched data m.data1 &lt;- match.data(m.out1) head(m.data1) #&gt; treat age educ race married nodegree re74 re75 re78 distance #&gt; NSW1 1 37 11 black 1 1 0 0 9930.0460 0.2536942 #&gt; NSW2 1 22 9 hispan 0 1 0 0 3595.8940 0.3245468 #&gt; NSW3 1 30 12 black 0 0 0 0 24909.4500 0.2881139 #&gt; NSW4 1 27 11 black 0 1 0 0 7506.1460 0.3016672 #&gt; NSW5 1 33 8 black 0 1 0 0 289.7899 0.2683025 #&gt; NSW6 1 22 9 black 0 1 0 0 4056.4940 0.3245468 #&gt; weights subclass #&gt; NSW1 1 1 #&gt; NSW2 1 98 #&gt; NSW3 1 109 #&gt; NSW4 1 120 #&gt; NSW5 1 131 #&gt; NSW6 1 142 library(&quot;lmtest&quot;) #coeftest library(&quot;sandwich&quot;) #vcovCL # imbalance matched dataset fit1 &lt;- lm(re78 ~ treat + age + educ , #+ race + married + nodegree + re74 + re75, data = m.data1, weights = weights) coeftest(fit1, vcov. = vcovCL, cluster = ~subclass) #&gt; #&gt; t test of coefficients: #&gt; #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -174.902 2445.013 -0.0715 0.943012 #&gt; treat -1139.085 780.399 -1.4596 0.145253 #&gt; age 153.133 55.317 2.7683 0.005922 ** #&gt; educ 358.577 163.860 2.1883 0.029278 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 treat coefficient = estimated ATT # balance matched dataset m.data2 &lt;- match.data(m.out2) fit2 &lt;- lm(re78 ~ treat + age + educ , #+ race + married + nodegree + re74 + re75, data = m.data2, weights = weights) coeftest(fit2, vcov. = vcovCL, cluster = ~subclass) #&gt; #&gt; t test of coefficients: #&gt; #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 2151.952 3141.152 0.6851 0.49355 #&gt; treat -725.184 703.297 -1.0311 0.30289 #&gt; age 120.260 53.933 2.2298 0.02612 * #&gt; educ 175.693 241.694 0.7269 0.46755 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 When reporting, remember to mention the matching specification (method, and additional options) the distance measure (e.g., propensity score) other methods, and rationale for the final chosen method. balance statistics of the matched dataset. number of matched, unmatched, discarded estimation method for treatment effect. References "],["designmatch.html", "28.2 designmatch", " 28.2 designmatch This package includes distmatch optimal distance matching bmatch optimal bipartile matching cardmatch optimal cardinality matching profmatch optimal profile matching nmatch optimal nonbipartile matching library(designmatch) "],["matchingfrontier.html", "28.3 MatchingFrontier", " 28.3 MatchingFrontier As mentioned in MatchIt, you have to make trade-off (also known as bias-variance trade-off) between balance and sample size. An automated procedure to optimize this trade-off is implemented in MatchingFrontier (G. King, Lucas, and Nielsen 2017), which solves this joint optimization problem. I follow MatchingFrontier guide # library(devtools) # install_github(&#39;ChristopherLucas/MatchingFrontier&#39;) library(MatchingFrontier) data(&quot;lalonde&quot;) # choose var to match on match.on &lt;- colnames(lalonde)[!(colnames(lalonde) %in% c(&#39;re78&#39;, &#39;treat&#39;))] match.on # Mahanlanobis frontier (default) mahal.frontier &lt;- makeFrontier( dataset = lalonde, treatment = &quot;treat&quot;, match.on = match.on ) mahal.frontier # L1 frontier L1.frontier &lt;- makeFrontier( dataset = lalonde, treatment = &#39;treat&#39;, match.on = match.on, QOI = &#39;SATT&#39;, metric = &#39;L1&#39;, ratio = &#39;fixed&#39; ) L1.frontier # estimate effects along the frontier # Set base form my.form &lt;- as.formula(re78 ~ treat + age + black + education + hispanic + married + nodegree + re74 + re75) # Estimate effects for the mahalanobis frontier mahal.estimates &lt;- estimateEffects( mahal.frontier, &#39;re78 ~ treat&#39;, mod.dependence.formula = my.form, continuous.vars = c(&#39;age&#39;, &#39;education&#39;, &#39;re74&#39;, &#39;re75&#39;), prop.estimated = .1, means.as.cutpoints = TRUE ) # Estimate effects for the L1 frontier L1.estimates &lt;- estimateEffects( L1.frontier, &#39;re78 ~ treat&#39;, mod.dependence.formula = my.form, continuous.vars = c(&#39;age&#39;, &#39;education&#39;, &#39;re74&#39;, &#39;re75&#39;), prop.estimated = .1, means.as.cutpoints = TRUE ) # Plot covariates means # plotPrunedMeans() # Plot estimates (deprecated) # plotEstimates( # L1.estimates, # ylim = c(-10000, 3000), # cex.lab = 1.4, # cex.axis = 1.4, # panel.first = grid(NULL, NULL, lwd = 2,) # ) # Plot estimates plotMeans(L1.frontier) # parallel plot parallelPlot( L1.frontier, N = 400, variables = c(&#39;age&#39;, &#39;re74&#39;, &#39;re75&#39;, &#39;black&#39;), treated.col = &#39;blue&#39;, control.col = &#39;gray&#39; ) # export matched dataset matched.data &lt;- generateDataset(L1.frontier, N = 400) # take 400 units References "],["propensity-scores.html", "28.4 Propensity Scores", " 28.4 Propensity Scores Even though I mention the propensity scores matching method here, it is no longer recommended to use such method in research and publication (G. King and Nielsen 2019) because it increases imbalance inefficiency model dependence: small changes in the model specification lead to big changes in model results bias PSM tries to accomplish complete randomization while other methods try to achieve fully blocked. Hence, you probably better off use any other methods. Propensity is “the probability of receiving the treatment given the observed covariates.” (Rosenbaum and Rubin 1985) Equivalently, it can to understood as the probability of being treated. \\[ e_i (X_i) = P(T_i = 1 | X_i) \\] Estimation using logistic regression Non parametric methods: boosted CART generalized boosted models (gbm) Steps by Gary King’s slides reduce k elements of X to scalar \\(\\pi_i \\equiv P(T_i = 1|X) = \\frac{1}{1+e^{X_i \\beta}}\\) Distance (\\(X_c, X_t\\)) = \\(|\\pi_c - \\pi_t|\\) match each treated unit to the nearest control unit control units: not reused; pruned if unused prune matches if distances &gt; caliper In the best case scenario, you randomly prune, which increases imbalance Other methods dominate because they try to match exactly hence \\(X_c = X_t \\to \\pi_c = \\pi_t\\) (exact match leads to equal propensity scores) but \\(\\pi_c = \\pi_t \\nrightarrow X_c = X_t\\) (equal propensity scores do not necessarily lead to exact match) Notes: Do not include/control for irrelevant covariates because it leads your PSM to be more random, hence more imbalance Do not include for (Bhattacharya and Vogt 2007) instrumental variable in the predictor set of a propensity score matching estimator. More generally, using variables that do not control for potential confounders, even if they are predictive of the treatment, can result in biased estimates What you left with after pruning is more important than what you start with then throw out. Diagnostics: balance of the covariates no need to concern about collinearity can’t use c-stat or stepwise because those model fit stat do not apply References "],["mahalanobis-distance.html", "28.5 Mahalanobis Distance", " 28.5 Mahalanobis Distance Approximates fully blocked experiment Distance \\((X_c,X_t)\\) = \\(\\sqrt{(X_c - X_t)&#39;S^{-1}(X_c - X_t)}\\) where \\(S^{-1}\\) standardize the distance In application we use Euclidean distance. Prune unused control units, and prune matches if distance &gt; caliper "],["coarsened-exact-matching.html", "28.6 Coarsened Exact Matching", " 28.6 Coarsened Exact Matching Steps from Gray King’s slides International Methods Colloquium talk 2015 Temporarily coarsen X Apply exact matching to the coarsened X, C(X) sort observation into strata, each with unique values of C(X) prune stratum with 0 treated or 0 control units Pass on original (uncoarsened) units except those pruned Properties: Monotonic imbalance bounding (MIB) matching method maximum imbalance between the treated and control chosen ex ante meets congruence principle robust to measurement error can be implemented with multiple imputation works well for multi-category treatments Assumptions: Ignorability (i.e., no omitted variable bias) More detail in (Iacus, King, and Porro 2012) Example by package’s authors library(cem) data(LeLonde) Le &lt;- data.frame(na.omit(LeLonde)) # remove missing data # treated and control groups tr &lt;- which(Le$treated==1) ct &lt;- which(Le$treated==0) ntr &lt;- length(tr) nct &lt;- length(ct) # unadjusted, biased difference in means mean(Le$re78[tr]) - mean(Le$re78[ct]) #&gt; [1] 759.0479 # pre-treatment covariates vars &lt;- c( &quot;age&quot;, &quot;education&quot;, &quot;black&quot;, &quot;married&quot;, &quot;nodegree&quot;, &quot;re74&quot;, &quot;re75&quot;, &quot;hispanic&quot;, &quot;u74&quot;, &quot;u75&quot;, &quot;q1&quot; ) # overall imbalance statistics imbalance(group=Le$treated, data=Le[vars]) # L1 = 0.902 #&gt; #&gt; Multivariate Imbalance Measure: L1=0.902 #&gt; Percentage of local common support: LCS=5.8% #&gt; #&gt; Univariate Imbalance Measures: #&gt; #&gt; statistic type L1 min 25% 50% 75% #&gt; age -0.252373042 (diff) 5.102041e-03 0 0 0.0000 -1.0000 #&gt; education 0.153634710 (diff) 8.463851e-02 1 0 1.0000 1.0000 #&gt; black -0.010322734 (diff) 1.032273e-02 0 0 0.0000 0.0000 #&gt; married -0.009551495 (diff) 9.551495e-03 0 0 0.0000 0.0000 #&gt; nodegree -0.081217371 (diff) 8.121737e-02 0 -1 0.0000 0.0000 #&gt; re74 -18.160446880 (diff) 5.551115e-17 0 0 284.0715 806.3452 #&gt; re75 101.501761679 (diff) 5.551115e-17 0 0 485.6310 1238.4114 #&gt; hispanic -0.010144756 (diff) 1.014476e-02 0 0 0.0000 0.0000 #&gt; u74 -0.045582186 (diff) 4.558219e-02 0 0 0.0000 0.0000 #&gt; u75 -0.065555292 (diff) 6.555529e-02 0 0 0.0000 0.0000 #&gt; q1 7.494021189 (Chi2) 1.067078e-01 NA NA NA NA #&gt; max #&gt; age -6.0000 #&gt; education 1.0000 #&gt; black 0.0000 #&gt; married 0.0000 #&gt; nodegree 0.0000 #&gt; re74 -2139.0195 #&gt; re75 490.3945 #&gt; hispanic 0.0000 #&gt; u74 0.0000 #&gt; u75 0.0000 #&gt; q1 NA # drop other variables that are not pre-treatmentt matching variables todrop &lt;- c(&quot;treated&quot;, &quot;re78&quot;) imbalance(group=Le$treated, data=Le, drop=todrop) #&gt; #&gt; Multivariate Imbalance Measure: L1=0.902 #&gt; Percentage of local common support: LCS=5.8% #&gt; #&gt; Univariate Imbalance Measures: #&gt; #&gt; statistic type L1 min 25% 50% 75% #&gt; age -0.252373042 (diff) 5.102041e-03 0 0 0.0000 -1.0000 #&gt; education 0.153634710 (diff) 8.463851e-02 1 0 1.0000 1.0000 #&gt; black -0.010322734 (diff) 1.032273e-02 0 0 0.0000 0.0000 #&gt; married -0.009551495 (diff) 9.551495e-03 0 0 0.0000 0.0000 #&gt; nodegree -0.081217371 (diff) 8.121737e-02 0 -1 0.0000 0.0000 #&gt; re74 -18.160446880 (diff) 5.551115e-17 0 0 284.0715 806.3452 #&gt; re75 101.501761679 (diff) 5.551115e-17 0 0 485.6310 1238.4114 #&gt; hispanic -0.010144756 (diff) 1.014476e-02 0 0 0.0000 0.0000 #&gt; u74 -0.045582186 (diff) 4.558219e-02 0 0 0.0000 0.0000 #&gt; u75 -0.065555292 (diff) 6.555529e-02 0 0 0.0000 0.0000 #&gt; q1 7.494021189 (Chi2) 1.067078e-01 NA NA NA NA #&gt; max #&gt; age -6.0000 #&gt; education 1.0000 #&gt; black 0.0000 #&gt; married 0.0000 #&gt; nodegree 0.0000 #&gt; re74 -2139.0195 #&gt; re75 490.3945 #&gt; hispanic 0.0000 #&gt; u74 0.0000 #&gt; u75 0.0000 #&gt; q1 NA automated coarsening mat &lt;- cem(treatment = &quot;treated&quot;, data = Le, drop = &quot;re78&quot;,keep.all=TRUE) #&gt; #&gt; Using &#39;treated&#39;=&#39;1&#39; as baseline group mat #&gt; G0 G1 #&gt; All 392 258 #&gt; Matched 95 84 #&gt; Unmatched 297 174 # mat$w coarsening by explicit user choice # categorial variables levels(Le$q1) # grouping option #&gt; [1] &quot;agree&quot; &quot;disagree&quot; &quot;neutral&quot; #&gt; [4] &quot;no opinion&quot; &quot;strongly agree&quot; &quot;strongly disagree&quot; q1.grp &lt;- list(c(&quot;strongly agree&quot;, &quot;agree&quot;), c(&quot;neutral&quot;, &quot;no opinion&quot;), c(&quot;strongly disagree&quot;,&quot;disagree&quot;)) # if you want ordered categories # continuous variables table(Le$education) #&gt; #&gt; 3 4 5 6 7 8 9 10 11 12 13 14 15 #&gt; 1 5 4 6 12 55 106 146 173 113 19 9 1 educut &lt;- c(0, 6.5, 8.5, 12.5, 17) # use cutpoints mat1 &lt;- cem(treatment = &quot;treated&quot;, data = Le, drop = &quot;re78&quot;, cutpoints = list(education=educut), grouping=list(q1=q1.grp)) #&gt; #&gt; Using &#39;treated&#39;=&#39;1&#39; as baseline group mat1 #&gt; G0 G1 #&gt; All 392 258 #&gt; Matched 158 115 #&gt; Unmatched 234 143 Can also use progressive coarsening method to control the number of matches. cem can also handle some missingness. References "],["genetic-matching.html", "28.7 Genetic Matching", " 28.7 Genetic Matching GM uses iterative checking process of propensity scores, which combines propensity scores and Mahalanobis distance. GM is arguably “superior” method than nearest neighbor or full matching in imbalanced data Use a genetic search algorithm to find weights for each covariate such that we have optimal balance. Implementation could use with replacement balance can be based on paired t-tests (dichotomous variables) Kolmogorov-Smirnov (multinomial and continuous) Packages Matching library(Matching) data(lalonde) attach(lalonde) #The covariates we want to match on X = cbind(age, educ, black, hisp, married, nodegr, u74, u75, re75, re74) #The covariates we want to obtain balance on BalanceMat &lt;- cbind(age, educ, black, hisp, married, nodegr, u74, u75, re75, re74, I(re74*re75)) # #Let&#39;s call GenMatch() to find the optimal weight to give each #covariate in &#39;X&#39; so as we have achieved balance on the covariates in #&#39;BalanceMat&#39;. This is only an example so we want GenMatch to be quick #so the population size has been set to be only 16 via the &#39;pop.size&#39; #option. This is *WAY* too small for actual problems. #For details see http://sekhon.berkeley.edu/papers/MatchingJSS.pdf. # genout &lt;- GenMatch(Tr=treat, X=X, BalanceMatrix=BalanceMat, estimand=&quot;ATE&quot;, M=1, pop.size=16, max.generations=10, wait.generations=1) #The outcome variable Y=re78/1000 # # Now that GenMatch() has found the optimal weights, let&#39;s estimate # our causal effect of interest using those weights # mout &lt;- Match(Y=Y, Tr=treat, X=X, estimand=&quot;ATE&quot;, Weight.matrix=genout) summary(mout) # #Let&#39;s determine if balance has actually been obtained on the variables of interest # mb &lt;- MatchBalance(treat~age +educ+black+ hisp+ married+ nodegr+ u74+ u75+ re75+ re74+ I(re74*re75), match.out=mout, nboots=500) "],["matching-for-time-series-cross-section-data.html", "28.8 Matching for time series-cross-section data", " 28.8 Matching for time series-cross-section data Examples: (Scheve and Stasavage 2012) and (Acemoglu et al. 2019) Materials from Imai et al.’s slides Identification strategy: Within-unit over-time variation within-time across-units variation References "],["matching-for-multiple-treatments.html", "28.9 Matching for multiple treatments", " 28.9 Matching for multiple treatments In cases where you have multiple treatment groups, and you want to do matching, it’s important to have the same baseline (control) group. For more details, see (McCaffrey et al. 2013) (Lopez and Gutman 2017) (Zhao et al. 2021): also for continuous treatment If you insist on using the MatchIt package, then see this answer References "],["matching-for-multi-level-treatments.html", "28.10 Matching for multi-level treatments", " 28.10 Matching for multi-level treatments See (Yang et al. 2016) Package in R shuyang1987/multilevelMatching on Github References "],["matching-for-repeated-treatments.html", "28.11 Matching for repeated treatments", " 28.11 Matching for repeated treatments https://cran.r-project.org/web/packages/twang/vignettes/iptw.pdf package in R twang "],["interrupted-time-series.html", "Chapter 29 Interrupted Time Series", " Chapter 29 Interrupted Time Series Regression Discontinuity in Time Control for Seasonable trends Concurrent events Pros (Penfold and Zhang 2013) control for long-term trends Cons Min of 8 data points before and 8 after an intervention Multiple events hard to distinguish Notes: For subgroup analysis (heterogeneity in effect size), see (Harper and Bruckner 2017) To interpret with control variables, see (Bottomley, Scott, and Isham 2019) Interrupted time series should be used when longitudinal data (outcome over time - observations before and after the intervention) full population was affected at one specific point in time (or can be stacked based on intervention) In each ITS framework, there can be 4 possible scenarios of outcome after an intervention No effects Immediate effect Sustained (long-term) effect (smooth) Both immediate and sustained effect \\[ Y = \\beta_0 + \\beta_1 T + \\beta_2 D + \\beta_3 P + \\epsilon \\] where \\(Y\\) is the outcome variable \\(\\beta_0\\) is the baseline level of the outcome \\(T\\) is the time variable (e.g., days, weeks, etc.) passed from the start of the observation period \\(\\beta_1\\) is the slope of the line before the intervention \\(D\\) is the treatment variable where \\(1\\) is after the intervention and \\(0\\) is before the intervention. \\(\\beta_2\\) is the immediate effect after the intervention \\(P\\) is the time variable indicating time passed since the intervention (before the intervention, the value is set to 0) (to examine the sustained effect). \\(\\beta_3\\) is the sustained effect = difference between the slope of the line prior to the intervention and the slope of the line subsequent to the intervention Example Create a fictitious dataset where we know the true data generating process \\[ Outcome = 10 * time + 20 * treatment + 25 * timesincetreatment + noise \\] # number of days n = 365 # intervention at day interven = 200 # time index from 1 to 365 time = c(1:n) # treatment variable: before internvation = day 1 to 200, after intervention = day 201 to 365 treatment = c(rep(0, interven), rep(1, n - interven)) # time since treatment timesincetreat = c(rep(0, interven), c(1:(n - interven))) # outcome outcome = 10 + 15 * time + 20 * treatment + 25 * timesincetreat + rnorm(n, mean = 0, sd = 1) df = data.frame(outcome, time, treatment, timesincetreat) head(df, 10) #&gt; outcome time treatment timesincetreat #&gt; 1 25.15403 1 0 0 #&gt; 2 39.54239 2 0 0 #&gt; 3 55.02046 3 0 0 #&gt; 4 70.21851 4 0 0 #&gt; 5 84.69178 5 0 0 #&gt; 6 98.63307 6 0 0 #&gt; 7 114.52445 7 0 0 #&gt; 8 129.47930 8 0 0 #&gt; 9 143.88703 9 0 0 #&gt; 10 160.59054 10 0 0 Visualize plot(df$time, df$outcome) # intervention date abline(v = interven, col = &quot;blue&quot;) # regression line ts &lt;- lm(outcome ~ time + treatment + timesincetreat, data = df) lines(df$time, ts$fitted.values, col = &quot;red&quot;) summary(ts) #&gt; #&gt; Call: #&gt; lm(formula = outcome ~ time + treatment + timesincetreat, data = df) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -2.83371 -0.58288 -0.02394 0.58471 2.58488 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 9.842786 0.140878 69.87 &lt;2e-16 *** #&gt; time 15.001545 0.001215 12342.02 &lt;2e-16 *** #&gt; treatment 20.034928 0.208917 95.90 &lt;2e-16 *** #&gt; timesincetreat 24.997934 0.002027 12332.76 &lt;2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 0.9924 on 361 degrees of freedom #&gt; Multiple R-squared: 1, Adjusted R-squared: 1 #&gt; F-statistic: 9.681e+08 on 3 and 361 DF, p-value: &lt; 2.2e-16 Interpretation Time coefficient shows before-intervention outcome trend. Positive and significant, indicating a rising trend. Every day adds 15 points. The treatment coefficient shows the immediate increase in outcome. Immediate effect is positive and significant, increasing outcome by 20 points. The time since treatment coefficient reflects a change in trend subsequent to the intervention. The sustained effect is positive and statistically significant, showing that the outcome increases by 25 points per day after the intervention. See Lee Rodgers, Beasley, and Schuelke (2014) for suggestions Plot of counterfactual # treatment prediction pred &lt;- predict(ts, df) # counterfactual dataset new_df &lt;- as.data.frame(cbind( time = time, # treatment = 0 means counterfactual treatment = rep(0, n), # time since treatment = 0 means counterfactual timesincetreat = rep(0) )) # counterfactual predictions pred_cf &lt;- predict(ts, new_df) # plot plot( outcome, col = gray(0.2, 0.2), pch = 19, xlim = c(1,365), ylim = c(0, 10000), xlab = &quot;xlab&quot;, ylab = &quot;ylab&quot; ) # regression line before treatment lines(rep(1:interven), pred[1:interven], col = &quot;blue&quot;, lwd = 3) # regression line after treatment lines(rep((interven+1):n), pred[(interven + 1):n], col = &quot;blue&quot;, lwd = 3) # regression line after treatment (counterfactual) lines(rep(interven:n), pred_cf[(interven): n], col = &quot;yellow&quot;, lwd = 3, lty = 5) abline(v = interven, col = &quot;red&quot;, lty = 2) Possible threats to the validity of interrupted time series analysis (Baicker and Svoronos 2019) Delayed effects (Rodgers, John, and Coleman 2005) (may have to make assess some time after the intervention - do not assess the immediate dates). Other confounding events Linden (2017) Intervention is introduced but later withdrawn (Linden 2015) Autocorrelation (for every time series data): might cause underestimation in the standard errors (i.e., overestimating the statistical significance of the treatment effect) Regression to the mean: after a the short-term shock to the outcome, individuals can revert back to their initial states. Selection bias: only certain individuals are affected by the treatment (could use a Multiple Groups). References "],["autocorrelation.html", "29.1 Autocorrelation", " 29.1 Autocorrelation Assess autocorrelation from residual # simple regression on time simple_ts &lt;- lm(outcome ~ time, data = df) plot(resid(simple_ts)) # alternatively acf(resid(simple_ts)) This is not the best example since I created this dataset. But when residuals do have autocorrelation, you should not see any patterns (i.e., points should be randomly distributed on the plot) To formally test for autocorrelation, we can use the Durbin-Watson test lmtest::dwtest(df$outcome ~ df$time) #&gt; #&gt; Durbin-Watson test #&gt; #&gt; data: df$outcome ~ df$time #&gt; DW = 0.00037521, p-value &lt; 2.2e-16 #&gt; alternative hypothesis: true autocorrelation is greater than 0 From the p-value, we know that there is autocorrelation in the time series A solution to this problem is to use more advanced time series analysis (e.g., ARIMA - coming up in the book) to adjust for seasonality and other dependency. forecast::auto.arima(df$outcome, xreg = as.matrix(df[, -1])) #&gt; Series: df$outcome #&gt; Regression with ARIMA(0,0,0) errors #&gt; #&gt; Coefficients: #&gt; intercept time treatment timesincetreat #&gt; 9.8428 15.0015 20.0349 24.9979 #&gt; s.e. 0.1401 0.0012 0.2078 0.0020 #&gt; #&gt; sigma^2 = 0.9849: log likelihood = -513.13 #&gt; AIC=1036.25 AICc=1036.42 BIC=1055.75 "],["multiple-groups.html", "29.2 Multiple Groups", " 29.2 Multiple Groups When you suspect that you might have confounding events or selection bias, you can add a control group that did not experience the treatment (very much similar to Difference-in-differences) The model then becomes \\[ Y = \\beta_0 + \\beta_1 time+ \\beta_2 treatment +\\beta_3 * timesincetreat + \\\\ \\beta_4 group + \\beta_5 group * time + \\beta_6 group * treatment + \\beta_7 group * timesincetreat \\] where Group = 1 when the observation is under treatment and 0 under control \\(\\beta_4\\) = baseline difference between the treatment and control group \\(\\beta_5\\) = slope difference between the treatment and control group before treatment \\(\\beta_6\\) = baseline difference between the treatment and control group associated with the treatment. \\(\\beta_7\\) = difference between the sustained effect of the treatment and control group after the treatment. "],["endogeneity.html", "Chapter 30 Endogeneity", " Chapter 30 Endogeneity Refresher A general model framework \\[ \\mathbf{Y = X \\beta + \\epsilon} \\] where \\(\\mathbf{Y} = n \\times 1\\) \\(\\mathbf{X} = n \\times k\\) \\(\\beta = k \\times 1\\) \\(\\epsilon = n \\times 1\\) Then, OLS estimates of coefficients are \\[ \\begin{aligned} \\hat{\\beta}_{OLS} &amp;= (\\mathbf{X}&#39;\\mathbf{X})^{-1}(\\mathbf{X}&#39;\\mathbf{Y}) \\\\ &amp;= (\\mathbf{X}&#39;\\mathbf{X})^{-1}(\\mathbf{X}&#39;(\\mathbf{X \\beta + \\epsilon})) \\\\ &amp;= (\\mathbf{X}&#39;\\mathbf{X})^{-1} (\\mathbf{X}&#39;\\mathbf{X}) \\beta + (\\mathbf{X}&#39;\\mathbf{X})^{-1} (\\mathbf{X}&#39;\\mathbf{\\epsilon}) \\\\ \\hat{\\beta}_{OLS} &amp; \\to \\beta + (\\mathbf{X}&#39;\\mathbf{X})^{-1} (\\mathbf{X}&#39;\\mathbf{\\epsilon}) \\end{aligned} \\] To have unbiased estimates, we have to get rid of the second part \\((\\mathbf{X}&#39;\\mathbf{X})^{-1} (\\mathbf{X}&#39;\\mathbf{\\epsilon})\\) There are 2 conditions to achieve unbiased estimates: \\(E(\\epsilon |X) = 0\\) (This is easy, putting an intercept can solve this issue) \\(Cov(\\mathbf{X}, \\epsilon) = 0\\) (This is the hard part) We only care about omitted variable Usually, the problem will stem Omitted Variables Bias, but we only care about omitted variable bias when Omitted variables correlate with the variables we care about (\\(X\\)). If OMV does not correlate with \\(X\\), we don’t care, and random assignment makes this correlation goes to 0) Omitted variables correlates with outcome/ dependent variable There are more types of endogeneity listed below. Types of endogeneity Endogenous Treatment Omitted Variables Bias Motivation/choiceheck Ability/talent Self-selection Feedback Effect (Simultaneity): also known as bidirectionality Reverse Causality: Substle difference from Simultaneity: Technically, two variables affect each other sequentially, but in a big enough time frame, (e.g., monthly, or yearly), our coefficient will be biased just like simultaneity. Measurement Error Endogenous Sample Selection To deal with this problem, we have a toolbox (that has been mentioned in previous chapter 18 ) Tools in a hierarchical order Experimental Design: Randomized Control Trials (Gold standard): Tier 1 Quasi-experimental Regression Discontinuity Tier 1A Difference-In-Differences Tier 2 Synthetic Control Tier 2A Event Studies Tier 2B Fixed Effects Estimator 12.4.2.2: Tier 3 Endogenous Treatment: mostly Instrumental Variable: Tier 3A Matching Methods Tier 4 Interrupted Time Series Tier 4A Endogenous Sample Selection 30.2: mostly Heckman’s correction Using control variables in regression is a “selection on observables” identification strategy. In other words, if you believe you have an omitted variable, and you can measure it, including it in the regression model solves your problem. These uninterested variables are called control variables in your model. However, this is rarely the case (because the problem is we don’t have their measurements). Hence, we need more elaborate methods: Endogenous Treatment Endogenous Sample Selection Before we get to methods that deal with bias arises from omitted variables, we consider cases where we do have measurements of a variable, but there is measurement error (bias). "],["endogenous-treatment.html", "30.1 Endogenous Treatment", " 30.1 Endogenous Treatment 30.1.1 Measurement Error Data error can stem from Coding errors Reporting errors Two forms of measurement error: Random (stochastic) (indeterminate error) (Classical Measurement Errors): noise or measurement errors do not show up in a consistent or predictable way. Systematic (determinate error) (Non-classical Measurement Errors): When measurement error is consistent and predictable across observations. Instrument errors (e.g., faulty scale) -&gt; calibration or adjustment Method errors (e.g., sampling errors) -&gt; better method development + study design Human errors (e.g., judgement) Usually the systematic measurement error is a bigger issue because it introduces “bias” into our estimates, while random error introduces noise into our estimates Noise -&gt; regression estimate to 0 Bias -&gt; can pull estimate to upward or downward. 30.1.1.1 Classical Measurement Errors 30.1.1.1.1 Right-hand side Right-hand side measurement error: When the measurement is in the covariates, then we have the endogeneity problem. Say you know the true model is \\[ Y_i = \\beta_0 + \\beta_1 X_i + u_i \\] But you don’t observe \\(X_i\\), but you observe \\[ \\tilde{X}_i = X_i + e_i \\] which is known as classical measurement errors where we assume \\(e_i\\) is uncorrelated with \\(X_i\\) (i.e., \\(E(X_i e_i) = 0\\)) Then, when you estimate your observed variables, you have (substitute \\(X_i\\) with \\(\\tilde{X}_i - e_i\\) ): \\[ \\begin{aligned} Y_i &amp;= \\beta_0 + \\beta_1 (\\tilde{X}_i - e_i)+ u_i \\\\ &amp;= \\beta_0 + \\beta_1 \\tilde{X}_i + u_i - \\beta_1 e_i \\\\ &amp;= \\beta_0 + \\beta_1 \\tilde{X}_i + v_i \\end{aligned} \\] In words, the measurement error in \\(X_i\\) is now a part of the error term in the regression equation \\(v_i\\). Hence, we have an endogeneity bias. Endogeneity arises when \\[ \\begin{aligned} E(\\tilde{X}_i v_i) &amp;= E((X_i + e_i )(u_i - \\beta_1 e_i)) \\\\ &amp;= -\\beta_1 Var(e_i) \\neq 0 \\end{aligned} \\] Since \\(\\tilde{X}_i\\) and \\(e_i\\) are positively correlated, then it leads to a negative bias in \\(\\hat{\\beta}_1\\) if the true \\(\\beta_1\\) is positive a positive bias if \\(\\beta_1\\) is negative In other words, measurement errors cause attenuation bias, which inter turn pushes the coefficient towards 0 As \\(Var(e_i)\\) increases or \\(\\frac{Var(e_i)}{Var(\\tilde{X})} \\to 1\\) then \\(e_i\\) is a random (noise) and \\(\\beta_1 \\to 0\\) (random variable \\(\\tilde{X}\\) should not have any relation to \\(Y_i\\)) Technical note: The size of the bias in the OLS-estimator is \\[ \\hat{\\beta}_{OLS} = \\frac{ cov(\\tilde{X}, Y)}{var(\\tilde{X})} = \\frac{cov(X + e, \\beta X + u)}{var(X + e)} \\] then \\[ plim \\hat{\\beta}_{OLS} = \\beta \\frac{\\sigma^2_X}{\\sigma^2_X + \\sigma^2_e} = \\beta \\lambda \\] where \\(\\lambda\\) is reliability or signal-to-total variance ratio or attenuation factor Reliability affect the extent to which measurement error attenuates \\(\\hat{\\beta}\\). The attenuation bias is \\[ \\hat{\\beta}_{OLS} - \\beta = -(1-\\lambda)\\beta \\] Thus, \\(\\hat{\\beta}_{OLS} &lt; \\beta\\) (unless \\(\\lambda = 1\\), in which case we don’t even have measurement error). Note: Data transformation worsen (magnify) the measurement error \\[ y= \\beta x + \\gamma x^2 + \\epsilon \\] then, the attenuation factor for \\(\\hat{\\gamma}\\) is the square of the attenuation factor for \\(\\hat{\\beta}\\) (i.e., \\(\\lambda_{\\hat{\\gamma}} = \\lambda_{\\hat{\\beta}}^2\\)) Adding covariates increases attenuation bias To fix classical measurement error problem, we can Find estimates of either \\(\\sigma^2_X, \\sigma^2_\\epsilon\\) or \\(\\lambda\\) from validation studies, or survey data. Endogenous Treatment Use instrument \\(Z\\) correlated with \\(X\\) but uncorrelated with \\(\\epsilon\\) Abandon your project 30.1.1.1.2 Left-hand side When the measurement is in the outcome variable, econometricians or causal scientists do not care because they still have an unbiased estimate of the coefficients (the zero conditional mean assumption is not violated, hence we don’t have endogeneity). However, statisticians might care because it might inflate our uncertainty in the coefficient estimates (i.e., higher standard errors). \\[ \\tilde{Y} = Y + v \\] then the model you estimate is \\[ \\tilde{Y} = \\beta X + u + v \\] Since \\(v\\) is uncorrelated with \\(X\\), then \\(\\hat{\\beta}\\) is consistently estimated by OLS If we have measurement error in \\(Y_i\\), it will pass through \\(\\beta_1\\) and go to \\(u_i\\) 30.1.1.2 Non-classical Measurement Errors Relaxing the assumption that \\(X\\) and \\(\\epsilon\\) are uncorrelated Recall the true model we have true estimate is \\[ \\hat{\\beta} = \\frac{cov(X + \\epsilon, \\beta X + u)}{var(X + \\epsilon)} \\] then without the above assumption, we have \\[ \\begin{aligned} plim \\hat{\\beta} &amp;= \\frac{\\beta (\\sigma^2_X + \\sigma_{X \\epsilon})}{\\sigma^2_X + \\sigma^2_\\epsilon + 2 \\sigma_{X \\epsilon}} \\\\ &amp;= (1 - \\frac{\\sigma^2_{\\epsilon} + \\sigma_{X \\epsilon}}{\\sigma^2_X + \\sigma^2_\\epsilon + 2 \\sigma_{X \\epsilon}}) \\beta \\\\ &amp;= (1 - b_{\\epsilon \\tilde{X}}) \\beta \\end{aligned} \\] where \\(b_{\\epsilon \\tilde{X}}\\) is the covariance between \\(\\tilde{X}\\) and \\(\\epsilon\\) (also the regression coefficient of a regression of \\(\\epsilon\\) on \\(\\tilde{X}\\)) Hence, the Classical Measurement Errors is just a special case of Non-classical Measurement Errors where \\(b_{\\epsilon \\tilde{X}} = 1 - \\lambda\\) So when \\(\\sigma_{X \\epsilon} = 0\\) (Classical Measurement Errors), increasing this covariance \\(b_{\\epsilon \\tilde{X}}\\) increases the covariance increases the attenuation factor if more than half of the variance in \\(\\tilde{X}\\) is measurement error, and decreases the attenuation factor otherwise. This is also known as mean reverting measurement error Bound, Brown, and Mathiowetz (2001) A general framework for both right-hand side and left-hand side measurement error is (Bound, Brown, and Mathiowetz 2001): consider the true model \\[ \\mathbf{Y = X \\beta + \\epsilon} \\] then \\[ \\begin{aligned} \\hat{\\beta} &amp;= \\mathbf{(\\tilde{X}&#39; \\tilde{X})^{-1}\\tilde{X} \\tilde{Y}} \\\\ &amp;= \\mathbf{(\\tilde{X}&#39; \\tilde{X})^{-1} \\tilde{X}&#39; (\\tilde{X} \\beta - U \\beta + v + \\epsilon )} \\\\ &amp;= \\mathbf{\\beta + (\\tilde{X}&#39; \\tilde{X})^{-1} \\tilde{X}&#39; (-U \\beta + v + \\epsilon)} \\\\ plim \\hat{\\beta} &amp;= \\beta + plim (\\tilde{X}&#39; \\tilde{X})^{-1} \\tilde{X}&#39; ( -U\\beta + v) \\\\ &amp;= \\beta + plim (\\tilde{X}&#39; \\tilde{X})^{-1} \\tilde{X}&#39; W \\left[ \\begin{array} {c} - \\beta \\\\ 1 \\end{array} \\right] \\end{aligned} \\] Since we collect the measurement errors in a matrix \\(W = [U|v]\\), then \\[ ( -U\\beta + v) = W \\left[ \\begin{array} {c} - \\beta \\\\ 1 \\end{array} \\right] \\] Hence, in general, biases in the coefficients \\(\\beta\\) are regression coefficients from regressing the measurement errors on the mis-measured \\(\\tilde{X}\\) Notes: Instrumental Variable can help fix this problem There can also be measurement error in dummy variables and you can still use Instrumental Variable to fix it. 30.1.1.3 Solution to Measurement Errors 30.1.1.3.1 Correlation \\[ \\begin{aligned} P(\\rho | data) &amp;= \\frac{P(data|\\rho)P(\\rho)}{P(data)} \\\\ \\text{Posterior Probability} &amp;\\propto \\text{Likelihood} \\times \\text{Prior Probability} \\end{aligned} \\] where \\(\\rho\\) is a correlation coefficient \\(P(data|\\rho)\\) is the likelihood function evaluated at \\(\\rho\\) \\(P(\\rho)\\) prior probability \\(P(data)\\) is the normalizing constant With sample correlation coefficient \\(r\\): \\[ r = \\frac{S_{xy}}{\\sqrt{S_{xx}S_{yy}}} \\] Then the posterior density approximation of \\(\\rho\\) is (Schisterman et al. 2003, 3) \\[ P(\\rho| x, y) \\propto P(\\rho) \\frac{(1- \\rho^2)^{(n-1)/2}}{(1- \\rho \\times r)^{n - (3/2)}} \\] where \\(\\rho = \\tanh \\xi\\) where \\(\\xi \\sim N(z, 1/n)\\) \\(r = \\tanh z\\) Then the posterior density follow a normal distribution where Mean \\[ \\mu_{posterior} = \\sigma^2_{posterior} \\times (n_{prior} \\times \\tanh^{-1} r_{prior}+ n_{likelihood} \\times \\tanh^{-1} r_{likelihood}) \\] variance \\[ \\sigma^2_{posterior} = \\frac{1}{n_{prior} + n_{Likelihood}} \\] To simplify the integration process, we choose prior that is \\[ P(\\rho) \\propto (1 - \\rho^2)^c \\] where \\(c\\) is the weight the prior will have in estimation (i.e., \\(c = 0\\) if no prior info, hence \\(P(\\rho) \\propto 1\\)) Example: Current study: \\(r_{xy} = 0.5, n = 200\\) Previous study: \\(r_{xy} = 0.2765, (n=50205)\\) Combining two, we have the posterior following a normal distribution with the variance of \\[ \\sigma^2_{posterior} = \\frac{1}{n_{prior} + n_{Likelihood}} = \\frac{1}{200 + 50205} = 0.0000198393 \\] Mean \\[ \\begin{aligned} \\mu_{Posterior} &amp;= \\sigma^2_{Posterior} \\times (n_{prior} \\times \\tanh^{-1} r_{prior}+ n_{likelihood} \\times \\tanh^{-1} r_{likelihood}) \\\\ &amp;= 0.0000198393 \\times (50205 \\times \\tanh^{-1} 0.2765 + 200 \\times \\tanh^{-1}0.5 )\\\\ &amp;= 0.2849415 \\end{aligned} \\] Hence, \\(Posterior \\sim N(0.691, 0.0009)\\), which means the correlation coefficient is \\(\\tanh(0.691) = 0.598\\) and 95% CI is \\[ \\mu_{posterior} \\pm 1.96 \\times \\sqrt{\\sigma^2_{Posterior}} = 0.2849415 \\pm 1.96 \\times (0.0000198393)^{1/2} = (0.2762115, 0.2936714) \\] Hence, the interval for posterior \\(\\rho\\) is (0.2693952, 0.2855105) If future authors suspect that they have Large sampling variation Measurement error in either measures in the correlation, which attenuates the relationship between the two variables Applying this Bayesian correction can give them a better estimate of the correlation between the two. To implement this calculation in R, see below n_new &lt;- 200 r_new &lt;- 0.5 alpha &lt;- 0.05 update_correlation &lt;- function(n_new, r_new, alpha) { n_meta &lt;- 50205 r_meta &lt;- 0.2765 # Variance var_xi &lt;- 1 / (n_new + n_meta) format(var_xi, scientific = FALSE) # mean mu_xi &lt;- var_xi * (n_meta * atanh(r_meta) + n_new * (atanh(r_new))) format(mu_xi, scientific = FALSE) # confidence interval upper_xi &lt;- mu_xi + qnorm(1 - alpha / 2) * sqrt(var_xi) lower_xi &lt;- mu_xi - qnorm(1 - alpha / 2) * sqrt(var_xi) # rho mean_rho &lt;- tanh(mu_xi) upper_rho &lt;- tanh(upper_xi) lower_rho &lt;- tanh(lower_xi) # return a list return( list( &quot;mu_xi&quot; = mu_xi, &quot;var_xi&quot; = var_xi, &quot;upper_xi&quot; = upper_xi, &quot;lower_xi&quot; = lower_xi, &quot;mean_rho&quot; = mean_rho, &quot;upper_rho&quot; = upper_rho, &quot;lower_rho&quot; = lower_rho ) ) } # Old confidence interval r_new + qnorm(1 - alpha / 2) * sqrt(1/n_new) #&gt; [1] 0.6385904 r_new - qnorm(1 - alpha / 2) * sqrt(1/n_new) #&gt; [1] 0.3614096 testing = update_correlation(n_new = n_new, r_new = r_new, alpha = alpha) # Updated rho testing$mean_rho #&gt; [1] 0.2774723 # Updated confidence interval testing$upper_rho #&gt; [1] 0.2855105 testing$lower_rho #&gt; [1] 0.2693952 30.1.2 Simultaneity When independent variables (\\(X\\)’s) are jointly determined with the dependent variable \\(Y\\), typically through an equilibrium mechanism, violates the second condition for causality (i.e., temporal order). Examples: quantity and price by demand and supply, investment and productivity, sales and advertisement General Simultaneous (Structural) Equations \\[ Y_i = \\beta_0 + \\beta_1 X_i + u_i \\\\ X_i = \\alpha_0 + \\alpha_1 Y_i + v_i \\] Hence, the solutions are \\[ Y_i = \\frac{\\beta_0 + \\beta_1 \\alpha_0}{1 - \\alpha_1 \\beta_1} + \\frac{\\beta_1 v_i + u_i}{1 - \\alpha_1 \\beta_1} \\\\ X_i = \\frac{\\alpha_0 + \\alpha_1 \\beta_0}{1 - \\alpha_1 \\beta_1} + \\frac{v_i + \\alpha_1 u_i}{1 - \\alpha_1 \\beta_1} \\] If we run only one regression, we will have biased estimators (because of simultaneity bias): \\[ \\begin{aligned} Cov(X_i, u_i) &amp;= Cov(\\frac{v_i + \\alpha_1 u_i}{1 - \\alpha_1 \\beta_1}, u_i) \\\\ &amp;= \\frac{\\alpha_1}{1- \\alpha_1 \\beta_1} Var(u_i) \\end{aligned} \\] In an even more general model \\[ \\begin{cases} Y_i = \\beta_0 + \\beta_1 X_i + \\beta_2 T_i + u_i \\\\ X_i = \\alpha_0 + \\alpha_1 Y_i + \\alpha_2 Z_i + v_i \\end{cases} \\] where \\(X_i, Y_i\\) are endogenous variables determined within the system \\(T_i, Z_i\\) are exogenous variables Then, the reduced form of the model is \\[ \\begin{cases} \\begin{aligned} Y_i &amp;= \\frac{\\beta_0 + \\beta_1 \\alpha_0}{1 - \\alpha_1 \\beta_1} + \\frac{\\beta_1 \\alpha_2}{1 - \\alpha_1 \\beta_1} Z_i + \\frac{\\beta_2}{1 - \\alpha_1 \\beta_1} T_i + \\tilde{u}_i \\\\ &amp;= B_0 + B_1 Z_i + B_2 T_i + \\tilde{u}_i \\end{aligned} \\\\ \\begin{aligned} X_i &amp;= \\frac{\\alpha_0 + \\alpha_1 \\beta_0}{1 - \\alpha_1 \\beta_1} + \\frac{\\alpha_2}{1 - \\alpha_1 \\beta_1} Z_i + \\frac{\\alpha_1\\beta_2}{1 - \\alpha_1 \\beta_1} T_i + \\tilde{v}_i \\\\ &amp;= A_0 + A_1 Z_i + A_2 T_i + \\tilde{v}_i \\end{aligned} \\end{cases} \\] Then, now we can get consistent estimates of the reduced form parameters And to get the original parameter estimates \\[ \\frac{B_1}{A_1} = \\beta_1 \\\\ B_2 (1 - \\frac{B_1 A_2}{A_1B_2}) = \\beta_2 \\\\ \\frac{A_2}{B_2} = \\alpha_1 \\\\ A_1 (1 - \\frac{B_1 A_2}{A_1 B_2}) = \\alpha_2 \\] Rules for Identification Order Condition (necessary but not sufficient) \\[ K - k \\ge m - 1 \\] where \\(M\\) = number of endogenous variables in the model K = number of exogenous variables int he model m = number of endogenous variables in a given k = is the number of exogenous variables in a given equation This is actually the general framework for instrumental variables 30.1.3 Endogenous Treatment Solutions Using the OLS estimates as a reference point library(AER) library(REndo) set.seed(421) data(&quot;CASchools&quot;) school &lt;- CASchools school$stratio &lt;- with(CASchools, students / teachers) m1.ols &lt;- lm(read ~ stratio + english + lunch + grades + income + calworks + county, data = school) summary(m1.ols)$coefficients[1:7, ] #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 683.45305948 9.56214469 71.4748711 3.011667e-218 #&gt; stratio -0.30035544 0.25797023 -1.1643027 2.450536e-01 #&gt; english -0.20550107 0.03765408 -5.4576041 8.871666e-08 #&gt; lunch -0.38684059 0.03700982 -10.4523759 1.427370e-22 #&gt; gradesKK-08 -1.91291321 1.35865394 -1.4079474 1.599886e-01 #&gt; income 0.71615378 0.09832843 7.2832829 1.986712e-12 #&gt; calworks -0.05273312 0.06154758 -0.8567863 3.921191e-01 30.1.3.1 Instrumental Variable A3a requires \\(\\epsilon_i\\) to be uncorrelated with \\(\\mathbf{x}_i\\) Assume A1 , A2, A5 \\[ plim(\\hat{\\beta}_{OLS}) = \\beta + [E(\\mathbf{x_i&#39;x_i})]^{-1}E(\\mathbf{x_i&#39;}\\epsilon_i) \\] A3a is the weakest assumption needed for OLS to be consistent A3 fails when \\(x_{ik}\\) is correlated with \\(\\epsilon_i\\) Omitted Variables Bias: \\(\\epsilon_i\\) includes any other factors that may influence the dependent variable (linearly) Simultaneity Demand and prices are simultaneously determined. Endogenous Sample Selection we did not have iid sample Measurement Error Note Omitted Variable: an omitted variable is a variable, omitted from the model (but is in the \\(\\epsilon_i\\)) and unobserved has predictive power towards the outcome. Omitted Variable Bias: is the bias (and inconsistency when looking at large sample properties) of the OLS estimator when the omitted variable. We cam have both positive and negative selection bias (it depends on what our story is) The structural equation is used to emphasize that we are interested understanding a causal relationship \\[ y_{i1} = \\beta_0 + \\mathbf{z}_i1 \\beta_1 + y_{i2}\\beta_2 + \\epsilon_i \\] where \\(y_{it}\\) is the outcome variable (inherently correlated with \\(\\epsilon_i\\)) \\(y_{i2}\\) is the endogenous covariate (presumed to be correlated with \\(\\epsilon_i\\)) \\(\\beta_1\\) represents the causal effect of \\(y_{i2}\\) on \\(y_{i1}\\) \\(\\mathbf{z}_{i1}\\) is exogenous controls (uncorrelated with \\(\\epsilon_i\\)) (\\(E(z_{1i}&#39;\\epsilon_i) = 0\\)) OLS is an inconsistent estimator of the causal effect \\(\\beta_2\\) If there was no endogeneity \\(E(y_{i2}&#39;\\epsilon_i) = 0\\) the exogenous variation in \\(y_{i2}\\) is what identifies the causal effect If there is endogeneity Any wiggle in \\(y_{i2}\\) will shift simultaneously with \\(\\epsilon_i\\) \\[ plim(\\hat{\\beta}_{OLS}) = \\beta + [E(\\mathbf{x&#39;_ix_i})]^{-1}E(\\mathbf{x&#39;_i}\\epsilon_i) \\] where \\(\\beta\\) is the causal effect \\([E(\\mathbf{x&#39;_ix_i})]^{-1}E(\\mathbf{x&#39;_i}\\epsilon_i)\\) is the endogenous effect Hence \\(\\hat{\\beta}_{OLS}\\) can be either more positive and negative than the true causal effect. Motivation for Two Stage Least Squares (2SLS) \\[ y_{i1}=\\beta_0 + \\mathbf{z}_{i1}\\beta_1 + y_{i2}\\beta_2 + \\epsilon_i \\] We want to understand how movement in \\(y_{i2}\\) effects movement in \\(y_{i1}\\), but whenever we move \\(y_{i2}\\), \\(\\epsilon_i\\) also moves. Solution We need a way to move \\(y_{i2}\\) independently of \\(\\epsilon_i\\), then we can analyze the response in \\(y_{i1}\\) as a causal effect Find an instrumental variable(s) \\(z_{i2}\\) Instrument Relevance: when** \\(z_{i2}\\) moves then \\(y_{i2}\\) also moves Instrument Exogeneity: when \\(z_{i2}\\) moves then \\(\\epsilon_i\\) does not move. \\(z_{i2}\\) is the exogenous variation that identifies the causal effect \\(\\beta_2\\) Finding an Instrumental variable: Random Assignment: + Effect of class size on educational outcomes: instrument is initial random Relation’s Choice + Effect of Education on Fertility: instrument is parent’s educational level Eligibility + Trade-off between IRA and 401K retirement savings: instrument is 401k eligibility Example Return to College education is correlated with ability - endogenous Near 4year as an instrument Instrument Relevance: when near moves then education also moves Instrument Exogeneity: when near moves then \\(\\epsilon_i\\) does not move. Other potential instruments; near a 2-year college. Parent’s Education. Owning Library Card \\[ y_{i1}=\\beta_0 + \\mathbf{z}_{i1}\\beta_1 + y_{i2}\\beta_2 + \\epsilon_i \\] First Stage (Reduced Form) Equation: \\[ y_{i2} = \\pi_0 + \\mathbf{z_{i1}\\pi_1} + \\mathbf{z_{i2}\\pi_2} + v_i \\] where \\(\\pi_0 + \\mathbf{z_{i1}\\pi_1} + \\mathbf{z_{i2}\\pi_2}\\) is exogenous variation \\(v_i\\) is endogenous variation This is called a reduced form equation Not interested in the causal interpretation of \\(\\pi_1\\) or \\(\\pi_2\\) A linear projection of \\(z_{i1}\\) and \\(z_{i2}\\) on \\(y_{i2}\\) (simple correlations) The projections \\(\\pi_1\\) and \\(\\pi_2\\) guarantee that \\(E(z_{i1}&#39;v_i)=0\\) and \\(E(z_{i2}&#39;v_i)=0\\) Instrumental variable \\(z_{i2}\\) Instrument Relevance: \\(\\pi_2 \\neq 0\\) Instrument Exogeneity: \\(E(\\mathbf{z_{i2}\\epsilon_i})=0\\) Moving only the exogenous part of \\(y_i2\\) is moving \\[ \\tilde{y}_{i2} = \\pi_0 + \\mathbf{z_{i1}\\pi_1 + z_{i2}\\pi_2} \\] two Stage Least Squares (2SLS) \\[ y_{i1} = \\beta_0 +\\mathbf{z_{i1}\\beta_1}+ y_{i2}\\beta_2 + \\epsilon_i \\] \\[ y_{i2} = \\pi_0 + \\mathbf{z_{i2}\\pi_2} + \\mathbf{v_i} \\] Equivalently, \\[\\begin{equation} \\begin{split} y_{i1} = \\beta_0 + \\mathbf{z_{i1}}\\beta_1 + \\tilde{y}_{i2}\\beta_2 + u_i \\end{split} \\tag{30.1} \\end{equation}\\] where \\(\\tilde{y}_{i2} =\\pi_0 + \\mathbf{z_{i2}\\pi_2}\\) \\(u_i = v_i \\beta_2+ \\epsilon_i\\) The (30.1) holds for A1, A5 A2 holds if the instrument is relevant \\(\\pi_2 \\neq 0\\) + \\(y_{i1} = \\beta_0 + \\mathbf{z_{i1}\\beta_1 + (\\pi_0 + z_{i1}\\pi_1 + z_{i2}\\pi_2)}\\beta_2 + u_i\\) A3a holds if the instrument is exogenous \\(E(\\mathbf{z}_{i2}\\epsilon_i)=0\\) \\[ \\begin{aligned} E(\\tilde{y}_{i2}&#39;u_i) &amp;= E((\\pi_0 + \\mathbf{z_{i1}\\pi_1+z_{i2}})(v_i\\beta_2 + \\epsilon_i)) \\\\ &amp;= E((\\pi_0 + \\mathbf{z_{i1}\\pi_1+z_{i2}})( \\epsilon_i)) \\\\ &amp;= E(\\epsilon_i)\\pi_0 + E(\\epsilon_iz_{i1})\\pi_1 + E(\\epsilon_iz_{i2}) \\\\ &amp;=0 \\end{aligned} \\] Hence, (30.1) is consistent The 2SLS Estimator 1. Estimate the first stage using OLS \\[ y_{i2} = \\pi_0 + \\mathbf{z_{i2}\\pi_2} + \\mathbf{v_i} \\] and obtained estimated value \\(\\hat{y}_{i2}\\) Estimate the altered equation using OLS \\[ y_{i1} = \\beta_0 +\\mathbf{z_{i1}\\beta_1}+ \\hat{y}_{i2}\\beta_2 + \\epsilon_i \\\\ \\] Properties of the 2SLS Estimator Under A1, A2, A3a (for \\(z_{i1}\\)), A5 and if the instrument satisfies the following two conditions, + Instrument Relevance: \\(\\pi_2 \\neq 0\\) + Instrument Exogeneity: \\(E(\\mathbf{z}_{i2}&#39;\\epsilon_i) = 0\\) then the 2SLS estimator is consistent Can handle more than one endogenous variable and more than one instrumental variable \\[ y_{i1} = \\beta_0 + z_{i1}\\beta_1 + y_{i2}\\beta_2 + y_{i3}\\beta_3 + \\epsilon_i \\\\ y_{i2} = \\pi_0 + z_{i1}\\pi_1 + z_{i2}\\pi_2 + z_{i3}\\pi_3 + z_{i4}\\pi_4 + v_{i2} \\\\ y_{i3} = \\gamma_0 + z_{i1}\\gamma_1 + z_{i2}\\gamma_2 + z_{i3}\\gamma_3 + z_{i4}\\gamma_4 + v_{i3} \\] + **IV estimator**: one endogenous variable with a single instrument + **2SLS estimator**: one endogenous variable with multiple instruments + **GMM estimator**: multiple endogenous variables with multiple instruments Standard errors produced in the second step are not correct Because we do not know \\(\\tilde{y}\\) perfectly and need to estimate it in the firs step, we are introducing additional variation We did not have this problem with FGLS because “the first stage was orthogonal to the second stage.” This is generally not true for most multi-step procedure. If A4 does not hold, need to report robust standard errors. 2SLS is less efficient than OLS and will always have larger standard errors. First, \\(Var(u_i) = Var(v_i\\beta_2 + \\epsilon_i) &gt; Var(\\epsilon_i)\\) Second, \\(\\hat{y}_{i2}\\) is generally highly collinear with \\(\\mathbf{z}_{i1}\\) The number of instruments need to be at least as many or more the number of endogenous variables. Note 2SLS can be combined with FGLS to make the estimator more efficient: You have the same first-stage, and in the second-stage, instead of using OLS, you can use FLGS with the weight matrix \\(\\hat{w}\\) Generalized Method of Moments can be more efficient than 2SLS. In the second-stage of 2SLS, you can also use MLE, but then you are making assumption on the distribution of the outcome variable, the endogenous variable, and their relationship (joint distribution). 30.1.3.1.1 Testing Assumptions Test of Endogeneity: Is \\(y_{i2}\\) truly endogenous (i.e., can we just use OLS instead of 2SLS)? Testing Instrument’s assumptions Exogeneity (Cannot always test “and when you can it might not be informative”) Relevancy (need to avoid “weak instruments”) 30.1.3.1.1.1 Test of Endogeneity 2SLS is generally so inefficient that we may prefer OLS if there is not much endogeneity Biased but inefficient vs efficient but biased Want a sense of “how endogenous” \\(y_{i2}\\) is if “very” endogeneous - should use 2SLS if not “very” endogenous - perhaps prefer OLS Invalid Test of Endogeneity: \\(y_{i2}\\) is endogenous if it is correlated with \\(\\epsilon_i\\), \\[ \\epsilon_i = \\gamma_0 + y_{i2}\\gamma_1 + error_i \\] where \\(\\gamma_1 \\neq 0\\) implies that there is endogeneity \\(\\epsilon_i\\) is not observed, but using the residuals \\[ e_i = \\gamma_0 + y_{i2}\\gamma_1 + error_i \\] is NOT a valid test of endogeneity + The OLS residual, e is mechanically uncorrelated with \\(y_{i2}\\) (by FOC for OLS) + In every situation, \\(\\gamma_1\\) will be essentially 0 and you will never be able to reject the null of no endogeneity Valid test of endogeneity If \\(y_{i2}\\) is not endogenous then \\(\\epsilon_i\\) and v are uncorrelated \\[ y_{i1} = \\beta_0 + \\mathbf{z}_{i1}\\beta_1 + y_{i2}\\beta_2 + \\epsilon_i \\\\ y_{i2} = \\pi_0 + \\mathbf{z}_{i1}\\pi_1 + z_{i2}\\pi_2 + v_i \\] variable Addition test: include the first stage residuals as an additional variable, \\[ y_{i1} = \\beta_0 + \\mathbf{z}_{i1}\\beta_1 + y_{i2}\\beta_2 + \\hat{v}_i \\theta + error_i \\] Then the usual t-test of significance is a valid test to evaluate the following hypothesis. note this test requires your instrument to be valid instrument. \\[ \\begin{aligned} H_0: \\theta = 0 &amp;&amp; \\text{ (not endogenous)} \\\\ H_1: \\theta \\neq 0 &amp;&amp; \\text{ (endogenous)} \\end{aligned} \\] 30.1.3.1.1.2 Testing Instrument’s assumptions The instrumental variable must satisfy Exogeneity (Cannot always test “and when you can it might not be informative”) Relevancy (need to avoid “weak instruments”) 30.1.3.1.1.3 Exogeneity Why exogeneity matter? \\[ E(\\mathbf{z}_{i2}&#39;\\epsilon_i) = 0 \\] If A3a fails - 2SLS is also inconsistent If instrument is not exogenous, then we need to find a new one. Similar to Test of Endogeneity, when there is a single instrument \\[ e_i = \\gamma_0 + \\mathbf{z}_{i2}\\gamma_1 + error_i \\\\ H_0: \\gamma_1 = 0 \\] is NOT a valid test of endogeneity the OLS residual, e is mechanically uncorrelated with \\(z_{i2}\\): \\(\\hat{\\gamma}_1\\) will be essentially 0 and you will never be able to determine if the instrument is endogenous. Solution Testing Instrumental Exegeneity in an Over-identified Model When there is more than one exogenous instrument (per endogenous variable), we can test for instrument exogeneity. When we have multiple instruments, the model is said to be over-identified. Could estimate the same model several ways (i.e., can identify/ estimate \\(\\beta_1\\) more than one way) Idea behind the test: if the controls and instruments are truly exogenous then OLS estimation of the following regression, \\[ \\epsilon_i = \\gamma_0 + \\mathbf{z}_{i1}\\gamma_1 + \\mathbf{z}_{i2}\\gamma_2 + error_i \\] should have a very low \\(R^2\\) if the model is just identified (one instrument per endogenous variable) then the \\(R^2 = 0\\) Steps: Estimate the structural equation by 2SLS (using all available instruments) and obtain the residuals e Regress e on all controls and instruments and obtain the \\(R^2\\) Under the null hypothesis (all IV’s are uncorrelated), \\(nR^2 \\sim \\chi^2(q)\\), where q is the number of instrumental variables minus the number of endogenous variables if the model is just identified (one instrument per endogenous variable) then q = 0, and the distribution under the null collapses. low p-value means you reject the null of exogenous instruments. Hence you would like to have high p-value in this test. Pitfalls for the Overid test the overid test is essentially compiling the following information. Conditional on first instrument being exogenous is the other instrument exogenous? Conditional on the other instrument being exogenous, is the first instrument exogenous? If all instruments are endogenous than neither test will be valid really only useful if one instrument is thought to be truly exogenous (randomly assigned). even f you do reject the null, the test does not tell you which instrument is exogenous and which is endogenous. Result Implication reject the null you can be pretty sure there is an endogenous instrument, but don’t know which one. fail to reject could be either (1) they are both exogenous, (2) they are both endogenous. 30.1.3.1.1.4 Relevancy Why Relevance matter? \\[ \\pi_2 \\neq 0 \\] * used to show A2 holds + If \\(\\pi_2 = 0\\) (instrument is not relevant) then A2 fails - perfect multicollinearity + If \\(\\pi_2\\) is close to 0 (weak instrument) then there is near perfect multicollinearity - 2SLS is highly inefficient (Large standard errors). * A weak instrument will exacerbate any inconsistency due to an instrument being (even slightly) endogenous. + In the simple case with no controls and a single endogenous variable and single instrumental variable, \\[ plim(\\hat{\\beta}_{2_{2SLS}}) = \\beta_2 + \\frac{E(z_{i2}\\epsilon_i)}{E(z_{i2}y_{i2})} \\] Testing Weak Instruments can use t-test (or F-test for over-identified models) in the first stage to determine if there is a weak instrument problem. J. Stock and Yogo (2005): a statistical rejection of the null hypothesis in the first stage at the 5% (or even 1%) level is not enough to insure the instrument is not weak Rule of Thumb: need a F-stat of at least 10 (or a t-stat of at least 3.2) to reject the null hypothesis that the instrument is weak. Summary of the 2SLS Estimator \\[ y_{i1}=\\beta_0 + \\mathbf{z}_{i1}\\beta_1 + y_{i2}\\beta_2 + \\epsilon_i \\\\ y_{i2} = \\pi_0 + \\mathbf{z_{i1}\\pi_1} + \\mathbf{z_{i2}\\pi_2} + v_i \\] when A3a does not hold \\[ E(y_{i2}&#39;\\epsilon_i) \\neq 0 \\] Then the OLS estimator is no longer unbiased or consistent. If we have valid instruments \\(\\mathbf{z}_{i2}\\) Relevancy (need to avoid “weak instruments”): \\(\\pi_2 \\neq 0\\) Then the 2SLS estimator is consistent under A1, A2, A5a, and the above two conditions. + If A4 also holds, then the usual standard errors are valid. + If A4 does not hold then use the robust standard errors. \\[ y_{i1}=\\beta_0 + \\mathbf{z}_{i1}\\beta_1 + y_{i2}\\beta_2 + \\epsilon_i \\\\ y_{i2} = \\pi_0 + \\mathbf{z_{i1}\\pi_1} + \\mathbf{z_{i2}\\pi_2} + v_i \\] When A3a does hold \\[ E(y_{i2}&#39;\\epsilon_i) = 0 \\] and we have valid instruments, then both the OLS and 2SLS estimators are consistent. The OLS estimator is always more efficient can use the variable addition test to determine if 2SLS is need (A3a does hold) or if OLS is valid (A3a does not hold) Sometimes we can test the assumption for instrument to be valid: Exogeneity : Only table when there are more instruments than endogenous variables. Relevancy (need to avoid “weak instruments”): Always testable, need the F-stat to be greater than 10 to rule out a weak instrument Application Expenditure as observed instrument m2.2sls &lt;- ivreg( read ~ stratio + english + lunch + grades + income + calworks + county | expenditure + english + lunch + grades + income + calworks + county , data = school ) summary(m2.2sls)$coefficients[1:7, ] #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 700.47891593 13.58064436 51.5792106 8.950497e-171 #&gt; stratio -1.13674002 0.53533638 -2.1234126 3.438427e-02 #&gt; english -0.21396934 0.03847833 -5.5607753 5.162571e-08 #&gt; lunch -0.39384225 0.03773637 -10.4366757 1.621794e-22 #&gt; gradesKK-08 -1.89227865 1.37791820 -1.3732881 1.704966e-01 #&gt; income 0.62487986 0.11199008 5.5797785 4.668490e-08 #&gt; calworks -0.04950501 0.06244410 -0.7927892 4.284101e-01 30.1.3.1.2 Checklist Regress the dependent variable on the instrument (reduced form). Since under OLS, we have unbiased estimate, the coefficient estimate should be significant (make sure the sign makes sense) Report F-stat on the excluded instruments. F-stat &lt; 10 means you have a weak instrument (J. H. Stock, Wright, and Yogo 2002). Present \\(R^2\\) before and after including the instrument (Rossi 2014) For models with multiple instrument, present firs-t and second-stage result for each instrument separately. Overid test should be conducted (e.g., Sargan-Hansen J) Hausman test between OLS and 2SLS (don’t confuse this test for evidence that endogeneity is irrelevant - under invalid IV, the test is useless) Compare the 2SLS with the limited information ML. If they are different, you have evidence for weak instruments. 30.1.3.2 Good Instruments Exogeneity and Relevancy are necessary but not sufficient for IV to produce consistent estimates. Without theory or possible explanation, you can always create a new variable that is correlated with \\(X\\) and uncorrelated with \\(\\epsilon\\) For example, we want to estimate the effect of price on quantity (Reiss 2011, 960) \\[ Q = \\beta_1 P + \\beta_2 X + \\epsilon \\\\ P = \\pi_1 X + \\eta \\] where \\(\\epsilon\\) and \\(\\eta\\) are jointly determined, \\(X \\perp \\epsilon, \\eta\\) Without theory, we can just create a new variable \\(Z = X + u\\) where \\(E(u) = 0; u \\perp X, \\epsilon, \\eta\\) Then, \\(Z\\) satisfied both conditions: Relevancy: \\(X\\) correlates \\(P\\) \\(\\rightarrow\\) \\(Z\\) correlates \\(P\\) Exogeneity: \\(u \\perp \\epsilon\\) (random noise) But obviously, it’s not a valid instrument (intuitively). But theoretically, relevance and exogeneity are not sufficient to identify \\(\\beta\\) because of unsatisfied rank condition for identification. Moreover, the functional form of the instrument also plays a role when choosing a good instrument. Hence, we always need to check for the robustness of our instrument. IV methods even with valid instruments can still have poor sampling properties (finite sample bias, large sampling errors) (Rossi 2014) When you have a weak instrument, it’s important to report it appropriately. This problem will be exacerbated if you have multiple instruments (Larcker and Rusticus 2010). 30.1.3.2.1 Lagged dependent variable In time series data sets, we can use lagged dependent variable as an instrument because it is not influenced by current shocks. Citations for lagged dependent variable in econ (Chetty, Friedman, and Rockoff 2014), 30.1.3.3 Internal instrumental variable (also known as instrument free methods). This section is based on Raluca Gui’s guide alternative to external instrumental variable approaches All approaches here assume a continuous dependent variable 30.1.3.3.1 Non-hierarchical Data (Cross-classified) \\[ Y_t = \\beta_0 + \\beta_1 P_t + \\beta_2 X_t + \\epsilon_t \\] where \\(t = 1, .., T\\) (indexes either time or cross-sectional units) \\(Y_t\\) is a k x 1 response variable \\(X_t\\) is a k x n exogenous regressor \\(P_t\\) is a k x 1 continuous endogenous regressor \\(\\epsilon_t\\) is a structural error term with \\(\\mu_\\epsilon =0\\) and \\(E(\\epsilon^2) = \\sigma^2\\) \\(\\beta\\) are model parameters The endogeneity problem arises from the correlation of \\(P_t\\) and \\(\\epsilon_t\\): \\[ P_t = \\gamma Z_t + v_t \\] where \\(Z_t\\) is a l x 1 vector of internal instrumental variables \\(ν_t\\) is a random error with \\(\\mu_{v_t}, E(v^2) = \\sigma^2_v, E(\\epsilon v) = \\sigma_{\\epsilon v}\\) \\(Z_t\\) is assumed to be stochastic with distribution G \\(ν_t\\) is assumed to have density h(·) 30.1.3.3.1.1 Latent Instrumental Variable (Ebbes et al. 2005) assume \\(Z_t\\) (unobserved) to be uncorrelated with \\(\\epsilon_t\\), which is similar to Instrumental Variable. Hence, \\(Z_t\\) and \\(ν_t\\) can’t be identified without distributional assumptions The distributions of \\(Z_t\\) and \\(ν_t\\) need to be specified such that: endogeneity of \\(P_t\\) is corrected the distribution of \\(P_t\\) is empirically close to the integral that expresses the amount of overlap of Z as it is shifted over ν (= the convolution between \\(Z_t\\) and \\(ν_t\\)). When the density h(·) = Normal, then G cannot be normal because the parameters would not be identified (Ebbes et al. 2005) . Hence, in the LIV model the distribution of \\(Z_t\\) is discrete in the Higher Moments Method and Joint Estimation Using Copula methods, the distribution of \\(Z_t\\) is taken to be skewed. \\(Z_t\\) are assumed unobserved, discrete and exogenous, with an unknown number of groups m \\(\\gamma\\) is a vector of group means. Identification of the parameters relies on the distributional assumptions of \\(P_t\\): a non-Gaussian distribution \\(Z_t\\) discrete with \\(m \\ge 2\\) Note: If \\(Z_t\\) is continuous, the model is unidentified If \\(P_t \\sim N\\), you have inefficient estimates. m3.liv &lt;- latentIV(read ~ stratio, data=school) summary(m3.liv)$coefficients[1:7,] #&gt; Estimate Std. Error z-score Pr(&gt;|z|) #&gt; (Intercept) 6.996014e+02 2.686186e+02 2.604441e+00 9.529597e-03 #&gt; stratio -2.272673e+00 1.367757e+01 -1.661605e-01 8.681108e-01 #&gt; pi1 -4.896363e+01 5.526907e-08 -8.859139e+08 0.000000e+00 #&gt; pi2 1.963920e+01 9.225351e-02 2.128830e+02 0.000000e+00 #&gt; theta5 6.939432e-152 3.354672e-160 2.068587e+08 0.000000e+00 #&gt; theta6 3.787512e+02 4.249457e+01 8.912932e+00 1.541524e-17 #&gt; theta7 -1.227543e+00 4.885276e+01 -2.512741e-02 9.799653e-01 it will return a coefficient very different from the other methods since there is only one endogenous variable. 30.1.3.3.1.2 Joint Estimation Using Copula assume \\(Z_t\\) (unobserved) to be uncorrelated with \\(\\epsilon_t\\), which is similar to Instrumental Variable. Hence, \\(Z_t\\) and \\(ν_t\\) can’t be identified without distributional assumptions (Park and Gupta 2012) allows joint estimation of the continuous \\(P_t\\) and \\(\\epsilon_t\\) using Gaussian copulas, where a copula is a function that maps several conditional distribution functions (CDF) into their joint CDF). The underlying idea is that using information contained in the observed data, one selects marginal distributions for \\(P_t\\) and \\(\\epsilon_t\\). Then, the copula model constructs a flexible multivariate joint distribution that allows a wide range of correlations between the two marginals. The method allows both continuous and discrete \\(P_t\\). In the special case of one continuous \\(P_t\\), estimation is based on MLE Otherwise, based on Gaussian copulas, augmented OLS estimation is used. Assumptions: skewed \\(P_t\\) the recovery of the correct parameter estimates \\(\\epsilon_t \\sim\\) normal marginal distribution. The marginal distribution of \\(P_t\\) is obtained using the Epanechnikov kernel density estimator \\[ \\hat{h}_p = \\frac{1}{T . b} \\sum_{t=1}^TK(\\frac{p - P_t}{b}) \\] where \\(P_t\\) = endogenous variables \\(K(x) = 0.75(1-x^2)I(||x||\\le 1)\\) \\(b=0.9T^{-1/5}\\times min(s, IQR/1.34)\\) IQR = interquartile range \\(s\\) = sample standard deviation \\(T\\) = n of time periods observed in the data # 1.34 comes from this diff(qnorm(c(0.25, 0.75))) #&gt; [1] 1.34898 In augmented OLS and MLE, the inference procedure occurs in two stages: (1): the empirical distribution of \\(P_t\\) is computed (2) used in it constructing the likelihood function) Hence, the standard errors would not be correct. So we use the sampling distributions (from bootstrapping) to get standard errors and the variance-covariance matrix. Since the distribution of the bootstraped parameters is highly skewed, we report the percentile confidence intervals is preferable. set.seed(110) m4.cc &lt;- copulaCorrection( read ~ stratio + english + lunch + calworks + grades + income + county | continuous(stratio), data = school, optimx.args = list(method = c(&quot;Nelder-Mead&quot;), itnmax = 60000), num.boots = 2, verbose = FALSE ) summary(m4.cc)$coefficients[1:7, ] #&gt; Point Estimate Boots SE Lower Boots CI (95%) Upper Boots CI (95%) #&gt; (Intercept) 683.06900891 2.80554212 NA NA #&gt; stratio -0.32434608 0.02075999 NA NA #&gt; english -0.21576110 0.01450666 NA NA #&gt; lunch -0.37087664 0.01902052 NA NA #&gt; calworks -0.05569058 0.02076781 NA NA #&gt; gradesKK-08 -1.92286128 0.25684614 NA NA #&gt; income 0.73595353 0.04725700 NA NA we run this model with only one endogenous continuous regressor (stratio). Sometimes, the code will not converge, in which case you can use different optimization algorithm starting values maximum number of iterations 30.1.3.3.1.3 Higher Moments Method suggested by (Lewbel 1997) to identify \\(\\epsilon_t\\) caused by measurement error. Identification is achieved by using third moments of the data, with no restrictions on the distribution of \\(\\epsilon_t\\) The following instruments can be used with 2SLS estimation to obtain consistent estimates: \\[ \\begin{aligned} q_{1t} &amp;= (G_t - \\bar{G}) \\\\ q_{2t} &amp;= (G_t - \\bar{G})(P_t - \\bar{P}) \\\\ q_{3t} &amp;= (G_t - \\bar{G})(Y_t - \\bar{Y})\\\\ q_{4t} &amp;= (Y_t - \\bar{Y})(P_t - \\bar{P}) \\\\ q_{5t} &amp;= (P_t - \\bar{P})^2 \\\\ q_{6t} &amp;= (Y_t - \\bar{Y})^2 \\\\ \\end{aligned} \\] where \\(G_t = G(X_t)\\) for any given function G that has finite third own and cross moments X = exogenous variable \\(q_{5t}, q_{6t}\\) can be used only when the measurement and \\(\\epsilon_t\\) are symmetrically distributed. The rest of the instruments does not require any distributional assumptions for \\(\\epsilon_t\\). Since the regressors \\(G(X) = X\\) are included as instruments, \\(G(X)\\) can’t be a linear function of X in \\(q_{1t}\\) Since this method has very strong assumptions, Higher Moments Method should only be used in case of overidentification set.seed(111) m5.hetEr &lt;- hetErrorsIV( read ~ stratio + english + lunch + calworks + income + grades + county | stratio | IIV(income, english), data = school ) summary(m5.hetEr)$coefficients[1:7, ] #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 662.78791557 27.90173069 23.7543657 2.380436e-76 #&gt; stratio 0.71480686 1.31077325 0.5453322 5.858545e-01 #&gt; english -0.19522271 0.04057527 -4.8113717 2.188618e-06 #&gt; lunch -0.37834232 0.03927793 -9.6324402 9.760809e-20 #&gt; calworks -0.05665126 0.06302095 -0.8989273 3.692776e-01 #&gt; income 0.82693755 0.17236557 4.7975797 2.335271e-06 #&gt; gradesKK-08 -1.93795843 1.38723186 -1.3969968 1.632541e-01 recommend using this approach to create additional instruments to use with external ones for better efficiency. 30.1.3.3.1.4 Heteroskedastic Error Approach using means of variables that are uncorrelated with the product of heteroskedastic errors to identify structural parameters. This method can be use either when you don’t have external instruments or you want to use additional instruments to improve the efficiency of the IV estimator (Lewbel 2012) The instruments are constructed as simple functions of data Model’s assumptions: \\[ E(X \\epsilon) = 0 \\\\ E(X v ) = 0 \\\\ cov(Z, \\epsilon v) = 0 \\\\ cov(Z, v^2) \\neq 0 \\text{ (for identification)} \\] Structural parameters are identified by 2SLS regression of Y on X and P, using X and [Z − E(Z)]ν as instruments. \\[ \\text{instrument&#39;s strength} \\propto cov((Z-\\bar{Z})v,v) \\] where \\(cov((Z-\\bar{Z})v,v)\\) is the degree of heteroskedasticity of ν with respect to Z (Lewbel 2012), which can be empirically tested. If it is zero or close to zero (i.e.,the instrument is weak), you might have imprecise estimates, with large standard errors. Under homoskedasticity, the parameters of the model are unidentified. Under heteroskedasticity related to at least some elements of X, the parameters of the model are identified. 30.1.3.3.2 Hierarchical Data Multiple independent assumptions involving various random components at different levels mean that any moderate correlation between some predictors and a random component or error term can result in a significant bias of the coefficients and of the variance components. (J.-S. Kim and Frees 2007) proposed a generalized method of moments which uses both, the between and within variations of the exogenous variables, but only assumes the within variation of the variables to be endogenous. Assumptions the errors at each level \\(\\sim iid N\\) the slope variables are exogenous the level-1 \\(\\epsilon \\perp X, P\\). If this is not the case, additional, external instruments are necessary Hierarchical Model \\[ \\begin{aligned} Y_{cst} &amp;= Z_{cst}^1 \\beta_{cs}^1 + X_{cst}^1 \\beta_1 + \\epsilon_{cst}^1 \\\\ \\beta^1_{cs} &amp;= Z_{cs}^2 \\beta_{c}^2 + X_{cst}^2 \\beta_2 + \\epsilon_{cst}^2 \\\\ \\beta^2_{c} &amp;= X^3_c \\beta_3 + \\epsilon_c^3 \\end{aligned} \\] Bias could stem from: errors at the higher two levels (\\(\\epsilon_c^3,\\epsilon_{cst}^2\\)) are correlated with some of the regressors only third level errors (\\(\\epsilon_c^3\\)) are correlated with some of the regressors (J.-S. Kim and Frees 2007) proposed When all variables are assumed exogenous, the proposed estimator equals the random effects estimator When all variables are assumed endogenous, it equals the fixed effects estimator also use omitted variable test (based on the Hausman-test (J. A. Hausman 1978) for panel data), which allows the comparison of a robust estimator and an estimator that is efficient under the null hypothesis of no omitted variables or the comparison of two robust estimators at different levels. set.seed(113) school$gr08 &lt;- school$grades == &quot;KK-06&quot; m7.multilevel &lt;- multilevelIV(read ~ stratio + english + lunch + income + gr08 + calworks + (1 | county) | endo(stratio), data = school) summary(m7.multilevel)$coefficients[1:7, ] #&gt; Estimate Std. Error z-score Pr(&gt;|z|) #&gt; (Intercept) 675.8228656 5.58008680 121.1133248 0.000000e+00 #&gt; stratio -0.4956054 0.23922638 -2.0717005 3.829339e-02 #&gt; english -0.2599777 0.03413530 -7.6160948 2.614656e-14 #&gt; lunch -0.3692954 0.03560210 -10.3728537 3.295342e-25 #&gt; income 0.6723141 0.08862012 7.5864728 3.287314e-14 #&gt; gr08TRUE 2.1590333 1.28167222 1.6845440 9.207658e-02 #&gt; calworks -0.0570633 0.05711701 -0.9990596 3.177658e-01 Another example using simulated data level-1 regressors: \\(X_{11}, X_{12}, X_{13}, X_{14}, X_{15}\\), where \\(X_{15}\\) is correlated with the level-2 error (i.e., endogenous). level-2 regressors: \\(X_{21}, X_{22}, X_{23}, X_{24}\\) level-3 regressors: \\(X_{31}, X_{32}, X_{33}\\) We estimate a three-level model with X15 assumed endogenous. Having a three-level hierarchy, multilevelIV() returns five estimators, from the most robust to omitted variables (FE_L2), to the most efficient (REF) (i.e. lowest mean squared error). The random effects estimator (REF) is efficient assuming no omitted variables The fixed effects estimator (FE) is unbiased and asymptotically normal even in the presence of omitted variables. Because of the efficiency, the random effects estimator is preferable if you think there is no omitted. variables The robust estimator would be preferable if you think there is omitted variables. data(dataMultilevelIV) set.seed(114) formula1 &lt;- y ~ X11 + X12 + X13 + X14 + X15 + X21 + X22 + X23 + X24 + X31 + X32 + X33 + (1 | CID) + (1 | SID) | endo(X15) m8.multilevel &lt;- multilevelIV(formula = formula1, data = dataMultilevelIV) coef(m8.multilevel) #&gt; REF FE_L2 FE_L3 GMM_L2 GMM_L3 #&gt; (Intercept) 64.3640774 0.000000 0.0000000 64.6642061 64.3644220 #&gt; X11 3.0356390 3.047931 3.0353448 3.0356094 3.0356389 #&gt; X12 9.0005462 8.996679 8.9999438 8.9966073 9.0005417 #&gt; X13 -2.0082559 -2.000106 -2.0090020 -2.0215816 -2.0082712 #&gt; X14 1.9809907 2.001761 1.9803275 1.9849995 1.9809953 #&gt; X15 -0.5739658 -1.036909 -0.5745241 -1.0344864 -0.5744947 #&gt; X21 -2.2423675 0.000000 -2.2319682 -2.2172859 -2.2423387 #&gt; X22 -3.2658889 0.000000 -2.9345899 -3.3146849 -3.2659449 #&gt; X23 -2.8332479 0.000000 -2.8060569 -2.8581647 -2.8332765 #&gt; X24 5.0696401 0.000000 5.0895430 5.0183704 5.0695812 #&gt; X31 2.0770536 0.000000 0.0000000 2.0710383 2.0770467 #&gt; X32 0.4540926 0.000000 0.0000000 0.4571712 0.4540962 #&gt; X33 0.0991915 0.000000 0.0000000 0.0980949 0.0991902 summary(m8.multilevel, &quot;REF&quot;) #&gt; #&gt; Call: #&gt; multilevelIV(formula = formula1, data = dataMultilevelIV) #&gt; #&gt; Number of levels: 3 #&gt; Number of observations: 2767 #&gt; Number of groups: L2(CID): 1347 L3(SID): 40 #&gt; #&gt; Coefficients for model REF: #&gt; Estimate Std. Error z-score Pr(&gt;|z|) #&gt; (Intercept) 64.36408 6.45959 9.964 &lt;2e-16 *** #&gt; X11 3.03564 0.02763 109.863 &lt;2e-16 *** #&gt; X12 9.00055 0.02608 345.152 &lt;2e-16 *** #&gt; X13 -2.00826 0.02521 -79.668 &lt;2e-16 *** #&gt; X14 1.98099 0.02639 75.079 &lt;2e-16 *** #&gt; X15 -0.57397 0.01980 -28.987 &lt;2e-16 *** #&gt; X21 -2.24237 0.18661 -12.016 &lt;2e-16 *** #&gt; X22 -3.26589 0.38703 -8.438 &lt;2e-16 *** #&gt; X23 -2.83325 0.10330 -27.427 &lt;2e-16 *** #&gt; X24 5.06964 0.07322 69.240 &lt;2e-16 *** #&gt; X31 2.07705 0.08935 23.246 &lt;2e-16 *** #&gt; X32 0.45409 0.19116 2.375 0.0175 * #&gt; X33 0.09919 0.04153 2.388 0.0169 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Omitted variable tests for model REF: #&gt; df Chisq p-value #&gt; GMM_L2_vs_REF 7 161.14 &lt; 2e-16 *** #&gt; GMM_L3_vs_REF 13 -829.75 1.000000 #&gt; FE_L2_vs_REF 13 40.00 0.000138 *** #&gt; FE_L3_vs_REF 13 39.99 0.000139 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 True \\(\\beta_{X_{15}} =-1\\). We can see that some estimators are bias because \\(X_{15}\\) is correlated with the level-two error, to which only FE_L2 and GMM_L2 are robust To select the appropriate estimator, we use the omitted variable test. In a three-level setting, we can have different estimator comparisons: Fixed effects vs. random effects estimators: Test for omitted level-two and level-three omitted effects, simultaneously, one compares FE_L2 to REF. But we will not know at which omitted variables exist. Fixed effects vs. GMM estimators: Once the existence of omitted effects is established but not sure at which level, we test for level-2 omitted effects by comparing FE_L2 vs GMM_L3. If you reject the null, the omitted variables are at level-2 The same is accomplished by testing FE_L2 vs. GMM_L2, since the latter is consistent only if there are no omitted effects at level-2. Fixed effects vs. fixed effects estimators: We can test for omitted level-2 effects, while allowing for omitted level-3 effects by comparing FE_L2 vs. FE_L3 since FE_L2 is robust against both level-2 and level-3 omitted effects while FE_L3 is only robust to level-3 omitted variables. Summary, use the omitted variable test comparing REF vs. FE_L2 first. If the null hypothesis is rejected, then there are omitted variables either at level-2 or level-3 Next, test whether there are level-2 omitted effects, since testing for omitted level three effects relies on the assumption there are no level-two omitted effects. You can use any of these pair of comparisons: FE_L2 vs. FE_L3 FE_L2 vs. GMM_L2 If no omitted variables at level-2 are found, test for omitted level-3 effects by comparing either FE_L3 vs. GMM_L3 GMM_L2 vs. GMM_L3 summary(m8.multilevel, &quot;REF&quot;) #&gt; #&gt; Call: #&gt; multilevelIV(formula = formula1, data = dataMultilevelIV) #&gt; #&gt; Number of levels: 3 #&gt; Number of observations: 2767 #&gt; Number of groups: L2(CID): 1347 L3(SID): 40 #&gt; #&gt; Coefficients for model REF: #&gt; Estimate Std. Error z-score Pr(&gt;|z|) #&gt; (Intercept) 64.36408 6.45959 9.964 &lt;2e-16 *** #&gt; X11 3.03564 0.02763 109.863 &lt;2e-16 *** #&gt; X12 9.00055 0.02608 345.152 &lt;2e-16 *** #&gt; X13 -2.00826 0.02521 -79.668 &lt;2e-16 *** #&gt; X14 1.98099 0.02639 75.079 &lt;2e-16 *** #&gt; X15 -0.57397 0.01980 -28.987 &lt;2e-16 *** #&gt; X21 -2.24237 0.18661 -12.016 &lt;2e-16 *** #&gt; X22 -3.26589 0.38703 -8.438 &lt;2e-16 *** #&gt; X23 -2.83325 0.10330 -27.427 &lt;2e-16 *** #&gt; X24 5.06964 0.07322 69.240 &lt;2e-16 *** #&gt; X31 2.07705 0.08935 23.246 &lt;2e-16 *** #&gt; X32 0.45409 0.19116 2.375 0.0175 * #&gt; X33 0.09919 0.04153 2.388 0.0169 * #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Omitted variable tests for model REF: #&gt; df Chisq p-value #&gt; GMM_L2_vs_REF 7 161.14 &lt; 2e-16 *** #&gt; GMM_L3_vs_REF 13 -829.75 1.000000 #&gt; FE_L2_vs_REF 13 40.00 0.000138 *** #&gt; FE_L3_vs_REF 13 39.99 0.000139 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 # compare REF with all the other estimators. Testing REF (the most efficient estimator) against FE_L2 (the most robust estimator), equivalently we are testing simultaneously for level-2 and level-3 omitted effects. Since the null hypothesis is rejected (p = 0.000139), there is bias in the random effects estimator. To test for level-2 omitted effects (regardless of level-3 omitted effects), we compare FE_L2 versus FE_L3 summary(m8.multilevel,&quot;FE_L2&quot;) #&gt; #&gt; Call: #&gt; multilevelIV(formula = formula1, data = dataMultilevelIV) #&gt; #&gt; Number of levels: 3 #&gt; Number of observations: 2767 #&gt; Number of groups: L2(CID): 1347 L3(SID): 40 #&gt; #&gt; Coefficients for model FE_L2: #&gt; Estimate Std. Error z-score Pr(&gt;|z|) #&gt; (Intercept) 0.000e+00 1.373e-18 0.00 1 #&gt; X11 3.048e+00 3.193e-02 95.47 &lt;2e-16 *** #&gt; X12 8.997e+00 3.377e-02 266.43 &lt;2e-16 *** #&gt; X13 -2.000e+00 3.211e-02 -62.29 &lt;2e-16 *** #&gt; X14 2.002e+00 3.437e-02 58.24 &lt;2e-16 *** #&gt; X15 -1.037e+00 3.301e-02 -31.41 &lt;2e-16 *** #&gt; X21 0.000e+00 1.881e-18 0.00 1 #&gt; X22 0.000e+00 1.060e-18 0.00 1 #&gt; X23 0.000e+00 1.782e-18 0.00 1 #&gt; X24 0.000e+00 7.536e-18 0.00 1 #&gt; X31 0.000e+00 2.747e-17 0.00 1 #&gt; X32 0.000e+00 2.679e-17 0.00 1 #&gt; X33 0.000e+00 1.210e-16 0.00 1 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Omitted variable tests for model FE_L2: #&gt; df Chisq p-value #&gt; FE_L2_vs_REF 13 40.00 0.000138 *** #&gt; FE_L2_vs_FE_L3 9 38.95 1.18e-05 *** #&gt; FE_L2_vs_GMM_L2 12 40.00 7.20e-05 *** #&gt; FE_L2_vs_GMM_L3 13 40.00 0.000138 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 The null hypothesis of no omitted level-2 effects is rejected (\\(p = 3.92e − 05\\)). Hence, there are omitted effects at level-two. We should use FE_L2 which is consistent with the underlying data that we generated (level-2 error correlated with \\(X_15\\), which leads to biased FE_L3 coefficients. The omitted variable test between FE_L2 and GMM_L2 should reject the null hypothesis of no omitted level-2 effects (p-value is 0). If we assume an endogenous variable as exogenous, the RE and GMM estimators will be biased because of the wrong set of internal instrumental variables. To increase our confidence, we should compare the omitted variable tests when the variable is considered endogenous vs. exogenous to get a sense whether the variable is truly endogenous. 30.1.3.4 Proxy Variables Can be in place of the omitted variable will not be able to estimate the effect of the omitted variable will be able to reduce some endogeneity caused bye the omitted variable but it can have Measurement Error. Hence, you have to be extremely careful when using proxies. Criteria for a proxy variable: The proxy is correlated with the omitted variable. Having the omitted variable in the regression will solve the problem of endogeneity The variation of the omitted variable unexplained by the proxy is uncorrelated with all independent variables, including the proxy. IQ test can be a proxy for ability in the regression between wage explained education. For the third requirement \\[ ability = \\gamma_0 + \\gamma_1 IQ + \\epsilon \\] where \\(\\epsilon\\) is uncorrelated with education and IQ test. References "],["endogenous-sample-selection.html", "30.2 Endogenous Sample Selection", " 30.2 Endogenous Sample Selection Also known as sample selection or self-selection problem The omitted variable is how people were selected into the sample Some disciplines consider nonresponse bias and selection bias as sample selection. When unobservable factors that affect who is in the sample are independent of unobservable factors that affect the outcome, the sample selection is not endogenous. Hence, the sample selection is ignorable and estimator that ignores sample selection is still consistent. when the unobservable factors that affect who is included in the sample are correlated with the unobservable factors that affect the outcome, the sample selection is endogenous and not ignorable, because estimators that ignore endogenous sample selection are not consistent (we don’t know which part of the observable outcome is related to the causal relationship and which part is due to different people were selected for the treatment and control groups). Assumptions: - The unobservables that affect the treatment selection and the outcome are jointly distributed as bivariate normal. Notes: If you don’t have strong exclusion restriction, identification is driven by the assumed non linearity in the functional form (through inverse Mills ratio). E.g., the estimate depend on the bivariate normal distribution of the error structure: With strong exclusion restriction for the covariate in the correction equation, the variation in this variable can help identify the control for selection With weak exclusion restriction, and the coavriate exists in both steps, it’s the assumed error structure that identifies the control for selection. To combat [Sample Selection], we can Randomization: participants are randomly selected into treatment and control. Instruments that determine the treatment status (i.e., treatment vs. control) but not the outcome (\\(Y\\)) Functional form of the selection and outcome processes: originated from (James J. Heckman 1976), later on generalize by (Amemiya 1984) We have our main model \\[ \\mathbf{y^* = xb + \\epsilon} \\] However, the pattern of missingness (i.e., censored) is related to the unobserved (latent) process: \\[ \\mathbf{z^* = w \\gamma + u} \\] and \\[ z_i = \\begin{cases} 1&amp; \\text{if } z_i^*&gt;0 \\\\ 0&amp;\\text{if } z_i^*\\le0\\\\ \\end{cases} \\] Equivalently, \\(z_i = 1\\) (\\(y_i\\) is observed) when \\[ u_i \\ge -w_i \\gamma \\] Hence, the probability of observed \\(y_i\\) is \\[ \\begin{aligned} P(u_i \\ge -w_i \\gamma) &amp;= 1 - \\Phi(-w_i \\gamma) \\\\ &amp;= \\Phi(w_i \\gamma) &amp; \\text{symmetry of the standard normal distribution} \\end{aligned} \\] We will assume the error term of the selection \\(\\mathbf{u \\sim N(0,I)}\\) \\(Var(u_i) = 1\\) for identification purposes Visually, \\(P(u_i \\ge -w_i \\gamma)\\) is the shaded area. x = seq(-3, 3, length = 200) y = dnorm(x, mean = 0, sd = 1) plot(x, y, type = &quot;l&quot;, main = bquote(&quot;Probabibility distribution of&quot; ~ u[i])) x = seq(0.3, 3, length = 100) y = dnorm(x, mean = 0, sd = 1) polygon(c(0.3, x, 3), c(0, y, 0), col = &quot;gray&quot;) text(1, 0.1, bquote(1 - Phi ~ (-w[i] ~ gamma))) arrows(-0.5, 0.1, 0.3, 0, length = .15) text(-0.5, 0.12, bquote(-w[i] ~ gamma)) legend( &quot;topright&quot;, &quot;Gray = Prob of Observed&quot;, pch = 1, title = &quot;legend&quot;, inset = .02 ) Hence in our observed model, we see \\[\\begin{equation} y_i = x_i\\beta + \\epsilon_i \\text{when $z_i=1$} \\end{equation}\\] and the joint distribution of the selection model (\\(u_i\\)), and the observed equation (\\(\\epsilon_i\\)) as \\[ \\left[ \\begin{array} {c} u \\\\ \\epsilon \\\\ \\end{array} \\right] \\sim^{iid}N \\left( \\left[ \\begin{array} {c} 0 \\\\ 0 \\\\ \\end{array} \\right], \\left[ \\begin{array} {cc} 1 &amp; \\rho \\\\ \\rho &amp; \\sigma^2_{\\epsilon} \\\\ \\end{array} \\right] \\right) \\] The relation between the observed and selection models: \\[ \\begin{aligned} E(y_i | y_i \\text{ observed}) &amp;= E(y_i| z^*&gt;0) \\\\ &amp;= E(y_i| -w_i \\gamma) \\\\ &amp;= \\mathbf{x}_i \\beta + E(\\epsilon_i | u_i &gt; -w_i \\gamma) \\\\ &amp;= \\mathbf{x}_i \\beta + \\rho \\sigma_\\epsilon \\frac{\\phi(w_i \\gamma)}{\\Phi(w_i \\gamma)} \\end{aligned} \\] where \\(\\frac{\\phi(w_i \\gamma)}{\\Phi(w_i \\gamma)}\\) is the Inverse Mills Ratio. and \\(\\rho \\sigma_\\epsilon \\frac{\\phi(w_i \\gamma)}{\\Phi(w_i \\gamma)} \\ge 0\\) A property of IMR: Its derivative is: \\(IMR&#39;(x) = -x IMR(x) - IMR(x)^2\\) Great visualization of special cases of correlation patterns amongst data and errors by professor Rob Hick Note: (Bareinboim and Pearl 2014) is an excellent summary of cases that we can still do causal inference in case of selection bias. I’ll try to summarize their idea here: Let X be an action, Y be an outcome, and S be a binary indicator of entry into the data pool where (S = 1 = in the sample, S = 0 =out of sample) and Q be the conditional distribution \\(Q = P(y|x)\\). Usually we want to understand , but because of S, we only have \\(P(y, x|S = 1)\\). Hence, we’d like to recover \\(P(y|x)\\) from \\(P(y, x|S = 1)\\) If both X and Y affect S, we can’t unbiasedly estimate \\(P(y|x)\\) In the case of Omitted variable bias (U) and sample selection bias (S), you have unblocked extraneous “flow” of information between X and Y, which causes spurious correlation for X and Y. Traditionally, we would recover Q by parametric assumption of the data generating process (e.g., Heckman 2-step) type of data-generating model (e..g, treatment-dependent or outcome-dependent) selection’s probability \\(P(S = 1|P a_s)\\) with non-parametrically based causal graphical models, the authors proposed more robust way to model misspecification regardless of the type of data-generating model, and do not require selection’s probability. Hence, you can recover Q without external data with external data causal effects with the Selection-backdoor criterion 30.2.1 Tobit-2 also known as Heckman’s standard sample selection model Assumption: joint normality of the errors Data here is taken from Mroz (1984). We want to estimate the log(wage) for married women, with education, experience, experience squared, and a dummy variable for living in a big city. But we can only observe the wage for women who are working, which means a lot of married women in 1975 who were out of the labor force are unaccounted for. Hence, an OLS estimate of the wage equation would be bias due to sample selection. Since we have data on non-participants (i.e., those who are not working for pay), we can correct for the selection process. The Tobit-2 estimates are consistent 30.2.1.1 Example 1 library(sampleSelection) library(dplyr) data(&quot;Mroz87&quot;) #1975 data on married women’s pay and labor-force participation from the Panel Study of Income Dynamics (PSID) head(Mroz87) #&gt; lfp hours kids5 kids618 age educ wage repwage hushrs husage huseduc huswage #&gt; 1 1 1610 1 0 32 12 3.3540 2.65 2708 34 12 4.0288 #&gt; 2 1 1656 0 2 30 12 1.3889 2.65 2310 30 9 8.4416 #&gt; 3 1 1980 1 3 35 12 4.5455 4.04 3072 40 12 3.5807 #&gt; 4 1 456 0 3 34 12 1.0965 3.25 1920 53 10 3.5417 #&gt; 5 1 1568 1 2 31 14 4.5918 3.60 2000 32 12 10.0000 #&gt; 6 1 2032 0 0 54 12 4.7421 4.70 1040 57 11 6.7106 #&gt; faminc mtr motheduc fatheduc unem city exper nwifeinc wifecoll huscoll #&gt; 1 16310 0.7215 12 7 5.0 0 14 10.910060 FALSE FALSE #&gt; 2 21800 0.6615 7 7 11.0 1 5 19.499981 FALSE FALSE #&gt; 3 21040 0.6915 12 7 5.0 0 15 12.039910 FALSE FALSE #&gt; 4 7300 0.7815 7 7 5.0 0 6 6.799996 FALSE FALSE #&gt; 5 27300 0.6215 12 14 9.5 1 7 20.100058 TRUE FALSE #&gt; 6 19495 0.6915 14 7 7.5 1 33 9.859054 FALSE FALSE Mroz87 = Mroz87 %&gt;% mutate(kids = kids5+kids618) library(nnet) library(ggplot2) library(reshape2) 2-stage Heckman’s model: probit equation estimates the selection process (who is in the labor force?) the results from 1st stage are used to construct a variable that captures the selection effect in the wage equation. This correction variable is called the inverse Mills ratio. # OLS: log wage regression on LF participants only ols1 = lm(log(wage) ~ educ + exper + I( exper^2 ) + city, data=subset(Mroz87, lfp==1)) # Heckman&#39;s Two-step estimation with LFP selection equation heck1 = heckit(selection = lfp ~ age + I( age^2 ) + kids + huswage + educ, # the selection process, lfp = 1 if the woman is participating in the labor force outcome = log(wage) ~ educ + exper + I( exper^2 ) + city, data=Mroz87 ) summary(heck1$probit) #&gt; -------------------------------------------- #&gt; Probit binary choice model/Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 4 iterations #&gt; Return code 1: gradient close to zero (gradtol) #&gt; Log-Likelihood: -482.8212 #&gt; Model: Y == &#39;1&#39; in contrary to &#39;0&#39; #&gt; 753 observations (325 &#39;negative&#39; and 428 &#39;positive&#39;) and 6 free parameters (df = 747) #&gt; Estimates: #&gt; Estimate Std. error t value Pr(&gt; t) #&gt; XS(Intercept) -4.18146681 1.40241567 -2.9816 0.002867 ** #&gt; XSage 0.18608901 0.06517476 2.8552 0.004301 ** #&gt; XSI(age^2) -0.00241491 0.00075857 -3.1835 0.001455 ** #&gt; XSkids -0.14955977 0.03825079 -3.9100 9.230e-05 *** #&gt; XShuswage -0.04303635 0.01220791 -3.5253 0.000423 *** #&gt; XSeduc 0.12502818 0.02277645 5.4894 4.034e-08 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; Significance test: #&gt; chi2(5) = 64.10407 (p=1.719042e-12) #&gt; -------------------------------------------- summary(heck1$lm) #&gt; #&gt; Call: #&gt; lm(formula = YO ~ -1 + XO + imrData$IMR1, subset = YS == 1, weights = weightsNoNA) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -3.09494 -0.30953 0.05341 0.36530 2.34770 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; XO(Intercept) -0.6143381 0.3768796 -1.630 0.10383 #&gt; XOeduc 0.1092363 0.0197062 5.543 5.24e-08 *** #&gt; XOexper 0.0419205 0.0136176 3.078 0.00222 ** #&gt; XOI(exper^2) -0.0008226 0.0004059 -2.026 0.04335 * #&gt; XOcity 0.0510492 0.0692414 0.737 0.46137 #&gt; imrData$IMR1 0.0551177 0.2111916 0.261 0.79423 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 0.6674 on 422 degrees of freedom #&gt; Multiple R-squared: 0.7734, Adjusted R-squared: 0.7702 #&gt; F-statistic: 240 on 6 and 422 DF, p-value: &lt; 2.2e-16 Use only variables that affect the selection process in the selection equation. Technically, the selection equation and the equation of interest could have the same set of regressors. But it is not recommended because we should only use variables (or at least one) in the selection equation that affect the selection process, but not the wage process (i.e., instruments). Here, variable kids fulfill that role: women with kids may be more likely to stay home, but working moms with kids would not have their wages change. Alternatively, # ML estimation of selection model ml1 = selection( selection = lfp ~ age + I(age ^ 2) + kids + huswage + educ, outcome = log(wage) ~ educ + exper + I(exper ^ 2) + city, data = Mroz87 ) summary(ml1) #&gt; -------------------------------------------- #&gt; Tobit 2 model (sample selection model) #&gt; Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 3 iterations #&gt; Return code 8: successive function values within relative tolerance limit (reltol) #&gt; Log-Likelihood: -914.0777 #&gt; 753 observations (325 censored and 428 observed) #&gt; 13 free parameters (df = 740) #&gt; Probit selection equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -4.1484037 1.4109302 -2.940 0.003382 ** #&gt; age 0.1842132 0.0658041 2.799 0.005253 ** #&gt; I(age^2) -0.0023925 0.0007664 -3.122 0.001868 ** #&gt; kids -0.1488158 0.0384888 -3.866 0.000120 *** #&gt; huswage -0.0434253 0.0123229 -3.524 0.000451 *** #&gt; educ 0.1255639 0.0229229 5.478 5.91e-08 *** #&gt; Outcome equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.5814781 0.3052031 -1.905 0.05714 . #&gt; educ 0.1078481 0.0172998 6.234 7.63e-10 *** #&gt; exper 0.0415752 0.0133269 3.120 0.00188 ** #&gt; I(exper^2) -0.0008125 0.0003974 -2.044 0.04129 * #&gt; city 0.0522990 0.0682652 0.766 0.44385 #&gt; Error terms: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; sigma 0.66326 0.02309 28.729 &lt;2e-16 *** #&gt; rho 0.05048 0.23169 0.218 0.828 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; -------------------------------------------- # summary(ml1$twoStep) Manual myprob &lt;- probit(lfp ~ age + I( age^2 ) + kids + huswage + educ, # x = TRUE, # iterlim = 30, data = Mroz87) summary(myprob) #&gt; -------------------------------------------- #&gt; Probit binary choice model/Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 4 iterations #&gt; Return code 1: gradient close to zero (gradtol) #&gt; Log-Likelihood: -482.8212 #&gt; Model: Y == &#39;1&#39; in contrary to &#39;0&#39; #&gt; 753 observations (325 &#39;negative&#39; and 428 &#39;positive&#39;) and 6 free parameters (df = 747) #&gt; Estimates: #&gt; Estimate Std. error t value Pr(&gt; t) #&gt; (Intercept) -4.18146681 1.40241567 -2.9816 0.002867 ** #&gt; age 0.18608901 0.06517476 2.8552 0.004301 ** #&gt; I(age^2) -0.00241491 0.00075857 -3.1835 0.001455 ** #&gt; kids -0.14955977 0.03825079 -3.9100 9.230e-05 *** #&gt; huswage -0.04303635 0.01220791 -3.5253 0.000423 *** #&gt; educ 0.12502818 0.02277645 5.4894 4.034e-08 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; Significance test: #&gt; chi2(5) = 64.10407 (p=1.719042e-12) #&gt; -------------------------------------------- imr &lt;- invMillsRatio(myprob) Mroz87$IMR1 &lt;- imr$IMR1 manually_est &lt;- lm(log(wage) ~ educ + exper + I( exper^2 ) + city + IMR1, data = Mroz87, subset = (lfp == 1)) summary(manually_est) #&gt; #&gt; Call: #&gt; lm(formula = log(wage) ~ educ + exper + I(exper^2) + city + IMR1, #&gt; data = Mroz87, subset = (lfp == 1)) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -3.09494 -0.30953 0.05341 0.36530 2.34770 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.6143381 0.3768796 -1.630 0.10383 #&gt; educ 0.1092363 0.0197062 5.543 5.24e-08 *** #&gt; exper 0.0419205 0.0136176 3.078 0.00222 ** #&gt; I(exper^2) -0.0008226 0.0004059 -2.026 0.04335 * #&gt; city 0.0510492 0.0692414 0.737 0.46137 #&gt; IMR1 0.0551177 0.2111916 0.261 0.79423 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 0.6674 on 422 degrees of freedom #&gt; Multiple R-squared: 0.1582, Adjusted R-squared: 0.1482 #&gt; F-statistic: 15.86 on 5 and 422 DF, p-value: 2.505e-14 Similarly, probit_selection &lt;- glm(lfp ~ age + I( age^2 ) + kids + huswage + educ, data = Mroz87, family = binomial(link = &#39;probit&#39;)) probit_lp &lt;- -predict(probit_selection) inv_mills &lt;- dnorm(probit_lp) / (1 - pnorm(probit_lp)) Mroz87$inv_mills &lt;- inv_mills probit_outcome &lt;- glm( log(wage) ~ educ + exper + I(exper ^ 2) + city + inv_mills, data = Mroz87, subset = (lfp == 1) ) summary(probit_outcome) #&gt; #&gt; Call: #&gt; glm(formula = log(wage) ~ educ + exper + I(exper^2) + city + #&gt; inv_mills, data = Mroz87, subset = (lfp == 1)) #&gt; #&gt; Deviance Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -3.09494 -0.30953 0.05341 0.36530 2.34770 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.6143383 0.3768798 -1.630 0.10383 #&gt; educ 0.1092363 0.0197062 5.543 5.24e-08 *** #&gt; exper 0.0419205 0.0136176 3.078 0.00222 ** #&gt; I(exper^2) -0.0008226 0.0004059 -2.026 0.04335 * #&gt; city 0.0510492 0.0692414 0.737 0.46137 #&gt; inv_mills 0.0551179 0.2111918 0.261 0.79423 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; (Dispersion parameter for gaussian family taken to be 0.4454809) #&gt; #&gt; Null deviance: 223.33 on 427 degrees of freedom #&gt; Residual deviance: 187.99 on 422 degrees of freedom #&gt; AIC: 876.49 #&gt; #&gt; Number of Fisher Scoring iterations: 2 library(&quot;stargazer&quot;) library(&quot;Mediana&quot;) library(&quot;plm&quot;) # function to calculate corrected SEs for regression cse = function(reg) { rob = sqrt(diag(vcovHC(reg, type = &quot;HC1&quot;))) return(rob) } # stargazer table stargazer( # ols1, heck1, ml1, # manually_est, se = list(cse(ols1), NULL, NULL), title = &quot;Married women&#39;s wage regressions&quot;, type = &quot;text&quot;, df = FALSE, digits = 4, selection.equation = T ) #&gt; #&gt; Married women&#39;s wage regressions #&gt; =================================================== #&gt; Dependent variable: #&gt; ------------------------------- #&gt; lfp #&gt; Heckman selection #&gt; selection #&gt; (1) (2) #&gt; --------------------------------------------------- #&gt; age 0.1861*** 0.1842*** #&gt; (0.0658) #&gt; #&gt; I(age2) -0.0024 -0.0024*** #&gt; (0.0008) #&gt; #&gt; kids -0.1496*** -0.1488*** #&gt; (0.0385) #&gt; #&gt; huswage -0.0430 -0.0434*** #&gt; (0.0123) #&gt; #&gt; educ 0.1250 0.1256*** #&gt; (0.0130) (0.0229) #&gt; #&gt; Constant -4.1815*** -4.1484*** #&gt; (0.2032) (1.4109) #&gt; #&gt; --------------------------------------------------- #&gt; Observations 753 753 #&gt; R2 0.1582 #&gt; Adjusted R2 0.1482 #&gt; Log Likelihood -914.0777 #&gt; rho 0.0830 0.0505 (0.2317) #&gt; Inverse Mills Ratio 0.0551 (0.2099) #&gt; =================================================== #&gt; Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 stargazer( ols1, # heck1, # ml1, manually_est, se = list(cse(ols1), NULL, NULL), title = &quot;Married women&#39;s wage regressions&quot;, type = &quot;text&quot;, df = FALSE, digits = 4, selection.equation = T ) #&gt; #&gt; Married women&#39;s wage regressions #&gt; ================================================ #&gt; Dependent variable: #&gt; ---------------------------- #&gt; log(wage) #&gt; (1) (2) #&gt; ------------------------------------------------ #&gt; educ 0.1057*** 0.1092*** #&gt; (0.0130) (0.0197) #&gt; #&gt; exper 0.0411*** 0.0419*** #&gt; (0.0154) (0.0136) #&gt; #&gt; I(exper2) -0.0008* -0.0008** #&gt; (0.0004) (0.0004) #&gt; #&gt; city 0.0542 0.0510 #&gt; (0.0653) (0.0692) #&gt; #&gt; IMR1 0.0551 #&gt; (0.2112) #&gt; #&gt; Constant -0.5308*** -0.6143 #&gt; (0.2032) (0.3769) #&gt; #&gt; ------------------------------------------------ #&gt; Observations 428 428 #&gt; R2 0.1581 0.1582 #&gt; Adjusted R2 0.1501 0.1482 #&gt; Residual Std. Error 0.6667 0.6674 #&gt; F Statistic 19.8561*** 15.8635*** #&gt; ================================================ #&gt; Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 Rho is an estimate of the correlation of the errors between the selection and wage equations. In the lower panel, the estimated coefficient on the inverse Mills ratio is given for the Heckman model. The fact that it is not statistically different from zero is consistent with the idea that selection bias was not a serious problem in this case. If the estimated coefficient of the inverse Mills ratio in the Heckman model is not statistically different from zero, then selection bias was not a serious problem. 30.2.1.2 Example 2 This code is from R package sampleSelection set.seed(0) library(&quot;sampleSelection&quot;) library(&quot;mvtnorm&quot;) eps &lt;- rmvnorm(500, c(0,0), matrix(c(1,-0.7,-0.7,1), 2, 2)) # bivariate normal disturbances xs &lt;- runif(500)# uniformly distributed explanatory variable (vectors of explanatory variables for the selection ) ys &lt;- xs + eps[,1] &gt; 0 # probit data generating process xo &lt;- runif(500) # vectors of explanatory variables for outcome equation yoX &lt;- xo + eps[,2] # latent outcome yo &lt;- yoX*(ys &gt; 0) # observable outcome # true intercepts = 0 and our true slopes = 1 # xs and xo are independent. Hence, exclusion restriction is fulfilled summary( selection(ys~xs, yo ~xo)) #&gt; -------------------------------------------- #&gt; Tobit 2 model (sample selection model) #&gt; Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 5 iterations #&gt; Return code 1: gradient close to zero (gradtol) #&gt; Log-Likelihood: -712.3163 #&gt; 500 observations (172 censored and 328 observed) #&gt; 6 free parameters (df = 494) #&gt; Probit selection equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.2228 0.1081 -2.061 0.0399 * #&gt; xs 1.3377 0.2014 6.642 8.18e-11 *** #&gt; Outcome equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.0002265 0.1294178 -0.002 0.999 #&gt; xo 0.7299070 0.1635925 4.462 1.01e-05 *** #&gt; Error terms: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; sigma 0.9190 0.0574 16.009 &lt; 2e-16 *** #&gt; rho -0.5392 0.1521 -3.544 0.000431 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; -------------------------------------------- without the exclusion restriction, we generate yo using xs instead of xo. yoX &lt;- xs + eps[,2] yo &lt;- yoX*(ys &gt; 0) summary(selection(ys ~ xs, yo ~ xs)) #&gt; -------------------------------------------- #&gt; Tobit 2 model (sample selection model) #&gt; Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 14 iterations #&gt; Return code 8: successive function values within relative tolerance limit (reltol) #&gt; Log-Likelihood: -712.8298 #&gt; 500 observations (172 censored and 328 observed) #&gt; 6 free parameters (df = 494) #&gt; Probit selection equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.1984 0.1114 -1.781 0.0756 . #&gt; xs 1.2907 0.2085 6.191 1.25e-09 *** #&gt; Outcome equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.5499 0.5644 -0.974 0.33038 #&gt; xs 1.3987 0.4482 3.120 0.00191 ** #&gt; Error terms: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; sigma 0.85091 0.05352 15.899 &lt;2e-16 *** #&gt; rho -0.13226 0.72684 -0.182 0.856 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; -------------------------------------------- We can see that our estimates are still unbiased but standard errors are substantially larger. The exclusion restriction (i.e., independent information about the selection process) has a certain identifying power that we desire. Hence, it’s better to have different set of variable for the selection process from the interested equation. Without the exclusion restriction, we solely rely on the functional form identification. 30.2.2 Tobit-5 Also known as the switching regression model Condition: There is at least one variable in X in the selection process not included in the observed process. Used when there are separate models for participants, and non-participants. set.seed(0) vc &lt;- diag(3) vc[lower.tri(vc)] &lt;- c(0.9, 0.5, 0.1) vc[upper.tri(vc)] &lt;- vc[lower.tri(vc)] eps &lt;- rmvnorm(500, c(0,0,0), vc) # 3 disturbance vectors by a 3-dimensional normal distribution xs &lt;- runif(500) # uniformly distributed on [0, 1] ys &lt;- xs + eps[,1] &gt; 0 xo1 &lt;- runif(500) # uniformly distributed on [0, 1] yo1 &lt;- xo1 + eps[,2] xo2 &lt;- runif(500) # uniformly distributed on [0, 1] yo2 &lt;- xo2 + eps[,3] exclusion restriction is fulfilled when x’s are independent. summary(selection(ys~xs, list(yo1 ~ xo1, yo2 ~ xo2))) # one selection equation and a list of two outcome equations #&gt; -------------------------------------------- #&gt; Tobit 5 model (switching regression model) #&gt; Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 11 iterations #&gt; Return code 1: gradient close to zero (gradtol) #&gt; Log-Likelihood: -895.8201 #&gt; 500 observations: 172 selection 1 (FALSE) and 328 selection 2 (TRUE) #&gt; 10 free parameters (df = 490) #&gt; Probit selection equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.1550 0.1051 -1.474 0.141 #&gt; xs 1.1408 0.1785 6.390 3.86e-10 *** #&gt; Outcome equation 1: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 0.02708 0.16395 0.165 0.869 #&gt; xo1 0.83959 0.14968 5.609 3.4e-08 *** #&gt; Outcome equation 2: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 0.1583 0.1885 0.840 0.401 #&gt; xo2 0.8375 0.1707 4.908 1.26e-06 *** #&gt; Error terms: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; sigma1 0.93191 0.09211 10.118 &lt;2e-16 *** #&gt; sigma2 0.90697 0.04434 20.455 &lt;2e-16 *** #&gt; rho1 0.88988 0.05353 16.623 &lt;2e-16 *** #&gt; rho2 0.17695 0.33139 0.534 0.594 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; -------------------------------------------- All the estimates are close to the true values. Example of functional form misspecification set.seed(5) eps &lt;- rmvnorm(1000, rep(0, 3), vc) eps &lt;- eps^2 - 1 # subtract 1 in order to get the mean zero disturbances xs &lt;- runif(1000, -1, 0) # interval [−1, 0] to get an asymmetric distribution over observed choices ys &lt;- xs + eps[,1] &gt; 0 xo1 &lt;- runif(1000) yo1 &lt;- xo1 + eps[,2] xo2 &lt;- runif(1000) yo2 &lt;- xo2 + eps[,3] summary(selection(ys~xs, list(yo1 ~ xo1, yo2 ~ xo2), iterlim=20)) #&gt; -------------------------------------------- #&gt; Tobit 5 model (switching regression model) #&gt; Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 4 iterations #&gt; Return code 3: Last step could not find a value above the current. #&gt; Boundary of parameter space? #&gt; Consider switching to a more robust optimisation method temporarily. #&gt; Log-Likelihood: -1665.936 #&gt; 1000 observations: 760 selection 1 (FALSE) and 240 selection 2 (TRUE) #&gt; 10 free parameters (df = 990) #&gt; Probit selection equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.53698 0.05808 -9.245 &lt; 2e-16 *** #&gt; xs 0.31268 0.09395 3.328 0.000906 *** #&gt; Outcome equation 1: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.70679 0.03573 -19.78 &lt;2e-16 *** #&gt; xo1 0.91603 0.05626 16.28 &lt;2e-16 *** #&gt; Outcome equation 2: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 0.1446 NaN NaN NaN #&gt; xo2 1.1196 0.5014 2.233 0.0258 * #&gt; Error terms: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; sigma1 0.67770 0.01760 38.50 &lt;2e-16 *** #&gt; sigma2 2.31432 0.07615 30.39 &lt;2e-16 *** #&gt; rho1 -0.97137 NaN NaN NaN #&gt; rho2 0.17039 NaN NaN NaN #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; -------------------------------------------- Although we still have an exclusion restriction (xo1 and xo2 are independent), we now have problems with the intercepts (i.e., they are statistically significantly different from the true values zero), and convergence problems. If we don’t have the exclusion restriction, we will have a larger variance of xs set.seed(6) xs &lt;- runif(1000, -1, 1) ys &lt;- xs + eps[,1] &gt; 0 yo1 &lt;- xs + eps[,2] yo2 &lt;- xs + eps[,3] summary(tmp &lt;- selection(ys~xs, list(yo1 ~ xs, yo2 ~ xs), iterlim=20)) #&gt; -------------------------------------------- #&gt; Tobit 5 model (switching regression model) #&gt; Maximum Likelihood estimation #&gt; Newton-Raphson maximisation, 16 iterations #&gt; Return code 8: successive function values within relative tolerance limit (reltol) #&gt; Log-Likelihood: -1936.431 #&gt; 1000 observations: 626 selection 1 (FALSE) and 374 selection 2 (TRUE) #&gt; 10 free parameters (df = 990) #&gt; Probit selection equation: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.3528 0.0424 -8.321 2.86e-16 *** #&gt; xs 0.8354 0.0756 11.050 &lt; 2e-16 *** #&gt; Outcome equation 1: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) -0.55448 0.06339 -8.748 &lt;2e-16 *** #&gt; xs 0.81764 0.06048 13.519 &lt;2e-16 *** #&gt; Outcome equation 2: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 0.6457 0.4994 1.293 0.196 #&gt; xs 0.3520 0.3197 1.101 0.271 #&gt; Error terms: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; sigma1 0.59187 0.01853 31.935 &lt;2e-16 *** #&gt; sigma2 1.97257 0.07228 27.289 &lt;2e-16 *** #&gt; rho1 0.15568 0.15914 0.978 0.328 #&gt; rho2 -0.01541 0.23370 -0.066 0.947 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; -------------------------------------------- Usually it will not converge. Even if it does, the results may be seriously biased. Note The log-likelihood function of the models might not be globally concave. Hence, it might not converge, or converge to a local maximum. To combat this, we can use Different starting value Different maximization methods. refer to Non-linear Least Squares for suggestions. 30.2.2.0.1 Pattern-Mixture Models compared to the Heckman’s model where it assumes the value of the missing data is predetermined, pattern-mixture models assume missingness affect the distribution of variable of interest (e.g., Y) To read more, you can check NCSU, stefvanbuuren. References "],["controls.html", "Chapter 31 Controls", " Chapter 31 Controls This section follows (Cinelli, Forney, and Pearl 2022) and code library(dagitty) library(ggdag) Traditional literature usually considers adding additional control variables is harmless to analysis. More specifically, this problem is most prevalent in the review process. Reviewers only ask authors to add more variables to “control” for such variable, which can be asked with only limited rationale. Rarely ever you will see a reviewer asks an author to remove some variables to see the behavior of the variable of interest (This is also related to Coefficient stability). However, adding more controls is only good in limited cases. References "],["bad-controls.html", "31.1 Bad Controls", " 31.1 Bad Controls 31.1.1 M-bias Traditional textbooks (G. W. Imbens and Rubin 2015; Angrist and Pischke 2009) consider \\(Z\\) as a good control because it’s a pre-treatment variable, where it correlates with the treatment and the outcome. This is most prevalent in Matching Methods, where we are recommended to include all “pre-treatment” variables. However, it is a bad control because it opens the back-door path \\(Z \\leftarrow U_1 \\to Z \\leftarrow U_2 \\to Y\\) # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; u1-&gt;x; u1-&gt;z; u2-&gt;z; u2-&gt;y}&quot;) # set u as latent latents(model) &lt;- c(&quot;u1&quot;, &quot;u2&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, u1=1, z=2, u2=3, y=3), y = c(x=1, u1=2, z=1.5, u2=2, y=1)) ## ggplot ggdag(model) + theme_dag() Even though Z can correlate with both X and Y very well, it’s not a confounder. Controlling for Z can bias the \\(X \\to Y\\) estimate, because it opens the colliding path \\(X \\leftarrow U_1 \\rightarrow Z \\leftarrow U_2 \\leftarrow Y\\) n &lt;- 1e4 u1 &lt;- rnorm(n) u2 &lt;- rnorm(n) z &lt;- u1 + u2 + rnorm(n) x &lt;- u1 + rnorm(n) causal_coef &lt;- 2 y &lt;- causal_coef * x - 4*u2 + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.1: Model 1Model 2 (Intercept)0.02&nbsp;&nbsp;&nbsp;&nbsp;-0.02&nbsp;&nbsp;&nbsp;&nbsp; (0.04)&nbsp;&nbsp;&nbsp;(0.03)&nbsp;&nbsp;&nbsp; x1.99 ***2.78 *** (0.03)&nbsp;&nbsp;&nbsp;(0.03)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-1.59 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.32&nbsp;&nbsp;&nbsp;&nbsp;0.57&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Another worse variation is # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; u1-&gt;x; u1-&gt;z; u2-&gt;z; u2-&gt;y; z-&gt;y}&quot;) # set u as latent latents(model) &lt;- c(&quot;u1&quot;, &quot;u2&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, u1=1, z=2, u2=3, y=3), y = c(x=1, u1=2, z=1.5, u2=2, y=1)) ## ggplot ggdag(model) + theme_dag() You can’t do much in this case. If you don’t control for \\(Z\\), then you have an open back-door path \\(X \\leftarrow U_1 \\to Z \\to Y\\), and the unadjusted estimate is biased If you control for \\(Z\\), then you open backdoor path \\(X \\leftarrow U_1 \\to Z \\leftarrow U_2 \\to Y\\), and the adjusted estimate is also biased Hence, we cannot identify the causal effect in this case. We can do sensitivity analyses to examine (Cinelli et al. 2019; Cinelli and Hazlett 2020) the plausible bounds on the strength of the direct effect of \\(Z \\to Y\\) the strength of the effects of the latent variables 31.1.2 Bias Amplification # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;x; u-&gt;y; z-&gt;x}&quot;) # set u as latent latents(model) &lt;- c(&quot;u&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(z=1, x=2, u=3, y=4), y = c(z=1, x=1, u=2, y=1)) ## ggplot ggdag(model) + theme_dag() Controlling for Z amplifies the omitted variable bias n &lt;- 1e4 z &lt;- rnorm(n) u &lt;- rnorm(n) x &lt;- 2*z + u + rnorm(n) y &lt;- x + 2*u + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.2: Model 1Model 2 (Intercept)-0.01&nbsp;&nbsp;&nbsp;&nbsp;-0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; x1.33 ***2.00 *** (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-2.02 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.03)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.70&nbsp;&nbsp;&nbsp;&nbsp;0.79&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. 31.1.3 Overcontrol bias Sometimes, this is similar to controlling for variables that are proxy of the dependent variable. # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;z; z-&gt;y}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, y=3), y = c(x=1, z=1, y=1)) ## ggplot ggdag(model) + theme_dag() If X is a proxy for Z (i.e., a mediator between Z and Y), controlling for Z is bad n &lt;- 1e4 x &lt;- rnorm(n) z &lt;- x + rnorm(n) y &lt;- z + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.3: Model 1Model 2 (Intercept)0.00&nbsp;&nbsp;&nbsp;&nbsp;0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x1.02 ***0.02&nbsp;&nbsp;&nbsp;&nbsp; (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.99 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.34&nbsp;&nbsp;&nbsp;&nbsp;0.67&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Now you see that Z is significant, which is technically true, but we are interested in the causal coefficient of X on Y. Another setting for overcontrol bias is # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;m; m-&gt;z; m-&gt;y}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, m=2, z=2, y=3), y = c(x=2, m=2, z=1, y=2)) ## ggplot ggdag(model) + theme_dag() n &lt;- 1e4 x &lt;- rnorm(n) m &lt;- x + rnorm(n) z &lt;- m + rnorm(n) y &lt;- m + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.4: Model 1Model 2 (Intercept)-0.01&nbsp;&nbsp;&nbsp;&nbsp;-0.00&nbsp;&nbsp;&nbsp;&nbsp; (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x1.00 ***0.48 *** (0.01)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.52 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.33&nbsp;&nbsp;&nbsp;&nbsp;0.50&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Another setting for this bias is # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;z; z-&gt;y; u-&gt;z; u-&gt;y}&quot;) # set u as latent latents(model) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, u=3, y=4), y = c(x=1, z=1, u=2, y=1)) ## ggplot ggdag(model) + theme_dag() set.seed(1) n &lt;- 1e4 x &lt;- rnorm(n) u &lt;- rnorm(n) z &lt;- x + u + rnorm(n) y &lt;- z + u + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.5: Model 1Model 2 (Intercept)-0.01&nbsp;&nbsp;&nbsp;&nbsp;-0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x1.01 ***-0.47 *** (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.48 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.15&nbsp;&nbsp;&nbsp;&nbsp;0.78&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. The total effect of X on Y is not biased (i.e., \\(1.01 \\approx 1.48 - 0.47\\)). Controlling for Z will fail to identify the direct effect of X on Y and opens the biasing path \\(X \\rightarrow Z \\leftarrow U \\rightarrow Y\\) 31.1.4 Selection Bias Also known as “collidee stratification bias” rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; x-&gt;z; u-&gt;z;u-&gt;y}&quot;) # set u as latent latents(model) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, u=2, y=3), y = c(x=3, z=2, u=4, y=3)) ## ggplot ggdag(model) + theme_dag() Adjusting Z opens the colliding path \\(X \\to Z \\leftarrow U \\to Y\\) n &lt;- 1e4 x &lt;- rnorm(n) u &lt;- rnorm(n) z &lt;- x + u + rnorm(n) y &lt;- x + 2*u + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.6: Model 1Model 2 (Intercept)0.00&nbsp;&nbsp;&nbsp;&nbsp;0.02&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; x0.98 ***-0.03&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.00 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.17&nbsp;&nbsp;&nbsp;&nbsp;0.49&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Another setting is rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; x-&gt;z; y-&gt;z}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, y=3), y = c(x=2, z=1, y=2)) ## ggplot ggdag(model) + theme_dag() Controlling Z opens the colliding path \\(X \\to Z \\leftarrow Y\\) n &lt;- 1e4 x &lt;- rnorm(n) y &lt;- x + rnorm(n) z &lt;- x + y + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.7: Model 1Model 2 (Intercept)-0.00&nbsp;&nbsp;&nbsp;&nbsp;-0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x1.03 ***-0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.51 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.00)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.51&nbsp;&nbsp;&nbsp;&nbsp;0.76&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. 31.1.5 Case-control Bias rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; y-&gt;z}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, y=3), y = c(x=2, z=1, y=2)) ## ggplot ggdag(model) + theme_dag() Controlling Z opens a virtual collider (a descendant of a collider). However, if \\(X\\) truly has no causal effect on \\(Y\\). Then, controlling for \\(Z\\) is valid for testing whether the effect of \\(X\\) on \\(Y\\) is 0 because X is d-separated from \\(Y\\) regardless of adjusting for \\(Z\\) n &lt;- 1e4 x &lt;- rnorm(n) y &lt;- x + rnorm(n) z &lt;- y + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.8: Model 1Model 2 (Intercept)0.00&nbsp;&nbsp;&nbsp;&nbsp;-0.00&nbsp;&nbsp;&nbsp;&nbsp; (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x1.00 ***0.50 *** (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.50 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.00)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.50&nbsp;&nbsp;&nbsp;&nbsp;0.75&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. References "],["good-controls.html", "31.2 Good Controls", " 31.2 Good Controls 31.2.1 Omitted Variable Bias Correction This is when \\(Z\\) can block all back-door paths. rm(list = ls()) model &lt;- dagitty(&quot;dag{x-&gt;y; z-&gt;x; z-&gt;y}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, y=3, z=2), y = c(x=1, y=1, z=2)) ## ggplot ggdag(model) + theme_dag() Unadjusted estimate is biased adjusting for Z blocks the backdoor path n &lt;- 1e4 z &lt;- rnorm(n) causal_coef = 2 beta2 = 3 x &lt;- z + rnorm(n) y &lt;- causal_coef * x + beta2 * z + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.9: Model 1Model 2 (Intercept)-0.01&nbsp;&nbsp;&nbsp;&nbsp;0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x3.53 ***2.00 *** (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.00 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.82&nbsp;&nbsp;&nbsp;&nbsp;0.97&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. # cleans workspace rm(list = ls()) # Draw DAG # specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; z-&gt;x; u-&gt;y}&quot;) # set u as latent latents(model) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, u=3, y = 4), y = c(x=1, y=1, z=2, u = 3)) ## ggplot ggdag(model) + theme_dag() Unadjusted estimate is biased adjusting for Z blocks the backdoor door path due to U n &lt;- 1e4 u &lt;- rnorm(n) z &lt;- u + rnorm(n) causal_coef = 2 x &lt;- z + rnorm(n) y &lt;- causal_coef * x + u + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.10: Model 1Model 2 (Intercept)-0.02&nbsp;&nbsp;&nbsp;&nbsp;-0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x2.32 ***1.98 *** (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.52 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.91&nbsp;&nbsp;&nbsp;&nbsp;0.92&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Even though Z is significant, we cannot give it a causal interpretation. # cleans workspace rm(list = ls()) # Draw DAG # specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; u-&gt;x; z-&gt;y}&quot;) # set u as latent latents(model) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=3, u=2, y = 4), y = c(x=1, y=1, z=2, u = 3)) ## ggplot ggdag(model) + theme_dag() n &lt;- 1e4 u &lt;- rnorm(n) z &lt;- u + rnorm(n) x &lt;- u + rnorm(n) causal_coef &lt;- 2 y &lt;- causal_coef * x + z + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 17.1: Model 1Model 2 (Intercept)0.01&nbsp;&nbsp;&nbsp;&nbsp;0.00&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x2.50 ***2.00 *** (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.98 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.84&nbsp;&nbsp;&nbsp;&nbsp;0.93&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Even though Z is significant, we cannot give it a causal interpretation. Summary # cleans workspace rm(list = ls()) # Model 1 model1 &lt;- dagitty(&quot;dag{x-&gt;y; z-&gt;x; z-&gt;y}&quot;) ## coordinates for plotting coordinates(model1) &lt;- list( x = c(x=1, y=3, z=2), y = c(x=1, y=1, z=2)) # Model 2 # specify edges model2 &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; z-&gt;x; u-&gt;y}&quot;) # set u as latent latents(model2) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model2) &lt;- list( x = c(x=1, z=2, u=3, y = 4), y = c(x=1, y=1, z=2, u = 3)) # Model 3 # specify edges model3 &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; u-&gt;x; z-&gt;y}&quot;) # set u as latent latents(model3) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model3) &lt;- list( x = c(x=1, z=3, u=2, y = 4), y = c(x=1, y=1, z=2, u = 3)) par(mfrow=c(1,3)) ## ggplot ggdag(model1) + theme_dag() ## ggplot ggdag(model2) + theme_dag() ## ggplot ggdag(model3) + theme_dag() 31.2.2 Omitted Variable Bias in Mediation Correction Common causes of \\(X\\) and any mediator (between \\(X\\) and \\(Y\\)) confound the effect of \\(X\\) on \\(Y\\) # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; z-&gt;x; x-&gt;m; z-&gt;m; m-&gt;y}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, m=3, y=4), y = c(x=1, z=2, m=1, y=1)) ## ggplot ggdag(model) + theme_dag() Z is a confounder of both the mediator M and X n &lt;- 1e4 z &lt;- rnorm(n) x &lt;- z + rnorm(n) causal_coef &lt;- 2 m &lt;- causal_coef * x + z + rnorm(n) y &lt;- m + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.11: Model 1Model 2 (Intercept)0.02&nbsp;&nbsp;&nbsp;&nbsp;0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x2.49 ***2.01 *** (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.97 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.83&nbsp;&nbsp;&nbsp;&nbsp;0.87&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; z-&gt;x; x-&gt;m; u-&gt;m; m-&gt;y}&quot;) # set u as latent latents(model) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, u=3, m=4, y=5), y = c(x=1, z=2, u=3, m=1, y=1)) ## ggplot ggdag(model) + theme_dag() n &lt;- 1e4 u &lt;- rnorm(n) z &lt;- u + rnorm(n) x &lt;- z + rnorm(n) causal_coef &lt;- 2 m &lt;- causal_coef * x + u + rnorm(n) y &lt;- m + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 17.2: Model 1Model 2 (Intercept)0.01&nbsp;&nbsp;&nbsp;&nbsp;0.00&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; x2.32 ***1.98 *** (0.01)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.51 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.86&nbsp;&nbsp;&nbsp;&nbsp;0.87&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; z-&gt;m; x-&gt;m; u-&gt;x; m-&gt;y}&quot;) # set u as latent latents(model) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=3, u=2, m=4, y=5), y = c(x=1, z=2, u=3, m=1, y=1)) ## ggplot ggdag(model) + theme_dag() n &lt;- 1e4 u &lt;- rnorm(n) z &lt;- u + rnorm(n) x &lt;- u + rnorm(n) causal_coef &lt;- 2 m &lt;- causal_coef * x + z + rnorm(n) y &lt;- m + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.12: Model 1Model 2 (Intercept)0.01&nbsp;&nbsp;&nbsp;&nbsp;0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x2.48 ***1.99 *** (0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.01 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.78&nbsp;&nbsp;&nbsp;&nbsp;0.87&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Summary # model 4 model4 &lt;- dagitty(&quot;dag{x-&gt;y; z-&gt;x; x-&gt;m; z-&gt;m; m-&gt;y}&quot;) ## coordinates for plotting coordinates(model4) &lt;- list( x = c(x=1, z=2, m=3, y=4), y = c(x=1, z=2, m=1, y=1)) # model 5 model5 &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; z-&gt;x; x-&gt;m; u-&gt;m; m-&gt;y}&quot;) # set u as latent latents(model5) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model5) &lt;- list( x = c(x=1, z=2, u=3, m=4, y=5), y = c(x=1, z=2, u=3, m=1, y=1)) # model 6 model6 &lt;- dagitty(&quot;dag{x-&gt;y; u-&gt;z; z-&gt;m; x-&gt;m; u-&gt;x; m-&gt;y}&quot;) # set u as latent latents(model6) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model6) &lt;- list( x = c(x=1, z=3, u=2, m=4, y=5), y = c(x=1, z=2, u=3, m=1, y=1)) par(mfrow=c(1,3)) ## ggplot ggdag(model4) + theme_dag() ## ggplot ggdag(model5) + theme_dag() ## ggplot ggdag(model6) + theme_dag() "],["neutral-controls.html", "31.3 Neutral Controls", " 31.3 Neutral Controls 31.3.1 Good Predictive Controls Good for precision # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; z-&gt;y}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, y=2), y = c(x=1, z=2, y=1)) ## ggplot ggdag(model) + theme_dag() Controlling for Z does not help or hurt identification, but it can increase precision (i.e., reducing SE) n &lt;- 1e4 z &lt;- rnorm(n) x &lt;- rnorm(n) y &lt;- x + 2 * z + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.13: Model 1Model 2 (Intercept)-0.02&nbsp;&nbsp;&nbsp;&nbsp;-0.00&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; x0.98 ***0.99 *** (0.02)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.01 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.16&nbsp;&nbsp;&nbsp;&nbsp;0.83&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Similar coefficients, but smaller SE when controlling for Z Another variation is # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; x-&gt;m; z-&gt;m; m-&gt;y}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, m=2, y=3), y = c(x=1, z=2, m=1, y=1)) ## ggplot ggdag(model) + theme_dag() n &lt;- 1e4 z &lt;- rnorm(n) x &lt;- rnorm(n) m &lt;- 2 * z + rnorm(n) y &lt;- x + 2 * m + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.14: Model 1Model 2 (Intercept)-0.08&nbsp;&nbsp;&nbsp;&nbsp;-0.02&nbsp;&nbsp;&nbsp;&nbsp; (0.05)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; x0.99 ***1.00 *** (0.05)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.99 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.05&nbsp;&nbsp;&nbsp;&nbsp;0.77&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Controlling for Z can reduce SE 31.3.2 Good Selection Bias # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; x-&gt;z; z-&gt;w; u-&gt;w;u-&gt;y}&quot;) # set u as latent latents(model) &lt;- &quot;u&quot; ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, w=3, u=3, y=5), y = c(x=3, z=2, w=1, u=4, y=3)) ## ggplot ggdag(model) + theme_dag() Unadjusted estimate is unbiased Controlling for Z can increase SE Controlling for Z while having on W can help identify X n &lt;- 1e4 x &lt;- rnorm(n) u &lt;- rnorm(n) z &lt;- x + rnorm(n) w &lt;- z + u + rnorm(n) y &lt;- x - 2*u + rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + w), lm(y ~ x + z + w)) Table 31.15: Model 1Model 2Model 3 (Intercept)-0.02&nbsp;&nbsp;&nbsp;&nbsp;-0.02&nbsp;&nbsp;&nbsp;&nbsp;-0.03&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; x0.98 ***1.66 ***0.98 *** (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.67 ***-1.00 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp;(0.01)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.02 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.16&nbsp;&nbsp;&nbsp;&nbsp;0.38&nbsp;&nbsp;&nbsp;&nbsp;0.50&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. 31.3.3 Bad Predictive Controls # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; z-&gt;x}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=1, y=2), y = c(x=1, z=2, y=1)) ## ggplot ggdag(model) + theme_dag() n &lt;- 1e4 z &lt;- rnorm(n) x &lt;- 2 * z + rnorm(n) y &lt;- x + 2 * rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.16: Model 1Model 2 (Intercept)0.01&nbsp;&nbsp;&nbsp;&nbsp;0.01&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; x1.00 ***1.02 *** (0.01)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-0.04&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.05)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.56&nbsp;&nbsp;&nbsp;&nbsp;0.56&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Similar coefficients, but greater SE when controlling for Z Another variation is rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; x-&gt;z}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=1, y=2), y = c(x=1, z=2, y=1)) ## ggplot ggdag(model) + theme_dag() set.seed(1) n &lt;- 1e4 x &lt;- rnorm(n) z &lt;- 2 * x + rnorm(n) y &lt;- x + 2 * rnorm(n) jtools::export_summs(lm(y ~ x), lm(y ~ x + z)) Table 31.17: Model 1Model 2 (Intercept)0.02&nbsp;&nbsp;&nbsp;&nbsp;0.02&nbsp;&nbsp;&nbsp;&nbsp; (0.02)&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; x1.00 ***0.99 *** (0.02)&nbsp;&nbsp;&nbsp;(0.05)&nbsp;&nbsp;&nbsp; z&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.00&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.02)&nbsp;&nbsp;&nbsp; N10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.20&nbsp;&nbsp;&nbsp;&nbsp;0.20&nbsp;&nbsp;&nbsp;&nbsp; *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Worse SE when controlling for Z (\\(0.02 &lt; 0.05\\)) 31.3.4 Bad Selection Bias # cleans workspace rm(list = ls()) # DAG ## specify edges model &lt;- dagitty(&quot;dag{x-&gt;y; x-&gt;z}&quot;) ## coordinates for plotting coordinates(model) &lt;- list( x = c(x=1, z=2, y=2), y = c(x=1, z=2, y=1)) ## ggplot ggdag(model) + theme_dag() Not all post-treatment variables are bad. Controlling for \\(Z\\) is neutral, but it might hurt the precision of the causal effect. "],["choosing-controls.html", "31.4 Choosing Controls", " 31.4 Choosing Controls library(pcalg) library(dagitty) library(causaleffect) By providing a causal diagram, deciding the appropriateness of controls are automated. Fusion DAGitty Guide on how to choose confounders: VanderWeele (2019) In cases where it’s hard to determine the plausibility of controls, we might need to further analysis. sensemakr provides such tools. library(sensemakr) In simple cases, we can follow the simple rules of thumb provided by Steinmetz and Block (2022) (p. 614, Fig 2) References "],["mediation.html", "Chapter 32 Mediation ", " Chapter 32 Mediation "],["traditional.html", "32.1 Traditional", " 32.1 Traditional (Baron and Kenny 1986) is outdated because of step 1, but we could still see the original idea. 3 regressions Step 1: \\(X \\to Y\\) Step 2: \\(X \\to M\\) Step 3: \\(X + M \\to Y\\) where \\(X\\) = independent variable \\(Y\\) = dependent variable \\(M\\) = mediating variable Originally, the first path from \\(X \\to Y\\) suggested by (Baron and Kenny 1986) needs to be signficaint. But there are cases that you could have indirect of \\(X\\) on \\(Y\\) without significant direct effect of \\(X\\) on \\(Y\\) (e.g., when the effect is absorbed into M, or there are two counteracting effects \\(M_1, M_2\\) that cancel out each other effect). Mathematically, \\[ Y = b_0 + b_1 X + \\epsilon \\] \\(b_1\\) does not need to be significant. We examine the effect of \\(X\\) on \\(M\\). This step requires that there is a significant effect of \\(X\\) on \\(M\\) to continue with the analysis Mathematically, \\[ M = b_0 + b_2 X + \\epsilon \\] where \\(b_2\\) needs to be significant. &lt;br&gt; In this step, we want to the effect of \\(M\\) on \\(Y\\) “absorbs” most of the direct effect of \\(X\\) on \\(Y\\) (or at least makes the effect smaller). Mathematically, \\[ Y = b_0 + b_4 X + b_3 M + \\epsilon \\] \\(b_4\\) needs to be either smaller or insignificant. The effect of \\(X\\) on \\(Y\\) then, \\(M\\) … mediates between \\(X\\) and \\(Y\\) completely disappear (\\(b_4\\) insignificant) Fully (i.e., full mediation) partially disappear (\\(b_4\\) smaller than in step 1) Partially (i.e., partial mediation) Examine the mediation effect (i.e., whether it is significant) Fist approach: Sobel’s test (Sobel 1982) Second approach: bootstrapping (Preacher and Hayes 2004) (preferable) More details can be found here 32.1.1 Example 1 from Virginia’s library myData &lt;- read.csv(&#39;http://static.lib.virginia.edu/statlab/materials/data/mediationData.csv&#39;) # Step 1 (no longer necessary) model.0 &lt;- lm(Y ~ X, myData) # Step 2 model.M &lt;- lm(M ~ X, myData) # Step 3 model.Y &lt;- lm(Y ~ X + M, myData) # Step 4 (boostrapping) library(mediation) results &lt;- mediate( model.M, model.Y, treat = &#39;X&#39;, mediator = &#39;M&#39;, boot = TRUE, sims = 500 ) summary(results) #&gt; #&gt; Causal Mediation Analysis #&gt; #&gt; Nonparametric Bootstrap Confidence Intervals with the Percentile Method #&gt; #&gt; Estimate 95% CI Lower 95% CI Upper p-value #&gt; ACME 0.3565 0.2216 0.53 &lt;2e-16 *** #&gt; ADE 0.0396 -0.1638 0.30 0.76 #&gt; Total Effect 0.3961 0.1749 0.66 &lt;2e-16 *** #&gt; Prop. Mediated 0.9000 0.4978 1.77 &lt;2e-16 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Sample Size Used: 100 #&gt; #&gt; #&gt; Simulations: 500 Total Effect = 0.3961 = \\(b_1\\) (step 1) = total effect of \\(X\\) on \\(Y\\) without \\(M\\) Direct Effect = ADE = 0.0396 = \\(b_4\\) (step 3) = direct effect of \\(X\\) on \\(Y\\) accounting for the indirect effect of \\(M\\) ACME = Average Causal Mediation Effects = \\(b_1 - b_4\\) = 0.3961 - 0.0396 = 0.3565 = \\(b_2 \\times b_3\\) = 0.56102 * 0.6355 = 0.3565 Using mediation package suggested by (Imai, Keele, and Tingley 2010) (Imai, Keele, and Yamamoto 2010). More on details of the package can be found here 2 types of Inference in this package: Model-based inference: Assumptions: Treatment is randomized (could use matching methods to achieve this). Sequential Ignorability: conditional on covariates, there is other confounders that affect the relationship between (1) treatment-mediator, (2) treatment-outcome, (3) mediator-outcome. Typically hard to argue in observational data. This assumption is for the identification of ACME (i.e., average causal mediation effects). Design-based inference Notations: we stay consistent with package instruction \\(M_i(t)\\) = mediator \\(T_i\\) = treatment status (0,1) \\(Y_i(t,m)\\) = outcome where t = treatment, and m = mediating variables. \\(X_i\\) = vector of observed pre-treatment confounders Treatment effect (per unit \\(i\\)) = \\(\\tau_i = Y_i(1,M_i(1)) - Y_i (0,M_i(0))\\) which has 2 effects Causal mediation effects: \\(\\delta_i (t) \\equiv Y_i (t,M_i(1)) - Y_i(t,M_i(0))\\) Direct effects: \\(\\zeta (t) \\equiv Y_i (1, M_i(1)) - Y_i(0, M_i(0))\\) summing up to the treatment effect: \\(\\tau_i = \\delta_i (t) + \\zeta_i (1-t)\\) More on sequential ignorability \\[ \\{ Y_i (t&#39;, m) , M_i (t) \\} \\perp T_i |X_i = x \\] \\[ Y_i(t&#39;,m) \\perp M_i(t) | T_i = t, X_i = x \\] where \\(0 &lt; P(T_i = t | X_i = x)\\) \\(0 &lt; P(M_i = m | T_i = t , X_i =x)\\) First condition is the standard strong ignorability condition where treatment assignment is random conditional on pre-treatment confounders. Second condition is stronger where the mediators is also random given the observed treatment and pre-treatment confounders. This condition is satisfied only when there is no unobserved pre-treatment confounders, and post-treatment confounders, and multiple mediators that are correlated. My understanding is that until the moment I write this note, there is no way to test the sequential ignorability assumption. Hence, researchers can only do sensitivity analysis to argue for their result. References "],["model-based-causal-mediation-analysis.html", "32.2 Model-based causal mediation analysis", " 32.2 Model-based causal mediation analysis I only put my understanding of model-based causal mediation analysis because I do not encounter design-based. Maybe in the future when I have to use it, I will start reading on it. Fit 2 models mediator model: conditional distribution of the mediators \\(M_i | T_i, X_i\\) Outcome model: conditional distribution of \\(Y_i | T_i, M_i, X_i\\) mediation can accommodate almost all types of model for both mediator model and outcome model except Censored mediator model. The update here is that estimation of ACME does not rely on product or difference of coefficients (see 32.1.1 , which requires very strict assumption: (1) linear regression models of mediator and outcome, (2) \\(T_i\\) and \\(M_i\\) effects are additive and no interaction library(mediation) set.seed(2014) data(&quot;framing&quot;, package = &quot;mediation&quot;) med.fit &lt;- lm(emo ~ treat + age + educ + gender + income, data = framing) out.fit &lt;- glm( cong_mesg ~ emo + treat + age + educ + gender + income, data = framing, family = binomial(&quot;probit&quot;) ) # Quasi-Bayesian Monte Carlo med.out &lt;- mediate( med.fit, out.fit, treat = &quot;treat&quot;, mediator = &quot;emo&quot;, robustSE = TRUE, sims = 1000 # should be 10000 in practice ) summary(med.out) #&gt; #&gt; Causal Mediation Analysis #&gt; #&gt; Quasi-Bayesian Confidence Intervals #&gt; #&gt; Estimate 95% CI Lower 95% CI Upper p-value #&gt; ACME (control) 0.0826 0.0356 0.14 &lt;2e-16 *** #&gt; ACME (treated) 0.0831 0.0348 0.14 &lt;2e-16 *** #&gt; ADE (control) 0.0137 -0.0967 0.13 0.82 #&gt; ADE (treated) 0.0142 -0.1101 0.14 0.82 #&gt; Total Effect 0.0968 -0.0290 0.23 0.14 #&gt; Prop. Mediated (control) 0.7706 -6.3968 4.70 0.14 #&gt; Prop. Mediated (treated) 0.7938 -5.7506 4.52 0.14 #&gt; ACME (average) 0.0829 0.0351 0.14 &lt;2e-16 *** #&gt; ADE (average) 0.0140 -0.1047 0.13 0.82 #&gt; Prop. Mediated (average) 0.7822 -6.0737 4.61 0.14 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Sample Size Used: 265 #&gt; #&gt; #&gt; Simulations: 1000 Nonparametric bootstrap version med.out &lt;- mediate( med.fit, out.fit, boot = TRUE, treat = &quot;treat&quot;, mediator = &quot;emo&quot;, sims = 1000, # should be 10000 in practice boot.ci.type = &quot;bca&quot; # bias-corrected and accelerated intervals ) summary(med.out) #&gt; #&gt; Causal Mediation Analysis #&gt; #&gt; Nonparametric Bootstrap Confidence Intervals with the BCa Method #&gt; #&gt; Estimate 95% CI Lower 95% CI Upper p-value #&gt; ACME (control) 0.0833 0.0386 0.15 0.002 ** #&gt; ACME (treated) 0.0844 0.0374 0.15 0.002 ** #&gt; ADE (control) 0.0114 -0.0875 0.13 0.792 #&gt; ADE (treated) 0.0125 -0.1033 0.14 0.792 #&gt; Total Effect 0.0958 -0.0291 0.23 0.124 #&gt; Prop. Mediated (control) 0.8696 -97.4552 1.00 0.126 #&gt; Prop. Mediated (treated) 0.8806 -82.9081 1.02 0.126 #&gt; ACME (average) 0.0839 0.0381 0.15 0.002 ** #&gt; ADE (average) 0.0120 -0.0961 0.14 0.792 #&gt; Prop. Mediated (average) 0.8751 -90.6217 1.01 0.126 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Sample Size Used: 265 #&gt; #&gt; #&gt; Simulations: 1000 If theoretically understanding suggests that there is treatment and mediator interaction med.fit &lt;- lm(emo ~ treat + age + educ + gender + income, data = framing) out.fit &lt;- glm( cong_mesg ~ emo * treat + age + educ + gender + income, data = framing, family = binomial(&quot;probit&quot;) ) med.out &lt;- mediate( med.fit, out.fit, treat = &quot;treat&quot;, mediator = &quot;emo&quot;, robustSE = TRUE, sims = 100 ) summary(med.out) #&gt; #&gt; Causal Mediation Analysis #&gt; #&gt; Quasi-Bayesian Confidence Intervals #&gt; #&gt; Estimate 95% CI Lower 95% CI Upper p-value #&gt; ACME (control) 0.079925 0.035230 0.14 &lt;2e-16 *** #&gt; ACME (treated) 0.097504 0.045279 0.17 &lt;2e-16 *** #&gt; ADE (control) -0.000865 -0.107228 0.11 0.98 #&gt; ADE (treated) 0.016714 -0.121163 0.14 0.76 #&gt; Total Effect 0.096640 -0.046523 0.23 0.26 #&gt; Prop. Mediated (control) 0.672278 -5.266859 3.40 0.26 #&gt; Prop. Mediated (treated) 0.860650 -6.754965 3.60 0.26 #&gt; ACME (average) 0.088715 0.040207 0.15 &lt;2e-16 *** #&gt; ADE (average) 0.007925 -0.111833 0.14 0.88 #&gt; Prop. Mediated (average) 0.766464 -5.848496 3.43 0.26 #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Sample Size Used: 265 #&gt; #&gt; #&gt; Simulations: 100 test.TMint(med.out, conf.level = .95) # test treatment-mediator interaction effect #&gt; #&gt; Test of ACME(1) - ACME(0) = 0 #&gt; #&gt; data: estimates from med.out #&gt; ACME(1) - ACME(0) = 0.017579, p-value = 0.44 #&gt; alternative hypothesis: true ACME(1) - ACME(0) is not equal to 0 #&gt; 95 percent confidence interval: #&gt; -0.02676143 0.06257828 plot(med.out) mediation can be used in conjunction with any of your imputation packages. And it can also handle mediated moderation or non-binary treatment variables, or multi-level data Sensitivity Analysis for sequential ignorability test for unobserved pre-treatment covariates \\(\\rho\\) = correlation between the residuals of the mediator and outcome regressions. If \\(\\rho\\) is significant, we have evidence for violation of sequential ignorability (i.e., there is unobserved pre-treatment confounders). med.fit &lt;- lm(emo ~ treat + age + educ + gender + income, data = framing) out.fit &lt;- glm( cong_mesg ~ emo + treat + age + educ + gender + income, data = framing, family = binomial(&quot;probit&quot;) ) med.out &lt;- mediate( med.fit, out.fit, treat = &quot;treat&quot;, mediator = &quot;emo&quot;, robustSE = TRUE, sims = 100 ) sens.out &lt;- medsens(med.out, rho.by = 0.1, # \\rho varies from -0.9 to 0.9 by 0.1 effect.type = &quot;indirect&quot;, # sensitivity on ACME # effect.type = &quot;direct&quot;, # sensitivity on ADE # effect.type = &quot;both&quot;, # sensitivity on ACME and ADE sims = 100) summary(sens.out) #&gt; #&gt; Mediation Sensitivity Analysis: Average Mediation Effect #&gt; #&gt; Sensitivity Region: ACME for Control Group #&gt; #&gt; Rho ACME(control) 95% CI Lower 95% CI Upper R^2_M*R^2_Y* R^2_M~R^2_Y~ #&gt; [1,] 0.3 0.0061 -0.0070 0.0163 0.09 0.0493 #&gt; [2,] 0.4 -0.0081 -0.0254 0.0043 0.16 0.0877 #&gt; #&gt; Rho at which ACME for Control Group = 0: 0.3 #&gt; R^2_M*R^2_Y* at which ACME for Control Group = 0: 0.09 #&gt; R^2_M~R^2_Y~ at which ACME for Control Group = 0: 0.0493 #&gt; #&gt; #&gt; Sensitivity Region: ACME for Treatment Group #&gt; #&gt; Rho ACME(treated) 95% CI Lower 95% CI Upper R^2_M*R^2_Y* R^2_M~R^2_Y~ #&gt; [1,] 0.3 0.0069 -0.0085 0.0197 0.09 0.0493 #&gt; [2,] 0.4 -0.0099 -0.0304 0.0054 0.16 0.0877 #&gt; #&gt; Rho at which ACME for Treatment Group = 0: 0.3 #&gt; R^2_M*R^2_Y* at which ACME for Treatment Group = 0: 0.09 #&gt; R^2_M~R^2_Y~ at which ACME for Treatment Group = 0: 0.0493 plot(sens.out, sens.par = &quot;rho&quot;, main = &quot;Anxiety&quot;, ylim = c(-0.2, 0.2)) ACME confidence intervals contains 0 when \\(\\rho \\in (0.3,0.4)\\) Alternatively, using \\(R^2\\) interpretation, we need to specify the direction of confounder that affects the mediator and outcome variables in plot using sign.prod = \"positive\" (i.e., same direction) or sign.prod = \"negative\" (i.e., opposite direction). plot(sens.out, sens.par = &quot;R2&quot;, r.type = &quot;total&quot;, sign.prod = &quot;positive&quot;) "],["directed-acyclic-graph.html", "Chapter 33 Directed Acyclic Graph", " Chapter 33 Directed Acyclic Graph Native R: dagitty ggdag dagR r-causal: by Center for Causal Discovery. Also available in Python Publication-ready (with R and Latex): shinyDAG Standalone program: DAG program by Sven Knuppel "],["basic-notations.html", "33.1 Basic Notations", " 33.1 Basic Notations Basic building blocks of DAG Mediators (chains): \\(X \\to Z \\to Y\\) controlling for Z blocks (closes) the causal impact of \\(X \\to Y\\) Common causes (forks): \\(X \\leftarrow Z \\to Y\\) Z (i.e., confounder) is a common cause in which it induces a non-causal association between \\(X\\) and \\(Y\\). Controlling for \\(Z\\) should close this association. \\(Z\\) d-separates \\(X\\) from \\(Y\\) when it blocks (closes) all paths from \\(X\\) to \\(Y\\) (i.e., \\(X \\perp Y |Z\\)). This applies to both common causes and mediators. Common effects (colliders): \\(X \\to Z \\leftarrow Y\\) Not controlling for \\(Z\\) does not induce an association between \\(X\\) and \\(Y\\) Controlling for \\(Z\\) induces a non-causal association between \\(X\\) and \\(Y\\) Notes: A descendant of a variable behavior similarly to that variable (e.g., a descendant of \\(Z\\) can behave like \\(Z\\) and partially control for \\(Z\\)) Rule of thumb for multiple Controls: o have Causal inference \\(X \\to Y\\), we must Close all backdoor path between \\(X\\) and \\(Y\\) (to eliminate spurious correlation) Do not close any causal path between \\(X\\) and \\(Y\\) (any mediators). "],["report.html", "Chapter 34 Report", " Chapter 34 Report Structure Exploratory analysis plots preliminary results interesting structure/features in the data outliers Model Assumptions Why this model/ How is this model the best one? Consideration: interactions, collinearity, dependence Model Fit How well does it fit? Are the model assumptions met? Residual analysis Inference/ Prediction Are there different way to support your inference? Conclusion Recommendation Limitation of the analysis How to correct those in the future This chapter is based on the jtools package. More information can be found here. "],["one-summary-table.html", "34.1 One summary table", " 34.1 One summary table Packages for reporting: Summary Statistics Table: qwraps2 vtable gtsummary apaTables stargazer Regression Table gtsummary sjPlot,sjmisc, sjlabelled stargazer: recommended (Example) modelsummary library(jtools) data(movies) fit &lt;- lm(metascore ~ budget + us_gross + year, data = movies) summ(fit) Observations 831 (10 missing obs. deleted) Dependent variable metascore Type OLS linear regression F(3,827) 26.23 R² 0.09 Adj. R² 0.08 Est. S.E. t val. p (Intercept) 52.06 139.67 0.37 0.71 budget -0.00 0.00 -5.89 0.00 us_gross 0.00 0.00 7.61 0.00 year 0.01 0.07 0.08 0.94 Standard errors: OLS summ(fit, scale = TRUE, vifs = TRUE, part.corr = TRUE, confint = TRUE, pvals = FALSE) #notice that scale here is TRUE Observations 831 (10 missing obs. deleted) Dependent variable metascore Type OLS linear regression F(3,827) 26.23 R² 0.09 Adj. R² 0.08 Est. 2.5% 97.5% t val. VIF partial.r part.r (Intercept) 63.01 61.91 64.11 112.23 NA NA NA budget -3.78 -5.05 -2.52 -5.89 1.31 -0.20 -0.20 us_gross 5.28 3.92 6.64 7.61 1.52 0.26 0.25 year 0.05 -1.18 1.28 0.08 1.24 0.00 0.00 Standard errors: OLS; Continuous predictors are mean-centered and scaled by 1 s.d. #obtain clsuter-robust SE data(&quot;PetersenCL&quot;, package = &quot;sandwich&quot;) fit2 &lt;- lm(y ~ x, data = PetersenCL) summ(fit2, robust = &quot;HC3&quot;, cluster = &quot;firm&quot;) Observations 5000 Dependent variable y Type OLS linear regression F(1,4998) 1310.74 R² 0.21 Adj. R² 0.21 Est. S.E. t val. p (Intercept) 0.03 0.07 0.44 0.66 x 1.03 0.05 20.36 0.00 Standard errors: Cluster-robust, type = HC3 Model to Equation # install.packages(&quot;equatiomatic&quot;) # not available for R 4.2 fit &lt;- lm(metascore ~ budget + us_gross + year, data = movies) # show the theoretical model equatiomatic::extract_eq(fit) # display the actual coefficients equatiomatic::extract_eq(fit, use_coefs = TRUE) "],["model-comparison.html", "34.2 Model Comparison", " 34.2 Model Comparison fit &lt;- lm(metascore ~ log(budget), data = movies) fit_b &lt;- lm(metascore ~ log(budget) + log(us_gross), data = movies) fit_c &lt;- lm(metascore ~ log(budget) + log(us_gross) + runtime, data = movies) coef_names &lt;- c(&quot;Budget&quot; = &quot;log(budget)&quot;, &quot;US Gross&quot; = &quot;log(us_gross)&quot;, &quot;Runtime (Hours)&quot; = &quot;runtime&quot;, &quot;Constant&quot; = &quot;(Intercept)&quot;) export_summs(fit, fit_b, fit_c, robust = &quot;HC3&quot;, coefs = coef_names) Table 31.1: Model 1Model 2Model 3 Budget-2.43 ***-5.16 ***-6.70 *** (0.44)&nbsp;&nbsp;&nbsp;(0.62)&nbsp;&nbsp;&nbsp;(0.67)&nbsp;&nbsp;&nbsp; US Gross&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.96 ***3.85 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(0.51)&nbsp;&nbsp;&nbsp;(0.48)&nbsp;&nbsp;&nbsp; Runtime (Hours)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14.29 *** &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1.63)&nbsp;&nbsp;&nbsp; Constant105.29 ***81.84 ***83.35 *** (7.65)&nbsp;&nbsp;&nbsp;(8.66)&nbsp;&nbsp;&nbsp;(8.82)&nbsp;&nbsp;&nbsp; N831&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;831&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;831&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R20.03&nbsp;&nbsp;&nbsp;&nbsp;0.09&nbsp;&nbsp;&nbsp;&nbsp;0.17&nbsp;&nbsp;&nbsp;&nbsp; Standard errors are heteroskedasticity robust. *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05. Another package is modelsummary library(modelsummary) lm_mod &lt;- lm(mpg ~ wt + hp + cyl, mtcars) msummary(lm_mod, vcov = c(&quot;iid&quot;,&quot;robust&quot;,&quot;HC4&quot;))  (1)   (2)   (3) (Intercept) 38.752 38.752 38.752 (1.787) (2.286) (2.177) wt −3.167 −3.167 −3.167 (0.741) (0.833) (0.819) hp −0.018 −0.018 −0.018 (0.012) (0.010) (0.013) cyl −0.942 −0.942 −0.942 (0.551) (0.573) (0.572) Num.Obs. 32 32 32 R2 0.843 0.843 0.843 R2 Adj. 0.826 0.826 0.826 AIC 155.5 155.5 155.5 BIC 162.8 162.8 162.8 Log.Lik. −72.738 −72.738 −72.738 F 50.171 31.065 32.623 RMSE 2.35 2.35 2.35 Std.Errors IID HC3 HC4 modelplot(lm_mod, vcov = c(&quot;iid&quot;,&quot;robust&quot;,&quot;HC4&quot;)) Another package is stargazer library(&quot;stargazer&quot;) stargazer(attitude) #&gt; #&gt; % Table created by stargazer v.5.2.3 by Marek Hlavac, Social Policy Institute. E-mail: marek.hlavac at gmail.com #&gt; % Date and time: Sat, Aug 12, 2023 - 1:09:25 PM #&gt; \\begin{table}[!htbp] \\centering #&gt; \\caption{} #&gt; \\label{} #&gt; \\begin{tabular}{@{\\extracolsep{5pt}}lccccc} #&gt; \\\\[-1.8ex]\\hline #&gt; \\hline \\\\[-1.8ex] #&gt; Statistic &amp; \\multicolumn{1}{c}{N} &amp; \\multicolumn{1}{c}{Mean} &amp; \\multicolumn{1}{c}{St. Dev.} &amp; \\multicolumn{1}{c}{Min} &amp; \\multicolumn{1}{c}{Max} \\\\ #&gt; \\hline \\\\[-1.8ex] #&gt; rating &amp; 30 &amp; 64.633 &amp; 12.173 &amp; 40 &amp; 85 \\\\ #&gt; complaints &amp; 30 &amp; 66.600 &amp; 13.315 &amp; 37 &amp; 90 \\\\ #&gt; privileges &amp; 30 &amp; 53.133 &amp; 12.235 &amp; 30 &amp; 83 \\\\ #&gt; learning &amp; 30 &amp; 56.367 &amp; 11.737 &amp; 34 &amp; 75 \\\\ #&gt; raises &amp; 30 &amp; 64.633 &amp; 10.397 &amp; 43 &amp; 88 \\\\ #&gt; critical &amp; 30 &amp; 74.767 &amp; 9.895 &amp; 49 &amp; 92 \\\\ #&gt; advance &amp; 30 &amp; 42.933 &amp; 10.289 &amp; 25 &amp; 72 \\\\ #&gt; \\hline \\\\[-1.8ex] #&gt; \\end{tabular} #&gt; \\end{table} ## 2 OLS models linear.1 &lt;- lm(rating ~ complaints + privileges + learning + raises + critical,data = attitude) linear.2 &lt;- lm(rating ~ complaints + privileges + learning, data = attitude) ## create an indicator dependent variable, and run a probit model attitude$high.rating &lt;- (attitude$rating &gt; 70) probit.model &lt;- glm( high.rating ~ learning + critical + advance, data = attitude, family = binomial(link = &quot;probit&quot;) ) stargazer(linear.1, linear.2, probit.model, title = &quot;Results&quot;, align = TRUE) #&gt; #&gt; % Table created by stargazer v.5.2.3 by Marek Hlavac, Social Policy Institute. E-mail: marek.hlavac at gmail.com #&gt; % Date and time: Sat, Aug 12, 2023 - 1:09:26 PM #&gt; % Requires LaTeX packages: dcolumn #&gt; \\begin{table}[!htbp] \\centering #&gt; \\caption{Results} #&gt; \\label{} #&gt; \\begin{tabular}{@{\\extracolsep{5pt}}lD{.}{.}{-3} D{.}{.}{-3} D{.}{.}{-3} } #&gt; \\\\[-1.8ex]\\hline #&gt; \\hline \\\\[-1.8ex] #&gt; &amp; \\multicolumn{3}{c}{\\textit{Dependent variable:}} \\\\ #&gt; \\cline{2-4} #&gt; \\\\[-1.8ex] &amp; \\multicolumn{2}{c}{rating} &amp; \\multicolumn{1}{c}{high.rating} \\\\ #&gt; \\\\[-1.8ex] &amp; \\multicolumn{2}{c}{\\textit{OLS}} &amp; \\multicolumn{1}{c}{\\textit{probit}} \\\\ #&gt; \\\\[-1.8ex] &amp; \\multicolumn{1}{c}{(1)} &amp; \\multicolumn{1}{c}{(2)} &amp; \\multicolumn{1}{c}{(3)}\\\\ #&gt; \\hline \\\\[-1.8ex] #&gt; complaints &amp; 0.692^{***} &amp; 0.682^{***} &amp; \\\\ #&gt; &amp; (0.149) &amp; (0.129) &amp; \\\\ #&gt; &amp; &amp; &amp; \\\\ #&gt; privileges &amp; -0.104 &amp; -0.103 &amp; \\\\ #&gt; &amp; (0.135) &amp; (0.129) &amp; \\\\ #&gt; &amp; &amp; &amp; \\\\ #&gt; learning &amp; 0.249 &amp; 0.238^{*} &amp; 0.164^{***} \\\\ #&gt; &amp; (0.160) &amp; (0.139) &amp; (0.053) \\\\ #&gt; &amp; &amp; &amp; \\\\ #&gt; raises &amp; -0.033 &amp; &amp; \\\\ #&gt; &amp; (0.202) &amp; &amp; \\\\ #&gt; &amp; &amp; &amp; \\\\ #&gt; critical &amp; 0.015 &amp; &amp; -0.001 \\\\ #&gt; &amp; (0.147) &amp; &amp; (0.044) \\\\ #&gt; &amp; &amp; &amp; \\\\ #&gt; advance &amp; &amp; &amp; -0.062 \\\\ #&gt; &amp; &amp; &amp; (0.042) \\\\ #&gt; &amp; &amp; &amp; \\\\ #&gt; Constant &amp; 11.011 &amp; 11.258 &amp; -7.476^{**} \\\\ #&gt; &amp; (11.704) &amp; (7.318) &amp; (3.570) \\\\ #&gt; &amp; &amp; &amp; \\\\ #&gt; \\hline \\\\[-1.8ex] #&gt; Observations &amp; \\multicolumn{1}{c}{30} &amp; \\multicolumn{1}{c}{30} &amp; \\multicolumn{1}{c}{30} \\\\ #&gt; R$^{2}$ &amp; \\multicolumn{1}{c}{0.715} &amp; \\multicolumn{1}{c}{0.715} &amp; \\\\ #&gt; Adjusted R$^{2}$ &amp; \\multicolumn{1}{c}{0.656} &amp; \\multicolumn{1}{c}{0.682} &amp; \\\\ #&gt; Log Likelihood &amp; &amp; &amp; \\multicolumn{1}{c}{-9.087} \\\\ #&gt; Akaike Inf. Crit. &amp; &amp; &amp; \\multicolumn{1}{c}{26.175} \\\\ #&gt; Residual Std. Error &amp; \\multicolumn{1}{c}{7.139 (df = 24)} &amp; \\multicolumn{1}{c}{6.863 (df = 26)} &amp; \\\\ #&gt; F Statistic &amp; \\multicolumn{1}{c}{12.063$^{***}$ (df = 5; 24)} &amp; \\multicolumn{1}{c}{21.743$^{***}$ (df = 3; 26)} &amp; \\\\ #&gt; \\hline #&gt; \\hline \\\\[-1.8ex] #&gt; \\textit{Note:} &amp; \\multicolumn{3}{r}{$^{*}$p$&lt;$0.1; $^{**}$p$&lt;$0.05; $^{***}$p$&lt;$0.01} \\\\ #&gt; \\end{tabular} #&gt; \\end{table} # Latex stargazer( linear.1, linear.2, probit.model, title = &quot;Regression Results&quot;, align = TRUE, dep.var.labels = c(&quot;Overall Rating&quot;, &quot;High Rating&quot;), covariate.labels = c( &quot;Handling of Complaints&quot;, &quot;No Special Privileges&quot;, &quot;Opportunity to Learn&quot;, &quot;Performance-Based Raises&quot;, &quot;Too Critical&quot;, &quot;Advancement&quot; ), omit.stat = c(&quot;LL&quot;, &quot;ser&quot;, &quot;f&quot;), no.space = TRUE ) # ASCII text output stargazer( linear.1, linear.2, type = &quot;text&quot;, title = &quot;Regression Results&quot;, dep.var.labels = c(&quot;Overall Rating&quot;, &quot;High Rating&quot;), covariate.labels = c( &quot;Handling of Complaints&quot;, &quot;No Special Privileges&quot;, &quot;Opportunity to Learn&quot;, &quot;Performance-Based Raises&quot;, &quot;Too Critical&quot;, &quot;Advancement&quot; ), omit.stat = c(&quot;LL&quot;, &quot;ser&quot;, &quot;f&quot;), ci = TRUE, ci.level = 0.90, single.row = TRUE ) #&gt; #&gt; Regression Results #&gt; ======================================================================== #&gt; Dependent variable: #&gt; ----------------------------------------------- #&gt; Overall Rating #&gt; (1) (2) #&gt; ------------------------------------------------------------------------ #&gt; Handling of Complaints 0.692*** (0.447, 0.937) 0.682*** (0.470, 0.894) #&gt; No Special Privileges -0.104 (-0.325, 0.118) -0.103 (-0.316, 0.109) #&gt; Opportunity to Learn 0.249 (-0.013, 0.512) 0.238* (0.009, 0.467) #&gt; Performance-Based Raises -0.033 (-0.366, 0.299) #&gt; Too Critical 0.015 (-0.227, 0.258) #&gt; Advancement 11.011 (-8.240, 30.262) 11.258 (-0.779, 23.296) #&gt; ------------------------------------------------------------------------ #&gt; Observations 30 30 #&gt; R2 0.715 0.715 #&gt; Adjusted R2 0.656 0.682 #&gt; ======================================================================== #&gt; Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 stargazer( linear.1, linear.2, probit.model, title = &quot;Regression Results&quot;, align = TRUE, dep.var.labels = c(&quot;Overall Rating&quot;, &quot;High Rating&quot;), covariate.labels = c( &quot;Handling of Complaints&quot;, &quot;No Special Privileges&quot;, &quot;Opportunity to Learn&quot;, &quot;Performance-Based Raises&quot;, &quot;Too Critical&quot;, &quot;Advancement&quot; ), omit.stat = c(&quot;LL&quot;, &quot;ser&quot;, &quot;f&quot;), no.space = TRUE ) Correlation Table correlation.matrix &lt;- cor(attitude[,c(&quot;rating&quot;,&quot;complaints&quot;,&quot;privileges&quot;)]) stargazer(correlation.matrix, title=&quot;Correlation Matrix&quot;) "],["changes-in-an-estimate.html", "34.3 Changes in an estimate", " 34.3 Changes in an estimate coef_names &lt;- coef_names[1:3] # Dropping intercept for plots plot_summs(fit, fit_b, fit_c, robust = &quot;HC3&quot;, coefs = coef_names) plot_summs(fit_c, robust = &quot;HC3&quot;, coefs = coef_names, plot.distributions = TRUE) "],["standard-errors-2.html", "34.4 Standard Errors", " 34.4 Standard Errors sandwich vignette Type Applicable Usage Reference const Assume constant variances HC HC0 vcovCL Heterogeneity White’s estimator All other heterogeneity SE methods are derivatives of this. No small sample bias adjustment (White 1980) HC1 vcovCL Uses a degrees of freedom-based correction When the number of clusters is small, HC2 and HC3 are better (Cameron, Gelbach, and Miller 2008) (MacKinnon and White 1985) HC2 vcovCL Better with the linear model, but still applicable for Generalized Linear Models Needs a hat (weighted) matrix HC3 vcovCL Better with the linear model, but still applicable for Generalized Linear Models Needs a hat (weighted) matrix HC4 vcovHC (Cribari-Neto 2004) HC4m vcovHC (Cribari-Neto, Souza, and Vasconcellos 2007) HC5 vcovHC (Cribari-Neto and Silva 2011) data(cars) model &lt;- lm(speed ~ dist, data = cars) summary(model) #&gt; #&gt; Call: #&gt; lm(formula = speed ~ dist, data = cars) #&gt; #&gt; Residuals: #&gt; Min 1Q Median 3Q Max #&gt; -7.5293 -2.1550 0.3615 2.4377 6.4179 #&gt; #&gt; Coefficients: #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 8.28391 0.87438 9.474 1.44e-12 *** #&gt; dist 0.16557 0.01749 9.464 1.49e-12 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 #&gt; #&gt; Residual standard error: 3.156 on 48 degrees of freedom #&gt; Multiple R-squared: 0.6511, Adjusted R-squared: 0.6438 #&gt; F-statistic: 89.57 on 1 and 48 DF, p-value: 1.49e-12 lmtest::coeftest(model, vcov. = sandwich::vcovHC(model, type = &quot;HC1&quot;)) #&gt; #&gt; t test of coefficients: #&gt; #&gt; Estimate Std. Error t value Pr(&gt;|t|) #&gt; (Intercept) 8.283906 0.891860 9.2883 2.682e-12 *** #&gt; dist 0.165568 0.019402 8.5335 3.482e-11 *** #&gt; --- #&gt; Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 References "],["coefficient-uncertainty-and-distribution.html", "34.5 Coefficient Uncertainty and Distribution", " 34.5 Coefficient Uncertainty and Distribution The ggdist allows us to visualize uncertainty under both frequentist and Bayesian frameworks library(ggdist) "],["descriptive-tables.html", "34.6 Descriptive Tables", " 34.6 Descriptive Tables Export APA theme data(&quot;mtcars&quot;) library(flextable) theme_apa(flextable(mtcars[1:5,1:5])) Export to Latex print(xtable::xtable(mtcars, type = &quot;latex&quot;), file = file.path(getwd(), &quot;output&quot;, &quot;mtcars_xtable.tex&quot;)) # American Economic Review style stargazer::stargazer( mtcars, title = &quot;Testing&quot;, style = &quot;aer&quot;, out = file.path(getwd(), &quot;output&quot;, &quot;mtcars_stargazer.tex&quot;) ) # other styles include # Administrative Science Quarterly # Quarterly Journal of Economics However, the above codes do not play well with notes. Hence, I create my own custom code that follows the AMA guidelines ama_tbl &lt;- function(data, caption, label, note, output_path) { library(tidyverse) library(xtable) # Function to determine column alignment get_column_alignment &lt;- function(data) { # Start with the alignment for the header row alignment &lt;- c(&quot;l&quot;, &quot;l&quot;) # Check each column for (col in seq_len(ncol(data))[-1]) { if (is.numeric(data[[col]])) { alignment &lt;- c(alignment, &quot;r&quot;) # Right alignment for numbers } else { alignment &lt;- c(alignment, &quot;c&quot;) # Center alignment for other data } } return(alignment) } data %&gt;% # bold + left align first column rename_with(~paste(&quot;\\\\multicolumn{1}{l}{\\\\textbf{&quot;, ., &quot;}}&quot;), 1) %&gt;% # bold + center align all other columns `colnames&lt;-`(ifelse(colnames(.) != colnames(.)[1], paste(&quot;\\\\multicolumn{1}{c}{\\\\textbf{&quot;, colnames(.), &quot;}}&quot;), colnames(.))) %&gt;% xtable(caption = caption, label = label, align = get_column_alignment(data), auto = TRUE) %&gt;% print( include.rownames = FALSE, caption.placement = &quot;top&quot;, hline.after=c(-1, 0), # p{0.9\\linewidth} sets the width of the column to 90% of the line width, and the @{} removes any extra padding around the cell. add.to.row = list(pos = list(nrow(data)), # Add at the bottom of the table command = c(paste0(&quot;\\\\hline \\n \\\\multicolumn{&quot;,ncol(data), &quot;}{l} {&quot;, &quot;\\n \\\\begin{tabular}{@{}p{0.9\\\\linewidth}@{}} \\n&quot;,&quot;Note: &quot;, note, &quot;\\n \\\\end{tabular} } \\n&quot;))), # Add your note here # make sure your heading is untouched (because you manually change it above) sanitize.colnames.function = identity, # place a the top of the page table.placement = &quot;h&quot;, file = output_path ) } ama_tbl( mtcars, caption = &quot;This is caption&quot;, label = &quot;tab:this_is_label&quot;, note = &quot;this is note&quot;, output_path = file.path(getwd(), &quot;output&quot;, &quot;mtcars_custom_ama.tex&quot;) ) "],["visualizations-and-plots.html", "34.7 Visualizations and Plots", " 34.7 Visualizations and Plots You can customize your plots based on your preferred journals. Here, I am creating a custom setting for the American Marketing Association. American-Marketing-Association-ready theme for plots library(ggplot2) # check available fonts # windowsFonts() # for Times New Roman # names(windowsFonts()[windowsFonts()==&quot;TT Times New Roman&quot;]) # Making a theme amatheme = theme_bw(base_size = 14, base_family = &quot;serif&quot;) + # This is Time New Roman theme( # remove major gridlines panel.grid.major = element_blank(), # remove minor gridlines panel.grid.minor = element_blank(), # remove panel border panel.border = element_blank(), line = element_line(), # change font text = element_text(), # if you want to remove legend title # legend.title = element_blank(), legend.title = element_text(size = rel(0.6), face = &quot;bold&quot;), # change font size of legend legend.text = element_text(size = rel(0.6)), legend.background = element_rect(color = &quot;black&quot;), # legend.margin = margin(t = 5, l = 5, r = 5, b = 5), # legend.key = element_rect(color = NA, fill = NA), # change font size of main title plot.title = element_text( size = rel(1.2), face = &quot;bold&quot;, hjust = 0.5, margin = margin(b = 15) ), plot.margin = unit(c(1, 1, 1, 1), &quot;cm&quot;), # add black line along axes axis.line = element_line(colour = &quot;black&quot;, linewidth = .8), axis.ticks = element_line(), # axis title axis.title.x = element_text(size = rel(1.2), face = &quot;bold&quot;), axis.title.y = element_text(size = rel(1.2), face = &quot;bold&quot;), # axis text size axis.text.y = element_text(size = rel(1)), axis.text.x = element_text(size = rel(1)) ) Example library(tidyverse) library(ggsci) data(&quot;mtcars&quot;) yourplot &lt;- mtcars %&gt;% select(mpg, cyl, gear) %&gt;% ggplot(., aes(x = mpg, y = cyl, fill = gear)) + geom_point() + labs(title=&quot;Some Plot&quot;) yourplot + amatheme + # choose different color theme scale_color_npg() yourplot + amatheme + scale_color_continuous() Other pre-specified themes library(ggthemes) # Stata theme yourplot + theme_stata() # The economist theme yourplot + theme_economist() yourplot + theme_economist_white() # Wall street journal theme yourplot + theme_wsj() # APA theme yourplot + jtools::theme_apa( legend.font.size = 24, x.font.size = 20, y.font.size = 20 ) "],["exploratory-data-analysis.html", "Chapter 35 Exploratory Data Analysis", " Chapter 35 Exploratory Data Analysis # load to get txhousing data library(ggplot2) Data Report Feature Engineering Missing Data # install.packages(&quot;DataExplorer&quot;) library(DataExplorer) # creat a html file that contain all reports create_report(txhousing) introduce() # see basic info dummify() # create binary columns from discrete variables split_columns() # split data into discrete and continuous parts plot_correlation() # heatmap for discrete var plot_intro() plot_missing() # plot missing value profile_missing() # profile missing values plot_prcomp() # plot PCA Error Identification # install.packages(&quot;dataReporter&quot;) library(dataReporter) makeDataReport() # detailed report like DataExplorer Summary statistics library(skimr) skim() # give only few quick summary stat, not as detailed as the other two packages Not so code-y process Quick and dirty way to look at your data # install.packages(&quot;rpivotTable&quot;) library(rpivotTable) # give set up just like Excel table data %&gt;% rpivotTable::rpivotTable() Code generation and wrangling Shiny-app based Tableu style # install.packages(&quot;esquisse&quot;) library(esquisse) esquisse::esquisser() Customized your daily/automatic report # install.packages(&quot;chronicle&quot;) library(chronicle) # install.packages(&quot;dlookr&quot;) # install.packages(&quot;descriptr&quot;) "],["sensitivity-analysis-robustness-check.html", "Chapter 36 Sensitivity Analysis/ Robustness Check ", " Chapter 36 Sensitivity Analysis/ Robustness Check "],["specification-curve.html", "36.1 Specification curve", " 36.1 Specification curve also known as Specification robustness graph or coefficient stability plot Resources In Stata or speccurve (Simonsohn, Simmons, and Nelson 2020) 36.1.1 starbility Recommend Installation devtools::install_github(&#39;https://github.com/AakaashRao/starbility&#39;) library(starbility) Example by the package’s author library(tidyverse) library(starbility) library(lfe) data(&quot;diamonds&quot;) set.seed(43) indices = sample(1:nrow(diamonds), replace = F, size = round(nrow(diamonds) / 20)) diamonds = diamonds[indices, ] Plot different combinations of controls # If you want to make the diamond dimensions as base control base_controls = c( &#39;Diamond dimensions&#39; = &#39;x + y + z&#39; # include all variables under 1 dimension ) perm_controls = c( &#39;Depth&#39; = &#39;depth&#39;, &#39;Table width&#39; = &#39;table&#39; ) nonperm_fe_controls = c( &#39;Clarity FE (granular)&#39; = &#39;clarity&#39;, &#39;Clarity FE (binary)&#39; = &#39;high_clarity&#39; ) # Adding fixed effects nonperm_fe_controls = c( &#39;Clarity FE (granular)&#39; = &#39;clarity&#39;, &#39;Clarity FE (binary)&#39; = &#39;high_clarity&#39; ) # Adding instrumental variables instruments = &#39;x+y+z&#39; # clustering and weights diamonds$sample_weights = runif(n = nrow(diamonds)) # robust standard errors starb_felm_custom = function(spec, data, rhs, ...) { spec = as.formula(spec) model = lfe::felm(spec, data=data) %&gt;% broom::tidy() row = which(model$term==rhs) coef = model[row, &#39;estimate&#39;] %&gt;% as.numeric() se = model[row, &#39;std.error&#39;] %&gt;% as.numeric() p = model[row, &#39;p.value&#39;] %&gt;% as.numeric() # 99% confidence interval z = qnorm(0.995) # one-tailed test return(c(coef, p/2, coef+z*se, coef-z*se)) } plots = stability_plot( data = diamonds, lhs = &#39;price&#39;, rhs = &#39;carat&#39;, error_geom = &#39;ribbon&#39;, # make the plot more aesthetics # error_geom = &#39;none&#39;, # if you don&#39;t want ribbon (i.e., error bar) model = starb_felm_custom, cluster = &#39;cut&#39;, weights = &#39;sample_weights&#39;, # iv = instruments, perm = perm_controls, base = base_controls, # perm_fe = perm_fe_controls, # nonperm_fe = nonperm_fe_controls, # if you want to include fixed effects sequentially (not all combinations) (e.g., you want to test country or state fixed effect, not both ) # fe_always = F, # if you want to have a model without any Fixed Effects sort = &quot;asc-by-fe&quot;, # sort &quot;asc&quot;, &quot;desc&quot;, or by fixed effects: &quot;asc-by-fe&quot; or &quot;desc-by-fe&quot; # if you have less variables and want more aesthetics # control_geom = &#39;circle&#39;, # point_size = 2, # control_spacing = 0.3, # error_alpha = 0.2, # change alpha of the error geom # point_size = 1.5, # change the size of the coefficient points # control_text_size = 10, # change the size of the control labels # coef_ylim = c(-5000, 35000), # change the endpoints of the y-axis # trip_top = 3, # change the spacing between the two panels rel_height = 0.6 ) plots # add comments # replacement_coef_panel = plots[[1]] + # scale_y_reverse() + # theme(panel.grid.minor = element_blank()) + # geom_vline(xintercept = 41, linetype = &#39;dashed&#39;, alpha = 0.4) + # annotate(geom = &#39;label&#39;, x = 52, y = 30000, label = &#39;What a great\\nspecification!&#39;, alpha = 0.75) # # combine_plots(replacement_coef_panel, # plots[[2]], # rel_height = 0.6) Note: \\(p &lt; 0.01\\): red \\(p &lt; 0.05\\): green \\(p &lt; 0.1\\): blue \\(p &gt; 0.1\\): black More Advanced Stuff # Step 1: Control Grid diamonds$high_clarity = diamonds$clarity %in% c(&#39;VS1&#39;,&#39;VVS2&#39;,&#39;VVS1&#39;,&#39;IF&#39;) base_controls = c( &#39;Diamond dimensions&#39; = &#39;x + y + z&#39; ) perm_controls = c( &#39;Depth&#39; = &#39;depth&#39;, &#39;Table width&#39; = &#39;table&#39; ) perm_fe_controls = c( &#39;Cut FE&#39; = &#39;cut&#39;, &#39;Color FE&#39; = &#39;color&#39; ) nonperm_fe_controls = c( &#39;Clarity FE (granular)&#39; = &#39;clarity&#39;, &#39;Clarity FE (binary)&#39; = &#39;high_clarity&#39; ) grid1 = stability_plot(data = diamonds, lhs = &#39;price&#39;, rhs = &#39;carat&#39;, perm = perm_controls, base = base_controls, perm_fe = perm_fe_controls, nonperm_fe = nonperm_fe_controls, run_to=2) knitr::kable(grid1 %&gt;% head(10)) Diamond dimensions Depth Table width Cut FE Color FE np_fe 1 0 0 0 0 1 1 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 0 1 0 1 1 0 1 0 1 0 1 1 0 1 1 1 1 0 1 0 0 0 1 1 1 0 0 1 # Step 2: Get model expression grid2 = stability_plot(grid = grid1, data=diamonds, lhs=&#39;price&#39;, rhs=&#39;carat&#39;, perm=perm_controls, base=base_controls, run_from=2, run_to=3) knitr::kable(grid2 %&gt;% head(10)) Diamond dimensions Depth Table width np_fe expr 1 0 0 0 price~carat+x+y+z|0|0|0 1 1 0 0 price~carat+x+y+z+depth|0|0|0 1 0 1 0 price~carat+x+y+z+table|0|0|0 1 1 1 0 price~carat+x+y+z+depth+table|0|0|0 1 0 0 0 price~carat+x+y+z|0|0|0 1 1 0 0 price~carat+x+y+z+depth|0|0|0 1 0 1 0 price~carat+x+y+z+table|0|0|0 1 1 1 0 price~carat+x+y+z+depth+table|0|0|0 1 0 0 0 price~carat+x+y+z|0|0|0 1 1 0 0 price~carat+x+y+z+depth|0|0|0 # Step 3: Estimate models grid3 = stability_plot(grid = grid2, data=diamonds, lhs=&#39;price&#39;, rhs=&#39;carat&#39;, perm=perm_controls, base=base_controls, run_from=3, run_to=4) knitr::kable(grid3 %&gt;% head(10)) Diamond dimensions Depth Table width np_fe expr coef p error_high error_low 1 0 0 0 price~carat+x+y+z|0|0|0 10461.86 p&lt;0.01 11031.84 9891.876 1 1 0 0 price~carat+x+y+z+depth|0|0|0 10808.25 p&lt;0.01 11388.81 10227.683 1 0 1 0 price~carat+x+y+z+table|0|0|0 10423.42 p&lt;0.01 10992.00 9854.849 1 1 1 0 price~carat+x+y+z+depth+table|0|0|0 10851.31 p&lt;0.01 11428.58 10274.037 1 0 0 0 price~carat+x+y+z|0|0|0 10461.86 p&lt;0.01 11031.84 9891.876 1 1 0 0 price~carat+x+y+z+depth|0|0|0 10808.25 p&lt;0.01 11388.81 10227.683 1 0 1 0 price~carat+x+y+z+table|0|0|0 10423.42 p&lt;0.01 10992.00 9854.849 1 1 1 0 price~carat+x+y+z+depth+table|0|0|0 10851.31 p&lt;0.01 11428.58 10274.037 1 0 0 0 price~carat+x+y+z|0|0|0 10461.86 p&lt;0.01 11031.84 9891.876 1 1 0 0 price~carat+x+y+z+depth|0|0|0 10808.25 p&lt;0.01 11388.81 10227.683 # Step 4: Get dataframe to draw dfs = stability_plot(grid = grid3, data=diamonds, lhs=&#39;price&#39;, rhs=&#39;carat&#39;, perm=perm_controls, base=base_controls, run_from=4, run_to=5) coef_grid = dfs[[1]] control_grid = dfs[[2]] knitr::kable(coef_grid %&gt;% head(10)) Diamond dimensions Depth Table width np_fe expr coef p error_high error_low model 1 0 0 0 price~carat+x+y+z|0|0|0 10461.86 p&lt;0.01 11031.84 9891.876 1 1 1 0 0 price~carat+x+y+z+depth|0|0|0 10808.25 p&lt;0.01 11388.81 10227.683 2 1 0 1 0 price~carat+x+y+z+table|0|0|0 10423.42 p&lt;0.01 10992.00 9854.849 3 1 1 1 0 price~carat+x+y+z+depth+table|0|0|0 10851.31 p&lt;0.01 11428.58 10274.037 4 1 0 0 0 price~carat+x+y+z|0|0|0 10461.86 p&lt;0.01 11031.84 9891.876 5 1 1 0 0 price~carat+x+y+z+depth|0|0|0 10808.25 p&lt;0.01 11388.81 10227.683 6 1 0 1 0 price~carat+x+y+z+table|0|0|0 10423.42 p&lt;0.01 10992.00 9854.849 7 1 1 1 0 price~carat+x+y+z+depth+table|0|0|0 10851.31 p&lt;0.01 11428.58 10274.037 8 1 0 0 0 price~carat+x+y+z|0|0|0 10461.86 p&lt;0.01 11031.84 9891.876 9 1 1 0 0 price~carat+x+y+z+depth|0|0|0 10808.25 p&lt;0.01 11388.81 10227.683 10 # Step 5: plot the sensitivity graph panels = stability_plot(data = diamonds, lhs=&#39;price&#39;, rhs=&#39;carat&#39;, coef_grid = coef_grid, control_grid = control_grid, run_from=5, run_to=6) stability_plot(data = diamonds, lhs=&#39;price&#39;, rhs=&#39;carat&#39;, coef_panel = panels[[1]], control_panel = panels[[2]], run_from = 6, run_to = 7) In step 2, we can modify to use other function (e.g., glm) diamonds$above_med_price = as.numeric(diamonds$price &gt; median(diamonds$price)) base_controls = c(&#39;Diamond dimensions&#39; = &#39;x + y + z&#39;) perm_controls = c(&#39;Depth&#39; = &#39;depth&#39;, &#39;Table width&#39; = &#39;table&#39;, &#39;Clarity&#39; = &#39;clarity&#39;) lhs_var = &#39;above_med_price&#39; rhs_var = &#39;carat&#39; grid1 = stability_plot( data = diamonds, lhs = lhs_var, rhs = rhs_var, perm = perm_controls, base = base_controls, fe_always = F, run_to = 2 ) # Create control part of formula base_perm = c(base_controls, perm_controls) grid1$expr = apply(grid1[, 1:length(base_perm)], 1, function(x) paste(base_perm[names(base_perm)[which(x == 1)]], collapse = &#39;+&#39;)) # Complete formula with LHS and RHS variables grid1$expr = paste(lhs_var, &#39;~&#39;, rhs_var, &#39;+&#39;, grid1$expr, sep = &#39;&#39;) knitr::kable(grid1 %&gt;% head(10)) Diamond dimensions Depth Table width Clarity np_fe expr 1 0 0 0 above_med_price~carat+x + y + z 1 1 0 0 above_med_price~carat+x + y + z+depth 1 0 1 0 above_med_price~carat+x + y + z+table 1 1 1 0 above_med_price~carat+x + y + z+depth+table 1 0 0 1 above_med_price~carat+x + y + z+clarity 1 1 0 1 above_med_price~carat+x + y + z+depth+clarity 1 0 1 1 above_med_price~carat+x + y + z+table+clarity 1 1 1 1 above_med_price~carat+x + y + z+depth+table+clarity # customer function for the logit model starb_logit = function(spec, data, rhs, ...) { spec = as.formula(spec) model = glm(spec, data=data, family=&#39;binomial&#39;, weights=data$weight) %&gt;% broom::tidy() row = which(model$term==rhs) coef = model[row, &#39;estimate&#39;] %&gt;% as.numeric() se = model[row, &#39;std.error&#39;] %&gt;% as.numeric() p = model[row, &#39;p.value&#39;] %&gt;% as.numeric() return(c(coef, p, coef+1.96*se, coef-1.96*se)) } stability_plot(grid = grid1, data = diamonds, lhs = lhs_var, rhs = rhs_var, model = starb_logit, perm = perm_controls, base = base_controls, fe_always = F, run_from=3) For getting other specification (e.g., different CI) library(margins) starb_logit_enhanced = function(spec, data, rhs, ...) { # Unpack ... l = list(...) get_mfx = ifelse(is.null(l$get_mfx), F, T) # Set a default to F spec = as.formula(spec) if (get_mfx) { model = glm(spec, data=data, family=&#39;binomial&#39;, weights=data$weight) %&gt;% margins() %&gt;% summary row = which(model$factor==rhs) coef = model[row, &#39;AME&#39;] %&gt;% as.numeric() se = model[row, &#39;SE&#39;] %&gt;% as.numeric() p = model[row, &#39;p&#39;] %&gt;% as.numeric() } else { model = glm(spec, data=data, family=&#39;binomial&#39;, weights=data$weight) %&gt;% broom::tidy() row = which(model$term==rhs) coef = model[row, &#39;estimate&#39;] %&gt;% as.numeric() se = model[row, &#39;std.error&#39;] %&gt;% as.numeric() p = model[row, &#39;p.value&#39;] %&gt;% as.numeric() } z = qnorm(0.995) return(c(coef, p, coef+z*se, coef-z*se)) } stability_plot(grid = grid1, data = diamonds, lhs = lhs_var, rhs = rhs_var, model = starb_logit_enhanced, get_mfx = T, perm = perm_controls, base = base_controls, fe_always = F, run_from = 3) To get your customized plot dfs = stability_plot(grid = grid1, data = diamonds, lhs = lhs_var, rhs = rhs_var, model = starb_logit_enhanced, get_mfx = T, perm = perm_controls, base = base_controls, fe_always = F, run_from = 3, run_to = 5) coef_grid_logit = dfs[[1]] control_grid_logit = dfs[[2]] min_space = 0.5 coef_plot = ggplot2::ggplot(coef_grid_logit, aes(x = model, y = coef, shape=p, group=p)) + geom_linerange(aes(ymin = error_low, ymax = error_high), alpha=0.75) + geom_point(size=5, aes(col=p, fill=p), alpha=1) + viridis::scale_color_viridis(discrete = TRUE, option = &quot;D&quot;)+ scale_shape_manual(values = c(15,17,18, 19)) + theme_classic() + geom_hline(yintercept=0, linetype=&#39;dotted&#39;) + ggtitle(&#39;A custom coefficient stability plot!&#39;) + labs(subtitle=&quot;Error bars represent 99% confidence intervals&quot;) + theme(axis.text.x = element_blank(), axis.title = element_blank(), axis.ticks.x = element_blank()) + coord_cartesian(xlim=c(1-min_space, max(coef_grid_logit$model)+min_space), ylim=c(-0.1, 1.6)) + guides(fill=F, shape=F, col=F) control_plot = ggplot(control_grid_logit) + geom_point(aes(x = model, y = y, fill=value), shape=23, size=4) + scale_fill_manual(values=c(&#39;#FFFFFF&#39;, &#39;#000000&#39;)) + guides(fill=F) + scale_y_continuous(breaks = unique(control_grid_logit$y), labels = unique(control_grid_logit$key), limits=c(min(control_grid_logit$y)-1, max(control_grid_logit$y)+1)) + scale_x_continuous(breaks=c(1:max(control_grid_logit$model))) + coord_cartesian(xlim=c(1-min_space, max(control_grid_logit$model)+min_space)) + theme_classic() + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank(), axis.title = element_blank(), axis.text.y = element_text(size=10), axis.ticks = element_blank(), axis.line = element_blank()) cowplot::plot_grid(coef_plot, control_plot, rel_heights=c(1,0.5), align=&#39;v&#39;, ncol=1, axis=&#39;b&#39;) To get different model specification (e.g., probit vs. logit) starb_probit = function(spec, data, rhs, ...) { # Unpack ... l = list(...) get_mfx = ifelse(is.null(l$get_mfx), F, T) # Set a default to F spec = as.formula(spec) if (get_mfx) { model = glm( spec, data = data, family = binomial(link = &#39;probit&#39;), weights = data$weight ) %&gt;% margins() %&gt;% summary row = which(model$factor == rhs) coef = model[row, &#39;AME&#39;] %&gt;% as.numeric() se = model[row, &#39;SE&#39;] %&gt;% as.numeric() p = model[row, &#39;p&#39;] %&gt;% as.numeric() } else { model = glm( spec, data = data, family = binomial(link = &#39;probit&#39;), weights = data$weight ) %&gt;% broom::tidy() row = which(model$term == rhs) coef = model[row, &#39;estimate&#39;] %&gt;% as.numeric() se = model[row, &#39;std.error&#39;] %&gt;% as.numeric() p = model[row, &#39;p.value&#39;] %&gt;% as.numeric() } z = qnorm(0.995) return(c(coef, p, coef + z * se, coef - z * se)) } probit_dfs = stability_plot( grid = grid1, data = diamonds, lhs = lhs_var, rhs = rhs_var, model = starb_probit, get_mfx = T, perm = perm_controls, base = base_controls, fe_always = F, run_from = 3, run_to = 5 ) # We&#39;ll put the probit DFs on the left, so we need to adjust the model numbers accordingly # so the probit and logit DFs don&#39;t plot on top of one another! coef_grid_probit = probit_dfs[[1]] %&gt;% mutate(model = model + max(coef_grid_logit$model)) control_grid_probit = probit_dfs[[2]] %&gt;% mutate(model = model + max(control_grid_logit$model)) coef_grid = bind_rows(coef_grid_logit, coef_grid_probit) control_grid = bind_rows(control_grid_logit, control_grid_probit) panels = stability_plot( coef_grid = coef_grid, control_grid = control_grid, data = diamonds, lhs = lhs_var, rhs = rhs_var, perm = perm_controls, base = base_controls, fe_always = F, run_from = 5, run_to = 6 ) coef_plot = panels[[1]] + geom_vline(xintercept = 8.5, linetype = &#39;dashed&#39;, alpha = 0.8) + annotate( geom = &#39;label&#39;, x = 4.25, y = 1.8, label = &#39;Logit models&#39;, size = 6, fill = &#39;#D3D3D3&#39;, alpha = 0.7 ) + annotate( geom = &#39;label&#39;, x = 12.75, y = 1.8, label = &#39;Probit models&#39;, size = 6, fill = &#39;#D3D3D3&#39;, alpha = 0.7 ) + coord_cartesian(ylim = c(-0.5, 1.9)) control_plot = panels[[2]] + geom_vline(xintercept = 8.5, linetype = &#39;dashed&#39;, alpha = 0.8) cowplot::plot_grid( coef_plot, control_plot, rel_heights = c(1, 0.5), align = &#39;v&#39;, ncol = 1, axis = &#39;b&#39; ) 36.1.2 rdfanalysis Not recommend Installation devtools::install_github(&quot;joachim-gassen/rdfanalysis&quot;) Example by the package’s author library(rdfanalysis) load(url(&quot;https://joachim-gassen.github.io/data/rdf_ests.RData&quot;)) plot_rdf_spec_curve(ests, &quot;est&quot;, &quot;lb&quot;, &quot;ub&quot;) Shiny app for readers to explore design &lt;- define_design(steps = c(&quot;read_data&quot;, &quot;select_idvs&quot;, &quot;treat_extreme_obs&quot;, &quot;specify_model&quot;, &quot;est_model&quot;), rel_dir = &quot;vignettes/case_study_code&quot;) shiny_rdf_spec_curve(ests, list(&quot;est&quot;, &quot;lb&quot;, &quot;ub&quot;), design, &quot;vignettes/case_study_code&quot;, &quot;https://joachim-gassen.github.io/data/wb_new.csv&quot;) References "],["coefficient-stability.html", "36.2 Coefficient stability", " 36.2 Coefficient stability (Oster 2019) Coefficient stability can be evident against omitted variable bias. But coefficient stability alone can be misleading, but combing with \\(R^2\\) movement, it can become informative. Packages mplot: graphical Model stability and Variable Selection robomit: Robustness checks for omitted variable bias (implementation of library(robomit) # estimate beta o_beta( y = &quot;mpg&quot;, # dependent variable x = &quot;wt&quot;, # independent treatment variable con = &quot;hp + qsec&quot;, # related control variables delta = 1, # delta R2max = 0.9, # maximum R-square type = &quot;lm&quot;, # model type data = mtcars # dataset ) #&gt; # A tibble: 10 × 2 #&gt; Name Value #&gt; &lt;chr&gt; &lt;dbl&gt; #&gt; 1 beta* -2.00 #&gt; 2 (beta*-beta controlled)^2 5.56 #&gt; 3 Alternative Solution 1 -7.01 #&gt; 4 (beta[AS1]-beta controlled)^2 7.05 #&gt; 5 Uncontrolled Coefficient -5.34 #&gt; 6 Controlled Coefficient -4.36 #&gt; 7 Uncontrolled R-square 0.753 #&gt; 8 Controlled R-square 0.835 #&gt; 9 Max R-square 0.9 #&gt; 10 delta 1 References "],["appendix.html", "A Appendix ", " A Appendix "],["git.html", "A.1 Git", " A.1 Git Cheat Sheet Cheat Sheet in different languages Learn Git Interactive Cheat Sheet Ultimate Guide of Git and GitHub for R user Setting up Git: git config with --global option to configure user name, email, editor, etc. Creating a repository: git init to initialize a repo. Git stores all of its repo data in the .git directory. Tracking changes: git status shows the status of the repo File are stored in the project’s working directory (which users see) The staging area (where the next commit is being built) local repo is where commits are permanently recorded git add put files in the staging area git commit saves the staged content as a new commit in the local repo. git commit -m \"your own message\" to give a messages for the purpose of your commit. History git diff shows differences between commits git checkout recovers old version of fields git checkout HEAD to go to the last commit git checkout &lt;unique ID of your commit&gt; to go to such commit Ignoring .gitignore file tells Git what files to ignore cat . gitignore *.dat results/ ignore files ending with “dat” and folder “results”. Remotes in GitHub A local git repo can be connected to one or more remote repos. Use the HTTPS protocol to connect to remote repos git push copies changes from a local repo to a remote repo git pull copies changes from a remote repo to a local repo Collaborating git clone copies remote repo to create a local repo with a remote called origin automatically set up Branching git check - b &lt;new-branch-name git checkout master to switch to master branch. Conflicts occur when 2 or more people change the same lines of the same file the version control system does not allow to overwrite each other’s changes blindly, but highlights conflicts so that they can be resolved. Licensing People who incorporate General Public License (GPL’d) software into their won software must make their software also open under the GPL license; most other open licenses do not require this. The Creative Commons family of licenses allow people to mix and match requirements and restrictions on attribution, creation of derivative works, further sharing and commercialization. Citation: Add a CITATION file to a repo to explain how you want others to cite your work. Hosting Rules regarding intellectual property and storage of sensitive info apply no matter where code and data are hosted. "],["short-cut.html", "A.2 Short-cut", " A.2 Short-cut These are shortcuts that you probably you remember when working with R. Even though it might take a bit of time to learn and use them as your second nature, but they will save you a lot of time. Just like learning another language, the more you speak and practice it, the more comfortable you are speaking it. function short-cut navigate folders in console \" \" + tab pull up short-cut cheat sheet ctrl + shift + k go to file/function (everything in your project) ctrl + . search everything cmd + shift + f navigate between tabs Crtl + shift + . type function faster snip + shift + tab type faster use tab for fuzzy match cmd + up ctrl + . Sometimes you can’t stage a folder because it’s too large. In such case, use Terminal pane in Rstudio then type git add -A to stage all changes then commit and push like usual. "],["function-short-cut.html", "A.3 Function short-cut", " A.3 Function short-cut apply one function to your data to create a new variable: mutate(mod=map(data,function)) instead of using i in 1:length(object): for (i in seq_along(object)) apply multiple function: map_dbl apply multiple function to multiple variables:map2 autoplot(data) plot times series data mod_tidy = linear(reg) %&gt;% set_engine('lm') %&gt;% fit(price ~ ., data=data) fit lm model. It could also fit other models (stan, spark, glmnet, keras) Sometimes, data-masking will not be able to recognize whether you’re calling from environment or data variables. To bypass this, we use .data$variable or .env$variable. For example data %&gt;% mutate(x=.env$variable/.data$variable Problems with data-masking: Unexpected masking by data-var: Use .data and .env to disambiguate Data-var cant get through: Tunnel data-var with {{}} + Subset .data with [[]] Passing Data-variables through arguments library(&quot;dplyr&quot;) mean_by &lt;- function(data,by,var){ data %&gt;% group_by({{{by}}}) %&gt;% summarise(&quot;{{var}}&quot;:=mean({{var}})) # new name for each var will be created by tunnel data-var inside strings } mean_by &lt;- function(data,by,var){ data %&gt;% group_by({{{by}}}) %&gt;% summarise(&quot;{var}&quot;:=mean({{var}})) # use single {} to glue the string, but hard to reuse code in functions } Trouble with selection: library(&quot;purrr&quot;) name &lt;- c(&quot;mass&quot;,&quot;height&quot;) starwars %&gt;% select(name) # Data-var. Here you are referring to variable named &quot;name&quot; starwars %&gt;% select(all_of((name))) # use all_of() to disambiguate when averages &lt;- function(data,vars){ # take character vectors with all_of() data %&gt;% select(all_of(vars)) %&gt;% map_dbl(mean,na.rm=TRUE) } x = c(&quot;Sepal.Length&quot;,&quot;Petal.Length&quot;) iris %&gt;% averages(x) # Another way averages &lt;- function(data,vars){ # Tunnel selectiosn with {{}} data %&gt;% select({{vars}}) %&gt;% map_dbl(mean,na.rm=TRUE) } x = c(&quot;Sepal.Length&quot;,&quot;Petal.Length&quot;) iris %&gt;% averages(x) "],["citation.html", "A.4 Citation", " A.4 Citation include a citation by [@Farjam_2015] cite packages used in this session package=ls(sessionInfo()$loadedOnly) for (i in package){print(toBibtex(citation(i)))} package=ls(sessionInfo()$loadedOnly) for (i in package){ print(toBibtex(citation(i))) } "],["install-all-necessary-packageslibaries-on-your-local-machine.html", "A.5 Install all necessary packages/libaries on your local machine", " A.5 Install all necessary packages/libaries on your local machine Get a list of packages you need to install from this book (or your local device) installed &lt;- as.data.frame(installed.packages()) head(installed) #&gt; Package LibPath Version Priority #&gt; abind abind C:/Program Files/R/R-4.2.3/library 1.4-5 &lt;NA&gt; #&gt; admisc admisc C:/Program Files/R/R-4.2.3/library 0.32 &lt;NA&gt; #&gt; AER AER C:/Program Files/R/R-4.2.3/library 1.2-10 &lt;NA&gt; #&gt; agridat agridat C:/Program Files/R/R-4.2.3/library 1.21 &lt;NA&gt; #&gt; AlignAssign AlignAssign C:/Program Files/R/R-4.2.3/library 0.5.0 &lt;NA&gt; #&gt; alphavantager alphavantager C:/Program Files/R/R-4.2.3/library 0.1.3 &lt;NA&gt; #&gt; Depends #&gt; abind R (&gt;= 1.5.0) #&gt; admisc R (&gt;= 3.5.0) #&gt; AER R (&gt;= 3.0.0), car (&gt;= 2.0-19), lmtest, sandwich (&gt;= 2.4-0),\\nsurvival (&gt;= 2.37-5), zoo #&gt; agridat &lt;NA&gt; #&gt; AlignAssign &lt;NA&gt; #&gt; alphavantager R (&gt;= 3.3.0) #&gt; Imports #&gt; abind methods, utils #&gt; admisc methods #&gt; AER stats, Formula (&gt;= 0.2-0) #&gt; agridat &lt;NA&gt; #&gt; AlignAssign rstudioapi #&gt; alphavantager dplyr (&gt;= 0.7.0), glue (&gt;= 1.1.1), httr (&gt;= 1.2.1), jsonlite\\n(&gt;= 1.5), purrr (&gt;= 0.2.2.2), readr (&gt;= 1.1.1), stringr (&gt;=\\n1.2.0), tibble (&gt;= 1.3.3), tidyr (&gt;= 0.6.3), timetk (&gt;=\\n0.1.1.1) #&gt; LinkingTo #&gt; abind &lt;NA&gt; #&gt; admisc &lt;NA&gt; #&gt; AER &lt;NA&gt; #&gt; agridat &lt;NA&gt; #&gt; AlignAssign &lt;NA&gt; #&gt; alphavantager &lt;NA&gt; #&gt; Suggests #&gt; abind &lt;NA&gt; #&gt; admisc QCA (&gt;= 3.7) #&gt; AER boot, dynlm, effects, fGarch, forecast, foreign, ineq,\\nKernSmooth, lattice, longmemo, MASS, mlogit, nlme, nnet, np,\\nplm, pscl, quantreg, rgl, ROCR, rugarch, sampleSelection,\\nscatterplot3d, strucchange, systemfit (&gt;= 1.1-20), truncreg,\\ntseries, urca, vars #&gt; agridat AER, agricolae, betareg, broom, car, coin, corrgram, desplot,\\ndplyr, effects, equivalence, emmeans, FrF2, gam, gge, ggplot2,\\ngnm, gstat, HH, knitr, lattice, latticeExtra, lme4, lucid,\\nmapproj, maps, MASS, MCMCglmm, metafor, mgcv, NADA, nlme,\\nnullabor, ordinal, pbkrtest, pls, pscl, reshape2, rgdal,\\nrmarkdown, qicharts, qtl, sp, SpATS, survival, vcd, testthat #&gt; AlignAssign &lt;NA&gt; #&gt; alphavantager testthat, knitr #&gt; Enhances License License_is_FOSS License_restricts_use #&gt; abind &lt;NA&gt; LGPL (&gt;= 2) &lt;NA&gt; &lt;NA&gt; #&gt; admisc &lt;NA&gt; GPL (&gt;= 3) &lt;NA&gt; &lt;NA&gt; #&gt; AER &lt;NA&gt; GPL-2 | GPL-3 &lt;NA&gt; &lt;NA&gt; #&gt; agridat &lt;NA&gt; CC BY-SA 4.0 &lt;NA&gt; &lt;NA&gt; #&gt; AlignAssign &lt;NA&gt; GPL-2 &lt;NA&gt; &lt;NA&gt; #&gt; alphavantager &lt;NA&gt; GPL (&gt;= 3) &lt;NA&gt; &lt;NA&gt; #&gt; OS_type MD5sum NeedsCompilation Built #&gt; abind &lt;NA&gt; &lt;NA&gt; no 4.2.0 #&gt; admisc &lt;NA&gt; &lt;NA&gt; yes 4.2.3 #&gt; AER &lt;NA&gt; &lt;NA&gt; no 4.2.3 #&gt; agridat &lt;NA&gt; &lt;NA&gt; no 4.2.3 #&gt; AlignAssign &lt;NA&gt; &lt;NA&gt; no 4.2.3 #&gt; alphavantager &lt;NA&gt; &lt;NA&gt; no 4.2.3 write.csv(installed, file.path(getwd(),&#39;installed.csv&#39;)) After having the installed.csv file on your new or local machine, you can just install the list of packages # import the list of packages installed &lt;- read.csv(&#39;installed.csv&#39;) # get the list of packages that you have on your device baseR &lt;- as.data.frame(installed.packages()) # install only those that you don&#39;t have install.packages(setdiff(installed, baseR)) "],["bookdown-cheat-sheet.html", "B Bookdown cheat sheet", " B Bookdown cheat sheet # to see non-scientific notation a result format(12e-17, scientific = FALSE) #&gt; [1] &quot;0.00000000000000012&quot; "],["operation.html", "B.1 Operation", " B.1 Operation R commands to do derivatives of a defined function Taking derivatives in R involves using the expression, D, and eval functions. You wrap the function you want to take the derivative of in expression(), then use D, then eval as follows. simple example #define a function f=expression(sqrt(x)) #take the first derivative df.dx=D(f,&#39;x&#39;) df.dx #&gt; 0.5 * x^-0.5 #take the second derivative d2f.dx2=D(D(f,&#39;x&#39;),&#39;x&#39;) d2f.dx2 #&gt; 0.5 * (-0.5 * x^-1.5) Evaluate The first argument passed to eval is the expression you want to evaluate the second is a list containing the values of all quantities that are not defined elsewhere. #evaluate the function at a given x eval(f,list(x=3)) #&gt; [1] 1.732051 #evaluate the first derivative at a given x eval(df.dx,list(x=3)) #&gt; [1] 0.2886751 #evaluate the second derivative at a given x eval(d2f.dx2,list(x=3)) #&gt; [1] -0.04811252 "],["math-expression-syntax.html", "B.2 Math Expression/ Syntax", " B.2 Math Expression/ Syntax Full list Aligning equations \\begin{aligned} a &amp; = b \\\\ X &amp;\\sim {\\sf Norm}(10, 3) \\\\ 5 &amp; \\le 10 \\end{aligned} \\[ \\begin{aligned} a &amp; = b \\\\ X &amp;\\sim {\\sf Norm}(10, 3) \\\\ 5 &amp; \\le 10 \\end{aligned} \\] Cross-reference equation \\begin{equation} a = b (\\#eq:test) \\end{equation} \\[\\begin{equation} a = b \\tag{B.1} \\end{equation}\\] to refer in a sentence (B.1) (\\@ref(eq:1)) Math Syntax Notation $\\pm$ \\(\\pm\\) $\\ge$ \\(\\ge\\) $\\le$ \\(\\le\\) $\\neq$ \\(\\neq\\) $\\equiv$ \\(\\equiv\\) $^\\circ$ \\(^\\circ\\) $\\times$ \\(\\times\\) $\\cdot$ \\(\\cdot\\) $\\leq$ \\(\\leq\\) $\\geq$ \\(\\geq\\) \\propto \\(\\propto\\) $\\subset$ \\(\\subset\\) $\\subseteq$ \\(\\subseteq\\) $\\leftarrow$ \\(\\leftarrow\\) $\\rightarrow$ \\(\\rightarrow\\) $\\Leftarrow$ \\(\\Leftarrow\\) $\\Rightarrow$ \\(\\Rightarrow\\) $\\approx$ \\(\\approx\\) $\\mathbb{R}$ \\(\\mathbb{R}\\) $\\sum_{n=1}^{10} n^2$ \\(\\sum_{n=1}^{10} n^2\\) $$\\sum_{n=1}^{10} n^2$$ \\[\\sum_{n=1}^{10} n^2\\] $x^{n}$ \\(x^{n}\\) $x_{n}$ \\(x_{n}\\) $\\overline{x}$ \\(\\overline{x}\\) $\\hat{x}$ \\(\\hat{x}\\) $\\tilde{x}$ \\(\\tilde{x}\\) \\check{} \\(\\check{}\\) \\underset{\\gamma}{\\operatorname{argmin}} \\(\\underset{\\gamma}{\\operatorname{argmin}}\\) $\\frac{a}{b}$ \\(\\frac{a}{b}\\) $\\frac{a}{b}$ \\(\\frac{a}{b}\\) $\\displaystyle \\frac{a}{b}$ \\(\\displaystyle \\frac{a}{b}\\) $\\binom{n}{k}$ \\(\\binom{n}{k}\\) $x_{1} + x_{2} + \\cdots + x_{n}$ \\(x_{1} + x_{2} + \\cdots + x_{n}\\) $x_{1}, x_{2}, \\dots, x_{n}$ \\(x_{1}, x_{2}, \\dots, x_{n}\\) \\mathbf{x} = \\langle x_{1}, x_{2}, \\dots, x_{n}\\rangle$ \\(\\mathbf{x} = \\langle x_{1}, x_{2}, \\dots, x_{n}\\rangle\\) $x \\in A$ \\(x \\in A\\) $|A|$ \\(|A|\\) $x \\in A$ \\(x \\in A\\) $x \\subset B$ \\(x \\subset B\\) $x \\subseteq B$ \\(x \\subseteq B\\) $A \\cup B$ \\(A \\cup B\\) $A \\cap B$ \\(A \\cap B\\) $X \\sim {\\sf Binom}(n, \\pi)$ \\(X \\sim {\\sf Binom}(n, \\pi)\\) $\\mathrm{P}(X \\le x) = {\\tt pbinom}(x, n, \\pi)$ \\(\\mathrm{P}(X \\le x) = {\\tt pbinom}(x, n, \\pi)\\) $P(A \\mid B)$ \\(P(A \\mid B)\\) $\\mathrm{P}(A \\mid B)$ \\(\\mathrm{P}(A \\mid B)\\) $\\{1, 2, 3\\}$ \\(\\{1, 2, 3\\}\\) $\\sin(x)$ \\(\\sin(x)\\) $\\log(x)$ \\(\\log(x)\\) $\\int_{a}^{b}$ \\(\\int_{a}^{b}\\) $\\left(\\int_{a}^{b} f(x) \\; dx\\right)$ \\(\\left(\\int_{a}^{b} f(x) \\; dx\\right)\\) $\\left[\\int_{\\-infty}^{\\infty} f(x) \\; dx\\right]$ \\(\\left[\\int_{-\\infty}^{\\infty} f(x) \\; dx\\right]\\) $\\left. F(x) \\right|_{a}^{b}$ \\(\\left. F(x) \\right|_{a}^{b}\\) $\\sum_{x = a}^{b} f(x)$ \\(\\sum_{x = a}^{b} f(x)\\) $\\prod_{x = a}^{b} f(x)$ \\(\\prod_{x = a}^{b} f(x)\\) $\\lim_{x \\to \\infty} f(x)$ \\(\\lim_{x \\to \\infty} f(x)\\) $\\displaystyle \\lim_{x \\to \\infty} f(x)$ \\(\\displaystyle \\lim_{x \\to \\infty} f(x)\\) Greek Letters $\\alpha A$ \\(\\alpha A\\) $\\beta B$ \\(\\beta B\\) $\\gamma \\Gamma$ \\(\\gamma \\Gamma\\) $\\delta \\Delta$ \\(\\delta \\Delta\\) $\\epsilon \\varepsilon E$ \\(\\epsilon \\varepsilon E\\) $\\zeta Z \\sigma $ \\(\\zeta Z \\sigma\\) $\\eta H$ \\(\\eta H\\) $\\theta \\vartheta \\Theta$ \\(\\theta \\vartheta \\Theta\\) $\\iota I$ \\(\\iota I\\) $\\kappa K$ \\(\\kappa K\\) $\\lambda \\Lambda$ \\(\\lambda \\Lambda\\) $\\mu M$ \\(\\mu M\\) $\\nu N$ \\(\\nu N\\) $\\xi\\Xi$ \\(\\xi\\Xi\\) $o O$ \\(o O\\) $\\pi \\Pi$ \\(\\pi \\Pi\\) $\\rho\\varrho P$ \\(\\rho\\varrho P\\) $\\sigma \\Sigma$ \\(\\sigma \\Sigma\\) $\\tau T$ \\(\\tau T\\) $\\upsilon \\Upsilon$ \\(\\upsilon \\Upsilon\\) $\\phi \\varphi \\Phi$ \\(\\phi \\varphi \\Phi\\) $\\chi X$ \\(\\chi X\\) $\\psi \\Psi$ \\(\\psi \\Psi\\) $\\omega \\Omega$ \\(\\omega \\Omega\\) $\\cdot$ \\(\\cdot\\) $\\cdots$ \\(\\cdots\\) $\\ddots$ \\(\\ddots\\) $\\ldots$ \\(\\ldots\\) Limit P(\\lim_{n\\to \\infty}\\bar{X}_n =\\mu) =1 \\[ P(\\lim_{n\\to \\infty}\\bar{X}_n =\\mu) =1 \\] Matrices $$\\begin{array} {rrr} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{array} $$ \\[ \\begin{array} {rrr} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{array} \\] $$\\mathbf{X} = \\left[\\begin{array} {rrr} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{array}\\right] $$ \\[ \\mathbf{X} = \\left[\\begin{array} {rrr} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{array}\\right] \\] Aligning Equations Aligning Equations with Comments \\begin{aligned} 3+x &amp;=4 &amp;&amp; \\text{(Solve for} x \\text{.)}\\\\ x &amp;=4-3 &amp;&amp; \\text{(Subtract 3 from both sides.)}\\\\ x &amp;=1 &amp;&amp; \\text{(Yielding the solution.)} \\end{aligned} \\[ \\begin{aligned} 3+x &amp;=4 &amp;&amp; \\text{(Solve for} x \\text{.)}\\\\ x &amp;=4-3 &amp;&amp; \\text{(Subtract 3 from both sides.)}\\\\ x &amp;=1 &amp;&amp; \\text{(Yielding the solution.)} \\end{aligned} \\] B.2.1 Statistics Notation $$ f(y|N,p) = \\frac{N!}{y!(N-y)!}\\cdot p^y \\cdot (1-p)^{N-y} = {{N}\\choose{y}} \\cdot p^y \\cdot (1-p)^{N-y} $$ \\[ f(y|N,p) = \\frac{N!}{y!(N-y)!}\\cdot p^y \\cdot (1-p)^{N-y} = {{N}\\choose{y}} \\cdot p^y \\cdot (1-p)^{N-y} \\] \\begin{cases} \\frac{1}{b-a}&amp;\\text{for $x\\in[a,b]$}\\\\ 0&amp;\\text{otherwise}\\\\ \\end{cases} \\[ \\begin{cases} \\frac{1}{b-a} &amp; \\text{for } x\\in[a,b]\\\\ 0 &amp; \\text{otherwise}\\\\ \\end{cases} \\] "],["table.html", "B.3 Table", " B.3 Table +---------------+---------------+--------------------+ | Fruit | Price | Advantages | +===============+===============+====================+ | *Bananas* | $1.34 | - built-in wrapper | | | | - bright color | +---------------+---------------+--------------------+ | Oranges | $2.10 | - cures scurvy | | | | - **tasty** | +---------------+---------------+--------------------+ Fruit Price Advantages Bananas $1.34 built-in wrapper bright color Oranges $2.10 cures scurvy tasty (\\mathbf{x}^T\\mathbf{x})^{-1}\\mathbf{x}^T\\mathbf{y} \\((\\mathbf{x}^T\\mathbf{x})^{-1}\\mathbf{x}^T\\mathbf{y}\\) "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
