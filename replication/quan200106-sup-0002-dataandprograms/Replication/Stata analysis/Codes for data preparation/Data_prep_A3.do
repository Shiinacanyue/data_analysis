************************************************************************************************************************************************CODE PREPARING SAMPLE AND VARIABLES FOR LAYOFF AND DURATION ANALYSIS****This version: February, 2020****Input: sel_sample_all`i'.dta (one file per month `i' of layoff)****Output: *sel_sample_all`i'_onlyID.dta (one file per month `i' of layoff) *DDduration_all`i'.dta (one file per month `i' of layoff) ********************************************************************************************************** A) Setup********************************clearset more offset mem 10000m************************************ B) Prepare sample and variables for layoff and duration analysis (one year at a time)***********************************layoffs in 1995forvalues i=1(1)12 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=11 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0) & year==year[_n-1]+1 & month_hat2[_n-1]==sep_month_hat-sep_month-12+.5 & id_worker[_n-2]!=id_worker[_n-1]gen consistency2=. if a==1 & tenure>=36replace consistency2=11 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & month_hat2[_n-1]==sep_month_hat-sep_month-12+.5 & id_worker[_n-2]!=id_worker[_n-1]gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 1996forvalues i=13(1)24 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=22 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0) & year==year[_n-2]+2 & month_hat2[_n-2]==sep_month_hat-sep_month-24+.5 & id_worker[_n-3]!=id_worker[_n-2]gen consistency2=. if a==1 & tenure>=36replace consistency2=22 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & month_hat2[_n-2]==sep_month_hat-sep_month-24+.5 & id_worker[_n-3]!=id_worker[_n-2]gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*eplace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 1997forvalues i=25(1)36 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 1998forvalues i=37(1)48 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 1999forvalues i=49(1)60 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2000forvalues i=61(1)72 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2001forvalues i=73(1)84 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2002forvalues i=85(1)96 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2003forvalues i=97(1)108 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2004forvalues i=109(1)120 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2005forvalues i=121(1)132 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 5 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4|yeardiff==5sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 5 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec5=0gen month_employed_5=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec5=0gen stopcount_laydec5=0gen month_employed_lay5=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec5UI=0gen stopcount_laydec5UI=0gen month_employed_lay5UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec5=0gen stopcount_reempldec5=0gen month_employed_reempl5=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec5=0gen month_employed_loss5=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec5=0gen return_lost_month5=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 5 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec5 = month_employed_dec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec5), by(id_worker)replace month_employed_dec5 =X replace month_employed_5 =X if `h'<=60+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec5 = month_employed_laydec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5 ==0  & a!=1replace stopcount_laydec5 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec5), by(id_worker)replace month_employed_laydec5 =X replace month_employed_lay5 =X if `h'<=60+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec5), by(id_worker)replace stopcount_laydec5 =Xdrop X*replace month_employed_laydec5UI = month_employed_laydec5UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec5UI ==0  & a!=1replace stopcount_laydec5UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec5UI>6 & a!=1egen X=max(month_employed_laydec5UI), by(id_worker)replace month_employed_laydec5UI =Xreplace month_employed_lay5UI =X if `h'<=60+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec5UI), by(id_worker)replace stopcount_laydec5UI=Xdrop X*replace month_employed_reempldec5 = month_employed_reempldec5 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec5 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec5), by(id_worker)replace stopcount_reempldec5=`h' if month_employed_reempldec5 ==X & X!=0replace month_employed_reempldec5 =Xreplace month_employed_reempl5 =X  if `h'<=60+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec5), by(id_worker)replace stopcount_reempldec5=Xdrop X*replace month_employed_lossdec5 = month_employed_lossdec5 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec5), by(id_worker)replace month_employed_lossdec5 =Xreplace month_employed_loss5 =X  if `h'<=60+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec5 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec5 ==0egen X=max(return_lost_monthdec5), by(id_worker)replace return_lost_monthdec5 =Xreplace return_lost_month5 =X if `h'<=60+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 5 years after layoffgen xxx=real_w_dec if yeardiff==5 & reas_sep==0egen reempl_wagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==5 & reas_sep==0egen reempl_avwagedec5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==5 & reas_sep==0egen tenure_dec5=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==5 & reas_sep==0egen hours_dec5=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 5 years after layoffdrop if hire_month_hat>60+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=60+`i' & hire_month_hat<=60+`i' & yeardiff==5replace tenure=tenure-(month_hat-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-60-`i') if month_hat>60+`i' & hire_month_hat<=60+`i' & yeardiff==5 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage5=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage5=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_5=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_5=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2006forvalues i=133(1)44 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 4 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3|yeardiff==4sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 4 years, 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec4=0gen month_employed_4=0gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec4=0gen stopcount_laydec4=0gen month_employed_lay4=0gen month_employed_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec4UI=0gen stopcount_laydec4UI=0gen month_employed_lay4UI=0gen month_employed_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec4=0gen stopcount_reempldec4=0gen month_employed_reempl4=0gen month_employed_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec4=0gen month_employed_loss4=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec4=0gen return_lost_month4=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 4 years, 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec4 = month_employed_dec4 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec4), by(id_worker)replace month_employed_dec4 =X replace month_employed_4 =X if `h'<=48+`i'replace month_employed_dec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec4 = month_employed_laydec4 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec4 ==0  & a!=1replace stopcount_laydec4 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec4), by(id_worker)replace month_employed_laydec4 =X replace month_employed_lay4 =X if `h'<=48+`i'replace month_employed_laydec3 =X if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec4), by(id_worker)replace stopcount_laydec4 =Xdrop X*replace month_employed_laydec4UI = month_employed_laydec4UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec4UI ==0  & a!=1replace stopcount_laydec4UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec4UI>6 & a!=1egen X=max(month_employed_laydec4UI), by(id_worker)replace month_employed_laydec4UI =Xreplace month_employed_lay4UI =X if `h'<=48+`i'replace month_employed_laydec3UI =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec4UI), by(id_worker)replace stopcount_laydec4UI=Xdrop X*replace month_employed_reempldec4 = month_employed_reempldec4 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec4 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec4), by(id_worker)replace stopcount_reempldec4=`h' if month_employed_reempldec4 ==X & X!=0replace month_employed_reempldec4 =Xreplace month_employed_reempl4 =X  if `h'<=48+`i'replace month_employed_reempldec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_reempl3 =X if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec4), by(id_worker)replace stopcount_reempldec4=Xdrop X*replace month_employed_lossdec4 = month_employed_lossdec4 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec4), by(id_worker)replace month_employed_lossdec4 =Xreplace month_employed_loss4 =X  if `h'<=48+`i'replace month_employed_lossdec3 =X  if `h'<=(`yyy'-1995)*12+48replace month_employed_loss3 =X if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec4 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec4 ==0egen X=max(return_lost_monthdec4), by(id_worker)replace return_lost_monthdec4 =Xreplace return_lost_month4 =X if `h'<=48+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+48replace return_lost_month2 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 4 years after layoffgen xxx=real_w_dec if yeardiff==4 & reas_sep==0egen reempl_wagedec4=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==4 & reas_sep==0egen reempl_avwagedec4=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==4 & reas_sep==0egen tenure_dec4=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==4 & reas_sep==0egen hours_dec4=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 4 years after layoffdrop if hire_month_hat>48+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=48+`i' & hire_month_hat<=48+`i' & yeardiff==4replace tenure=tenure-(month_hat-48-`i') if month_hat>48+`i' & hire_month_hat<=48+`i' & yeardiff==4 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-48-`i') if month_hat>48+`i' & hire_month_hat<=48+`i' & yeardiff==4 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage4=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage4=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_4=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_4=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 3 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2|yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2007forvalues i=145(1)156 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 3 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1|yeardiff==2 |yeardiff==3sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 3 years, 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec3=0gen month_employed_3=0gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen month_employed_laydec3=0gen stopcount_laydec3=0gen month_employed_lay3=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen month_employed_laydec3UI=0gen stopcount_laydec3UI=0gen month_employed_lay3UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen month_employed_reempldec3=0gen stopcount_reempldec3=0gen month_employed_reempl3=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec3=0gen month_employed_loss3=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec3=0gen return_lost_month3=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 3 years, 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec3 = month_employed_dec3 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec3), by(id_worker)replace month_employed_dec3 =X replace month_employed_3 =X if `h'<=36+`i'replace month_employed_dec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec3 = month_employed_laydec3 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec3 ==0  & a!=1replace stopcount_laydec3 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec3), by(id_worker)replace month_employed_laydec3 =X replace month_employed_lay3 =X if `h'<=36+`i'replace month_employed_laydec2 =X if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec3), by(id_worker)replace stopcount_laydec3 =Xdrop X*replace month_employed_laydec3UI = month_employed_laydec3UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec3UI ==0  & a!=1replace stopcount_laydec3UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec3UI>6 & a!=1egen X=max(month_employed_laydec3UI), by(id_worker)replace month_employed_laydec3UI =Xreplace month_employed_lay3UI =X if `h'<=36+`i'replace month_employed_laydec2UI =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec3UI), by(id_worker)replace stopcount_laydec3UI=Xdrop X*replace month_employed_reempldec3 = month_employed_reempldec3 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec3 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec3), by(id_worker)replace stopcount_reempldec3=`h' if month_employed_reempldec3 ==X & X!=0replace month_employed_reempldec3 =Xreplace month_employed_reempl3 =X  if `h'<=36+`i'replace month_employed_reempldec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec3), by(id_worker)replace stopcount_reempldec3=Xdrop X*replace month_employed_lossdec3 = month_employed_lossdec3 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec3), by(id_worker)replace month_employed_lossdec3 =Xreplace month_employed_loss3 =X  if `h'<=36+`i'replace month_employed_lossdec2 =X  if `h'<=(`yyy'-1995)*12+36replace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec3 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec3 ==0egen X=max(return_lost_monthdec3), by(id_worker)replace return_lost_monthdec3 =Xreplace return_lost_month3 =X if `h'<=36+`i'replace return_lost_monthdec2 =X if `h'<=(`yyy'-1995)*12+36replace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 3 years after layoffgen xxx=real_w_dec if yeardiff==3 & reas_sep==0egen reempl_wagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==3 & reas_sep==0egen reempl_avwagedec3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==3 & reas_sep==0egen tenure_dec3=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==3 & reas_sep==0egen hours_dec3=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 3 years after layoffdrop if hire_month_hat>36+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=36+`i' & hire_month_hat<=36+`i' & yeardiff==3replace tenure=tenure-(month_hat-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-36-`i') if month_hat>36+`i' & hire_month_hat<=36+`i' & yeardiff==3 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage3=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage3=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_3=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_3=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 2 years after layoffkeep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2008forvalues i=157(1)168 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 2 years (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearb\keep if yeardiff==0|yeardiff==1|yeardiff==2sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 2 years, and 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec2=0gen month_employed_2=0gen month_employed_dec1=0gen month_employed_1=0gen stopcount_laydec2=0gen month_employed_laydec2=0gen month_employed_lay2=0gen month_employed_laydec1=0gen month_employed_lay1=0gen stopcount_laydec2UI=0gen month_employed_laydec2UI=0gen month_employed_lay2UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen stopcount_reempldec2=0gen month_employed_reempldec2=0gen month_employed_reempl2=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec2=0gen month_employed_loss2=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec2=0gen return_lost_month2=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 2 years, and 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec2 = month_employed_dec2 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec2), by(id_worker)replace month_employed_dec2 =X replace month_employed_2 =X if `h'<=24+`i'replace month_employed_dec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec2 = month_employed_laydec2 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec2 ==0  & a!=1replace stopcount_laydec2 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec2), by(id_worker)replace month_employed_laydec2 =X replace month_employed_lay2 =X if `h'<=24+`i'replace month_employed_laydec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec2), by(id_worker)replace stopcount_laydec2 =Xdrop X*replace month_employed_laydec2UI = month_employed_laydec2UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec2UI ==0  & a!=1replace stopcount_laydec2UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec2UI>6 & a!=1egen X=max(month_employed_laydec2UI), by(id_worker)replace month_employed_laydec2UI =Xreplace month_employed_lay2UI =X if `h'<=24+`i'replace month_employed_laydec1UI =X if `h'<=(`yyy'-1995)*12+24 replace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec2UI), by(id_worker)replace stopcount_laydec2UI=Xdrop X*replace month_employed_reempldec2 = month_employed_reempldec2 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec2 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec2), by(id_worker)replace stopcount_reempldec2=`h' if month_employed_reempldec2 ==X & X!=0replace month_employed_reempldec2 =Xreplace month_employed_reempl2 =X if `h'<=24+`i'replace month_employed_reempldec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec2), by(id_worker)replace stopcount_reempldec2=Xdrop X*replace month_employed_lossdec2 = month_employed_lossdec2 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec2), by(id_worker)replace month_employed_lossdec2 =Xreplace month_employed_loss2 =X if `h'<=24+`i'replace month_employed_lossdec1 =X if `h'<=(`yyy'-1995)*12+24replace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec2 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec2 ==0egen X=max(return_lost_monthdec2), by(id_worker)replace return_lost_monthdec2 =Xreplace return_lost_month2 =X if `h'<=24+`i'replace return_lost_monthdec1 =X if `h'<=(`yyy'-1995)*12+24replace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 2 years after layoffgen xxx=real_w_dec if yeardiff==2 & reas_sep==0egen reempl_wagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==2 & reas_sep==0egen reempl_avwagedec2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==2 & reas_sep==0egen tenure_dec2=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==2 & reas_sep==0egen hours_dec2=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 2 years after layoffdrop if hire_month_hat>24+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=24+`i' & hire_month_hat<=24+`i' & yeardiff==2replace tenure=tenure-(month_hat-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-24-`i') if month_hat>24+`i' & hire_month_hat<=24+`i' & yeardiff==2 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage2=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage2=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_2=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_2=sum(xxx), by(id_worker)drop xxxdrop xx*detail of the job if employed in december 1 year after layoffkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2009forvalues i=169(1)180 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31*keep only jobs in next 1 year (should not matter anymore)gen yearbase=year if n==1egen yearb=max(yearbase), by(id_worker)drop yearbasegen yeardiff=year-yearbkeep if yeardiff==0|yeardiff==1sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)*prepare variables that record work history in next 1 yearsum month_hatlocal monthmax=int(r(max))local monthmin=int(r(min))gen month_employed_dec1=0gen month_employed_1=0gen stopcount_laydec1=0gen month_employed_laydec1=0gen month_employed_lay1=0gen stopcount_laydec1UI=0gen month_employed_laydec1UI=0gen month_employed_lay1UI=0gen stopcount_reempldec1=0gen month_employed_reempldec1=0gen month_employed_reempl1=0gen month_employed_lossdec1=0gen month_employed_loss1=0gen return_lost_monthdec1=0gen return_lost_month1=0*loop over following months and fill variables that record work history in next 1 yearforvalues h=`monthmin'(1)`monthmax' {*replace month_employed_dec1 = month_employed_dec1 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1egen X=max(month_employed_dec1), by(id_worker)replace month_employed_dec1 =X replace month_employed_1 =X if `h'<=12+`i'drop X*replace month_employed_laydec1 = month_employed_laydec1 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec1 ==0  & a!=1replace stopcount_laydec1 =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & a!=1egen X=max(month_employed_laydec1), by(id_worker)replace month_employed_laydec1 =X replace month_employed_lay1 =X if `h'<=12+`i'drop Xegen X=max(stopcount_laydec1), by(id_worker)replace stopcount_laydec1 =Xdrop X*replace month_employed_laydec1UI = month_employed_laydec1UI +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_laydec1UI ==0  & a!=1replace stopcount_laydec1UI =`h' if month_hat2<=`h' & month_hat==`h' & (reas_sep==11|reas_sep==12) & month_employed_laydec1UI>6 & a!=1egen X=max(month_employed_laydec1UI), by(id_worker)replace month_employed_laydec1UI =Xreplace month_employed_lay1UI =X  if `h'<=12+`i' drop Xegen X=max(stopcount_laydec1UI), by(id_worker)replace stopcount_laydec1UI=Xdrop X*replace month_employed_reempldec1 = month_employed_reempldec1 +1 if month_hat2<=`h' & month_hat>=`h' & stopcount_reempldec1 ==0 & a!=1 & (cnpj_cei==rehire_est|id_firm==rehire_firm)egen X=max(month_employed_reempldec1), by(id_worker)replace stopcount_reempldec1=`h' if month_employed_reempldec1 ==X & X!=0replace month_employed_reempldec1 =Xreplace month_employed_reempl1 =X if `h'<=12+`i' drop Xegen X=min(stopcount_reempldec1), by(id_worker)replace stopcount_reempldec1=Xdrop X*replace month_employed_lossdec1 = month_employed_lossdec1 +1 if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm)egen X=max(month_employed_lossdec1), by(id_worker)replace month_employed_lossdec1 =Xreplace month_employed_loss1 =X if `h'<=12+`i'drop X* replace return_lost_monthdec1 =`h' if month_hat2<=`h' & month_hat>=`h' & a!=1 & (cnpj_cei==loss_est|id_firm==loss_firm) & return_lost_monthdec1 ==0egen X=max(return_lost_monthdec1), by(id_worker)replace return_lost_monthdec1 =Xreplace return_lost_month1 =X if `h'<=12+`i'drop X}*detail of the job if employed in december 1 year after layoffgen xxx=real_w_dec if yeardiff==1 & reas_sep==0egen reempl_wagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if yeardiff==1 & reas_sep==0egen reempl_avwagedec1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if yeardiff==1 & reas_sep==0egen tenure_dec1=max(xxx), by(id_worker)drop xxxgen xxx=hours if yeardiff==1 & reas_sep==0egen hours_dec1=sum(xxx), by(id_worker)drop xxx*detail of the job if employed exactly 1 year after layoffdrop if hire_month_hat>12+`i'sort id_worker month_hat2 month_hat hire_month_hatcap drop ncap drop n_jobsbysort id_worker: gen n=_nsum nlocal NNN=r(max)egen n_jobs=max(n), by(id_worker)gen xx=1 if month_hat>=12+`i' & hire_month_hat<=12+`i' & yeardiff==1replace tenure=tenure-(month_hat-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat!=`monthmax'+0.5replace tenure=tenure-(month_hat-0.5-12-`i') if month_hat>12+`i' & hire_month_hat<=12+`i' & yeardiff==1 & month_hat==`monthmax'+0.5gen xxx=real_w_dec if xx==1egen reempl_wage1=sum(xxx), by(id_worker)drop xxxgen xxx=real_avg_w if xx==1egen reempl_avwage1=sum(xxx), by(id_worker)drop xxxgen xxx=tenure if xx==1egen tenure_1=max(xxx), by(id_worker)drop xxxgen xxx=hours if xx==1egen hours_1=sum(xxx), by(id_worker)drop xxxdrop xx* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savedrop n n_jobs a  yeardiff yearb rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}***layoffs in 2010forvalues i=181(1)192 {use "sel_sample_all`i'.dta", clearduplicates drop*identify observation related to layoff of interestgen a=(sep_month_hat==`i' & reas_sep==11)*drop unnecessary variablescap drop causafast1_fonte causafast3_fonte causafast2_fonte ceivinc indceivinc_fonte indpat_fonte muntrab_fonte nacionalidad_fonte portdefic_fonte qtdiasafas radiccnpj sbclas20_fonte tpdefic_fonte dtadmissao*create continuous month of "hiring" and "separation" for observations with no separation or hiring in the year itself (indicate already employed at start of the year and still employed at end of the year)gen month_hat=sep_month_hatreplace month_hat=12*(year-1995)+12.5 if sep_month==99 & reas_sep==0gen month_hat2=hire_month_hatreplace month_hat2=12*(year-1995)+0.5 if hir_month==0 & hire_type==8*drop if worker ID number inconsistentdrop if pisOK!=1 & year!=1994*drop unnecessary variablesdrop pisOK var1 _merge sampled*we will not keep layoff with less than 1 month of tenure (never the ones we will study)replace a=0 if month_hat==hire_month_hat & a==1*keep layoffs with single job in month of layoffsum year if a==1local yyy=r(mean)gen flag=(month_hat2<`i' & month_hat>=`i') if year==`yyy'egen FLAG=sum(flag), by(id_worker)egen a2=sum(a), by(id_worker)keep if a2==1 & FLAG==1drop a2 FLAG flag*drop if establishment ID number inconsistentreplace a=0 if cnpjOK!=1*keep history of layoffs of interest given above restrictionsegen a2=sum(a), by(id_worker)keep if a2==1drop a2*save worker ID for those layoffs that we will match to UI datapreservesort id_workerkeep if a==1sum yearlocal yyy=r(mean)keep id_worker yearsort id_workersave "sel_sample_all`i'_onlyID.dta", replacerestore*check consistency of work history and tenure calculation in 3 years before layoffcap drop nsort id_worker month_hat month_hat2 hire_month_hatbysort id_worker: gen n=_ngen consistency=. if a==1 & tenure<36replace consistency=0 if a==1 & tenure<36 & hire_type!=8 & tenure<=sep_month & (month_hat[_n-1]<=month_hat2|id_worker[_n-1]!=id_worker)replace consistency=1 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & (tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]!=0) & year==year[_n-1]+1 & (month_hat[_n-2]<=month_hat2[_n-1]|id_worker[_n-2]!=id_worker[_n-1])replace consistency=2 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & (tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]!=0) & year==year[_n-2]+2 & (month_hat[_n-3]<=month_hat2[_n-2]|id_worker[_n-3]!=id_worker[_n-2])replace consistency=3 if a==1 & tenure<36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure & hir_month[_n-3]!=0) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen consistency2=. if a==1 & tenure>=36replace consistency2=3 if a==1 & tenure>=36 & id_worker==id_worker[_n-1] & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1] & hire_type==8 & sep_month[_n-1]==99 & tenure[_n-1]+sep_month+1>=tenure & tenure[_n-1]+sep_month-1<=tenure & hir_month[_n-1]==0  & year==year[_n-1]+1 & id_worker==id_worker[_n-2] & id_firm==id_firm[_n-2] & id_estb==id_estb[_n-2] & sep_month[_n-2]==99 & tenure[_n-2]+12+sep_month+1>=tenure & tenure[_n-2]+12+sep_month-1<=tenure & hir_month[_n-2]==0 & year==year[_n-2]+2 & id_worker==id_worker[_n-3] & id_firm==id_firm[_n-3] & id_estb==id_estb[_n-3] & sep_month[_n-3]==99 & (tenure[_n-3]+24+sep_month+1>=tenure & tenure[_n-3]+24+sep_month-1<=tenure) & year==year[_n-3]+3 & (month_hat[_n-4]<=month_hat2[_n-3]|id_worker[_n-4]!=id_worker[_n-3])gen llimit=0 if consistency==0replace llimit= sep_month-1 if consistency==1replace llimit= 12+sep_month-1 if consistency==2replace llimit= 24+sep_month-1 if consistency==3gen ulimit=sep_month+1 if consistency==0replace ulimit= 12+sep_month+1 if consistency==1replace ulimit=24+sep_month+1 if consistency==2replace ulimit=36+sep_month+1 if consistency==3gen mistake=(tenure<llimit | tenure>ulimit) if a==1 replace mistake=0 if consistency2!=.|consistency==11|consistency==22replace mistake=. if consistency2==. & consistency==.gen this=hire_type if consistency==0 & mistake==0replace this =hire_type[_n-1] if consistency==1 & mistake==0replace this =hire_type[_n-2] if consistency==2 & mistake==0replace this =hire_type[_n-3] if consistency==3 & mistake==0gen xx=0 if a==1 & mistake==0 & (consistency==0|consistency==1|consistency==2|consistency==3|consistency==11|consistency==22|consistency2==3|consistency2==11|consistency2==22)replace xx=1 if a[_n+1]==1 & mistake[_n+1]==0 & (consistency[_n+1]==1|consistency[_n+1]==2|consistency[_n+1]==3|consistency[_n+1]==11|consistency[_n+1]==22|consistency2[_n+1]==3|consistency2[_n+1]==11|consistency2[_n+1]==22) replace xx=2 if a[_n+2]==1 & mistake[_n+2]==0 & (consistency[_n+2]==2|consistency[_n+2]==3|consistency[_n+2]==22|consistency2[_n+2]==3|consistency2[_n+2]==22) replace xx=3 if a[_n+3]==1 & mistake[_n+3]==0 & (consistency[_n+3]==3 | consistency2[_n+3]==3)gen thisstart=month_hat2 if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thisstart=month_hat2 if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thisstart=month_hat2 if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thisstart=month_hat2 if xx==0 & consistency==0egen THISstart=max(thisstart), by(id_worker)replace THISstart=. if consistency==. & consistency2==.gen thistenure=tenure if xx==3 & (consistency[_n+3]==3|consistency2[_n+3]==3)replace thistenure = tenure if xx==2 & (consistency[_n+2]==2|consistency[_n+2]==22|consistency2[_n+2]==22)replace thistenure = tenure if xx==1 & (consistency[_n+1]==1|consistency[_n+1]==11|consistency2[_n+1]==11)replace thistenure = tenure if xx==0 & consistency==0egen THIStenure=max(thistenure), by(id_worker)egen THIShiretype=max(this), by(id_worker)*calculate total tenure in last 36 months and other jobs in last 36 monthsgen otherjob=1 if (month_hat>=`i'-36 & xx==. & THIStenure!=. & month_hat2<`i')egen OTHERjob=max(otherjob), by(id_worker)gen yy=n if thisstart!=. egen firstjob=max(yy), by(id_worker)sum n if a==1local maxmax=r(max)gen ppp=0 if otherjob==1replace ppp =1 if thisstart[_n+1]!=. & sep_month==99 & otherjob==1forvalues h=1(1)`maxmax' {replace ppp =1 if thisstart[_n+`h'+1]!=. & ppp[_n+1]==0 & otherjob==1 & ((sep_month!=99 & hir_month[_n+1]==0)|(sep_month==99 & hir_month[_n+1]!=0))}egen inconsistentotherPRE=max(ppp), by(id_worker)drop ppp*last check of consistencygen diff=tenure-(sep_month_hat-THISstart) if a==1 & consistency!=. & consistency<10replace diff=tenure-(sep_month_hat-(12*(year-1995)-24)+THIStenure) if a==1 & consistency2!=. & consistency2<10replace diff=tenure-(sep_month_hat-(12*(year-1995))+THIStenure) if a==1 & (consistency2==11|consistency==11)replace diff=tenure-(sep_month_hat-(12*(year-1995)-12)+THIStenure) if a==1 & (consistency2==22|consistency==22)gen diff2=1 if a==1 & diff>-2 & diff<2 & (consistency!=.|consistency2!=.) & mistake!=1egen DIFF_PRE=max(diff2), by(id_worker)drop diff diff2 yy xx this mistake ulimit llimit otherjob thistenure thisstart*store information about spell prior to layoff observationgen tenure_prior=tenure[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen wage_dec_prior=real_w_dec[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]gen hire_type_prior=hire_type[_n-1] if a==1 & n!=1 & id_worker==id_worker[_n-1] & month_hat[_n-1]==sep_month_hat-sep_month+.5 & id_firm==id_firm[_n-1] & id_estb==id_estb[_n-1]*only keep observations from layoff onward (construct outcomes post-layoff)keep if (a==1)|((month_hat>=`i') & month_hat2>=`i')drop n*order by worker such that first you have the separation event and then each rehiring eventsort id_worker month_hat2 month_hat hire_month_hat*reemployed or notbysort id_worker: gen n=_negen N=max(n), by(id_worker)gen y=(N>=2) if n==1label var y "reemployed"label define y 0 "still without formal job" 1 "reemployed in a formal job"*wrong reemploymentgen wrong=(n==2 & hire_month_hat==0)egen wrong2=max(wrong), by(id_worker)drop wrong*establishment ID and firm ID at layoff and reemploymentgen double xxx=cnpj_cei if n==1egen double loss_est=max(xxx), by(id_worker)drop xxxgen double xxx=cnpj_cei if n==2egen double rehire_est=max(xxx), by(id_worker)drop xxxgen double yyy=id_firm if n==1egen double loss_firm=max(yyy), by(id_worker)drop yyygen double yyy=id_firm if n==2egen double rehire_firm=max(yyy), by(id_worker)drop yyy*reemployment monthgen reempl_month=hire_month_hat[_n+1] if y==1 & n==1 & wrong2!=1replace reempl_month=int(month_hat[_n+1])-tenure[_n+1] if y==1 & n==1 & wrong2==1label var reempl_month "month of finding formal job"*type of reemployment (check for temporary layoffs)gen Y=y if n==1replace Y=2 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb!=id_estb[_n+1]) & n==1replace Y=3 if y==1 & (id_firm==id_firm[_n+1]) & (id_estb==id_estb[_n+1]) & n==1label var Y "type of reemployment"label define Y 0 "still without formal job" 1 "reemployed different firm" 2 "reemployment same firm different establ" 3 "reemployed same firm same establ"*reemployment date gen reempl_yhire=yhire[_n+1] if y==1 & n==1gen reempl_mhire=mhire[_n+1] if y==1 & n==1gen reempl_dhire=dhire[_n+1] if y==1 & n==1*characteristics first new jobgen reempl_sector=agg_sector[_n+1] if y==1 & n==1gen reempl_contract=contr_type[_n+1] if y==1 & n==1gen reempl_munic=muni_code[_n+1] if y==1 & n==1gen reempl_occup=occupation[_n+1] if y==1 & n==1gen reempl_hours=hours[_n+1] if y==1 & n==1gen reempl_hire_type=hire_type[_n+1] if y==1 & n==1gen reempl_wage_av_first=real_avg_w[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_wage_dec_first=real_w_dec[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_tenure_first=tenure[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_sep_month_hat=sep_month_hat[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_firmsize=firm_size[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_simples=simples[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]gen reempl_est_type=est_type[_n+1] if y==1 & n==1 & id_worker==id_worker[_n+1]*create censored duration at last month possiblesum yearlocal maxyear=r(max)gen duration=reempl_month-`i' if y==1replace duration=12*(`maxyear'-1995)+12-`i' if y==0label var duration "time until reemployed in formal job in month"*create precise duration gen duration_precise=(12*(reempl_yhire-1995)+reempl_mhire+reempl_dhire/31)-12*(year-1995)-sep_month-sep_day/31* only keep first line for each worker now that it has all the relevant infokeep if n==1 & reas_sep==11*drop unnecessary variables and savecap drop n a  rehire_firm loss_firm rehire_est loss_est month_hat month_hat2 N this_*save "DDduration_all`i'.dta", replace}